#!/usr/bin/env bash
#
# Builds source and binary Python SDK distributions.
#
# Inputs:  ./sdk/python sources generated by the SDK generator; PYPI_VERSION env var set.
# Outputs: ./sdk/python/bin/dist/{*.tar.gz,*.whl} packages

set -euo pipefail

: ${PYPI_VERSION:?"PYPI_VERSION env var needs to be set and cannot be empty"}

cd ./sdk/python

# Removing auto-generated setup.py; this is needed until there is an option on the SDK generator to
# opt out of generating this file.
rm setup.py

cat << EOF > go.mod
module fake_python_module // Exclude this directory from Go tools

go 1.17
EOF

rm -rf ./bin/ ../python.bin/
cp -R . ../python.bin
mv ../python.bin ./bin

sed -i.bak -e "s/^  version = .*/  version = \"$PYPI_VERSION\"/g" ./bin/pyproject.toml
rm ./bin/pyproject.toml.bak

# Modifying generated pyproject.toml until there is an option to populate these settings.
cat << EOF >> ./bin/pyproject.toml
[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"
[tool]
  [tool.setuptools]
    [tool.setuptools.package-data]
      pulumi_kubernetes = ["py.typed", "pulumi-plugin.json"]
EOF

# Creating an isolated venv for the bulid.
python3 -m venv venv

source ./venv/bin/activate

python -m pip install build

cd ./bin

python -m build .
