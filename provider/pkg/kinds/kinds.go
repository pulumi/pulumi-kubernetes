// Copyright 2016-2020, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kinds

// Kind maps to the name of a Kubernetes resource Kind.
type Kind string

const (
	APIService                     Kind = "APIService"
	AuditSink                      Kind = "AuditSink"
	Binding                        Kind = "Binding"
	CSIDriver                      Kind = "CSIDriver"
	CSINode                        Kind = "CSINode"
	CertificateSigningRequest      Kind = "CertificateSigningRequest"
	ClusterRole                    Kind = "ClusterRole"
	ClusterRoleBinding             Kind = "ClusterRoleBinding"
	ComponentStatus                Kind = "ComponentStatus"
	ConfigMap                      Kind = "ConfigMap"
	ControllerRevision             Kind = "ControllerRevision"
	CronJob                        Kind = "CronJob"
	CustomResourceDefinition       Kind = "CustomResourceDefinition"
	DaemonSet                      Kind = "DaemonSet"
	Deployment                     Kind = "Deployment"
	EndpointSlice                  Kind = "EndpointSlice"
	Endpoints                      Kind = "Endpoints"
	Event                          Kind = "Event"
	FlowSchema                     Kind = "FlowSchema"
	HorizontalPodAutoscaler        Kind = "HorizontalPodAutoscaler"
	Ingress                        Kind = "Ingress"
	IngressClass                   Kind = "IngressClass"
	Job                            Kind = "Job"
	Lease                          Kind = "Lease"
	LimitRange                     Kind = "LimitRange"
	LocalSubjectAccessReview       Kind = "LocalSubjectAccessReview"
	MutatingWebhookConfiguration   Kind = "MutatingWebhookConfiguration"
	Namespace                      Kind = "Namespace"
	NetworkPolicy                  Kind = "NetworkPolicy"
	Node                           Kind = "Node"
	PersistentVolume               Kind = "PersistentVolume"
	PersistentVolumeClaim          Kind = "PersistentVolumeClaim"
	Pod                            Kind = "Pod"
	PodDisruptionBudget            Kind = "PodDisruptionBudget"
	PodPreset                      Kind = "PodPreset"
	PodSecurityPolicy              Kind = "PodSecurityPolicy"
	PodTemplate                    Kind = "PodTemplate"
	PriorityClass                  Kind = "PriorityClass"
	PriorityLevelConfiguration     Kind = "PriorityLevelConfiguration"
	ReplicaSet                     Kind = "ReplicaSet"
	ReplicationController          Kind = "ReplicationController"
	ResourceQuota                  Kind = "ResourceQuota"
	Role                           Kind = "Role"
	RoleBinding                    Kind = "RoleBinding"
	RuntimeClass                   Kind = "RuntimeClass"
	Secret                         Kind = "Secret"
	SelfSubjectAccessReview        Kind = "SelfSubjectAccessReview"
	SelfSubjectRulesReview         Kind = "SelfSubjectRulesReview"
	Service                        Kind = "Service"
	ServiceAccount                 Kind = "ServiceAccount"
	StatefulSet                    Kind = "StatefulSet"
	Status                         Kind = "Status"
	StorageClass                   Kind = "StorageClass"
	SubjectAccessReview            Kind = "SubjectAccessReview"
	TokenRequest                   Kind = "TokenRequest"
	TokenReview                    Kind = "TokenReview"
	ValidatingWebhookConfiguration Kind = "ValidatingWebhookConfiguration"
	VolumeAttachment               Kind = "VolumeAttachment"
)

// Namespaced returns whether known resource Kinds are namespaced. If the Kind is unknown (such as CRD Kinds), the
// known return value will be false, and the namespaced value is unknown. In this case, this information can be
// queried separately from the k8s API server.
func (k Kind) Namespaced() (known bool, namespaced bool) {
	switch k {
	// Note: Use `kubectl api-resources --namespaced=true -o name` to retrieve a list of namespace-scoped resources.
	case Binding,
		ConfigMap,
		ControllerRevision,
		CronJob,
		DaemonSet,
		Deployment,
		Endpoints,
		EndpointSlice,
		Event,
		HorizontalPodAutoscaler,
		Ingress,
		Job,
		Lease,
		LimitRange,
		LocalSubjectAccessReview,
		NetworkPolicy,
		PersistentVolumeClaim,
		Pod,
		PodDisruptionBudget,
		PodTemplate,
		ReplicaSet,
		ReplicationController,
		ResourceQuota,
		Role,
		RoleBinding,
		Secret,
		Service,
		ServiceAccount,
		StatefulSet:
		return true, true
	// Note: Use `kubectl api-resources --namespaced=false -o name` to retrieve a list of cluster-scoped resources.
	case APIService,
		CertificateSigningRequest,
		ClusterRole,
		ClusterRoleBinding,
		ComponentStatus,
		CSIDriver,
		CSINode,
		CustomResourceDefinition,
		IngressClass,
		MutatingWebhookConfiguration,
		Namespace,
		Node,
		PersistentVolume,
		PodSecurityPolicy,
		PriorityClass,
		RuntimeClass,
		SelfSubjectAccessReview,
		SelfSubjectRulesReview,
		StorageClass,
		SubjectAccessReview,
		TokenReview,
		ValidatingWebhookConfiguration,
		VolumeAttachment:
		return true, false
	default:
		return false, false
	}
}

// groupVersion maps to the name of a Kubernetes resource GroupVersion.
type groupVersion string

const (
	AdmissionregistrationV1   groupVersion = "admissionregistration.k8s.io/v1"
	AdmissionregistrationV1B1 groupVersion = "admissionregistration.k8s.io/v1beta1"
	ApiextensionsV1           groupVersion = "apiextensions.k8s.io/v1"
	ApiextensionsV1B1         groupVersion = "apiextensions.k8s.io/v1beta1"
	ApiregistrationV1         groupVersion = "apiregistration.k8s.io/v1"
	ApiregistrationV1B1       groupVersion = "apiregistration.k8s.io/v1beta1"
	AppsV1                    groupVersion = "apps/v1"
	AppsV1B1                  groupVersion = "apps/v1beta1"
	AppsV1B2                  groupVersion = "apps/v1beta2"
	AuditregistrationV1A1     groupVersion = "auditregistration.k8s.io/v1alpha1"
	AuthenticationV1          groupVersion = "authentication.k8s.io/v1"
	AuthenticationV1B1        groupVersion = "authentication.k8s.io/v1beta1"
	AuthorizationV1           groupVersion = "authorization.k8s.io/v1"
	AuthorizationV1B1         groupVersion = "authorization.k8s.io/v1beta1"
	AutoscalingV1             groupVersion = "autoscaling/v1"
	AutoscalingV2B1           groupVersion = "autoscaling/v2beta1"
	AutoscalingV2B2           groupVersion = "autoscaling/v2beta2"
	BatchV1                   groupVersion = "batch/v1"
	BatchV1B1                 groupVersion = "batch/v1beta1"
	BatchV2A1                 groupVersion = "batch/v2alpha1"
	CertificatesV1B1          groupVersion = "certificates.k8s.io/v1beta1"
	CoordinationV1            groupVersion = "coordination.k8s.io/v1"
	CoordinationV1B1          groupVersion = "coordination.k8s.io/v1beta1"
	CoreV1                    groupVersion = "core/v1"
	DiscoveryV1B1             groupVersion = "discovery.k8s.io/v1beta1"
	EventsV1B1                groupVersion = "events.k8s.io/v1beta1"
	ExtensionsV1B1            groupVersion = "extensions/v1beta1"
	FlowcontrolV1A1           groupVersion = "flowcontrol.apiserver.k8s.io/v1alpha1"
	MetaV1                    groupVersion = "meta/v1"
	NetworkingV1              groupVersion = "networking.k8s.io/v1"
	NetworkingV1B1            groupVersion = "networking.k8s.io/v1beta1"
	NodeV1A1                  groupVersion = "node.k8s.io/v1alpha1"
	NodeV1B1                  groupVersion = "node.k8s.io/v1beta1"
	PolicyV1B1                groupVersion = "policy/v1beta1"
	RbacV1                    groupVersion = "rbac.authorization.k8s.io/v1"
	RbacV1A1                  groupVersion = "rbac.authorization.k8s.io/v1alpha1"
	RbacV1B1                  groupVersion = "rbac.authorization.k8s.io/v1beta1"
	SchedulingV1              groupVersion = "scheduling.k8s.io/v1"
	SchedulingV1A1            groupVersion = "scheduling.k8s.io/v1alpha1"
	SchedulingV1B1            groupVersion = "scheduling.k8s.io/v1beta1"
	SettingsV1A1              groupVersion = "settings.k8s.io/v1alpha1"
	StorageV1                 groupVersion = "storage.k8s.io/v1"
	StorageV1A1               groupVersion = "storage.k8s.io/v1alpha1"
	StorageV1B1               groupVersion = "storage.k8s.io/v1beta1"
)
