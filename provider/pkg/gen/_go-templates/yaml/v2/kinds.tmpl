// Copyright 2016-2024, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v2

import (
	"fmt"

	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/apiextensions"
{{- range .Imports}}
	{{.}}
{{- end}}
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

func IsListKind(apiVersion, kind string) bool {	
	fullKind := fmt.Sprintf("%s/%s", apiVersion, kind)
	switch fullKind {
	case "v1/List",
		{{range $idx, $v := .ListKinds -}} {{if $idx}},
		{{end}}"{{$v.GVK}}" {{- end}}:
		return true
	default:
		return false
	}
}

func RegisterResource(ctx *pulumi.Context, apiVersion, kind, name string, props pulumi.Input, 
	opts ...pulumi.ResourceOption) (pulumi.CustomResource, error) {
	fullKind := fmt.Sprintf("%s/%s", apiVersion, kind)
	switch fullKind {
{{- range .NonListKinds}}
	case "{{.GVK}}":
		var res {{.Alias}}.{{.Name}}
		err := ctx.RegisterResource("{{.Token}}", name, props, &res, opts...)
		if err != nil {
			return nil, err
		}
		{{`return &res, nil`}}
{{- end}}
	default:
		var res apiextensions.CustomResource
		err := ctx.RegisterResource(fmt.Sprintf("kubernetes:%s:%s", apiVersion, kind), name, props, &res, opts...)
		if err != nil {
			return nil, err
		}
		{{`return &res, nil`}}
	}
}
