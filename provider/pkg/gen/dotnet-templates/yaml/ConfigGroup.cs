// Copyright 2016-2020, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Generic;
using System.Collections.Immutable;

namespace Pulumi.Kubernetes.Yaml
{
    /// <summary>
    /// Creates a set of Kubernetes resources from Kubernetes YAML text. The YAML text
    /// may be supplied using any of the following <see cref="ConfigGroupArgs"/>:
    /// 1. Using a list of filenames: `Files = new[] { "foo.yaml", "bar.yaml" }`
    /// 2. Using a list of file patterns: `Files = new[] { "foo/*.yaml", "bar/*.yaml" }`
    /// 3. Using literal strings containing YAML: `Yaml = new[] { "(LITERAL YAML HERE)", "(MORE YAML)" }`
    /// 4. Any combination of files, patterns, or YAML strings.
    /// </summary>
    public sealed class ConfigGroup : CollectionComponentResource
    {
        /// <summary>
        /// Create a ConfigGroup resource with the given unique name, arguments, and options.
        /// </summary>
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConfigGroup(string name, ConfigGroupArgs config, ComponentResourceOptions? options = null)
            : base("kubernetes:yaml:ConfigGroup", name, options)
        {
            options ??= new ComponentResourceOptions();
            options.Parent ??= this;
            RegisterResources(Parser.Parse(config, options));
        }
    }
    
    /// <summary>
    /// Resource arguments for <see cref="ConfigGroup"/>.
    /// </summary>
    public class ConfigGroupArgs : ResourceArgs
    {
        /// <summary>
        /// Set of paths or a URLs that uniquely identify files.
        /// </summary>
        public string[]? Files { get; set; }
        
        private InputList<string>? _yaml;

        /// <summary>
        /// YAML text containing Kubernetes resource definitions.
        /// </summary>
        public InputList<string> Yaml
        {
            get => _yaml ??= new InputList<string>();
            set => _yaml = value;
        }

        private InputList<ImmutableDictionary<string, object>>? _objs;

        /// <summary>
        /// Objects representing Kubernetes resources.
        /// </summary>
        public InputList<ImmutableDictionary<string, object>> Objs
        {
            get => _objs ??= new InputList<ImmutableDictionary<string, object>>();
            set => _objs = value;
        }

        private List<TransformationAction>? _transformations;
        
        /// <summary>
        /// An optional list of transformations to apply to Kubernetes resource definitions before registering
        /// with engine.
        /// </summary>
        public List<TransformationAction> Transformations
        {
            get => _transformations ??= new List<TransformationAction>();
            set => _transformations = value;
        }

        /// <summary>
        /// An optional prefix for the auto-generated resource names.
        /// Example: A resource created with ResourcePrefix="foo" would produce a resource named
        /// "foo-resourceName".
        /// </summary>
        public string? ResourcePrefix { get; set; }
    }
}
