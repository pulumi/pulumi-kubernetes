// Copyright 2016-2020, Pulumi Corporation.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package kinds

import (
	"strings"

	"k8s.io/apimachinery/pkg/runtime/schema"
)

// Kind maps to the name of a Kubernetes resource Kind.
type Kind string

const (
{{- range .Kinds}}
	{{.}} Kind = "{{.}}"
{{- end}}
)

// Namespaced returns whether known resource Kinds are namespaced. If the Kind is unknown (such as CRD Kinds), the
// known return value will be false, and the namespaced value is unknown. In this case, this information can be
// queried separately from the k8s API server.
func (k Kind) Namespaced() (known bool, namespaced bool) {
	switch k {
	// Note: Use `kubectl api-resources --namespaced=true -o name` to retrieve a list of namespace-scoped resources.
	case Binding,
		ConfigMap,
		ControllerRevision,
		CronJob,
		DaemonSet,
		Deployment,
		Endpoints,
		EndpointSlice,
		Event,
		HorizontalPodAutoscaler,
		Ingress,
		Job,
		Lease,
		LimitRange,
		LocalSubjectAccessReview,
		NetworkPolicy,
		PersistentVolumeClaim,
		Pod,
		PodDisruptionBudget,
		PodTemplate,
		ReplicaSet,
		ReplicationController,
		ResourceQuota,
		Role,
		RoleBinding,
		Secret,
		Service,
		ServiceAccount,
		StatefulSet:
		return true, true
	// Note: Use `kubectl api-resources --namespaced=false -o name` to retrieve a list of cluster-scoped resources.
	case APIService,
		CertificateSigningRequest,
		ClusterRole,
		ClusterRoleBinding,
		ComponentStatus,
		CSIDriver,
		CSINode,
		CustomResourceDefinition,
		IngressClass,
		MutatingWebhookConfiguration,
		Namespace,
		Node,
		PersistentVolume,
		PodSecurityPolicy,
		PriorityClass,
		RuntimeClass,
		SelfSubjectAccessReview,
		SelfSubjectRulesReview,
		StorageClass,
		SubjectAccessReview,
		TokenReview,
		ValidatingWebhookConfiguration,
		VolumeAttachment:
		return true, false
	default:
		return false, false
	}
}

// groupVersion maps to the name of a Kubernetes resource GroupVersion.
type groupVersion string

const (
{{- range .GroupVersions}}
	{{.GVConstName}} groupVersion = "{{.}}"
{{- end}}
)

// toGVK is a helper function that converts the internal groupVersion and Kind types to a schema.GroupVersionKind
func toGVK(gv groupVersion, kind Kind) schema.GroupVersionKind {
	parts := strings.Split(string(gv), "/")
	g, v := parts[0], parts[1]

	return schema.GroupVersionKind{
		Group:   g,
		Version: v,
		Kind:    string(kind),
	}
}
