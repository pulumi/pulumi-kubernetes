name: pull-request
on:
  pull_request_target: {}
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PROVIDER: kubernetes
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  PULUMI_LOCAL_NUGET: ${{ github.workspace }}/nuget
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  NUGET_PUBLISH_KEY: ${{ secrets.NUGET_PUBLISH_KEY }}
  PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
  TRAVIS_OS_NAME: linux
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  PULUMI_GO_DEP_ROOT: ${{ github.workspace }}/..
  AWS_REGION: us-west-2
  PULUMI_TEST_OWNER: moolumi
  GOLANGCI_LINT_VERSION: v1.31
  GOLANGCI_LINT_TIMEOUT: 10m
jobs:
  comment-on-pr:
    runs-on: ubuntu-latest
    name: comment-on-pr
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
      with:
        lfs: true
    - name: Comment PR
      uses: thollander/actions-comment-pull-request@v1
      with:
        message: >
          PR is now waiting for a maintainer to run the acceptance tests.

          **Note for the maintainer:** To run the acceptance tests, please comment */run-acceptance-tests* on the PR
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    if: github.event.pull_request.head.repo.full_name != github.repository
  #Putting this here provisionally
regenerate-examples:
  name: Generate Examples
  runs-on: ubuntu-latest
  strategy:
    matrix:
      goversion: [1.17.x]
  steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow --tags
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.goversion }}
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@v1.1.0
      with:
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/setup-pulumi@v2
    - name: Preparing Git Branch
      run: |
        git config --local user.email "bot@pulumi.com"
        git config --local user.name "pulumi-bot"
        git checkout -b update-pulumi/${{ github.run_id }}-${{ github.run_number }}
    - name: Update pulumi/pulumi
      id: gomod
      run: |
        cd provider
        go get github.com/pulumi/pulumi/pkg/v3
        go get github.com/pulumi/pulumi/sdk/v3
        cd ..
        make ensure
        git update-index -q --refresh
        if ! git diff-files --quiet; then
          echo ::set-output name=changes::1
        fi
    - name: Generate examples
      run: |
        cd provider/pkg/gen/examples/upstream
        go run ./yaml ./
    - name: Commit changes
      if: steps.gomod.outputs.changes != 0
      run: |
        git add provider/pkg/gen/examples/upstream
        git commit -m "Updated modules"
        git push origin update-pulumi/${{ github.run_id }}-${{ github.run_number }}
    - name: Create PR
      id: create-pr
      if: steps.gomod.outputs.changes != 0
      uses: repo-sync/pull-request@v2.6.2
      with:
        source_branch: "update-pulumi/${{ github.run_id }}-${{ github.run_number }}"
        destination_branch: ${{github.event.pull_request.head.repo.full_name}}
        pr_title: "Automated pulumi/pulumi upgrade"
        github_token: ${{ secrets.PULUMI_BOT_TOKEN }}
    - name: Set Automerge
      if: steps.create-pr.outputs.has_changed_files
      uses: peter-evans/enable-pull-request-automerge@v1
      with:
        token: ${{ secrets.PULUMI_BOT_TOKEN }}
        pull-request-number: ${{ steps.create-pr.outputs.pr_number }}
        repository: ${{ github.repository }}
        merge-method: squash
