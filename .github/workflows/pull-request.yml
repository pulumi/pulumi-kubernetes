name: pull-request
"on":
  pull_request:
    branches:
      - master

env:
  GOLANGCI_LINT_VERSION: v1.31
  GOLANGCI_LINT_TIMEOUT: 10m
  GOOGLE_PROJECT: pulumi-development
  GOOGLE_REGION: us-central1
  GOOGLE_ZONE: us-central1-a
  PULUMI_TEST_OWNER: moolumi
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}

jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint-provider-pkg
        uses: golangci/golangci-lint-action@v1
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}
          args: -c ../../.golangci.yml --timeout ${{ env.GOLANGCI_LINT_TIMEOUT }}
          working-directory: provider/pkg
  build-test-cluster:
    name: build-test-infrastructure
    strategy:
      matrix:
        platform: [ ubuntu-latest ]
        go-version: [ 1.13.x ]
        node-version: [ 10.x ]
        python-version: [ 3.7 ]
        dotnet-version: [ '3.1.100' ]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install DotNet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Python Deps
        run: |
          pip3 install virtualenv==20.0.23
          pip3 install pipenv
      - name: Install Kubectl
        run: |
          curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          sudo mv kubectl /usr/local/bin
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '285.0.0'
          project_id: ${{ env.GOOGLE_PROJECT }}
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      - name: Install helm
        run: |
          curl -o- -L https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get | bash
      - name: Configure helm
        run: |
          helm init -c
          helm repo add bitnami https://charts.bitnami.com/bitnami
      - name: Login to Google Cloud Registry
        run: |
          gcloud --quiet auth configure-docker
      - name: Install Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@releases/v1
      - uses: actions/checkout@v2
      - name: Create test infra
        run: |
          ./scripts/ci-cluster-create.sh "${{ secrets.PULUMI_TEST_OWNER }}/${{ github.sha }}"
  prerequisities:
    name: build-provider
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: |
          echo building k8sgen
          echo downloading openapi file
          echo generating schema
          echo building k8s provider
  build_sdks:
    name: build-language-sdks
    runs-on: ubuntu-latest
    needs: prerequisities
    steps:
      - uses: actions/checkout@v2
      - run: |
          echo downloading provider and codegen binaries
          echo building ${{ matrix.language }} sdk
    strategy:
      matrix:
        language:
          - nodejs
          - python
          - dotnet
          - go
  test-sdks:
    name: test-language-sdks
    runs-on: ubuntu-latest
    needs: [build_sdks, build-test-cluster]
    steps:
      - uses: actions/checkout@v2
      - run: |
          echo downloading provider and codegen binaries
          echo downloading ${{ matrix.language }} sdk
          echo downloading kubeconfig for infra
          echo running tests/sdk/${{ matrix.language }} tests
    strategy:
      matrix:
        language:
          - nodejs
          - python
          - dotnet
          - go
  cleanup-infra:
    name: cleanup-test-infra
    needs: test-sdks
    strategy:
      matrix:
        platform: [ ubuntu-latest ]
        go-version: [ 1.13.x ]
        node-version: [ 10.x ]
        python-version: [ 3.7 ]
        dotnet-version: [ '3.1.100' ]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Install DotNet ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Set up Go ${{ matrix.go-version }}
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Python Deps
        run: |
          pip3 install virtualenv==20.0.23
          pip3 install pipenv
      - name: Install Kubectl
        run: |
          curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
          chmod +x ./kubectl
          sudo mv kubectl /usr/local/bin
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          version: '285.0.0'
          project_id: ${{ env.GOOGLE_PROJECT }}
          service_account_email: ${{ secrets.GCP_SA_EMAIL }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
      - name: Install helm
        run: |
          curl -o- -L https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get | bash
      - name: Configure helm
        run: |
          helm init -c
          helm repo add bitnami https://charts.bitnami.com/bitnami
      - name: Login to Google Cloud Registry
        run: |
          gcloud --quiet auth configure-docker
      - name: Install Pulumi CLI
        uses: pulumi/action-install-pulumi-cli@releases/v1
      - uses: actions/checkout@v2
      - name: Create test infra
        run: |
          ./scripts/ci-cluster-destroy.sh "${{ secrets.PULUMI_TEST_OWNER }}/${{ github.sha }}"

