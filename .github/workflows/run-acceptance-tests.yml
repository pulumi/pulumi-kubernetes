name: run-acceptance-tests
on:
  repository_dispatch:
    types:
    - run-acceptance-tests-command
  pull_request:
    branches:
    - master
    - main
    paths-ignore:
    - CHANGELOG.md
  workflow_dispatch: {}
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  PROVIDER: kubernetes
  PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
  PULUMI_LOCAL_NUGET: ${{ github.workspace }}/nuget
  NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  NUGET_PUBLISH_KEY: ${{ secrets.NUGET_PUBLISH_KEY }}
  PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
  TRAVIS_OS_NAME: linux
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  PULUMI_GO_DEP_ROOT: ${{ github.workspace }}/..
  AWS_REGION: us-west-2
  PULUMI_TEST_OWNER: moolumi
  GOLANGCI_LINT_VERSION: v1.31
  GOLANGCI_LINT_TIMEOUT: 10m
  PR_COMMIT_SHA: ${{ github.event.client_payload.pull_request.head.sha }}
jobs:
  comment-notification:
    runs-on: ubuntu-latest
    name: comment-notification
    steps:
    - name: Create URL to the run output
      id: vars
      run: echo ::set-output
        name=run-url::https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID
    - name: Update with Result
      uses: peter-evans/create-or-update-comment@v1
      with:
        token: ${{ secrets.PULUMI_BOT_TOKEN }}
        repository: ${{ github.event.client_payload.github.payload.repository.full_name }}
        issue-number: ${{ github.event.client_payload.github.payload.issue.number }}
        body: "Please view the PR build: ${{ steps.vars.outputs.run-url }}"
    if: github.event_name == 'repository_dispatch'
  prerequisites:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        goversion:
        - 1.18.x
        dotnetversion:
        - 3.1.301
        pythonversion:
        - "3.7"
        nodeversion:
        - 14.x
    name: prerequisites
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
      with:
        lfs: true
        ref: ${{ env.PR_COMMIT_SHA }}
    - name: Checkout Scripts Repo
      uses: actions/checkout@v2
      with:
        path: ci-scripts
        repository: pulumi/scripts
    - name: Unshallow clone for tags
      run: git fetch --prune --unshallow --tags
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{matrix.goversion}}
    - name: Install pulumictl
      uses: jaxxstorm/action-install-gh-release@v1.5.0
      with:
        repo: pulumi/pulumictl
    - name: Install Pulumi CLI
      uses: pulumi/action-install-pulumi-cli@v2
    - if: github.event_name == 'pull_request'
      name: Install Schema Tools
      uses: jaxxstorm/action-install-gh-release@v1.5.0
      with:
        repo: mikhailshilkov/schema-tools
    - name: Build K8sgen
      run: make k8sgen
    - name: Prepare OpenAPI file
      run: make openapi_file
    - name: Prepare Schema
      run: make schema
    - name: Make Kubernetes provider
      run: make k8sprovider
    - if: github.event_name == 'pull_request'
      name: Check Schema is Valid
      run: >-
        echo 'SCHEMA_CHANGES<<EOF' >> $GITHUB_ENV

        schema-tools compare ${{ env.PROVIDER }} master --local-path=provider/cmd/pulumi-resource-${{ env.PROVIDER }}/schema.json >> $GITHUB_ENV

        echo 'EOF' >> $GITHUB_ENV
    - if: github.event_name == 'pull_request'
      name: Comment on PR with Details of Schema Check
      uses: thollander/actions-comment-pull-request@v1
      with:
        message: |
          ### Does the PR have any schema changes?

          ${{ env.SCHEMA_CHANGES }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - if: contains(env.SCHEMA_CHANGES, 'Looking good! No breaking changes found.') &&
        github.actor == 'pulumi-bot'
      name: Add label if no breaking changes
      uses: actions-ecosystem/action-add-labels@v1.1.0
      with:
        labels: impact/no-changelog-required
        number: ${{ github.event.issue.number }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Check worktree clean
      run: ./ci-scripts/ci/check-worktree-is-clean
    - run: git status --porcelain
    - name: Tar provider binaries
      run: tar -zcf ${{ github.workspace }}/bin/provider.tar.gz -C ${{
        github.workspace}}/bin/ pulumi-resource-${{ env.PROVIDER }}
        pulumi-gen-${{ env.PROVIDER}}
    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: pulumi-${{ env.PROVIDER }}-provider.tar.gz
        path: ${{ github.workspace }}/bin/provider.tar.gz
    - name: Test Provider Library
      run: make test_provider
    - if: failure() && github.event_name == 'push'
      name: Notify Slack
      uses: 8398a7/action-slack@v3
      with:
        author_name: Failure in building provider prerequisites
        fields: repo,commit,author,action
        status: ${{ job.status }}
    if: github.event_name == 'repository_dispatch' ||
      github.event.pull_request.head.repo.full_name == github.repository
  lint:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        goversion:
        - 1.18.x
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
      with:
        lfs: true
        ref: ${{ env.PR_COMMIT_SHA }}
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{matrix.goversion}}
    - name: golangci-lint provider pkg
      uses: golangci/golangci-lint-action@v3
      with:
        version: ${{ env.GOLANGCI_LINT_VERSION }}
        args: cache clean
        working-directory: provider/pkg
    name: lint
    if: github.event_name == 'repository_dispatch' ||
      github.event.pull_request.head.repo.full_name == github.repository
