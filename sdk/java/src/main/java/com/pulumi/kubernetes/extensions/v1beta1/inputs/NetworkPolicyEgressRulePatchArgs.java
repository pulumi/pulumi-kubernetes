// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.extensions.v1beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.kubernetes.extensions.v1beta1.inputs.NetworkPolicyPeerPatchArgs;
import com.pulumi.kubernetes.extensions.v1beta1.inputs.NetworkPolicyPortPatchArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * DEPRECATED 1.9 - This group version of NetworkPolicyEgressRule is deprecated by networking/v1/NetworkPolicyEgressRule. NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods matched by a NetworkPolicySpec&#39;s podSelector. The traffic must match both ports and to. This type is beta-level in 1.8
 * 
 */
public final class NetworkPolicyEgressRulePatchArgs extends com.pulumi.resources.ResourceArgs {

    public static final NetworkPolicyEgressRulePatchArgs Empty = new NetworkPolicyEgressRulePatchArgs();

    /**
     * List of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.
     * 
     */
    @Import(name="ports")
    private @Nullable Output<List<NetworkPolicyPortPatchArgs>> ports;

    /**
     * @return List of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.
     * 
     */
    public Optional<Output<List<NetworkPolicyPortPatchArgs>>> ports() {
        return Optional.ofNullable(this.ports);
    }

    /**
     * List of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.
     * 
     */
    @Import(name="to")
    private @Nullable Output<List<NetworkPolicyPeerPatchArgs>> to;

    /**
     * @return List of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.
     * 
     */
    public Optional<Output<List<NetworkPolicyPeerPatchArgs>>> to() {
        return Optional.ofNullable(this.to);
    }

    private NetworkPolicyEgressRulePatchArgs() {}

    private NetworkPolicyEgressRulePatchArgs(NetworkPolicyEgressRulePatchArgs $) {
        this.ports = $.ports;
        this.to = $.to;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NetworkPolicyEgressRulePatchArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NetworkPolicyEgressRulePatchArgs $;

        public Builder() {
            $ = new NetworkPolicyEgressRulePatchArgs();
        }

        public Builder(NetworkPolicyEgressRulePatchArgs defaults) {
            $ = new NetworkPolicyEgressRulePatchArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param ports List of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.
         * 
         * @return builder
         * 
         */
        public Builder ports(@Nullable Output<List<NetworkPolicyPortPatchArgs>> ports) {
            $.ports = ports;
            return this;
        }

        /**
         * @param ports List of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.
         * 
         * @return builder
         * 
         */
        public Builder ports(List<NetworkPolicyPortPatchArgs> ports) {
            return ports(Output.of(ports));
        }

        /**
         * @param ports List of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.
         * 
         * @return builder
         * 
         */
        public Builder ports(NetworkPolicyPortPatchArgs... ports) {
            return ports(List.of(ports));
        }

        /**
         * @param to List of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.
         * 
         * @return builder
         * 
         */
        public Builder to(@Nullable Output<List<NetworkPolicyPeerPatchArgs>> to) {
            $.to = to;
            return this;
        }

        /**
         * @param to List of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.
         * 
         * @return builder
         * 
         */
        public Builder to(List<NetworkPolicyPeerPatchArgs> to) {
            return to(Output.of(to));
        }

        /**
         * @param to List of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.
         * 
         * @return builder
         * 
         */
        public Builder to(NetworkPolicyPeerPatchArgs... to) {
            return to(List.of(to));
        }

        public NetworkPolicyEgressRulePatchArgs build() {
            return $;
        }
    }

}
