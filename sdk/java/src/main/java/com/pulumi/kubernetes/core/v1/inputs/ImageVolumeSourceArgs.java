// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.core.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * ImageVolumeSource represents a image volume resource.
 * 
 */
public final class ImageVolumeSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ImageVolumeSourceArgs Empty = new ImageVolumeSourceArgs();

    /**
     * Policy for pulling OCI objects. Possible values are: Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails. Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn&#39;t present. IfNotPresent: the kubelet pulls if the reference isn&#39;t already present on disk. Container creation will fail if the reference isn&#39;t present and the pull fails. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
     * 
     */
    @Import(name="pullPolicy")
    private @Nullable Output<String> pullPolicy;

    /**
     * @return Policy for pulling OCI objects. Possible values are: Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails. Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn&#39;t present. IfNotPresent: the kubelet pulls if the reference isn&#39;t already present on disk. Container creation will fail if the reference isn&#39;t present and the pull fails. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
     * 
     */
    public Optional<Output<String>> pullPolicy() {
        return Optional.ofNullable(this.pullPolicy);
    }

    /**
     * Required: Image or artifact reference to be used. Behaves in the same way as pod.spec.containers[*].image. Pull secrets will be assembled in the same way as for the container image by looking up node credentials, SA image pull secrets, and pod spec image pull secrets. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
     * 
     */
    @Import(name="reference")
    private @Nullable Output<String> reference;

    /**
     * @return Required: Image or artifact reference to be used. Behaves in the same way as pod.spec.containers[*].image. Pull secrets will be assembled in the same way as for the container image by looking up node credentials, SA image pull secrets, and pod spec image pull secrets. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
     * 
     */
    public Optional<Output<String>> reference() {
        return Optional.ofNullable(this.reference);
    }

    private ImageVolumeSourceArgs() {}

    private ImageVolumeSourceArgs(ImageVolumeSourceArgs $) {
        this.pullPolicy = $.pullPolicy;
        this.reference = $.reference;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ImageVolumeSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ImageVolumeSourceArgs $;

        public Builder() {
            $ = new ImageVolumeSourceArgs();
        }

        public Builder(ImageVolumeSourceArgs defaults) {
            $ = new ImageVolumeSourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param pullPolicy Policy for pulling OCI objects. Possible values are: Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails. Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn&#39;t present. IfNotPresent: the kubelet pulls if the reference isn&#39;t already present on disk. Container creation will fail if the reference isn&#39;t present and the pull fails. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
         * 
         * @return builder
         * 
         */
        public Builder pullPolicy(@Nullable Output<String> pullPolicy) {
            $.pullPolicy = pullPolicy;
            return this;
        }

        /**
         * @param pullPolicy Policy for pulling OCI objects. Possible values are: Always: the kubelet always attempts to pull the reference. Container creation will fail If the pull fails. Never: the kubelet never pulls the reference and only uses a local image or artifact. Container creation will fail if the reference isn&#39;t present. IfNotPresent: the kubelet pulls if the reference isn&#39;t already present on disk. Container creation will fail if the reference isn&#39;t present and the pull fails. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise.
         * 
         * @return builder
         * 
         */
        public Builder pullPolicy(String pullPolicy) {
            return pullPolicy(Output.of(pullPolicy));
        }

        /**
         * @param reference Required: Image or artifact reference to be used. Behaves in the same way as pod.spec.containers[*].image. Pull secrets will be assembled in the same way as for the container image by looking up node credentials, SA image pull secrets, and pod spec image pull secrets. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
         * 
         * @return builder
         * 
         */
        public Builder reference(@Nullable Output<String> reference) {
            $.reference = reference;
            return this;
        }

        /**
         * @param reference Required: Image or artifact reference to be used. Behaves in the same way as pod.spec.containers[*].image. Pull secrets will be assembled in the same way as for the container image by looking up node credentials, SA image pull secrets, and pod spec image pull secrets. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
         * 
         * @return builder
         * 
         */
        public Builder reference(String reference) {
            return reference(Output.of(reference));
        }

        public ImageVolumeSourceArgs build() {
            return $;
        }
    }

}
