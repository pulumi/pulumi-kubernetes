// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.batch.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.kubernetes.batch.v1.outputs.SuccessPolicyRule;
import java.util.List;
import java.util.Objects;

@CustomType
public final class SuccessPolicy {
    /**
     * @return rules represents the list of alternative rules for the declaring the Jobs as successful before `.status.succeeded &gt;= .spec.completions`. Once any of the rules are met, the &#34;SucceededCriteriaMet&#34; condition is added, and the lingering pods are removed. The terminal state for such a Job has the &#34;Complete&#34; condition. Additionally, these rules are evaluated in order; Once the Job meets one of the rules, other rules are ignored. At most 20 elements are allowed.
     * 
     */
    private List<SuccessPolicyRule> rules;

    private SuccessPolicy() {}
    /**
     * @return rules represents the list of alternative rules for the declaring the Jobs as successful before `.status.succeeded &gt;= .spec.completions`. Once any of the rules are met, the &#34;SucceededCriteriaMet&#34; condition is added, and the lingering pods are removed. The terminal state for such a Job has the &#34;Complete&#34; condition. Additionally, these rules are evaluated in order; Once the Job meets one of the rules, other rules are ignored. At most 20 elements are allowed.
     * 
     */
    public List<SuccessPolicyRule> rules() {
        return this.rules;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(SuccessPolicy defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<SuccessPolicyRule> rules;
        public Builder() {}
        public Builder(SuccessPolicy defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.rules = defaults.rules;
        }

        @CustomType.Setter
        public Builder rules(List<SuccessPolicyRule> rules) {
            this.rules = Objects.requireNonNull(rules);
            return this;
        }
        public Builder rules(SuccessPolicyRule... rules) {
            return rules(List.of(rules));
        }
        public SuccessPolicy build() {
            final var o = new SuccessPolicy();
            o.rules = rules;
            return o;
        }
    }
}
