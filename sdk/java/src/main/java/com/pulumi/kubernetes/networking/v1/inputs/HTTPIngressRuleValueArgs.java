// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.networking.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.kubernetes.networking.v1.inputs.HTTPIngressPathArgs;
import java.util.List;
import java.util.Objects;


/**
 * HTTPIngressRuleValue is a list of http selectors pointing to backends. In the example: http://&lt;host&gt;/&lt;path&gt;?&lt;searchpart&gt; -&gt; backend where where parts of the url correspond to RFC 3986, this resource will be used to match against everything after the last &#39;/&#39; and before the first &#39;?&#39; or &#39;#&#39;.
 * 
 */
public final class HTTPIngressRuleValueArgs extends com.pulumi.resources.ResourceArgs {

    public static final HTTPIngressRuleValueArgs Empty = new HTTPIngressRuleValueArgs();

    /**
     * paths is a collection of paths that map requests to backends.
     * 
     */
    @Import(name="paths", required=true)
    private Output<List<HTTPIngressPathArgs>> paths;

    /**
     * @return paths is a collection of paths that map requests to backends.
     * 
     */
    public Output<List<HTTPIngressPathArgs>> paths() {
        return this.paths;
    }

    private HTTPIngressRuleValueArgs() {}

    private HTTPIngressRuleValueArgs(HTTPIngressRuleValueArgs $) {
        this.paths = $.paths;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(HTTPIngressRuleValueArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private HTTPIngressRuleValueArgs $;

        public Builder() {
            $ = new HTTPIngressRuleValueArgs();
        }

        public Builder(HTTPIngressRuleValueArgs defaults) {
            $ = new HTTPIngressRuleValueArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param paths paths is a collection of paths that map requests to backends.
         * 
         * @return builder
         * 
         */
        public Builder paths(Output<List<HTTPIngressPathArgs>> paths) {
            $.paths = paths;
            return this;
        }

        /**
         * @param paths paths is a collection of paths that map requests to backends.
         * 
         * @return builder
         * 
         */
        public Builder paths(List<HTTPIngressPathArgs> paths) {
            return paths(Output.of(paths));
        }

        /**
         * @param paths paths is a collection of paths that map requests to backends.
         * 
         * @return builder
         * 
         */
        public Builder paths(HTTPIngressPathArgs... paths) {
            return paths(List.of(paths));
        }

        public HTTPIngressRuleValueArgs build() {
            $.paths = Objects.requireNonNull($.paths, "expected parameter 'paths' to be non-null");
            return $;
        }
    }

}
