// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.core.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * NodeSwapStatus represents swap memory information.
 * 
 */
public final class NodeSwapStatusArgs extends com.pulumi.resources.ResourceArgs {

    public static final NodeSwapStatusArgs Empty = new NodeSwapStatusArgs();

    /**
     * Total amount of swap memory in bytes.
     * 
     */
    @Import(name="capacity")
    private @Nullable Output<Integer> capacity;

    /**
     * @return Total amount of swap memory in bytes.
     * 
     */
    public Optional<Output<Integer>> capacity() {
        return Optional.ofNullable(this.capacity);
    }

    private NodeSwapStatusArgs() {}

    private NodeSwapStatusArgs(NodeSwapStatusArgs $) {
        this.capacity = $.capacity;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NodeSwapStatusArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NodeSwapStatusArgs $;

        public Builder() {
            $ = new NodeSwapStatusArgs();
        }

        public Builder(NodeSwapStatusArgs defaults) {
            $ = new NodeSwapStatusArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param capacity Total amount of swap memory in bytes.
         * 
         * @return builder
         * 
         */
        public Builder capacity(@Nullable Output<Integer> capacity) {
            $.capacity = capacity;
            return this;
        }

        /**
         * @param capacity Total amount of swap memory in bytes.
         * 
         * @return builder
         * 
         */
        public Builder capacity(Integer capacity) {
            return capacity(Output.of(capacity));
        }

        public NodeSwapStatusArgs build() {
            return $;
        }
    }

}
