// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.core.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * NodeRuntimeHandlerFeatures is a set of features implemented by the runtime handler.
 * 
 */
public final class NodeRuntimeHandlerFeaturesArgs extends com.pulumi.resources.ResourceArgs {

    public static final NodeRuntimeHandlerFeaturesArgs Empty = new NodeRuntimeHandlerFeaturesArgs();

    /**
     * RecursiveReadOnlyMounts is set to true if the runtime handler supports RecursiveReadOnlyMounts.
     * 
     */
    @Import(name="recursiveReadOnlyMounts")
    private @Nullable Output<Boolean> recursiveReadOnlyMounts;

    /**
     * @return RecursiveReadOnlyMounts is set to true if the runtime handler supports RecursiveReadOnlyMounts.
     * 
     */
    public Optional<Output<Boolean>> recursiveReadOnlyMounts() {
        return Optional.ofNullable(this.recursiveReadOnlyMounts);
    }

    /**
     * UserNamespaces is set to true if the runtime handler supports UserNamespaces, including for volumes.
     * 
     */
    @Import(name="userNamespaces")
    private @Nullable Output<Boolean> userNamespaces;

    /**
     * @return UserNamespaces is set to true if the runtime handler supports UserNamespaces, including for volumes.
     * 
     */
    public Optional<Output<Boolean>> userNamespaces() {
        return Optional.ofNullable(this.userNamespaces);
    }

    private NodeRuntimeHandlerFeaturesArgs() {}

    private NodeRuntimeHandlerFeaturesArgs(NodeRuntimeHandlerFeaturesArgs $) {
        this.recursiveReadOnlyMounts = $.recursiveReadOnlyMounts;
        this.userNamespaces = $.userNamespaces;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NodeRuntimeHandlerFeaturesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NodeRuntimeHandlerFeaturesArgs $;

        public Builder() {
            $ = new NodeRuntimeHandlerFeaturesArgs();
        }

        public Builder(NodeRuntimeHandlerFeaturesArgs defaults) {
            $ = new NodeRuntimeHandlerFeaturesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param recursiveReadOnlyMounts RecursiveReadOnlyMounts is set to true if the runtime handler supports RecursiveReadOnlyMounts.
         * 
         * @return builder
         * 
         */
        public Builder recursiveReadOnlyMounts(@Nullable Output<Boolean> recursiveReadOnlyMounts) {
            $.recursiveReadOnlyMounts = recursiveReadOnlyMounts;
            return this;
        }

        /**
         * @param recursiveReadOnlyMounts RecursiveReadOnlyMounts is set to true if the runtime handler supports RecursiveReadOnlyMounts.
         * 
         * @return builder
         * 
         */
        public Builder recursiveReadOnlyMounts(Boolean recursiveReadOnlyMounts) {
            return recursiveReadOnlyMounts(Output.of(recursiveReadOnlyMounts));
        }

        /**
         * @param userNamespaces UserNamespaces is set to true if the runtime handler supports UserNamespaces, including for volumes.
         * 
         * @return builder
         * 
         */
        public Builder userNamespaces(@Nullable Output<Boolean> userNamespaces) {
            $.userNamespaces = userNamespaces;
            return this;
        }

        /**
         * @param userNamespaces UserNamespaces is set to true if the runtime handler supports UserNamespaces, including for volumes.
         * 
         * @return builder
         * 
         */
        public Builder userNamespaces(Boolean userNamespaces) {
            return userNamespaces(Output.of(userNamespaces));
        }

        public NodeRuntimeHandlerFeaturesArgs build() {
            return $;
        }
    }

}
