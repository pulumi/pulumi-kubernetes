// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.resource.v1alpha2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.kubernetes.resource.v1alpha2.inputs.NamedResourcesAttributePatchArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * NamedResourcesInstance represents one individual hardware instance that can be selected based on its attributes.
 * 
 */
public final class NamedResourcesInstancePatchArgs extends com.pulumi.resources.ResourceArgs {

    public static final NamedResourcesInstancePatchArgs Empty = new NamedResourcesInstancePatchArgs();

    /**
     * Attributes defines the attributes of this resource instance. The name of each attribute must be unique.
     * 
     */
    @Import(name="attributes")
    private @Nullable Output<List<NamedResourcesAttributePatchArgs>> attributes;

    /**
     * @return Attributes defines the attributes of this resource instance. The name of each attribute must be unique.
     * 
     */
    public Optional<Output<List<NamedResourcesAttributePatchArgs>>> attributes() {
        return Optional.ofNullable(this.attributes);
    }

    /**
     * Name is unique identifier among all resource instances managed by the driver on the node. It must be a DNS subdomain.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return Name is unique identifier among all resource instances managed by the driver on the node. It must be a DNS subdomain.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    private NamedResourcesInstancePatchArgs() {}

    private NamedResourcesInstancePatchArgs(NamedResourcesInstancePatchArgs $) {
        this.attributes = $.attributes;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NamedResourcesInstancePatchArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NamedResourcesInstancePatchArgs $;

        public Builder() {
            $ = new NamedResourcesInstancePatchArgs();
        }

        public Builder(NamedResourcesInstancePatchArgs defaults) {
            $ = new NamedResourcesInstancePatchArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param attributes Attributes defines the attributes of this resource instance. The name of each attribute must be unique.
         * 
         * @return builder
         * 
         */
        public Builder attributes(@Nullable Output<List<NamedResourcesAttributePatchArgs>> attributes) {
            $.attributes = attributes;
            return this;
        }

        /**
         * @param attributes Attributes defines the attributes of this resource instance. The name of each attribute must be unique.
         * 
         * @return builder
         * 
         */
        public Builder attributes(List<NamedResourcesAttributePatchArgs> attributes) {
            return attributes(Output.of(attributes));
        }

        /**
         * @param attributes Attributes defines the attributes of this resource instance. The name of each attribute must be unique.
         * 
         * @return builder
         * 
         */
        public Builder attributes(NamedResourcesAttributePatchArgs... attributes) {
            return attributes(List.of(attributes));
        }

        /**
         * @param name Name is unique identifier among all resource instances managed by the driver on the node. It must be a DNS subdomain.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name is unique identifier among all resource instances managed by the driver on the node. It must be a DNS subdomain.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public NamedResourcesInstancePatchArgs build() {
            return $;
        }
    }

}
