// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.rbac.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * RoleRef contains information that points to the role being used
 * 
 */
public final class RoleRefArgs extends com.pulumi.resources.ResourceArgs {

    public static final RoleRefArgs Empty = new RoleRefArgs();

    /**
     * APIGroup is the group for the resource being referenced
     * 
     */
    @Import(name="apiGroup", required=true)
    private Output<String> apiGroup;

    /**
     * @return APIGroup is the group for the resource being referenced
     * 
     */
    public Output<String> apiGroup() {
        return this.apiGroup;
    }

    /**
     * Kind is the type of resource being referenced
     * 
     */
    @Import(name="kind", required=true)
    private Output<String> kind;

    /**
     * @return Kind is the type of resource being referenced
     * 
     */
    public Output<String> kind() {
        return this.kind;
    }

    /**
     * Name is the name of resource being referenced
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name is the name of resource being referenced
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private RoleRefArgs() {}

    private RoleRefArgs(RoleRefArgs $) {
        this.apiGroup = $.apiGroup;
        this.kind = $.kind;
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(RoleRefArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private RoleRefArgs $;

        public Builder() {
            $ = new RoleRefArgs();
        }

        public Builder(RoleRefArgs defaults) {
            $ = new RoleRefArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiGroup APIGroup is the group for the resource being referenced
         * 
         * @return builder
         * 
         */
        public Builder apiGroup(Output<String> apiGroup) {
            $.apiGroup = apiGroup;
            return this;
        }

        /**
         * @param apiGroup APIGroup is the group for the resource being referenced
         * 
         * @return builder
         * 
         */
        public Builder apiGroup(String apiGroup) {
            return apiGroup(Output.of(apiGroup));
        }

        /**
         * @param kind Kind is the type of resource being referenced
         * 
         * @return builder
         * 
         */
        public Builder kind(Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind Kind is the type of resource being referenced
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param name Name is the name of resource being referenced
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name is the name of resource being referenced
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public RoleRefArgs build() {
            $.apiGroup = Objects.requireNonNull($.apiGroup, "expected parameter 'apiGroup' to be non-null");
            $.kind = Objects.requireNonNull($.kind, "expected parameter 'kind' to be non-null");
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
