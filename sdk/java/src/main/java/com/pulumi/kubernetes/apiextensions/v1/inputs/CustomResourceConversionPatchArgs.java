// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.apiextensions.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.kubernetes.apiextensions.v1.inputs.WebhookConversionPatchArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * CustomResourceConversion describes how to convert different versions of a CR.
 * 
 */
public final class CustomResourceConversionPatchArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomResourceConversionPatchArgs Empty = new CustomResourceConversionPatchArgs();

    /**
     * strategy specifies how custom resources are converted between versions. Allowed values are: - `&#34;None&#34;`: The converter only change the apiVersion and would not touch any other field in the custom resource. - `&#34;Webhook&#34;`: API Server will call to an external webhook to do the conversion. Additional information
     *   is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhook to be set.
     * 
     */
    @Import(name="strategy")
    private @Nullable Output<String> strategy;

    /**
     * @return strategy specifies how custom resources are converted between versions. Allowed values are: - `&#34;None&#34;`: The converter only change the apiVersion and would not touch any other field in the custom resource. - `&#34;Webhook&#34;`: API Server will call to an external webhook to do the conversion. Additional information
     *   is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhook to be set.
     * 
     */
    public Optional<Output<String>> strategy() {
        return Optional.ofNullable(this.strategy);
    }

    /**
     * webhook describes how to call the conversion webhook. Required when `strategy` is set to `&#34;Webhook&#34;`.
     * 
     */
    @Import(name="webhook")
    private @Nullable Output<WebhookConversionPatchArgs> webhook;

    /**
     * @return webhook describes how to call the conversion webhook. Required when `strategy` is set to `&#34;Webhook&#34;`.
     * 
     */
    public Optional<Output<WebhookConversionPatchArgs>> webhook() {
        return Optional.ofNullable(this.webhook);
    }

    private CustomResourceConversionPatchArgs() {}

    private CustomResourceConversionPatchArgs(CustomResourceConversionPatchArgs $) {
        this.strategy = $.strategy;
        this.webhook = $.webhook;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomResourceConversionPatchArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomResourceConversionPatchArgs $;

        public Builder() {
            $ = new CustomResourceConversionPatchArgs();
        }

        public Builder(CustomResourceConversionPatchArgs defaults) {
            $ = new CustomResourceConversionPatchArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param strategy strategy specifies how custom resources are converted between versions. Allowed values are: - `&#34;None&#34;`: The converter only change the apiVersion and would not touch any other field in the custom resource. - `&#34;Webhook&#34;`: API Server will call to an external webhook to do the conversion. Additional information
         *   is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhook to be set.
         * 
         * @return builder
         * 
         */
        public Builder strategy(@Nullable Output<String> strategy) {
            $.strategy = strategy;
            return this;
        }

        /**
         * @param strategy strategy specifies how custom resources are converted between versions. Allowed values are: - `&#34;None&#34;`: The converter only change the apiVersion and would not touch any other field in the custom resource. - `&#34;Webhook&#34;`: API Server will call to an external webhook to do the conversion. Additional information
         *   is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhook to be set.
         * 
         * @return builder
         * 
         */
        public Builder strategy(String strategy) {
            return strategy(Output.of(strategy));
        }

        /**
         * @param webhook webhook describes how to call the conversion webhook. Required when `strategy` is set to `&#34;Webhook&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder webhook(@Nullable Output<WebhookConversionPatchArgs> webhook) {
            $.webhook = webhook;
            return this;
        }

        /**
         * @param webhook webhook describes how to call the conversion webhook. Required when `strategy` is set to `&#34;Webhook&#34;`.
         * 
         * @return builder
         * 
         */
        public Builder webhook(WebhookConversionPatchArgs webhook) {
            return webhook(Output.of(webhook));
        }

        public CustomResourceConversionPatchArgs build() {
            return $;
        }
    }

}
