// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.authentication.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.kubernetes.authentication.v1.outputs.BoundObjectReference;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class TokenRequestSpec {
    /**
     * @return Audiences are the intendend audiences of the token. A recipient of a token must identitfy themself with an identifier in the list of audiences of the token, and otherwise should reject the token. A token issued for multiple audiences may be used to authenticate against any of the audiences listed but implies a high degree of trust between the target audiences.
     * 
     */
    private List<String> audiences;
    /**
     * @return BoundObjectRef is a reference to an object that the token will be bound to. The token will only be valid for as long as the bound object exists. NOTE: The API server&#39;s TokenReview endpoint will validate the BoundObjectRef, but other audiences may not. Keep ExpirationSeconds small if you want prompt revocation.
     * 
     */
    private @Nullable BoundObjectReference boundObjectRef;
    /**
     * @return ExpirationSeconds is the requested duration of validity of the request. The token issuer may return a token with a different validity duration so a client needs to check the &#39;expiration&#39; field in a response.
     * 
     */
    private @Nullable Integer expirationSeconds;

    private TokenRequestSpec() {}
    /**
     * @return Audiences are the intendend audiences of the token. A recipient of a token must identitfy themself with an identifier in the list of audiences of the token, and otherwise should reject the token. A token issued for multiple audiences may be used to authenticate against any of the audiences listed but implies a high degree of trust between the target audiences.
     * 
     */
    public List<String> audiences() {
        return this.audiences;
    }
    /**
     * @return BoundObjectRef is a reference to an object that the token will be bound to. The token will only be valid for as long as the bound object exists. NOTE: The API server&#39;s TokenReview endpoint will validate the BoundObjectRef, but other audiences may not. Keep ExpirationSeconds small if you want prompt revocation.
     * 
     */
    public Optional<BoundObjectReference> boundObjectRef() {
        return Optional.ofNullable(this.boundObjectRef);
    }
    /**
     * @return ExpirationSeconds is the requested duration of validity of the request. The token issuer may return a token with a different validity duration so a client needs to check the &#39;expiration&#39; field in a response.
     * 
     */
    public Optional<Integer> expirationSeconds() {
        return Optional.ofNullable(this.expirationSeconds);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(TokenRequestSpec defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> audiences;
        private @Nullable BoundObjectReference boundObjectRef;
        private @Nullable Integer expirationSeconds;
        public Builder() {}
        public Builder(TokenRequestSpec defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.audiences = defaults.audiences;
    	      this.boundObjectRef = defaults.boundObjectRef;
    	      this.expirationSeconds = defaults.expirationSeconds;
        }

        @CustomType.Setter
        public Builder audiences(List<String> audiences) {
            this.audiences = Objects.requireNonNull(audiences);
            return this;
        }
        public Builder audiences(String... audiences) {
            return audiences(List.of(audiences));
        }
        @CustomType.Setter
        public Builder boundObjectRef(@Nullable BoundObjectReference boundObjectRef) {
            this.boundObjectRef = boundObjectRef;
            return this;
        }
        @CustomType.Setter
        public Builder expirationSeconds(@Nullable Integer expirationSeconds) {
            this.expirationSeconds = expirationSeconds;
            return this;
        }
        public TokenRequestSpec build() {
            final var o = new TokenRequestSpec();
            o.audiences = audiences;
            o.boundObjectRef = boundObjectRef;
            o.expirationSeconds = expirationSeconds;
            return o;
        }
    }
}
