// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.core.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.kubernetes.core.v1.inputs.NodeConfigSourceArgs;
import com.pulumi.kubernetes.core.v1.inputs.TaintArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * NodeSpec describes the attributes that a node is created with.
 * 
 */
public final class NodeSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final NodeSpecArgs Empty = new NodeSpecArgs();

    /**
     * Deprecated: Previously used to specify the source of the node&#39;s configuration for the DynamicKubeletConfig feature. This feature is removed.
     * 
     */
    @Import(name="configSource")
    private @Nullable Output<NodeConfigSourceArgs> configSource;

    /**
     * @return Deprecated: Previously used to specify the source of the node&#39;s configuration for the DynamicKubeletConfig feature. This feature is removed.
     * 
     */
    public Optional<Output<NodeConfigSourceArgs>> configSource() {
        return Optional.ofNullable(this.configSource);
    }

    /**
     * Deprecated. Not all kubelets will set this field. Remove field after 1.13. see: https://issues.k8s.io/61966
     * 
     */
    @Import(name="externalID")
    private @Nullable Output<String> externalID;

    /**
     * @return Deprecated. Not all kubelets will set this field. Remove field after 1.13. see: https://issues.k8s.io/61966
     * 
     */
    public Optional<Output<String>> externalID() {
        return Optional.ofNullable(this.externalID);
    }

    /**
     * PodCIDR represents the pod IP range assigned to the node.
     * 
     */
    @Import(name="podCIDR")
    private @Nullable Output<String> podCIDR;

    /**
     * @return PodCIDR represents the pod IP range assigned to the node.
     * 
     */
    public Optional<Output<String>> podCIDR() {
        return Optional.ofNullable(this.podCIDR);
    }

    /**
     * podCIDRs represents the IP ranges assigned to the node for usage by Pods on that node. If this field is specified, the 0th entry must match the podCIDR field. It may contain at most 1 value for each of IPv4 and IPv6.
     * 
     */
    @Import(name="podCIDRs")
    private @Nullable Output<List<String>> podCIDRs;

    /**
     * @return podCIDRs represents the IP ranges assigned to the node for usage by Pods on that node. If this field is specified, the 0th entry must match the podCIDR field. It may contain at most 1 value for each of IPv4 and IPv6.
     * 
     */
    public Optional<Output<List<String>>> podCIDRs() {
        return Optional.ofNullable(this.podCIDRs);
    }

    /**
     * ID of the node assigned by the cloud provider in the format: &lt;ProviderName&gt;://&lt;ProviderSpecificNodeID&gt;
     * 
     */
    @Import(name="providerID")
    private @Nullable Output<String> providerID;

    /**
     * @return ID of the node assigned by the cloud provider in the format: &lt;ProviderName&gt;://&lt;ProviderSpecificNodeID&gt;
     * 
     */
    public Optional<Output<String>> providerID() {
        return Optional.ofNullable(this.providerID);
    }

    /**
     * If specified, the node&#39;s taints.
     * 
     */
    @Import(name="taints")
    private @Nullable Output<List<TaintArgs>> taints;

    /**
     * @return If specified, the node&#39;s taints.
     * 
     */
    public Optional<Output<List<TaintArgs>>> taints() {
        return Optional.ofNullable(this.taints);
    }

    /**
     * Unschedulable controls node schedulability of new pods. By default, node is schedulable. More info: https://kubernetes.io/docs/concepts/nodes/node/#manual-node-administration
     * 
     */
    @Import(name="unschedulable")
    private @Nullable Output<Boolean> unschedulable;

    /**
     * @return Unschedulable controls node schedulability of new pods. By default, node is schedulable. More info: https://kubernetes.io/docs/concepts/nodes/node/#manual-node-administration
     * 
     */
    public Optional<Output<Boolean>> unschedulable() {
        return Optional.ofNullable(this.unschedulable);
    }

    private NodeSpecArgs() {}

    private NodeSpecArgs(NodeSpecArgs $) {
        this.configSource = $.configSource;
        this.externalID = $.externalID;
        this.podCIDR = $.podCIDR;
        this.podCIDRs = $.podCIDRs;
        this.providerID = $.providerID;
        this.taints = $.taints;
        this.unschedulable = $.unschedulable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NodeSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NodeSpecArgs $;

        public Builder() {
            $ = new NodeSpecArgs();
        }

        public Builder(NodeSpecArgs defaults) {
            $ = new NodeSpecArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param configSource Deprecated: Previously used to specify the source of the node&#39;s configuration for the DynamicKubeletConfig feature. This feature is removed.
         * 
         * @return builder
         * 
         */
        public Builder configSource(@Nullable Output<NodeConfigSourceArgs> configSource) {
            $.configSource = configSource;
            return this;
        }

        /**
         * @param configSource Deprecated: Previously used to specify the source of the node&#39;s configuration for the DynamicKubeletConfig feature. This feature is removed.
         * 
         * @return builder
         * 
         */
        public Builder configSource(NodeConfigSourceArgs configSource) {
            return configSource(Output.of(configSource));
        }

        /**
         * @param externalID Deprecated. Not all kubelets will set this field. Remove field after 1.13. see: https://issues.k8s.io/61966
         * 
         * @return builder
         * 
         */
        public Builder externalID(@Nullable Output<String> externalID) {
            $.externalID = externalID;
            return this;
        }

        /**
         * @param externalID Deprecated. Not all kubelets will set this field. Remove field after 1.13. see: https://issues.k8s.io/61966
         * 
         * @return builder
         * 
         */
        public Builder externalID(String externalID) {
            return externalID(Output.of(externalID));
        }

        /**
         * @param podCIDR PodCIDR represents the pod IP range assigned to the node.
         * 
         * @return builder
         * 
         */
        public Builder podCIDR(@Nullable Output<String> podCIDR) {
            $.podCIDR = podCIDR;
            return this;
        }

        /**
         * @param podCIDR PodCIDR represents the pod IP range assigned to the node.
         * 
         * @return builder
         * 
         */
        public Builder podCIDR(String podCIDR) {
            return podCIDR(Output.of(podCIDR));
        }

        /**
         * @param podCIDRs podCIDRs represents the IP ranges assigned to the node for usage by Pods on that node. If this field is specified, the 0th entry must match the podCIDR field. It may contain at most 1 value for each of IPv4 and IPv6.
         * 
         * @return builder
         * 
         */
        public Builder podCIDRs(@Nullable Output<List<String>> podCIDRs) {
            $.podCIDRs = podCIDRs;
            return this;
        }

        /**
         * @param podCIDRs podCIDRs represents the IP ranges assigned to the node for usage by Pods on that node. If this field is specified, the 0th entry must match the podCIDR field. It may contain at most 1 value for each of IPv4 and IPv6.
         * 
         * @return builder
         * 
         */
        public Builder podCIDRs(List<String> podCIDRs) {
            return podCIDRs(Output.of(podCIDRs));
        }

        /**
         * @param podCIDRs podCIDRs represents the IP ranges assigned to the node for usage by Pods on that node. If this field is specified, the 0th entry must match the podCIDR field. It may contain at most 1 value for each of IPv4 and IPv6.
         * 
         * @return builder
         * 
         */
        public Builder podCIDRs(String... podCIDRs) {
            return podCIDRs(List.of(podCIDRs));
        }

        /**
         * @param providerID ID of the node assigned by the cloud provider in the format: &lt;ProviderName&gt;://&lt;ProviderSpecificNodeID&gt;
         * 
         * @return builder
         * 
         */
        public Builder providerID(@Nullable Output<String> providerID) {
            $.providerID = providerID;
            return this;
        }

        /**
         * @param providerID ID of the node assigned by the cloud provider in the format: &lt;ProviderName&gt;://&lt;ProviderSpecificNodeID&gt;
         * 
         * @return builder
         * 
         */
        public Builder providerID(String providerID) {
            return providerID(Output.of(providerID));
        }

        /**
         * @param taints If specified, the node&#39;s taints.
         * 
         * @return builder
         * 
         */
        public Builder taints(@Nullable Output<List<TaintArgs>> taints) {
            $.taints = taints;
            return this;
        }

        /**
         * @param taints If specified, the node&#39;s taints.
         * 
         * @return builder
         * 
         */
        public Builder taints(List<TaintArgs> taints) {
            return taints(Output.of(taints));
        }

        /**
         * @param taints If specified, the node&#39;s taints.
         * 
         * @return builder
         * 
         */
        public Builder taints(TaintArgs... taints) {
            return taints(List.of(taints));
        }

        /**
         * @param unschedulable Unschedulable controls node schedulability of new pods. By default, node is schedulable. More info: https://kubernetes.io/docs/concepts/nodes/node/#manual-node-administration
         * 
         * @return builder
         * 
         */
        public Builder unschedulable(@Nullable Output<Boolean> unschedulable) {
            $.unschedulable = unschedulable;
            return this;
        }

        /**
         * @param unschedulable Unschedulable controls node schedulability of new pods. By default, node is schedulable. More info: https://kubernetes.io/docs/concepts/nodes/node/#manual-node-administration
         * 
         * @return builder
         * 
         */
        public Builder unschedulable(Boolean unschedulable) {
            return unschedulable(Output.of(unschedulable));
        }

        public NodeSpecArgs build() {
            return $;
        }
    }

}
