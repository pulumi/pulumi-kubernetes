// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.apiextensions.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.kubernetes.apiextensions.v1.inputs.CustomResourceColumnDefinitionPatchArgs;
import com.pulumi.kubernetes.apiextensions.v1.inputs.CustomResourceSubresourcesPatchArgs;
import com.pulumi.kubernetes.apiextensions.v1.inputs.CustomResourceValidationPatchArgs;
import com.pulumi.kubernetes.apiextensions.v1.inputs.SelectableFieldPatchArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * CustomResourceDefinitionVersion describes a version for CRD.
 * 
 */
public final class CustomResourceDefinitionVersionPatchArgs extends com.pulumi.resources.ResourceArgs {

    public static final CustomResourceDefinitionVersionPatchArgs Empty = new CustomResourceDefinitionVersionPatchArgs();

    /**
     * additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. If no columns are specified, a single column displaying the age of the custom resource is used.
     * 
     */
    @Import(name="additionalPrinterColumns")
    private @Nullable Output<List<CustomResourceColumnDefinitionPatchArgs>> additionalPrinterColumns;

    /**
     * @return additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. If no columns are specified, a single column displaying the age of the custom resource is used.
     * 
     */
    public Optional<Output<List<CustomResourceColumnDefinitionPatchArgs>>> additionalPrinterColumns() {
        return Optional.ofNullable(this.additionalPrinterColumns);
    }

    /**
     * deprecated indicates this version of the custom resource API is deprecated. When set to true, API requests to this version receive a warning header in the server response. Defaults to false.
     * 
     */
    @Import(name="deprecated")
    private @Nullable Output<Boolean> deprecated;

    /**
     * @return deprecated indicates this version of the custom resource API is deprecated. When set to true, API requests to this version receive a warning header in the server response. Defaults to false.
     * 
     */
    public Optional<Output<Boolean>> deprecated() {
        return Optional.ofNullable(this.deprecated);
    }

    /**
     * deprecationWarning overrides the default warning returned to API clients. May only be set when `deprecated` is true. The default warning indicates this version is deprecated and recommends use of the newest served version of equal or greater stability, if one exists.
     * 
     */
    @Import(name="deprecationWarning")
    private @Nullable Output<String> deprecationWarning;

    /**
     * @return deprecationWarning overrides the default warning returned to API clients. May only be set when `deprecated` is true. The default warning indicates this version is deprecated and recommends use of the newest served version of equal or greater stability, if one exists.
     * 
     */
    public Optional<Output<String>> deprecationWarning() {
        return Optional.ofNullable(this.deprecationWarning);
    }

    /**
     * name is the version name, e.g. “v1”, “v2beta1”, etc. The custom resources are served under this version at `/apis/&lt;group&gt;/&lt;version&gt;/...` if `served` is true.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return name is the version name, e.g. “v1”, “v2beta1”, etc. The custom resources are served under this version at `/apis/&lt;group&gt;/&lt;version&gt;/...` if `served` is true.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * schema describes the schema used for validation, pruning, and defaulting of this version of the custom resource.
     * 
     */
    @Import(name="schema")
    private @Nullable Output<CustomResourceValidationPatchArgs> schema;

    /**
     * @return schema describes the schema used for validation, pruning, and defaulting of this version of the custom resource.
     * 
     */
    public Optional<Output<CustomResourceValidationPatchArgs>> schema() {
        return Optional.ofNullable(this.schema);
    }

    /**
     * selectableFields specifies paths to fields that may be used as field selectors. A maximum of 8 selectable fields are allowed. See https://kubernetes.io/docs/concepts/overview/working-with-objects/field-selectors
     * 
     */
    @Import(name="selectableFields")
    private @Nullable Output<List<SelectableFieldPatchArgs>> selectableFields;

    /**
     * @return selectableFields specifies paths to fields that may be used as field selectors. A maximum of 8 selectable fields are allowed. See https://kubernetes.io/docs/concepts/overview/working-with-objects/field-selectors
     * 
     */
    public Optional<Output<List<SelectableFieldPatchArgs>>> selectableFields() {
        return Optional.ofNullable(this.selectableFields);
    }

    /**
     * served is a flag enabling/disabling this version from being served via REST APIs
     * 
     */
    @Import(name="served")
    private @Nullable Output<Boolean> served;

    /**
     * @return served is a flag enabling/disabling this version from being served via REST APIs
     * 
     */
    public Optional<Output<Boolean>> served() {
        return Optional.ofNullable(this.served);
    }

    /**
     * storage indicates this version should be used when persisting custom resources to storage. There must be exactly one version with storage=true.
     * 
     */
    @Import(name="storage")
    private @Nullable Output<Boolean> storage;

    /**
     * @return storage indicates this version should be used when persisting custom resources to storage. There must be exactly one version with storage=true.
     * 
     */
    public Optional<Output<Boolean>> storage() {
        return Optional.ofNullable(this.storage);
    }

    /**
     * subresources specify what subresources this version of the defined custom resource have.
     * 
     */
    @Import(name="subresources")
    private @Nullable Output<CustomResourceSubresourcesPatchArgs> subresources;

    /**
     * @return subresources specify what subresources this version of the defined custom resource have.
     * 
     */
    public Optional<Output<CustomResourceSubresourcesPatchArgs>> subresources() {
        return Optional.ofNullable(this.subresources);
    }

    private CustomResourceDefinitionVersionPatchArgs() {}

    private CustomResourceDefinitionVersionPatchArgs(CustomResourceDefinitionVersionPatchArgs $) {
        this.additionalPrinterColumns = $.additionalPrinterColumns;
        this.deprecated = $.deprecated;
        this.deprecationWarning = $.deprecationWarning;
        this.name = $.name;
        this.schema = $.schema;
        this.selectableFields = $.selectableFields;
        this.served = $.served;
        this.storage = $.storage;
        this.subresources = $.subresources;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CustomResourceDefinitionVersionPatchArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CustomResourceDefinitionVersionPatchArgs $;

        public Builder() {
            $ = new CustomResourceDefinitionVersionPatchArgs();
        }

        public Builder(CustomResourceDefinitionVersionPatchArgs defaults) {
            $ = new CustomResourceDefinitionVersionPatchArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param additionalPrinterColumns additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. If no columns are specified, a single column displaying the age of the custom resource is used.
         * 
         * @return builder
         * 
         */
        public Builder additionalPrinterColumns(@Nullable Output<List<CustomResourceColumnDefinitionPatchArgs>> additionalPrinterColumns) {
            $.additionalPrinterColumns = additionalPrinterColumns;
            return this;
        }

        /**
         * @param additionalPrinterColumns additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. If no columns are specified, a single column displaying the age of the custom resource is used.
         * 
         * @return builder
         * 
         */
        public Builder additionalPrinterColumns(List<CustomResourceColumnDefinitionPatchArgs> additionalPrinterColumns) {
            return additionalPrinterColumns(Output.of(additionalPrinterColumns));
        }

        /**
         * @param additionalPrinterColumns additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. If no columns are specified, a single column displaying the age of the custom resource is used.
         * 
         * @return builder
         * 
         */
        public Builder additionalPrinterColumns(CustomResourceColumnDefinitionPatchArgs... additionalPrinterColumns) {
            return additionalPrinterColumns(List.of(additionalPrinterColumns));
        }

        /**
         * @param deprecated deprecated indicates this version of the custom resource API is deprecated. When set to true, API requests to this version receive a warning header in the server response. Defaults to false.
         * 
         * @return builder
         * 
         */
        public Builder deprecated(@Nullable Output<Boolean> deprecated) {
            $.deprecated = deprecated;
            return this;
        }

        /**
         * @param deprecated deprecated indicates this version of the custom resource API is deprecated. When set to true, API requests to this version receive a warning header in the server response. Defaults to false.
         * 
         * @return builder
         * 
         */
        public Builder deprecated(Boolean deprecated) {
            return deprecated(Output.of(deprecated));
        }

        /**
         * @param deprecationWarning deprecationWarning overrides the default warning returned to API clients. May only be set when `deprecated` is true. The default warning indicates this version is deprecated and recommends use of the newest served version of equal or greater stability, if one exists.
         * 
         * @return builder
         * 
         */
        public Builder deprecationWarning(@Nullable Output<String> deprecationWarning) {
            $.deprecationWarning = deprecationWarning;
            return this;
        }

        /**
         * @param deprecationWarning deprecationWarning overrides the default warning returned to API clients. May only be set when `deprecated` is true. The default warning indicates this version is deprecated and recommends use of the newest served version of equal or greater stability, if one exists.
         * 
         * @return builder
         * 
         */
        public Builder deprecationWarning(String deprecationWarning) {
            return deprecationWarning(Output.of(deprecationWarning));
        }

        /**
         * @param name name is the version name, e.g. “v1”, “v2beta1”, etc. The custom resources are served under this version at `/apis/&lt;group&gt;/&lt;version&gt;/...` if `served` is true.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name name is the version name, e.g. “v1”, “v2beta1”, etc. The custom resources are served under this version at `/apis/&lt;group&gt;/&lt;version&gt;/...` if `served` is true.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param schema schema describes the schema used for validation, pruning, and defaulting of this version of the custom resource.
         * 
         * @return builder
         * 
         */
        public Builder schema(@Nullable Output<CustomResourceValidationPatchArgs> schema) {
            $.schema = schema;
            return this;
        }

        /**
         * @param schema schema describes the schema used for validation, pruning, and defaulting of this version of the custom resource.
         * 
         * @return builder
         * 
         */
        public Builder schema(CustomResourceValidationPatchArgs schema) {
            return schema(Output.of(schema));
        }

        /**
         * @param selectableFields selectableFields specifies paths to fields that may be used as field selectors. A maximum of 8 selectable fields are allowed. See https://kubernetes.io/docs/concepts/overview/working-with-objects/field-selectors
         * 
         * @return builder
         * 
         */
        public Builder selectableFields(@Nullable Output<List<SelectableFieldPatchArgs>> selectableFields) {
            $.selectableFields = selectableFields;
            return this;
        }

        /**
         * @param selectableFields selectableFields specifies paths to fields that may be used as field selectors. A maximum of 8 selectable fields are allowed. See https://kubernetes.io/docs/concepts/overview/working-with-objects/field-selectors
         * 
         * @return builder
         * 
         */
        public Builder selectableFields(List<SelectableFieldPatchArgs> selectableFields) {
            return selectableFields(Output.of(selectableFields));
        }

        /**
         * @param selectableFields selectableFields specifies paths to fields that may be used as field selectors. A maximum of 8 selectable fields are allowed. See https://kubernetes.io/docs/concepts/overview/working-with-objects/field-selectors
         * 
         * @return builder
         * 
         */
        public Builder selectableFields(SelectableFieldPatchArgs... selectableFields) {
            return selectableFields(List.of(selectableFields));
        }

        /**
         * @param served served is a flag enabling/disabling this version from being served via REST APIs
         * 
         * @return builder
         * 
         */
        public Builder served(@Nullable Output<Boolean> served) {
            $.served = served;
            return this;
        }

        /**
         * @param served served is a flag enabling/disabling this version from being served via REST APIs
         * 
         * @return builder
         * 
         */
        public Builder served(Boolean served) {
            return served(Output.of(served));
        }

        /**
         * @param storage storage indicates this version should be used when persisting custom resources to storage. There must be exactly one version with storage=true.
         * 
         * @return builder
         * 
         */
        public Builder storage(@Nullable Output<Boolean> storage) {
            $.storage = storage;
            return this;
        }

        /**
         * @param storage storage indicates this version should be used when persisting custom resources to storage. There must be exactly one version with storage=true.
         * 
         * @return builder
         * 
         */
        public Builder storage(Boolean storage) {
            return storage(Output.of(storage));
        }

        /**
         * @param subresources subresources specify what subresources this version of the defined custom resource have.
         * 
         * @return builder
         * 
         */
        public Builder subresources(@Nullable Output<CustomResourceSubresourcesPatchArgs> subresources) {
            $.subresources = subresources;
            return this;
        }

        /**
         * @param subresources subresources specify what subresources this version of the defined custom resource have.
         * 
         * @return builder
         * 
         */
        public Builder subresources(CustomResourceSubresourcesPatchArgs subresources) {
            return subresources(Output.of(subresources));
        }

        public CustomResourceDefinitionVersionPatchArgs build() {
            return $;
        }
    }

}
