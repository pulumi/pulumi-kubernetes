// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.helm.v3.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ReleaseStatus {
    /**
     * @return The version number of the application being deployed.
     * 
     */
    private @Nullable String appVersion;
    /**
     * @return The name of the chart.
     * 
     */
    private @Nullable String chart;
    /**
     * @return Name is the name of the release.
     * 
     */
    private @Nullable String name;
    /**
     * @return Namespace is the kubernetes namespace of the release.
     * 
     */
    private @Nullable String namespace;
    /**
     * @return Version is an int32 which represents the version of the release.
     * 
     */
    private @Nullable Integer revision;
    /**
     * @return Status of the release.
     * 
     */
    private String status;
    /**
     * @return A SemVer 2 conformant version string of the chart.
     * 
     */
    private @Nullable String version;

    private ReleaseStatus() {}
    /**
     * @return The version number of the application being deployed.
     * 
     */
    public Optional<String> appVersion() {
        return Optional.ofNullable(this.appVersion);
    }
    /**
     * @return The name of the chart.
     * 
     */
    public Optional<String> chart() {
        return Optional.ofNullable(this.chart);
    }
    /**
     * @return Name is the name of the release.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }
    /**
     * @return Namespace is the kubernetes namespace of the release.
     * 
     */
    public Optional<String> namespace() {
        return Optional.ofNullable(this.namespace);
    }
    /**
     * @return Version is an int32 which represents the version of the release.
     * 
     */
    public Optional<Integer> revision() {
        return Optional.ofNullable(this.revision);
    }
    /**
     * @return Status of the release.
     * 
     */
    public String status() {
        return this.status;
    }
    /**
     * @return A SemVer 2 conformant version string of the chart.
     * 
     */
    public Optional<String> version() {
        return Optional.ofNullable(this.version);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ReleaseStatus defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String appVersion;
        private @Nullable String chart;
        private @Nullable String name;
        private @Nullable String namespace;
        private @Nullable Integer revision;
        private String status;
        private @Nullable String version;
        public Builder() {}
        public Builder(ReleaseStatus defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appVersion = defaults.appVersion;
    	      this.chart = defaults.chart;
    	      this.name = defaults.name;
    	      this.namespace = defaults.namespace;
    	      this.revision = defaults.revision;
    	      this.status = defaults.status;
    	      this.version = defaults.version;
        }

        @CustomType.Setter
        public Builder appVersion(@Nullable String appVersion) {
            this.appVersion = appVersion;
            return this;
        }
        @CustomType.Setter
        public Builder chart(@Nullable String chart) {
            this.chart = chart;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder namespace(@Nullable String namespace) {
            this.namespace = namespace;
            return this;
        }
        @CustomType.Setter
        public Builder revision(@Nullable Integer revision) {
            this.revision = revision;
            return this;
        }
        @CustomType.Setter
        public Builder status(String status) {
            this.status = Objects.requireNonNull(status);
            return this;
        }
        @CustomType.Setter
        public Builder version(@Nullable String version) {
            this.version = version;
            return this;
        }
        public ReleaseStatus build() {
            final var o = new ReleaseStatus();
            o.appVersion = appVersion;
            o.chart = chart;
            o.name = name;
            o.namespace = namespace;
            o.revision = revision;
            o.status = status;
            o.version = version;
            return o;
        }
    }
}
