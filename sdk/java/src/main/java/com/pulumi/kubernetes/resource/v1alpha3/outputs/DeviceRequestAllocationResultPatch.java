// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.resource.v1alpha3.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeviceRequestAllocationResultPatch {
    /**
     * @return Device references one device instance via its name in the driver&#39;s resource pool. It must be a DNS label.
     * 
     */
    private @Nullable String device;
    /**
     * @return Driver specifies the name of the DRA driver whose kubelet plugin should be invoked to process the allocation once the claim is needed on a node.
     * 
     * Must be a DNS subdomain and should end with a DNS domain owned by the vendor of the driver.
     * 
     */
    private @Nullable String driver;
    /**
     * @return This name together with the driver name and the device name field identify which device was allocated (`&lt;driver name&gt;/&lt;pool name&gt;/&lt;device name&gt;`).
     * 
     * Must not be longer than 253 characters and may contain one or more DNS sub-domains separated by slashes.
     * 
     */
    private @Nullable String pool;
    /**
     * @return Request is the name of the request in the claim which caused this device to be allocated. Multiple devices may have been allocated per request.
     * 
     */
    private @Nullable String request;

    private DeviceRequestAllocationResultPatch() {}
    /**
     * @return Device references one device instance via its name in the driver&#39;s resource pool. It must be a DNS label.
     * 
     */
    public Optional<String> device() {
        return Optional.ofNullable(this.device);
    }
    /**
     * @return Driver specifies the name of the DRA driver whose kubelet plugin should be invoked to process the allocation once the claim is needed on a node.
     * 
     * Must be a DNS subdomain and should end with a DNS domain owned by the vendor of the driver.
     * 
     */
    public Optional<String> driver() {
        return Optional.ofNullable(this.driver);
    }
    /**
     * @return This name together with the driver name and the device name field identify which device was allocated (`&lt;driver name&gt;/&lt;pool name&gt;/&lt;device name&gt;`).
     * 
     * Must not be longer than 253 characters and may contain one or more DNS sub-domains separated by slashes.
     * 
     */
    public Optional<String> pool() {
        return Optional.ofNullable(this.pool);
    }
    /**
     * @return Request is the name of the request in the claim which caused this device to be allocated. Multiple devices may have been allocated per request.
     * 
     */
    public Optional<String> request() {
        return Optional.ofNullable(this.request);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeviceRequestAllocationResultPatch defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String device;
        private @Nullable String driver;
        private @Nullable String pool;
        private @Nullable String request;
        public Builder() {}
        public Builder(DeviceRequestAllocationResultPatch defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.device = defaults.device;
    	      this.driver = defaults.driver;
    	      this.pool = defaults.pool;
    	      this.request = defaults.request;
        }

        @CustomType.Setter
        public Builder device(@Nullable String device) {

            this.device = device;
            return this;
        }
        @CustomType.Setter
        public Builder driver(@Nullable String driver) {

            this.driver = driver;
            return this;
        }
        @CustomType.Setter
        public Builder pool(@Nullable String pool) {

            this.pool = pool;
            return this;
        }
        @CustomType.Setter
        public Builder request(@Nullable String request) {

            this.request = request;
            return this;
        }
        public DeviceRequestAllocationResultPatch build() {
            final var _resultValue = new DeviceRequestAllocationResultPatch();
            _resultValue.device = device;
            _resultValue.driver = driver;
            _resultValue.pool = pool;
            _resultValue.request = request;
            return _resultValue;
        }
    }
}
