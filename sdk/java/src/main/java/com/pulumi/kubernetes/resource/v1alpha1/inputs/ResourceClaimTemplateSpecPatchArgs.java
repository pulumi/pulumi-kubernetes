// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.resource.v1alpha1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.kubernetes.meta.v1.inputs.ObjectMetaPatchArgs;
import com.pulumi.kubernetes.resource.v1alpha1.inputs.ResourceClaimSpecPatchArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * ResourceClaimTemplateSpec contains the metadata and fields for a ResourceClaim.
 * 
 */
public final class ResourceClaimTemplateSpecPatchArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourceClaimTemplateSpecPatchArgs Empty = new ResourceClaimTemplateSpecPatchArgs();

    /**
     * ObjectMeta may contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.
     * 
     */
    @Import(name="metadata")
    private @Nullable Output<ObjectMetaPatchArgs> metadata;

    /**
     * @return ObjectMeta may contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.
     * 
     */
    public Optional<Output<ObjectMetaPatchArgs>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    /**
     * Spec for the ResourceClaim. The entire content is copied unchanged into the ResourceClaim that gets created from this template. The same fields as in a ResourceClaim are also valid here.
     * 
     */
    @Import(name="spec")
    private @Nullable Output<ResourceClaimSpecPatchArgs> spec;

    /**
     * @return Spec for the ResourceClaim. The entire content is copied unchanged into the ResourceClaim that gets created from this template. The same fields as in a ResourceClaim are also valid here.
     * 
     */
    public Optional<Output<ResourceClaimSpecPatchArgs>> spec() {
        return Optional.ofNullable(this.spec);
    }

    private ResourceClaimTemplateSpecPatchArgs() {}

    private ResourceClaimTemplateSpecPatchArgs(ResourceClaimTemplateSpecPatchArgs $) {
        this.metadata = $.metadata;
        this.spec = $.spec;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceClaimTemplateSpecPatchArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceClaimTemplateSpecPatchArgs $;

        public Builder() {
            $ = new ResourceClaimTemplateSpecPatchArgs();
        }

        public Builder(ResourceClaimTemplateSpecPatchArgs defaults) {
            $ = new ResourceClaimTemplateSpecPatchArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param metadata ObjectMeta may contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.
         * 
         * @return builder
         * 
         */
        public Builder metadata(@Nullable Output<ObjectMetaPatchArgs> metadata) {
            $.metadata = metadata;
            return this;
        }

        /**
         * @param metadata ObjectMeta may contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.
         * 
         * @return builder
         * 
         */
        public Builder metadata(ObjectMetaPatchArgs metadata) {
            return metadata(Output.of(metadata));
        }

        /**
         * @param spec Spec for the ResourceClaim. The entire content is copied unchanged into the ResourceClaim that gets created from this template. The same fields as in a ResourceClaim are also valid here.
         * 
         * @return builder
         * 
         */
        public Builder spec(@Nullable Output<ResourceClaimSpecPatchArgs> spec) {
            $.spec = spec;
            return this;
        }

        /**
         * @param spec Spec for the ResourceClaim. The entire content is copied unchanged into the ResourceClaim that gets created from this template. The same fields as in a ResourceClaim are also valid here.
         * 
         * @return builder
         * 
         */
        public Builder spec(ResourceClaimSpecPatchArgs spec) {
            return spec(Output.of(spec));
        }

        public ResourceClaimTemplateSpecPatchArgs build() {
            return $;
        }
    }

}
