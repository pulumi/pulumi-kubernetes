// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.admissionregistration.v1alpha1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.kubernetes.admissionregistration.v1alpha1.outputs.ApplyConfiguration;
import com.pulumi.kubernetes.admissionregistration.v1alpha1.outputs.JSONPatch;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class Mutation {
    /**
     * @return applyConfiguration defines the desired configuration values of an object. The configuration is applied to the admission object using [structured merge diff](https://github.com/kubernetes-sigs/structured-merge-diff). A CEL expression is used to create apply configuration.
     * 
     */
    private @Nullable ApplyConfiguration applyConfiguration;
    /**
     * @return jsonPatch defines a [JSON patch](https://jsonpatch.com/) operation to perform a mutation to the object. A CEL expression is used to create the JSON patch.
     * 
     */
    private @Nullable JSONPatch jsonPatch;
    /**
     * @return patchType indicates the patch strategy used. Allowed values are &#34;ApplyConfiguration&#34; and &#34;JSONPatch&#34;. Required.
     * 
     */
    private String patchType;

    private Mutation() {}
    /**
     * @return applyConfiguration defines the desired configuration values of an object. The configuration is applied to the admission object using [structured merge diff](https://github.com/kubernetes-sigs/structured-merge-diff). A CEL expression is used to create apply configuration.
     * 
     */
    public Optional<ApplyConfiguration> applyConfiguration() {
        return Optional.ofNullable(this.applyConfiguration);
    }
    /**
     * @return jsonPatch defines a [JSON patch](https://jsonpatch.com/) operation to perform a mutation to the object. A CEL expression is used to create the JSON patch.
     * 
     */
    public Optional<JSONPatch> jsonPatch() {
        return Optional.ofNullable(this.jsonPatch);
    }
    /**
     * @return patchType indicates the patch strategy used. Allowed values are &#34;ApplyConfiguration&#34; and &#34;JSONPatch&#34;. Required.
     * 
     */
    public String patchType() {
        return this.patchType;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(Mutation defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ApplyConfiguration applyConfiguration;
        private @Nullable JSONPatch jsonPatch;
        private String patchType;
        public Builder() {}
        public Builder(Mutation defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.applyConfiguration = defaults.applyConfiguration;
    	      this.jsonPatch = defaults.jsonPatch;
    	      this.patchType = defaults.patchType;
        }

        @CustomType.Setter
        public Builder applyConfiguration(@Nullable ApplyConfiguration applyConfiguration) {

            this.applyConfiguration = applyConfiguration;
            return this;
        }
        @CustomType.Setter
        public Builder jsonPatch(@Nullable JSONPatch jsonPatch) {

            this.jsonPatch = jsonPatch;
            return this;
        }
        @CustomType.Setter
        public Builder patchType(String patchType) {
            if (patchType == null) {
              throw new MissingRequiredPropertyException("Mutation", "patchType");
            }
            this.patchType = patchType;
            return this;
        }
        public Mutation build() {
            final var _resultValue = new Mutation();
            _resultValue.applyConfiguration = applyConfiguration;
            _resultValue.jsonPatch = jsonPatch;
            _resultValue.patchType = patchType;
            return _resultValue;
        }
    }
}
