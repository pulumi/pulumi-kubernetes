// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.resource.v1alpha2.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * NamedResourcesFilter is used in ResourceFilterModel.
 * 
 */
public final class NamedResourcesFilterPatchArgs extends com.pulumi.resources.ResourceArgs {

    public static final NamedResourcesFilterPatchArgs Empty = new NamedResourcesFilterPatchArgs();

    /**
     * Selector is a CEL expression which must evaluate to true if a resource instance is suitable. The language is as defined in https://kubernetes.io/docs/reference/using-api/cel/
     * 
     * In addition, for each type NamedResourcesin AttributeValue there is a map that resolves to the corresponding value of the instance under evaluation. For example:
     * 
     *    attributes.quantity[&#34;a&#34;].isGreaterThan(quantity(&#34;0&#34;)) &amp;&amp;
     *    attributes.stringslice[&#34;b&#34;].isSorted()
     * 
     */
    @Import(name="selector")
    private @Nullable Output<String> selector;

    /**
     * @return Selector is a CEL expression which must evaluate to true if a resource instance is suitable. The language is as defined in https://kubernetes.io/docs/reference/using-api/cel/
     * 
     * In addition, for each type NamedResourcesin AttributeValue there is a map that resolves to the corresponding value of the instance under evaluation. For example:
     * 
     *    attributes.quantity[&#34;a&#34;].isGreaterThan(quantity(&#34;0&#34;)) &amp;&amp;
     *    attributes.stringslice[&#34;b&#34;].isSorted()
     * 
     */
    public Optional<Output<String>> selector() {
        return Optional.ofNullable(this.selector);
    }

    private NamedResourcesFilterPatchArgs() {}

    private NamedResourcesFilterPatchArgs(NamedResourcesFilterPatchArgs $) {
        this.selector = $.selector;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(NamedResourcesFilterPatchArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private NamedResourcesFilterPatchArgs $;

        public Builder() {
            $ = new NamedResourcesFilterPatchArgs();
        }

        public Builder(NamedResourcesFilterPatchArgs defaults) {
            $ = new NamedResourcesFilterPatchArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param selector Selector is a CEL expression which must evaluate to true if a resource instance is suitable. The language is as defined in https://kubernetes.io/docs/reference/using-api/cel/
         * 
         * In addition, for each type NamedResourcesin AttributeValue there is a map that resolves to the corresponding value of the instance under evaluation. For example:
         * 
         *    attributes.quantity[&#34;a&#34;].isGreaterThan(quantity(&#34;0&#34;)) &amp;&amp;
         *    attributes.stringslice[&#34;b&#34;].isSorted()
         * 
         * @return builder
         * 
         */
        public Builder selector(@Nullable Output<String> selector) {
            $.selector = selector;
            return this;
        }

        /**
         * @param selector Selector is a CEL expression which must evaluate to true if a resource instance is suitable. The language is as defined in https://kubernetes.io/docs/reference/using-api/cel/
         * 
         * In addition, for each type NamedResourcesin AttributeValue there is a map that resolves to the corresponding value of the instance under evaluation. For example:
         * 
         *    attributes.quantity[&#34;a&#34;].isGreaterThan(quantity(&#34;0&#34;)) &amp;&amp;
         *    attributes.stringslice[&#34;b&#34;].isSorted()
         * 
         * @return builder
         * 
         */
        public Builder selector(String selector) {
            return selector(Output.of(selector));
        }

        public NamedResourcesFilterPatchArgs build() {
            return $;
        }
    }

}
