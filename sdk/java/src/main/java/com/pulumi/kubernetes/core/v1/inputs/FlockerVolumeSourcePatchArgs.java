// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.core.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Represents a Flocker volume mounted by the Flocker agent. One and only one of datasetName and datasetUUID should be set. Flocker volumes do not support ownership management or SELinux relabeling.
 * 
 */
public final class FlockerVolumeSourcePatchArgs extends com.pulumi.resources.ResourceArgs {

    public static final FlockerVolumeSourcePatchArgs Empty = new FlockerVolumeSourcePatchArgs();

    /**
     * datasetName is Name of the dataset stored as metadata -&gt; name on the dataset for Flocker should be considered as deprecated
     * 
     */
    @Import(name="datasetName")
    private @Nullable Output<String> datasetName;

    /**
     * @return datasetName is Name of the dataset stored as metadata -&gt; name on the dataset for Flocker should be considered as deprecated
     * 
     */
    public Optional<Output<String>> datasetName() {
        return Optional.ofNullable(this.datasetName);
    }

    /**
     * datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
     * 
     */
    @Import(name="datasetUUID")
    private @Nullable Output<String> datasetUUID;

    /**
     * @return datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
     * 
     */
    public Optional<Output<String>> datasetUUID() {
        return Optional.ofNullable(this.datasetUUID);
    }

    private FlockerVolumeSourcePatchArgs() {}

    private FlockerVolumeSourcePatchArgs(FlockerVolumeSourcePatchArgs $) {
        this.datasetName = $.datasetName;
        this.datasetUUID = $.datasetUUID;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FlockerVolumeSourcePatchArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FlockerVolumeSourcePatchArgs $;

        public Builder() {
            $ = new FlockerVolumeSourcePatchArgs();
        }

        public Builder(FlockerVolumeSourcePatchArgs defaults) {
            $ = new FlockerVolumeSourcePatchArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param datasetName datasetName is Name of the dataset stored as metadata -&gt; name on the dataset for Flocker should be considered as deprecated
         * 
         * @return builder
         * 
         */
        public Builder datasetName(@Nullable Output<String> datasetName) {
            $.datasetName = datasetName;
            return this;
        }

        /**
         * @param datasetName datasetName is Name of the dataset stored as metadata -&gt; name on the dataset for Flocker should be considered as deprecated
         * 
         * @return builder
         * 
         */
        public Builder datasetName(String datasetName) {
            return datasetName(Output.of(datasetName));
        }

        /**
         * @param datasetUUID datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
         * 
         * @return builder
         * 
         */
        public Builder datasetUUID(@Nullable Output<String> datasetUUID) {
            $.datasetUUID = datasetUUID;
            return this;
        }

        /**
         * @param datasetUUID datasetUUID is the UUID of the dataset. This is unique identifier of a Flocker dataset
         * 
         * @return builder
         * 
         */
        public Builder datasetUUID(String datasetUUID) {
            return datasetUUID(Output.of(datasetUUID));
        }

        public FlockerVolumeSourcePatchArgs build() {
            return $;
        }
    }

}
