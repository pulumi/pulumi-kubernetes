// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.core.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * A topology selector requirement is a selector that matches given label. This is an alpha feature and may change in the future.
 * 
 */
public final class TopologySelectorLabelRequirementPatchArgs extends com.pulumi.resources.ResourceArgs {

    public static final TopologySelectorLabelRequirementPatchArgs Empty = new TopologySelectorLabelRequirementPatchArgs();

    /**
     * The label key that the selector applies to.
     * 
     */
    @Import(name="key")
    private @Nullable Output<String> key;

    /**
     * @return The label key that the selector applies to.
     * 
     */
    public Optional<Output<String>> key() {
        return Optional.ofNullable(this.key);
    }

    /**
     * An array of string values. One value must match the label to be selected. Each entry in Values is ORed.
     * 
     */
    @Import(name="values")
    private @Nullable Output<List<String>> values;

    /**
     * @return An array of string values. One value must match the label to be selected. Each entry in Values is ORed.
     * 
     */
    public Optional<Output<List<String>>> values() {
        return Optional.ofNullable(this.values);
    }

    private TopologySelectorLabelRequirementPatchArgs() {}

    private TopologySelectorLabelRequirementPatchArgs(TopologySelectorLabelRequirementPatchArgs $) {
        this.key = $.key;
        this.values = $.values;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(TopologySelectorLabelRequirementPatchArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private TopologySelectorLabelRequirementPatchArgs $;

        public Builder() {
            $ = new TopologySelectorLabelRequirementPatchArgs();
        }

        public Builder(TopologySelectorLabelRequirementPatchArgs defaults) {
            $ = new TopologySelectorLabelRequirementPatchArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param key The label key that the selector applies to.
         * 
         * @return builder
         * 
         */
        public Builder key(@Nullable Output<String> key) {
            $.key = key;
            return this;
        }

        /**
         * @param key The label key that the selector applies to.
         * 
         * @return builder
         * 
         */
        public Builder key(String key) {
            return key(Output.of(key));
        }

        /**
         * @param values An array of string values. One value must match the label to be selected. Each entry in Values is ORed.
         * 
         * @return builder
         * 
         */
        public Builder values(@Nullable Output<List<String>> values) {
            $.values = values;
            return this;
        }

        /**
         * @param values An array of string values. One value must match the label to be selected. Each entry in Values is ORed.
         * 
         * @return builder
         * 
         */
        public Builder values(List<String> values) {
            return values(Output.of(values));
        }

        /**
         * @param values An array of string values. One value must match the label to be selected. Each entry in Values is ORed.
         * 
         * @return builder
         * 
         */
        public Builder values(String... values) {
            return values(List.of(values));
        }

        public TopologySelectorLabelRequirementPatchArgs build() {
            return $;
        }
    }

}
