// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.networking.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.kubernetes.networking.v1.inputs.IngressClassParametersReferenceArgs;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * IngressClassSpec provides information about the class of an Ingress.
 * 
 */
public final class IngressClassSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final IngressClassSpecArgs Empty = new IngressClassSpecArgs();

    /**
     * controller refers to the name of the controller that should handle this class. This allows for different &#34;flavors&#34; that are controlled by the same controller. For example, you may have different parameters for the same implementing controller. This should be specified as a domain-prefixed path no more than 250 characters in length, e.g. &#34;acme.io/ingress-controller&#34;. This field is immutable.
     * 
     */
    @Import(name="controller")
    private @Nullable Output<String> controller;

    /**
     * @return controller refers to the name of the controller that should handle this class. This allows for different &#34;flavors&#34; that are controlled by the same controller. For example, you may have different parameters for the same implementing controller. This should be specified as a domain-prefixed path no more than 250 characters in length, e.g. &#34;acme.io/ingress-controller&#34;. This field is immutable.
     * 
     */
    public Optional<Output<String>> controller() {
        return Optional.ofNullable(this.controller);
    }

    /**
     * parameters is a link to a custom resource containing additional configuration for the controller. This is optional if the controller does not require extra parameters.
     * 
     */
    @Import(name="parameters")
    private @Nullable Output<IngressClassParametersReferenceArgs> parameters;

    /**
     * @return parameters is a link to a custom resource containing additional configuration for the controller. This is optional if the controller does not require extra parameters.
     * 
     */
    public Optional<Output<IngressClassParametersReferenceArgs>> parameters() {
        return Optional.ofNullable(this.parameters);
    }

    private IngressClassSpecArgs() {}

    private IngressClassSpecArgs(IngressClassSpecArgs $) {
        this.controller = $.controller;
        this.parameters = $.parameters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IngressClassSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IngressClassSpecArgs $;

        public Builder() {
            $ = new IngressClassSpecArgs();
        }

        public Builder(IngressClassSpecArgs defaults) {
            $ = new IngressClassSpecArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param controller controller refers to the name of the controller that should handle this class. This allows for different &#34;flavors&#34; that are controlled by the same controller. For example, you may have different parameters for the same implementing controller. This should be specified as a domain-prefixed path no more than 250 characters in length, e.g. &#34;acme.io/ingress-controller&#34;. This field is immutable.
         * 
         * @return builder
         * 
         */
        public Builder controller(@Nullable Output<String> controller) {
            $.controller = controller;
            return this;
        }

        /**
         * @param controller controller refers to the name of the controller that should handle this class. This allows for different &#34;flavors&#34; that are controlled by the same controller. For example, you may have different parameters for the same implementing controller. This should be specified as a domain-prefixed path no more than 250 characters in length, e.g. &#34;acme.io/ingress-controller&#34;. This field is immutable.
         * 
         * @return builder
         * 
         */
        public Builder controller(String controller) {
            return controller(Output.of(controller));
        }

        /**
         * @param parameters parameters is a link to a custom resource containing additional configuration for the controller. This is optional if the controller does not require extra parameters.
         * 
         * @return builder
         * 
         */
        public Builder parameters(@Nullable Output<IngressClassParametersReferenceArgs> parameters) {
            $.parameters = parameters;
            return this;
        }

        /**
         * @param parameters parameters is a link to a custom resource containing additional configuration for the controller. This is optional if the controller does not require extra parameters.
         * 
         * @return builder
         * 
         */
        public Builder parameters(IngressClassParametersReferenceArgs parameters) {
            return parameters(Output.of(parameters));
        }

        public IngressClassSpecArgs build() {
            return $;
        }
    }

}
