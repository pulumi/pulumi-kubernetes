// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.core.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ModifyVolumeStatusPatch {
    /**
     * @return status is the status of the ControllerModifyVolume operation. It can be in any of following states:
     *  - Pending
     *    Pending indicates that the PersistentVolumeClaim cannot be modified due to unmet requirements, such as
     *    the specified VolumeAttributesClass not existing.
     *  - InProgress
     *    InProgress indicates that the volume is being modified.
     *  - Infeasible
     *      Infeasible indicates that the request has been rejected as invalid by the CSI driver. To
     *       resolve the error, a valid VolumeAttributesClass needs to be specified.
     *    Note: New statuses can be added in the future. Consumers should check for unknown statuses and fail appropriately.
     * 
     */
    private @Nullable String status;
    /**
     * @return targetVolumeAttributesClassName is the name of the VolumeAttributesClass the PVC currently being reconciled
     * 
     */
    private @Nullable String targetVolumeAttributesClassName;

    private ModifyVolumeStatusPatch() {}
    /**
     * @return status is the status of the ControllerModifyVolume operation. It can be in any of following states:
     *  - Pending
     *    Pending indicates that the PersistentVolumeClaim cannot be modified due to unmet requirements, such as
     *    the specified VolumeAttributesClass not existing.
     *  - InProgress
     *    InProgress indicates that the volume is being modified.
     *  - Infeasible
     *      Infeasible indicates that the request has been rejected as invalid by the CSI driver. To
     *       resolve the error, a valid VolumeAttributesClass needs to be specified.
     *    Note: New statuses can be added in the future. Consumers should check for unknown statuses and fail appropriately.
     * 
     */
    public Optional<String> status() {
        return Optional.ofNullable(this.status);
    }
    /**
     * @return targetVolumeAttributesClassName is the name of the VolumeAttributesClass the PVC currently being reconciled
     * 
     */
    public Optional<String> targetVolumeAttributesClassName() {
        return Optional.ofNullable(this.targetVolumeAttributesClassName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ModifyVolumeStatusPatch defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String status;
        private @Nullable String targetVolumeAttributesClassName;
        public Builder() {}
        public Builder(ModifyVolumeStatusPatch defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.status = defaults.status;
    	      this.targetVolumeAttributesClassName = defaults.targetVolumeAttributesClassName;
        }

        @CustomType.Setter
        public Builder status(@Nullable String status) {
            this.status = status;
            return this;
        }
        @CustomType.Setter
        public Builder targetVolumeAttributesClassName(@Nullable String targetVolumeAttributesClassName) {
            this.targetVolumeAttributesClassName = targetVolumeAttributesClassName;
            return this;
        }
        public ModifyVolumeStatusPatch build() {
            final var o = new ModifyVolumeStatusPatch();
            o.status = status;
            o.targetVolumeAttributesClassName = targetVolumeAttributesClassName;
            return o;
        }
    }
}
