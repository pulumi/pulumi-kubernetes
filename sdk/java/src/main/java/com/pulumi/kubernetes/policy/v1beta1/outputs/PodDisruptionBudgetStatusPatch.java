// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.policy.v1beta1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class PodDisruptionBudgetStatusPatch {
    /**
     * @return current number of healthy pods
     * 
     */
    private @Nullable Integer currentHealthy;
    /**
     * @return minimum desired number of healthy pods
     * 
     */
    private @Nullable Integer desiredHealthy;
    /**
     * @return DisruptedPods contains information about pods whose eviction was processed by the API server eviction subresource handler but has not yet been observed by the PodDisruptionBudget controller. A pod will be in this map from the time when the API server processed the eviction request to the time when the pod is seen by PDB controller as having been marked for deletion (or after a timeout). The key in the map is the name of the pod and the value is the time when the API server processed the eviction request. If the deletion didn&#39;t occur and a pod is still there it will be removed from the list automatically by PodDisruptionBudget controller after some time. If everything goes smooth this map should be empty for the most of the time. Large number of entries in the map may indicate problems with pod deletions.
     * 
     */
    private @Nullable Map<String,String> disruptedPods;
    /**
     * @return Number of pod disruptions that are currently allowed.
     * 
     */
    private @Nullable Integer disruptionsAllowed;
    /**
     * @return total number of pods counted by this disruption budget
     * 
     */
    private @Nullable Integer expectedPods;
    /**
     * @return Most recent generation observed when updating this PDB status. PodDisruptionsAllowed and other status information is valid only if observedGeneration equals to PDB&#39;s object generation.
     * 
     */
    private @Nullable Integer observedGeneration;

    private PodDisruptionBudgetStatusPatch() {}
    /**
     * @return current number of healthy pods
     * 
     */
    public Optional<Integer> currentHealthy() {
        return Optional.ofNullable(this.currentHealthy);
    }
    /**
     * @return minimum desired number of healthy pods
     * 
     */
    public Optional<Integer> desiredHealthy() {
        return Optional.ofNullable(this.desiredHealthy);
    }
    /**
     * @return DisruptedPods contains information about pods whose eviction was processed by the API server eviction subresource handler but has not yet been observed by the PodDisruptionBudget controller. A pod will be in this map from the time when the API server processed the eviction request to the time when the pod is seen by PDB controller as having been marked for deletion (or after a timeout). The key in the map is the name of the pod and the value is the time when the API server processed the eviction request. If the deletion didn&#39;t occur and a pod is still there it will be removed from the list automatically by PodDisruptionBudget controller after some time. If everything goes smooth this map should be empty for the most of the time. Large number of entries in the map may indicate problems with pod deletions.
     * 
     */
    public Map<String,String> disruptedPods() {
        return this.disruptedPods == null ? Map.of() : this.disruptedPods;
    }
    /**
     * @return Number of pod disruptions that are currently allowed.
     * 
     */
    public Optional<Integer> disruptionsAllowed() {
        return Optional.ofNullable(this.disruptionsAllowed);
    }
    /**
     * @return total number of pods counted by this disruption budget
     * 
     */
    public Optional<Integer> expectedPods() {
        return Optional.ofNullable(this.expectedPods);
    }
    /**
     * @return Most recent generation observed when updating this PDB status. PodDisruptionsAllowed and other status information is valid only if observedGeneration equals to PDB&#39;s object generation.
     * 
     */
    public Optional<Integer> observedGeneration() {
        return Optional.ofNullable(this.observedGeneration);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(PodDisruptionBudgetStatusPatch defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer currentHealthy;
        private @Nullable Integer desiredHealthy;
        private @Nullable Map<String,String> disruptedPods;
        private @Nullable Integer disruptionsAllowed;
        private @Nullable Integer expectedPods;
        private @Nullable Integer observedGeneration;
        public Builder() {}
        public Builder(PodDisruptionBudgetStatusPatch defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.currentHealthy = defaults.currentHealthy;
    	      this.desiredHealthy = defaults.desiredHealthy;
    	      this.disruptedPods = defaults.disruptedPods;
    	      this.disruptionsAllowed = defaults.disruptionsAllowed;
    	      this.expectedPods = defaults.expectedPods;
    	      this.observedGeneration = defaults.observedGeneration;
        }

        @CustomType.Setter
        public Builder currentHealthy(@Nullable Integer currentHealthy) {
            this.currentHealthy = currentHealthy;
            return this;
        }
        @CustomType.Setter
        public Builder desiredHealthy(@Nullable Integer desiredHealthy) {
            this.desiredHealthy = desiredHealthy;
            return this;
        }
        @CustomType.Setter
        public Builder disruptedPods(@Nullable Map<String,String> disruptedPods) {
            this.disruptedPods = disruptedPods;
            return this;
        }
        @CustomType.Setter
        public Builder disruptionsAllowed(@Nullable Integer disruptionsAllowed) {
            this.disruptionsAllowed = disruptionsAllowed;
            return this;
        }
        @CustomType.Setter
        public Builder expectedPods(@Nullable Integer expectedPods) {
            this.expectedPods = expectedPods;
            return this;
        }
        @CustomType.Setter
        public Builder observedGeneration(@Nullable Integer observedGeneration) {
            this.observedGeneration = observedGeneration;
            return this;
        }
        public PodDisruptionBudgetStatusPatch build() {
            final var o = new PodDisruptionBudgetStatusPatch();
            o.currentHealthy = currentHealthy;
            o.desiredHealthy = desiredHealthy;
            o.disruptedPods = disruptedPods;
            o.disruptionsAllowed = disruptionsAllowed;
            o.expectedPods = expectedPods;
            o.observedGeneration = observedGeneration;
            return o;
        }
    }
}
