// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.resource.v1alpha3.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeviceConstraint {
    /**
     * @return MatchAttribute requires that all devices in question have this attribute and that its type and value are the same across those devices.
     * 
     * For example, if you specified &#34;dra.example.com/numa&#34; (a hypothetical example!), then only devices in the same NUMA node will be chosen. A device which does not have that attribute will not be chosen. All devices should use a value of the same type for this attribute because that is part of its specification, but if one device doesn&#39;t, then it also will not be chosen.
     * 
     * Must include the domain qualifier.
     * 
     */
    private @Nullable String matchAttribute;
    /**
     * @return Requests is a list of the one or more requests in this claim which must co-satisfy this constraint. If a request is fulfilled by multiple devices, then all of the devices must satisfy the constraint. If this is not specified, this constraint applies to all requests in this claim.
     * 
     */
    private @Nullable List<String> requests;

    private DeviceConstraint() {}
    /**
     * @return MatchAttribute requires that all devices in question have this attribute and that its type and value are the same across those devices.
     * 
     * For example, if you specified &#34;dra.example.com/numa&#34; (a hypothetical example!), then only devices in the same NUMA node will be chosen. A device which does not have that attribute will not be chosen. All devices should use a value of the same type for this attribute because that is part of its specification, but if one device doesn&#39;t, then it also will not be chosen.
     * 
     * Must include the domain qualifier.
     * 
     */
    public Optional<String> matchAttribute() {
        return Optional.ofNullable(this.matchAttribute);
    }
    /**
     * @return Requests is a list of the one or more requests in this claim which must co-satisfy this constraint. If a request is fulfilled by multiple devices, then all of the devices must satisfy the constraint. If this is not specified, this constraint applies to all requests in this claim.
     * 
     */
    public List<String> requests() {
        return this.requests == null ? List.of() : this.requests;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeviceConstraint defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String matchAttribute;
        private @Nullable List<String> requests;
        public Builder() {}
        public Builder(DeviceConstraint defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.matchAttribute = defaults.matchAttribute;
    	      this.requests = defaults.requests;
        }

        @CustomType.Setter
        public Builder matchAttribute(@Nullable String matchAttribute) {

            this.matchAttribute = matchAttribute;
            return this;
        }
        @CustomType.Setter
        public Builder requests(@Nullable List<String> requests) {

            this.requests = requests;
            return this;
        }
        public Builder requests(String... requests) {
            return requests(List.of(requests));
        }
        public DeviceConstraint build() {
            final var _resultValue = new DeviceConstraint();
            _resultValue.matchAttribute = matchAttribute;
            _resultValue.requests = requests;
            return _resultValue;
        }
    }
}
