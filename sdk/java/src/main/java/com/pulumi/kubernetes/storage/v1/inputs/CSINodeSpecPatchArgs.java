// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.storage.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.kubernetes.storage.v1.inputs.CSINodeDriverPatchArgs;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * CSINodeSpec holds information about the specification of all CSI drivers installed on a node
 * 
 */
public final class CSINodeSpecPatchArgs extends com.pulumi.resources.ResourceArgs {

    public static final CSINodeSpecPatchArgs Empty = new CSINodeSpecPatchArgs();

    /**
     * drivers is a list of information of all CSI Drivers existing on a node. If all drivers in the list are uninstalled, this can become empty.
     * 
     */
    @Import(name="drivers")
    private @Nullable Output<List<CSINodeDriverPatchArgs>> drivers;

    /**
     * @return drivers is a list of information of all CSI Drivers existing on a node. If all drivers in the list are uninstalled, this can become empty.
     * 
     */
    public Optional<Output<List<CSINodeDriverPatchArgs>>> drivers() {
        return Optional.ofNullable(this.drivers);
    }

    private CSINodeSpecPatchArgs() {}

    private CSINodeSpecPatchArgs(CSINodeSpecPatchArgs $) {
        this.drivers = $.drivers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CSINodeSpecPatchArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CSINodeSpecPatchArgs $;

        public Builder() {
            $ = new CSINodeSpecPatchArgs();
        }

        public Builder(CSINodeSpecPatchArgs defaults) {
            $ = new CSINodeSpecPatchArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param drivers drivers is a list of information of all CSI Drivers existing on a node. If all drivers in the list are uninstalled, this can become empty.
         * 
         * @return builder
         * 
         */
        public Builder drivers(@Nullable Output<List<CSINodeDriverPatchArgs>> drivers) {
            $.drivers = drivers;
            return this;
        }

        /**
         * @param drivers drivers is a list of information of all CSI Drivers existing on a node. If all drivers in the list are uninstalled, this can become empty.
         * 
         * @return builder
         * 
         */
        public Builder drivers(List<CSINodeDriverPatchArgs> drivers) {
            return drivers(Output.of(drivers));
        }

        /**
         * @param drivers drivers is a list of information of all CSI Drivers existing on a node. If all drivers in the list are uninstalled, this can become empty.
         * 
         * @return builder
         * 
         */
        public Builder drivers(CSINodeDriverPatchArgs... drivers) {
            return drivers(List.of(drivers));
        }

        public CSINodeSpecPatchArgs build() {
            return $;
        }
    }

}
