// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.resource.v1alpha3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.kubernetes.resource.v1alpha3.inputs.CELDeviceSelectorPatchArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * DeviceSelector must have exactly one field set.
 * 
 */
public final class DeviceSelectorPatchArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeviceSelectorPatchArgs Empty = new DeviceSelectorPatchArgs();

    /**
     * CEL contains a CEL expression for selecting a device.
     * 
     */
    @Import(name="cel")
    private @Nullable Output<CELDeviceSelectorPatchArgs> cel;

    /**
     * @return CEL contains a CEL expression for selecting a device.
     * 
     */
    public Optional<Output<CELDeviceSelectorPatchArgs>> cel() {
        return Optional.ofNullable(this.cel);
    }

    private DeviceSelectorPatchArgs() {}

    private DeviceSelectorPatchArgs(DeviceSelectorPatchArgs $) {
        this.cel = $.cel;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeviceSelectorPatchArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeviceSelectorPatchArgs $;

        public Builder() {
            $ = new DeviceSelectorPatchArgs();
        }

        public Builder(DeviceSelectorPatchArgs defaults) {
            $ = new DeviceSelectorPatchArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param cel CEL contains a CEL expression for selecting a device.
         * 
         * @return builder
         * 
         */
        public Builder cel(@Nullable Output<CELDeviceSelectorPatchArgs> cel) {
            $.cel = cel;
            return this;
        }

        /**
         * @param cel CEL contains a CEL expression for selecting a device.
         * 
         * @return builder
         * 
         */
        public Builder cel(CELDeviceSelectorPatchArgs cel) {
            return cel(Output.of(cel));
        }

        public DeviceSelectorPatchArgs build() {
            return $;
        }
    }

}
