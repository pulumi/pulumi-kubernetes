// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.meta.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.kubernetes.meta.v1.inputs.StatusCauseArgs;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.
 * 
 */
public final class StatusDetailsArgs extends com.pulumi.resources.ResourceArgs {

    public static final StatusDetailsArgs Empty = new StatusDetailsArgs();

    /**
     * The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.
     * 
     */
    @Import(name="causes")
    private @Nullable Output<List<StatusCauseArgs>> causes;

    /**
     * @return The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.
     * 
     */
    public Optional<Output<List<StatusCauseArgs>>> causes() {
        return Optional.ofNullable(this.causes);
    }

    /**
     * The group attribute of the resource associated with the status StatusReason.
     * 
     */
    @Import(name="group")
    private @Nullable Output<String> group;

    /**
     * @return The group attribute of the resource associated with the status StatusReason.
     * 
     */
    public Optional<Output<String>> group() {
        return Optional.ofNullable(this.group);
    }

    /**
     * The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * 
     */
    @Import(name="kind")
    private @Nullable Output<String> kind;

    /**
     * @return The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * 
     */
    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.
     * 
     */
    @Import(name="retryAfterSeconds")
    private @Nullable Output<Integer> retryAfterSeconds;

    /**
     * @return If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.
     * 
     */
    public Optional<Output<Integer>> retryAfterSeconds() {
        return Optional.ofNullable(this.retryAfterSeconds);
    }

    /**
     * UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids
     * 
     */
    @Import(name="uid")
    private @Nullable Output<String> uid;

    /**
     * @return UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids
     * 
     */
    public Optional<Output<String>> uid() {
        return Optional.ofNullable(this.uid);
    }

    private StatusDetailsArgs() {}

    private StatusDetailsArgs(StatusDetailsArgs $) {
        this.causes = $.causes;
        this.group = $.group;
        this.kind = $.kind;
        this.name = $.name;
        this.retryAfterSeconds = $.retryAfterSeconds;
        this.uid = $.uid;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(StatusDetailsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private StatusDetailsArgs $;

        public Builder() {
            $ = new StatusDetailsArgs();
        }

        public Builder(StatusDetailsArgs defaults) {
            $ = new StatusDetailsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param causes The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.
         * 
         * @return builder
         * 
         */
        public Builder causes(@Nullable Output<List<StatusCauseArgs>> causes) {
            $.causes = causes;
            return this;
        }

        /**
         * @param causes The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.
         * 
         * @return builder
         * 
         */
        public Builder causes(List<StatusCauseArgs> causes) {
            return causes(Output.of(causes));
        }

        /**
         * @param causes The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes.
         * 
         * @return builder
         * 
         */
        public Builder causes(StatusCauseArgs... causes) {
            return causes(List.of(causes));
        }

        /**
         * @param group The group attribute of the resource associated with the status StatusReason.
         * 
         * @return builder
         * 
         */
        public Builder group(@Nullable Output<String> group) {
            $.group = group;
            return this;
        }

        /**
         * @param group The group attribute of the resource associated with the status StatusReason.
         * 
         * @return builder
         * 
         */
        public Builder group(String group) {
            return group(Output.of(group));
        }

        /**
         * @param kind The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
         * 
         * @return builder
         * 
         */
        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param name The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described).
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param retryAfterSeconds If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.
         * 
         * @return builder
         * 
         */
        public Builder retryAfterSeconds(@Nullable Output<Integer> retryAfterSeconds) {
            $.retryAfterSeconds = retryAfterSeconds;
            return this;
        }

        /**
         * @param retryAfterSeconds If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action.
         * 
         * @return builder
         * 
         */
        public Builder retryAfterSeconds(Integer retryAfterSeconds) {
            return retryAfterSeconds(Output.of(retryAfterSeconds));
        }

        /**
         * @param uid UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids
         * 
         * @return builder
         * 
         */
        public Builder uid(@Nullable Output<String> uid) {
            $.uid = uid;
            return this;
        }

        /**
         * @param uid UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids
         * 
         * @return builder
         * 
         */
        public Builder uid(String uid) {
            return uid(Output.of(uid));
        }

        public StatusDetailsArgs build() {
            return $;
        }
    }

}
