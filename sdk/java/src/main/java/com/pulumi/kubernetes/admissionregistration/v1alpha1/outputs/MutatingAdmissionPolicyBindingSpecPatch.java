// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.admissionregistration.v1alpha1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.kubernetes.admissionregistration.v1alpha1.outputs.MatchResourcesPatch;
import com.pulumi.kubernetes.admissionregistration.v1alpha1.outputs.ParamRefPatch;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class MutatingAdmissionPolicyBindingSpecPatch {
    /**
     * @return matchResources limits what resources match this binding and may be mutated by it. Note that if matchResources matches a resource, the resource must also match a policy&#39;s matchConstraints and matchConditions before the resource may be mutated. When matchResources is unset, it does not constrain resource matching, and only the policy&#39;s matchConstraints and matchConditions must match for the resource to be mutated. Additionally, matchResources.resourceRules are optional and do not constraint matching when unset. Note that this is differs from MutatingAdmissionPolicy matchConstraints, where resourceRules are required. The CREATE, UPDATE and CONNECT operations are allowed.  The DELETE operation may not be matched. &#39;*&#39; matches CREATE, UPDATE and CONNECT.
     * 
     */
    private @Nullable MatchResourcesPatch matchResources;
    /**
     * @return paramRef specifies the parameter resource used to configure the admission control policy. It should point to a resource of the type specified in spec.ParamKind of the bound MutatingAdmissionPolicy. If the policy specifies a ParamKind and the resource referred to by ParamRef does not exist, this binding is considered mis-configured and the FailurePolicy of the MutatingAdmissionPolicy applied. If the policy does not specify a ParamKind then this field is ignored, and the rules are evaluated without a param.
     * 
     */
    private @Nullable ParamRefPatch paramRef;
    /**
     * @return policyName references a MutatingAdmissionPolicy name which the MutatingAdmissionPolicyBinding binds to. If the referenced resource does not exist, this binding is considered invalid and will be ignored Required.
     * 
     */
    private @Nullable String policyName;

    private MutatingAdmissionPolicyBindingSpecPatch() {}
    /**
     * @return matchResources limits what resources match this binding and may be mutated by it. Note that if matchResources matches a resource, the resource must also match a policy&#39;s matchConstraints and matchConditions before the resource may be mutated. When matchResources is unset, it does not constrain resource matching, and only the policy&#39;s matchConstraints and matchConditions must match for the resource to be mutated. Additionally, matchResources.resourceRules are optional and do not constraint matching when unset. Note that this is differs from MutatingAdmissionPolicy matchConstraints, where resourceRules are required. The CREATE, UPDATE and CONNECT operations are allowed.  The DELETE operation may not be matched. &#39;*&#39; matches CREATE, UPDATE and CONNECT.
     * 
     */
    public Optional<MatchResourcesPatch> matchResources() {
        return Optional.ofNullable(this.matchResources);
    }
    /**
     * @return paramRef specifies the parameter resource used to configure the admission control policy. It should point to a resource of the type specified in spec.ParamKind of the bound MutatingAdmissionPolicy. If the policy specifies a ParamKind and the resource referred to by ParamRef does not exist, this binding is considered mis-configured and the FailurePolicy of the MutatingAdmissionPolicy applied. If the policy does not specify a ParamKind then this field is ignored, and the rules are evaluated without a param.
     * 
     */
    public Optional<ParamRefPatch> paramRef() {
        return Optional.ofNullable(this.paramRef);
    }
    /**
     * @return policyName references a MutatingAdmissionPolicy name which the MutatingAdmissionPolicyBinding binds to. If the referenced resource does not exist, this binding is considered invalid and will be ignored Required.
     * 
     */
    public Optional<String> policyName() {
        return Optional.ofNullable(this.policyName);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(MutatingAdmissionPolicyBindingSpecPatch defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable MatchResourcesPatch matchResources;
        private @Nullable ParamRefPatch paramRef;
        private @Nullable String policyName;
        public Builder() {}
        public Builder(MutatingAdmissionPolicyBindingSpecPatch defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.matchResources = defaults.matchResources;
    	      this.paramRef = defaults.paramRef;
    	      this.policyName = defaults.policyName;
        }

        @CustomType.Setter
        public Builder matchResources(@Nullable MatchResourcesPatch matchResources) {

            this.matchResources = matchResources;
            return this;
        }
        @CustomType.Setter
        public Builder paramRef(@Nullable ParamRefPatch paramRef) {

            this.paramRef = paramRef;
            return this;
        }
        @CustomType.Setter
        public Builder policyName(@Nullable String policyName) {

            this.policyName = policyName;
            return this;
        }
        public MutatingAdmissionPolicyBindingSpecPatch build() {
            final var _resultValue = new MutatingAdmissionPolicyBindingSpecPatch();
            _resultValue.matchResources = matchResources;
            _resultValue.paramRef = paramRef;
            _resultValue.policyName = policyName;
            return _resultValue;
        }
    }
}
