// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.core.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.kubernetes.core.v1.outputs.ContainerStateRunning;
import com.pulumi.kubernetes.core.v1.outputs.ContainerStateTerminated;
import com.pulumi.kubernetes.core.v1.outputs.ContainerStateWaiting;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ContainerState {
    /**
     * @return Details about a running container
     * 
     */
    private @Nullable ContainerStateRunning running;
    /**
     * @return Details about a terminated container
     * 
     */
    private @Nullable ContainerStateTerminated terminated;
    /**
     * @return Details about a waiting container
     * 
     */
    private @Nullable ContainerStateWaiting waiting;

    private ContainerState() {}
    /**
     * @return Details about a running container
     * 
     */
    public Optional<ContainerStateRunning> running() {
        return Optional.ofNullable(this.running);
    }
    /**
     * @return Details about a terminated container
     * 
     */
    public Optional<ContainerStateTerminated> terminated() {
        return Optional.ofNullable(this.terminated);
    }
    /**
     * @return Details about a waiting container
     * 
     */
    public Optional<ContainerStateWaiting> waiting() {
        return Optional.ofNullable(this.waiting);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ContainerState defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable ContainerStateRunning running;
        private @Nullable ContainerStateTerminated terminated;
        private @Nullable ContainerStateWaiting waiting;
        public Builder() {}
        public Builder(ContainerState defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.running = defaults.running;
    	      this.terminated = defaults.terminated;
    	      this.waiting = defaults.waiting;
        }

        @CustomType.Setter
        public Builder running(@Nullable ContainerStateRunning running) {
            this.running = running;
            return this;
        }
        @CustomType.Setter
        public Builder terminated(@Nullable ContainerStateTerminated terminated) {
            this.terminated = terminated;
            return this;
        }
        @CustomType.Setter
        public Builder waiting(@Nullable ContainerStateWaiting waiting) {
            this.waiting = waiting;
            return this;
        }
        public ContainerState build() {
            final var o = new ContainerState();
            o.running = running;
            o.terminated = terminated;
            o.waiting = waiting;
            return o;
        }
    }
}
