// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.extensions.v1beta1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.kubernetes.core.v1.outputs.PodTemplateSpec;
import com.pulumi.kubernetes.extensions.v1beta1.outputs.DeploymentStrategy;
import com.pulumi.kubernetes.extensions.v1beta1.outputs.RollbackConfig;
import com.pulumi.kubernetes.meta.v1.outputs.LabelSelector;
import java.lang.Boolean;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class DeploymentSpec {
    /**
     * @return Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)
     * 
     */
    private @Nullable Integer minReadySeconds;
    /**
     * @return Indicates that the deployment is paused and will not be processed by the deployment controller.
     * 
     */
    private @Nullable Boolean paused;
    /**
     * @return The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. This is set to the max value of int32 (i.e. 2147483647) by default, which means &#34;no deadline&#34;.
     * 
     */
    private @Nullable Integer progressDeadlineSeconds;
    /**
     * @return Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
     * 
     */
    private @Nullable Integer replicas;
    /**
     * @return The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. This is set to the max value of int32 (i.e. 2147483647) by default, which means &#34;retaining all old RelicaSets&#34;.
     * 
     */
    private @Nullable Integer revisionHistoryLimit;
    /**
     * @return DEPRECATED. The config this deployment is rolling back to. Will be cleared after rollback is done.
     * 
     */
    private @Nullable RollbackConfig rollbackTo;
    /**
     * @return Label selector for pods. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment.
     * 
     */
    private @Nullable LabelSelector selector;
    /**
     * @return The deployment strategy to use to replace existing pods with new ones.
     * 
     */
    private @Nullable DeploymentStrategy strategy;
    /**
     * @return Template describes the pods that will be created.
     * 
     */
    private PodTemplateSpec template;

    private DeploymentSpec() {}
    /**
     * @return Minimum number of seconds for which a newly created pod should be ready without any of its container crashing, for it to be considered available. Defaults to 0 (pod will be considered available as soon as it is ready)
     * 
     */
    public Optional<Integer> minReadySeconds() {
        return Optional.ofNullable(this.minReadySeconds);
    }
    /**
     * @return Indicates that the deployment is paused and will not be processed by the deployment controller.
     * 
     */
    public Optional<Boolean> paused() {
        return Optional.ofNullable(this.paused);
    }
    /**
     * @return The maximum time in seconds for a deployment to make progress before it is considered to be failed. The deployment controller will continue to process failed deployments and a condition with a ProgressDeadlineExceeded reason will be surfaced in the deployment status. Note that progress will not be estimated during the time a deployment is paused. This is set to the max value of int32 (i.e. 2147483647) by default, which means &#34;no deadline&#34;.
     * 
     */
    public Optional<Integer> progressDeadlineSeconds() {
        return Optional.ofNullable(this.progressDeadlineSeconds);
    }
    /**
     * @return Number of desired pods. This is a pointer to distinguish between explicit zero and not specified. Defaults to 1.
     * 
     */
    public Optional<Integer> replicas() {
        return Optional.ofNullable(this.replicas);
    }
    /**
     * @return The number of old ReplicaSets to retain to allow rollback. This is a pointer to distinguish between explicit zero and not specified. This is set to the max value of int32 (i.e. 2147483647) by default, which means &#34;retaining all old RelicaSets&#34;.
     * 
     */
    public Optional<Integer> revisionHistoryLimit() {
        return Optional.ofNullable(this.revisionHistoryLimit);
    }
    /**
     * @return DEPRECATED. The config this deployment is rolling back to. Will be cleared after rollback is done.
     * 
     */
    public Optional<RollbackConfig> rollbackTo() {
        return Optional.ofNullable(this.rollbackTo);
    }
    /**
     * @return Label selector for pods. Existing ReplicaSets whose pods are selected by this will be the ones affected by this deployment.
     * 
     */
    public Optional<LabelSelector> selector() {
        return Optional.ofNullable(this.selector);
    }
    /**
     * @return The deployment strategy to use to replace existing pods with new ones.
     * 
     */
    public Optional<DeploymentStrategy> strategy() {
        return Optional.ofNullable(this.strategy);
    }
    /**
     * @return Template describes the pods that will be created.
     * 
     */
    public PodTemplateSpec template() {
        return this.template;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeploymentSpec defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Integer minReadySeconds;
        private @Nullable Boolean paused;
        private @Nullable Integer progressDeadlineSeconds;
        private @Nullable Integer replicas;
        private @Nullable Integer revisionHistoryLimit;
        private @Nullable RollbackConfig rollbackTo;
        private @Nullable LabelSelector selector;
        private @Nullable DeploymentStrategy strategy;
        private PodTemplateSpec template;
        public Builder() {}
        public Builder(DeploymentSpec defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.minReadySeconds = defaults.minReadySeconds;
    	      this.paused = defaults.paused;
    	      this.progressDeadlineSeconds = defaults.progressDeadlineSeconds;
    	      this.replicas = defaults.replicas;
    	      this.revisionHistoryLimit = defaults.revisionHistoryLimit;
    	      this.rollbackTo = defaults.rollbackTo;
    	      this.selector = defaults.selector;
    	      this.strategy = defaults.strategy;
    	      this.template = defaults.template;
        }

        @CustomType.Setter
        public Builder minReadySeconds(@Nullable Integer minReadySeconds) {
            this.minReadySeconds = minReadySeconds;
            return this;
        }
        @CustomType.Setter
        public Builder paused(@Nullable Boolean paused) {
            this.paused = paused;
            return this;
        }
        @CustomType.Setter
        public Builder progressDeadlineSeconds(@Nullable Integer progressDeadlineSeconds) {
            this.progressDeadlineSeconds = progressDeadlineSeconds;
            return this;
        }
        @CustomType.Setter
        public Builder replicas(@Nullable Integer replicas) {
            this.replicas = replicas;
            return this;
        }
        @CustomType.Setter
        public Builder revisionHistoryLimit(@Nullable Integer revisionHistoryLimit) {
            this.revisionHistoryLimit = revisionHistoryLimit;
            return this;
        }
        @CustomType.Setter
        public Builder rollbackTo(@Nullable RollbackConfig rollbackTo) {
            this.rollbackTo = rollbackTo;
            return this;
        }
        @CustomType.Setter
        public Builder selector(@Nullable LabelSelector selector) {
            this.selector = selector;
            return this;
        }
        @CustomType.Setter
        public Builder strategy(@Nullable DeploymentStrategy strategy) {
            this.strategy = strategy;
            return this;
        }
        @CustomType.Setter
        public Builder template(PodTemplateSpec template) {
            this.template = Objects.requireNonNull(template);
            return this;
        }
        public DeploymentSpec build() {
            final var o = new DeploymentSpec();
            o.minReadySeconds = minReadySeconds;
            o.paused = paused;
            o.progressDeadlineSeconds = progressDeadlineSeconds;
            o.replicas = replicas;
            o.revisionHistoryLimit = revisionHistoryLimit;
            o.rollbackTo = rollbackTo;
            o.selector = selector;
            o.strategy = strategy;
            o.template = template;
            return o;
        }
    }
}
