// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.resource.v1alpha3.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import com.pulumi.kubernetes.resource.v1alpha3.inputs.DeviceTaintArgs;
import com.pulumi.kubernetes.resource.v1alpha3.inputs.DeviceTaintSelectorArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * DeviceTaintRuleSpec specifies the selector and one taint.
 * 
 */
public final class DeviceTaintRuleSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeviceTaintRuleSpecArgs Empty = new DeviceTaintRuleSpecArgs();

    /**
     * DeviceSelector defines which device(s) the taint is applied to. All selector criteria must be satified for a device to match. The empty selector matches all devices. Without a selector, no devices are matches.
     * 
     */
    @Import(name="deviceSelector")
    private @Nullable Output<DeviceTaintSelectorArgs> deviceSelector;

    /**
     * @return DeviceSelector defines which device(s) the taint is applied to. All selector criteria must be satified for a device to match. The empty selector matches all devices. Without a selector, no devices are matches.
     * 
     */
    public Optional<Output<DeviceTaintSelectorArgs>> deviceSelector() {
        return Optional.ofNullable(this.deviceSelector);
    }

    /**
     * The taint that gets applied to matching devices.
     * 
     */
    @Import(name="taint", required=true)
    private Output<DeviceTaintArgs> taint;

    /**
     * @return The taint that gets applied to matching devices.
     * 
     */
    public Output<DeviceTaintArgs> taint() {
        return this.taint;
    }

    private DeviceTaintRuleSpecArgs() {}

    private DeviceTaintRuleSpecArgs(DeviceTaintRuleSpecArgs $) {
        this.deviceSelector = $.deviceSelector;
        this.taint = $.taint;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeviceTaintRuleSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeviceTaintRuleSpecArgs $;

        public Builder() {
            $ = new DeviceTaintRuleSpecArgs();
        }

        public Builder(DeviceTaintRuleSpecArgs defaults) {
            $ = new DeviceTaintRuleSpecArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param deviceSelector DeviceSelector defines which device(s) the taint is applied to. All selector criteria must be satified for a device to match. The empty selector matches all devices. Without a selector, no devices are matches.
         * 
         * @return builder
         * 
         */
        public Builder deviceSelector(@Nullable Output<DeviceTaintSelectorArgs> deviceSelector) {
            $.deviceSelector = deviceSelector;
            return this;
        }

        /**
         * @param deviceSelector DeviceSelector defines which device(s) the taint is applied to. All selector criteria must be satified for a device to match. The empty selector matches all devices. Without a selector, no devices are matches.
         * 
         * @return builder
         * 
         */
        public Builder deviceSelector(DeviceTaintSelectorArgs deviceSelector) {
            return deviceSelector(Output.of(deviceSelector));
        }

        /**
         * @param taint The taint that gets applied to matching devices.
         * 
         * @return builder
         * 
         */
        public Builder taint(Output<DeviceTaintArgs> taint) {
            $.taint = taint;
            return this;
        }

        /**
         * @param taint The taint that gets applied to matching devices.
         * 
         * @return builder
         * 
         */
        public Builder taint(DeviceTaintArgs taint) {
            return taint(Output.of(taint));
        }

        public DeviceTaintRuleSpecArgs build() {
            if ($.taint == null) {
                throw new MissingRequiredPropertyException("DeviceTaintRuleSpecArgs", "taint");
            }
            return $;
        }
    }

}
