// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.core.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VolumeMountStatus {
    /**
     * @return MountPath corresponds to the original VolumeMount.
     * 
     */
    private String mountPath;
    /**
     * @return Name corresponds to the name of the original VolumeMount.
     * 
     */
    private String name;
    /**
     * @return ReadOnly corresponds to the original VolumeMount.
     * 
     */
    private @Nullable Boolean readOnly;
    /**
     * @return RecursiveReadOnly must be set to Disabled, Enabled, or unspecified (for non-readonly mounts). An IfPossible value in the original VolumeMount must be translated to Disabled or Enabled, depending on the mount result.
     * 
     */
    private @Nullable String recursiveReadOnly;

    private VolumeMountStatus() {}
    /**
     * @return MountPath corresponds to the original VolumeMount.
     * 
     */
    public String mountPath() {
        return this.mountPath;
    }
    /**
     * @return Name corresponds to the name of the original VolumeMount.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return ReadOnly corresponds to the original VolumeMount.
     * 
     */
    public Optional<Boolean> readOnly() {
        return Optional.ofNullable(this.readOnly);
    }
    /**
     * @return RecursiveReadOnly must be set to Disabled, Enabled, or unspecified (for non-readonly mounts). An IfPossible value in the original VolumeMount must be translated to Disabled or Enabled, depending on the mount result.
     * 
     */
    public Optional<String> recursiveReadOnly() {
        return Optional.ofNullable(this.recursiveReadOnly);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VolumeMountStatus defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String mountPath;
        private String name;
        private @Nullable Boolean readOnly;
        private @Nullable String recursiveReadOnly;
        public Builder() {}
        public Builder(VolumeMountStatus defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.mountPath = defaults.mountPath;
    	      this.name = defaults.name;
    	      this.readOnly = defaults.readOnly;
    	      this.recursiveReadOnly = defaults.recursiveReadOnly;
        }

        @CustomType.Setter
        public Builder mountPath(String mountPath) {
            this.mountPath = Objects.requireNonNull(mountPath);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder readOnly(@Nullable Boolean readOnly) {
            this.readOnly = readOnly;
            return this;
        }
        @CustomType.Setter
        public Builder recursiveReadOnly(@Nullable String recursiveReadOnly) {
            this.recursiveReadOnly = recursiveReadOnly;
            return this;
        }
        public VolumeMountStatus build() {
            final var o = new VolumeMountStatus();
            o.mountPath = mountPath;
            o.name = name;
            o.readOnly = readOnly;
            o.recursiveReadOnly = recursiveReadOnly;
            return o;
        }
    }
}
