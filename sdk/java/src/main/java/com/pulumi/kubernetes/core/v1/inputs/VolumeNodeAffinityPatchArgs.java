// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.core.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.kubernetes.core.v1.inputs.NodeSelectorPatchArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * VolumeNodeAffinity defines constraints that limit what nodes this volume can be accessed from.
 * 
 */
public final class VolumeNodeAffinityPatchArgs extends com.pulumi.resources.ResourceArgs {

    public static final VolumeNodeAffinityPatchArgs Empty = new VolumeNodeAffinityPatchArgs();

    /**
     * required specifies hard node constraints that must be met.
     * 
     */
    @Import(name="required")
    private @Nullable Output<NodeSelectorPatchArgs> required;

    /**
     * @return required specifies hard node constraints that must be met.
     * 
     */
    public Optional<Output<NodeSelectorPatchArgs>> required() {
        return Optional.ofNullable(this.required);
    }

    private VolumeNodeAffinityPatchArgs() {}

    private VolumeNodeAffinityPatchArgs(VolumeNodeAffinityPatchArgs $) {
        this.required = $.required;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VolumeNodeAffinityPatchArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VolumeNodeAffinityPatchArgs $;

        public Builder() {
            $ = new VolumeNodeAffinityPatchArgs();
        }

        public Builder(VolumeNodeAffinityPatchArgs defaults) {
            $ = new VolumeNodeAffinityPatchArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param required required specifies hard node constraints that must be met.
         * 
         * @return builder
         * 
         */
        public Builder required(@Nullable Output<NodeSelectorPatchArgs> required) {
            $.required = required;
            return this;
        }

        /**
         * @param required required specifies hard node constraints that must be met.
         * 
         * @return builder
         * 
         */
        public Builder required(NodeSelectorPatchArgs required) {
            return required(Output.of(required));
        }

        public VolumeNodeAffinityPatchArgs build() {
            return $;
        }
    }

}
