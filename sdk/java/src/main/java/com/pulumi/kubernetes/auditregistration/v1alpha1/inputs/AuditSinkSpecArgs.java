// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.auditregistration.v1alpha1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.kubernetes.auditregistration.v1alpha1.inputs.PolicyArgs;
import com.pulumi.kubernetes.auditregistration.v1alpha1.inputs.WebhookArgs;
import java.util.Objects;


/**
 * AuditSinkSpec holds the spec for the audit sink
 * 
 */
public final class AuditSinkSpecArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuditSinkSpecArgs Empty = new AuditSinkSpecArgs();

    /**
     * Policy defines the policy for selecting which events should be sent to the webhook required
     * 
     */
    @Import(name="policy", required=true)
    private Output<PolicyArgs> policy;

    /**
     * @return Policy defines the policy for selecting which events should be sent to the webhook required
     * 
     */
    public Output<PolicyArgs> policy() {
        return this.policy;
    }

    /**
     * Webhook to send events required
     * 
     */
    @Import(name="webhook", required=true)
    private Output<WebhookArgs> webhook;

    /**
     * @return Webhook to send events required
     * 
     */
    public Output<WebhookArgs> webhook() {
        return this.webhook;
    }

    private AuditSinkSpecArgs() {}

    private AuditSinkSpecArgs(AuditSinkSpecArgs $) {
        this.policy = $.policy;
        this.webhook = $.webhook;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuditSinkSpecArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuditSinkSpecArgs $;

        public Builder() {
            $ = new AuditSinkSpecArgs();
        }

        public Builder(AuditSinkSpecArgs defaults) {
            $ = new AuditSinkSpecArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param policy Policy defines the policy for selecting which events should be sent to the webhook required
         * 
         * @return builder
         * 
         */
        public Builder policy(Output<PolicyArgs> policy) {
            $.policy = policy;
            return this;
        }

        /**
         * @param policy Policy defines the policy for selecting which events should be sent to the webhook required
         * 
         * @return builder
         * 
         */
        public Builder policy(PolicyArgs policy) {
            return policy(Output.of(policy));
        }

        /**
         * @param webhook Webhook to send events required
         * 
         * @return builder
         * 
         */
        public Builder webhook(Output<WebhookArgs> webhook) {
            $.webhook = webhook;
            return this;
        }

        /**
         * @param webhook Webhook to send events required
         * 
         * @return builder
         * 
         */
        public Builder webhook(WebhookArgs webhook) {
            return webhook(Output.of(webhook));
        }

        public AuditSinkSpecArgs build() {
            $.policy = Objects.requireNonNull($.policy, "expected parameter 'policy' to be non-null");
            $.webhook = Objects.requireNonNull($.webhook, "expected parameter 'webhook' to be non-null");
            return $;
        }
    }

}
