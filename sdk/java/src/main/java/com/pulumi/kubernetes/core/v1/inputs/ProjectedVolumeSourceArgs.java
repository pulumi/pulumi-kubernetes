// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.core.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.kubernetes.core.v1.inputs.VolumeProjectionArgs;
import java.lang.Integer;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * Represents a projected volume source
 * 
 */
public final class ProjectedVolumeSourceArgs extends com.pulumi.resources.ResourceArgs {

    public static final ProjectedVolumeSourceArgs Empty = new ProjectedVolumeSourceArgs();

    /**
     * defaultMode are the mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
     * 
     */
    @Import(name="defaultMode")
    private @Nullable Output<Integer> defaultMode;

    /**
     * @return defaultMode are the mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
     * 
     */
    public Optional<Output<Integer>> defaultMode() {
        return Optional.ofNullable(this.defaultMode);
    }

    /**
     * sources is the list of volume projections
     * 
     */
    @Import(name="sources", required=true)
    private Output<List<VolumeProjectionArgs>> sources;

    /**
     * @return sources is the list of volume projections
     * 
     */
    public Output<List<VolumeProjectionArgs>> sources() {
        return this.sources;
    }

    private ProjectedVolumeSourceArgs() {}

    private ProjectedVolumeSourceArgs(ProjectedVolumeSourceArgs $) {
        this.defaultMode = $.defaultMode;
        this.sources = $.sources;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectedVolumeSourceArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectedVolumeSourceArgs $;

        public Builder() {
            $ = new ProjectedVolumeSourceArgs();
        }

        public Builder(ProjectedVolumeSourceArgs defaults) {
            $ = new ProjectedVolumeSourceArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param defaultMode defaultMode are the mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
         * 
         * @return builder
         * 
         */
        public Builder defaultMode(@Nullable Output<Integer> defaultMode) {
            $.defaultMode = defaultMode;
            return this;
        }

        /**
         * @param defaultMode defaultMode are the mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
         * 
         * @return builder
         * 
         */
        public Builder defaultMode(Integer defaultMode) {
            return defaultMode(Output.of(defaultMode));
        }

        /**
         * @param sources sources is the list of volume projections
         * 
         * @return builder
         * 
         */
        public Builder sources(Output<List<VolumeProjectionArgs>> sources) {
            $.sources = sources;
            return this;
        }

        /**
         * @param sources sources is the list of volume projections
         * 
         * @return builder
         * 
         */
        public Builder sources(List<VolumeProjectionArgs> sources) {
            return sources(Output.of(sources));
        }

        /**
         * @param sources sources is the list of volume projections
         * 
         * @return builder
         * 
         */
        public Builder sources(VolumeProjectionArgs... sources) {
            return sources(List.of(sources));
        }

        public ProjectedVolumeSourceArgs build() {
            $.sources = Objects.requireNonNull($.sources, "expected parameter 'sources' to be non-null");
            return $;
        }
    }

}
