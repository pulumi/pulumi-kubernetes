// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.core.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.kubernetes.core.v1.outputs.NodeRuntimeHandlerFeatures;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class NodeRuntimeHandler {
    /**
     * @return Supported features.
     * 
     */
    private @Nullable NodeRuntimeHandlerFeatures features;
    /**
     * @return Runtime handler name. Empty for the default runtime handler.
     * 
     */
    private @Nullable String name;

    private NodeRuntimeHandler() {}
    /**
     * @return Supported features.
     * 
     */
    public Optional<NodeRuntimeHandlerFeatures> features() {
        return Optional.ofNullable(this.features);
    }
    /**
     * @return Runtime handler name. Empty for the default runtime handler.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(NodeRuntimeHandler defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable NodeRuntimeHandlerFeatures features;
        private @Nullable String name;
        public Builder() {}
        public Builder(NodeRuntimeHandler defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.features = defaults.features;
    	      this.name = defaults.name;
        }

        @CustomType.Setter
        public Builder features(@Nullable NodeRuntimeHandlerFeatures features) {
            this.features = features;
            return this;
        }
        @CustomType.Setter
        public Builder name(@Nullable String name) {
            this.name = name;
            return this;
        }
        public NodeRuntimeHandler build() {
            final var o = new NodeRuntimeHandler();
            o.features = features;
            o.name = name;
            return o;
        }
    }
}
