// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.resource.v1alpha2;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.core.internal.Codegen;
import com.pulumi.kubernetes.meta.v1.inputs.ObjectMetaPatchArgs;
import com.pulumi.kubernetes.resource.v1alpha2.inputs.DriverRequestsPatchArgs;
import com.pulumi.kubernetes.resource.v1alpha2.inputs.ResourceClaimParametersReferencePatchArgs;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ResourceClaimParametersPatchArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourceClaimParametersPatchArgs Empty = new ResourceClaimParametersPatchArgs();

    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
     * 
     */
    @Import(name="apiVersion")
    private @Nullable Output<String> apiVersion;

    /**
     * @return APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
     * 
     */
    public Optional<Output<String>> apiVersion() {
        return Optional.ofNullable(this.apiVersion);
    }

    /**
     * DriverRequests describes all resources that are needed for the allocated claim. A single claim may use resources coming from different drivers. For each driver, this array has at most one entry which then may have one or more per-driver requests.
     * 
     * May be empty, in which case the claim can always be allocated.
     * 
     */
    @Import(name="driverRequests")
    private @Nullable Output<List<DriverRequestsPatchArgs>> driverRequests;

    /**
     * @return DriverRequests describes all resources that are needed for the allocated claim. A single claim may use resources coming from different drivers. For each driver, this array has at most one entry which then may have one or more per-driver requests.
     * 
     * May be empty, in which case the claim can always be allocated.
     * 
     */
    public Optional<Output<List<DriverRequestsPatchArgs>>> driverRequests() {
        return Optional.ofNullable(this.driverRequests);
    }

    /**
     * If this object was created from some other resource, then this links back to that resource. This field is used to find the in-tree representation of the claim parameters when the parameter reference of the claim refers to some unknown type.
     * 
     */
    @Import(name="generatedFrom")
    private @Nullable Output<ResourceClaimParametersReferencePatchArgs> generatedFrom;

    /**
     * @return If this object was created from some other resource, then this links back to that resource. This field is used to find the in-tree representation of the claim parameters when the parameter reference of the claim refers to some unknown type.
     * 
     */
    public Optional<Output<ResourceClaimParametersReferencePatchArgs>> generatedFrom() {
        return Optional.ofNullable(this.generatedFrom);
    }

    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * 
     */
    @Import(name="kind")
    private @Nullable Output<String> kind;

    /**
     * @return Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     * 
     */
    public Optional<Output<String>> kind() {
        return Optional.ofNullable(this.kind);
    }

    /**
     * Standard object metadata
     * 
     */
    @Import(name="metadata")
    private @Nullable Output<ObjectMetaPatchArgs> metadata;

    /**
     * @return Standard object metadata
     * 
     */
    public Optional<Output<ObjectMetaPatchArgs>> metadata() {
        return Optional.ofNullable(this.metadata);
    }

    /**
     * Shareable indicates whether the allocated claim is meant to be shareable by multiple consumers at the same time.
     * 
     */
    @Import(name="shareable")
    private @Nullable Output<Boolean> shareable;

    /**
     * @return Shareable indicates whether the allocated claim is meant to be shareable by multiple consumers at the same time.
     * 
     */
    public Optional<Output<Boolean>> shareable() {
        return Optional.ofNullable(this.shareable);
    }

    private ResourceClaimParametersPatchArgs() {}

    private ResourceClaimParametersPatchArgs(ResourceClaimParametersPatchArgs $) {
        this.apiVersion = $.apiVersion;
        this.driverRequests = $.driverRequests;
        this.generatedFrom = $.generatedFrom;
        this.kind = $.kind;
        this.metadata = $.metadata;
        this.shareable = $.shareable;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceClaimParametersPatchArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceClaimParametersPatchArgs $;

        public Builder() {
            $ = new ResourceClaimParametersPatchArgs();
        }

        public Builder(ResourceClaimParametersPatchArgs defaults) {
            $ = new ResourceClaimParametersPatchArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param apiVersion APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
         * 
         * @return builder
         * 
         */
        public Builder apiVersion(@Nullable Output<String> apiVersion) {
            $.apiVersion = apiVersion;
            return this;
        }

        /**
         * @param apiVersion APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
         * 
         * @return builder
         * 
         */
        public Builder apiVersion(String apiVersion) {
            return apiVersion(Output.of(apiVersion));
        }

        /**
         * @param driverRequests DriverRequests describes all resources that are needed for the allocated claim. A single claim may use resources coming from different drivers. For each driver, this array has at most one entry which then may have one or more per-driver requests.
         * 
         * May be empty, in which case the claim can always be allocated.
         * 
         * @return builder
         * 
         */
        public Builder driverRequests(@Nullable Output<List<DriverRequestsPatchArgs>> driverRequests) {
            $.driverRequests = driverRequests;
            return this;
        }

        /**
         * @param driverRequests DriverRequests describes all resources that are needed for the allocated claim. A single claim may use resources coming from different drivers. For each driver, this array has at most one entry which then may have one or more per-driver requests.
         * 
         * May be empty, in which case the claim can always be allocated.
         * 
         * @return builder
         * 
         */
        public Builder driverRequests(List<DriverRequestsPatchArgs> driverRequests) {
            return driverRequests(Output.of(driverRequests));
        }

        /**
         * @param driverRequests DriverRequests describes all resources that are needed for the allocated claim. A single claim may use resources coming from different drivers. For each driver, this array has at most one entry which then may have one or more per-driver requests.
         * 
         * May be empty, in which case the claim can always be allocated.
         * 
         * @return builder
         * 
         */
        public Builder driverRequests(DriverRequestsPatchArgs... driverRequests) {
            return driverRequests(List.of(driverRequests));
        }

        /**
         * @param generatedFrom If this object was created from some other resource, then this links back to that resource. This field is used to find the in-tree representation of the claim parameters when the parameter reference of the claim refers to some unknown type.
         * 
         * @return builder
         * 
         */
        public Builder generatedFrom(@Nullable Output<ResourceClaimParametersReferencePatchArgs> generatedFrom) {
            $.generatedFrom = generatedFrom;
            return this;
        }

        /**
         * @param generatedFrom If this object was created from some other resource, then this links back to that resource. This field is used to find the in-tree representation of the claim parameters when the parameter reference of the claim refers to some unknown type.
         * 
         * @return builder
         * 
         */
        public Builder generatedFrom(ResourceClaimParametersReferencePatchArgs generatedFrom) {
            return generatedFrom(Output.of(generatedFrom));
        }

        /**
         * @param kind Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
         * 
         * @return builder
         * 
         */
        public Builder kind(@Nullable Output<String> kind) {
            $.kind = kind;
            return this;
        }

        /**
         * @param kind Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
         * 
         * @return builder
         * 
         */
        public Builder kind(String kind) {
            return kind(Output.of(kind));
        }

        /**
         * @param metadata Standard object metadata
         * 
         * @return builder
         * 
         */
        public Builder metadata(@Nullable Output<ObjectMetaPatchArgs> metadata) {
            $.metadata = metadata;
            return this;
        }

        /**
         * @param metadata Standard object metadata
         * 
         * @return builder
         * 
         */
        public Builder metadata(ObjectMetaPatchArgs metadata) {
            return metadata(Output.of(metadata));
        }

        /**
         * @param shareable Shareable indicates whether the allocated claim is meant to be shareable by multiple consumers at the same time.
         * 
         * @return builder
         * 
         */
        public Builder shareable(@Nullable Output<Boolean> shareable) {
            $.shareable = shareable;
            return this;
        }

        /**
         * @param shareable Shareable indicates whether the allocated claim is meant to be shareable by multiple consumers at the same time.
         * 
         * @return builder
         * 
         */
        public Builder shareable(Boolean shareable) {
            return shareable(Output.of(shareable));
        }

        public ResourceClaimParametersPatchArgs build() {
            $.apiVersion = Codegen.stringProp("apiVersion").output().arg($.apiVersion).getNullable();
            $.kind = Codegen.stringProp("kind").output().arg($.kind).getNullable();
            return $;
        }
    }

}
