// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.storage.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.kubernetes.storage.v1.outputs.VolumeErrorPatch;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class VolumeAttachmentStatusPatch {
    /**
     * @return The last error encountered during attach operation, if any. This field must only be set by the entity completing the attach operation, i.e. the external-attacher.
     * 
     */
    private @Nullable VolumeErrorPatch attachError;
    /**
     * @return Indicates the volume is successfully attached. This field must only be set by the entity completing the attach operation, i.e. the external-attacher.
     * 
     */
    private @Nullable Boolean attached;
    /**
     * @return Upon successful attach, this field is populated with any information returned by the attach operation that must be passed into subsequent WaitForAttach or Mount calls. This field must only be set by the entity completing the attach operation, i.e. the external-attacher.
     * 
     */
    private @Nullable Map<String,String> attachmentMetadata;
    /**
     * @return The last error encountered during detach operation, if any. This field must only be set by the entity completing the detach operation, i.e. the external-attacher.
     * 
     */
    private @Nullable VolumeErrorPatch detachError;

    private VolumeAttachmentStatusPatch() {}
    /**
     * @return The last error encountered during attach operation, if any. This field must only be set by the entity completing the attach operation, i.e. the external-attacher.
     * 
     */
    public Optional<VolumeErrorPatch> attachError() {
        return Optional.ofNullable(this.attachError);
    }
    /**
     * @return Indicates the volume is successfully attached. This field must only be set by the entity completing the attach operation, i.e. the external-attacher.
     * 
     */
    public Optional<Boolean> attached() {
        return Optional.ofNullable(this.attached);
    }
    /**
     * @return Upon successful attach, this field is populated with any information returned by the attach operation that must be passed into subsequent WaitForAttach or Mount calls. This field must only be set by the entity completing the attach operation, i.e. the external-attacher.
     * 
     */
    public Map<String,String> attachmentMetadata() {
        return this.attachmentMetadata == null ? Map.of() : this.attachmentMetadata;
    }
    /**
     * @return The last error encountered during detach operation, if any. This field must only be set by the entity completing the detach operation, i.e. the external-attacher.
     * 
     */
    public Optional<VolumeErrorPatch> detachError() {
        return Optional.ofNullable(this.detachError);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(VolumeAttachmentStatusPatch defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable VolumeErrorPatch attachError;
        private @Nullable Boolean attached;
        private @Nullable Map<String,String> attachmentMetadata;
        private @Nullable VolumeErrorPatch detachError;
        public Builder() {}
        public Builder(VolumeAttachmentStatusPatch defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.attachError = defaults.attachError;
    	      this.attached = defaults.attached;
    	      this.attachmentMetadata = defaults.attachmentMetadata;
    	      this.detachError = defaults.detachError;
        }

        @CustomType.Setter
        public Builder attachError(@Nullable VolumeErrorPatch attachError) {
            this.attachError = attachError;
            return this;
        }
        @CustomType.Setter
        public Builder attached(@Nullable Boolean attached) {
            this.attached = attached;
            return this;
        }
        @CustomType.Setter
        public Builder attachmentMetadata(@Nullable Map<String,String> attachmentMetadata) {
            this.attachmentMetadata = attachmentMetadata;
            return this;
        }
        @CustomType.Setter
        public Builder detachError(@Nullable VolumeErrorPatch detachError) {
            this.detachError = detachError;
            return this;
        }
        public VolumeAttachmentStatusPatch build() {
            final var o = new VolumeAttachmentStatusPatch();
            o.attachError = attachError;
            o.attached = attached;
            o.attachmentMetadata = attachmentMetadata;
            o.detachError = detachError;
            return o;
        }
    }
}
