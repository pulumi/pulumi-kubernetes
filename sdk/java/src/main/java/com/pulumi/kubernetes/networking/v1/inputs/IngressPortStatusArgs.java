// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.networking.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * IngressPortStatus represents the error condition of a service port
 * 
 */
public final class IngressPortStatusArgs extends com.pulumi.resources.ResourceArgs {

    public static final IngressPortStatusArgs Empty = new IngressPortStatusArgs();

    /**
     * error is to record the problem with the service port The format of the error shall comply with the following rules: - built-in error values shall be specified in this file and those shall use
     *   CamelCase names
     * - cloud provider specific error values must have names that comply with the
     *   format foo.example.com/CamelCase.
     * 
     */
    @Import(name="error")
    private @Nullable Output<String> error;

    /**
     * @return error is to record the problem with the service port The format of the error shall comply with the following rules: - built-in error values shall be specified in this file and those shall use
     *   CamelCase names
     * - cloud provider specific error values must have names that comply with the
     *   format foo.example.com/CamelCase.
     * 
     */
    public Optional<Output<String>> error() {
        return Optional.ofNullable(this.error);
    }

    /**
     * port is the port number of the ingress port.
     * 
     */
    @Import(name="port", required=true)
    private Output<Integer> port;

    /**
     * @return port is the port number of the ingress port.
     * 
     */
    public Output<Integer> port() {
        return this.port;
    }

    /**
     * protocol is the protocol of the ingress port. The supported values are: &#34;TCP&#34;, &#34;UDP&#34;, &#34;SCTP&#34;
     * 
     */
    @Import(name="protocol", required=true)
    private Output<String> protocol;

    /**
     * @return protocol is the protocol of the ingress port. The supported values are: &#34;TCP&#34;, &#34;UDP&#34;, &#34;SCTP&#34;
     * 
     */
    public Output<String> protocol() {
        return this.protocol;
    }

    private IngressPortStatusArgs() {}

    private IngressPortStatusArgs(IngressPortStatusArgs $) {
        this.error = $.error;
        this.port = $.port;
        this.protocol = $.protocol;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(IngressPortStatusArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private IngressPortStatusArgs $;

        public Builder() {
            $ = new IngressPortStatusArgs();
        }

        public Builder(IngressPortStatusArgs defaults) {
            $ = new IngressPortStatusArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param error error is to record the problem with the service port The format of the error shall comply with the following rules: - built-in error values shall be specified in this file and those shall use
         *   CamelCase names
         * - cloud provider specific error values must have names that comply with the
         *   format foo.example.com/CamelCase.
         * 
         * @return builder
         * 
         */
        public Builder error(@Nullable Output<String> error) {
            $.error = error;
            return this;
        }

        /**
         * @param error error is to record the problem with the service port The format of the error shall comply with the following rules: - built-in error values shall be specified in this file and those shall use
         *   CamelCase names
         * - cloud provider specific error values must have names that comply with the
         *   format foo.example.com/CamelCase.
         * 
         * @return builder
         * 
         */
        public Builder error(String error) {
            return error(Output.of(error));
        }

        /**
         * @param port port is the port number of the ingress port.
         * 
         * @return builder
         * 
         */
        public Builder port(Output<Integer> port) {
            $.port = port;
            return this;
        }

        /**
         * @param port port is the port number of the ingress port.
         * 
         * @return builder
         * 
         */
        public Builder port(Integer port) {
            return port(Output.of(port));
        }

        /**
         * @param protocol protocol is the protocol of the ingress port. The supported values are: &#34;TCP&#34;, &#34;UDP&#34;, &#34;SCTP&#34;
         * 
         * @return builder
         * 
         */
        public Builder protocol(Output<String> protocol) {
            $.protocol = protocol;
            return this;
        }

        /**
         * @param protocol protocol is the protocol of the ingress port. The supported values are: &#34;TCP&#34;, &#34;UDP&#34;, &#34;SCTP&#34;
         * 
         * @return builder
         * 
         */
        public Builder protocol(String protocol) {
            return protocol(Output.of(protocol));
        }

        public IngressPortStatusArgs build() {
            $.port = Objects.requireNonNull($.port, "expected parameter 'port' to be non-null");
            $.protocol = Objects.requireNonNull($.protocol, "expected parameter 'protocol' to be non-null");
            return $;
        }
    }

}
