// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.storagemigration.v1alpha1.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.kubernetes.storagemigration.v1alpha1.outputs.MigrationCondition;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class StorageVersionMigrationStatus {
    /**
     * @return The latest available observations of the migration&#39;s current state.
     * 
     */
    private @Nullable List<MigrationCondition> conditions;
    /**
     * @return ResourceVersion to compare with the GC cache for performing the migration. This is the current resource version of given group, version and resource when kube-controller-manager first observes this StorageVersionMigration resource.
     * 
     */
    private @Nullable String resourceVersion;

    private StorageVersionMigrationStatus() {}
    /**
     * @return The latest available observations of the migration&#39;s current state.
     * 
     */
    public List<MigrationCondition> conditions() {
        return this.conditions == null ? List.of() : this.conditions;
    }
    /**
     * @return ResourceVersion to compare with the GC cache for performing the migration. This is the current resource version of given group, version and resource when kube-controller-manager first observes this StorageVersionMigration resource.
     * 
     */
    public Optional<String> resourceVersion() {
        return Optional.ofNullable(this.resourceVersion);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(StorageVersionMigrationStatus defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<MigrationCondition> conditions;
        private @Nullable String resourceVersion;
        public Builder() {}
        public Builder(StorageVersionMigrationStatus defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.conditions = defaults.conditions;
    	      this.resourceVersion = defaults.resourceVersion;
        }

        @CustomType.Setter
        public Builder conditions(@Nullable List<MigrationCondition> conditions) {
            this.conditions = conditions;
            return this;
        }
        public Builder conditions(MigrationCondition... conditions) {
            return conditions(List.of(conditions));
        }
        @CustomType.Setter
        public Builder resourceVersion(@Nullable String resourceVersion) {
            this.resourceVersion = resourceVersion;
            return this;
        }
        public StorageVersionMigrationStatus build() {
            final var o = new StorageVersionMigrationStatus();
            o.conditions = conditions;
            o.resourceVersion = resourceVersion;
            return o;
        }
    }
}
