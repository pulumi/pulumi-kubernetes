// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.resource.v1beta1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.kubernetes.resource.v1beta1.inputs.CounterArgs;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * DeviceCounterConsumption defines a set of counters that a device will consume from a CounterSet.
 * 
 */
public final class DeviceCounterConsumptionPatchArgs extends com.pulumi.resources.ResourceArgs {

    public static final DeviceCounterConsumptionPatchArgs Empty = new DeviceCounterConsumptionPatchArgs();

    /**
     * CounterSet is the name of the set from which the counters defined will be consumed.
     * 
     */
    @Import(name="counterSet")
    private @Nullable Output<String> counterSet;

    /**
     * @return CounterSet is the name of the set from which the counters defined will be consumed.
     * 
     */
    public Optional<Output<String>> counterSet() {
        return Optional.ofNullable(this.counterSet);
    }

    /**
     * Counters defines the counters that will be consumed by the device.
     * 
     * The maximum number counters in a device is 32. In addition, the maximum number of all counters in all devices is 1024 (for example, 64 devices with 16 counters each).
     * 
     */
    @Import(name="counters")
    private @Nullable Output<Map<String,CounterArgs>> counters;

    /**
     * @return Counters defines the counters that will be consumed by the device.
     * 
     * The maximum number counters in a device is 32. In addition, the maximum number of all counters in all devices is 1024 (for example, 64 devices with 16 counters each).
     * 
     */
    public Optional<Output<Map<String,CounterArgs>>> counters() {
        return Optional.ofNullable(this.counters);
    }

    private DeviceCounterConsumptionPatchArgs() {}

    private DeviceCounterConsumptionPatchArgs(DeviceCounterConsumptionPatchArgs $) {
        this.counterSet = $.counterSet;
        this.counters = $.counters;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(DeviceCounterConsumptionPatchArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private DeviceCounterConsumptionPatchArgs $;

        public Builder() {
            $ = new DeviceCounterConsumptionPatchArgs();
        }

        public Builder(DeviceCounterConsumptionPatchArgs defaults) {
            $ = new DeviceCounterConsumptionPatchArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param counterSet CounterSet is the name of the set from which the counters defined will be consumed.
         * 
         * @return builder
         * 
         */
        public Builder counterSet(@Nullable Output<String> counterSet) {
            $.counterSet = counterSet;
            return this;
        }

        /**
         * @param counterSet CounterSet is the name of the set from which the counters defined will be consumed.
         * 
         * @return builder
         * 
         */
        public Builder counterSet(String counterSet) {
            return counterSet(Output.of(counterSet));
        }

        /**
         * @param counters Counters defines the counters that will be consumed by the device.
         * 
         * The maximum number counters in a device is 32. In addition, the maximum number of all counters in all devices is 1024 (for example, 64 devices with 16 counters each).
         * 
         * @return builder
         * 
         */
        public Builder counters(@Nullable Output<Map<String,CounterArgs>> counters) {
            $.counters = counters;
            return this;
        }

        /**
         * @param counters Counters defines the counters that will be consumed by the device.
         * 
         * The maximum number counters in a device is 32. In addition, the maximum number of all counters in all devices is 1024 (for example, 64 devices with 16 counters each).
         * 
         * @return builder
         * 
         */
        public Builder counters(Map<String,CounterArgs> counters) {
            return counters(Output.of(counters));
        }

        public DeviceCounterConsumptionPatchArgs build() {
            return $;
        }
    }

}
