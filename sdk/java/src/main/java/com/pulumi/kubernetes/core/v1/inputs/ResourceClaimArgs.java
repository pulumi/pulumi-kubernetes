// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.core.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;


/**
 * ResourceClaim references one entry in PodSpec.ResourceClaims.
 * 
 */
public final class ResourceClaimArgs extends com.pulumi.resources.ResourceArgs {

    public static final ResourceClaimArgs Empty = new ResourceClaimArgs();

    /**
     * Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    private ResourceClaimArgs() {}

    private ResourceClaimArgs(ResourceClaimArgs $) {
        this.name = $.name;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ResourceClaimArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ResourceClaimArgs $;

        public Builder() {
            $ = new ResourceClaimArgs();
        }

        public Builder(ResourceClaimArgs defaults) {
            $ = new ResourceClaimArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name Name must match the name of one entry in pod.spec.resourceClaims of the Pod where this field is used. It makes that resource available inside a container.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        public ResourceClaimArgs build() {
            $.name = Objects.requireNonNull($.name, "expected parameter 'name' to be non-null");
            return $;
        }
    }

}
