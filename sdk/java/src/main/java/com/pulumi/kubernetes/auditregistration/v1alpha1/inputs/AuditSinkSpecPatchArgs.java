// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.auditregistration.v1alpha1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.kubernetes.auditregistration.v1alpha1.inputs.PolicyPatchArgs;
import com.pulumi.kubernetes.auditregistration.v1alpha1.inputs.WebhookPatchArgs;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * AuditSinkSpec holds the spec for the audit sink
 * 
 */
public final class AuditSinkSpecPatchArgs extends com.pulumi.resources.ResourceArgs {

    public static final AuditSinkSpecPatchArgs Empty = new AuditSinkSpecPatchArgs();

    /**
     * Policy defines the policy for selecting which events should be sent to the webhook required
     * 
     */
    @Import(name="policy")
    private @Nullable Output<PolicyPatchArgs> policy;

    /**
     * @return Policy defines the policy for selecting which events should be sent to the webhook required
     * 
     */
    public Optional<Output<PolicyPatchArgs>> policy() {
        return Optional.ofNullable(this.policy);
    }

    /**
     * Webhook to send events required
     * 
     */
    @Import(name="webhook")
    private @Nullable Output<WebhookPatchArgs> webhook;

    /**
     * @return Webhook to send events required
     * 
     */
    public Optional<Output<WebhookPatchArgs>> webhook() {
        return Optional.ofNullable(this.webhook);
    }

    private AuditSinkSpecPatchArgs() {}

    private AuditSinkSpecPatchArgs(AuditSinkSpecPatchArgs $) {
        this.policy = $.policy;
        this.webhook = $.webhook;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(AuditSinkSpecPatchArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private AuditSinkSpecPatchArgs $;

        public Builder() {
            $ = new AuditSinkSpecPatchArgs();
        }

        public Builder(AuditSinkSpecPatchArgs defaults) {
            $ = new AuditSinkSpecPatchArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param policy Policy defines the policy for selecting which events should be sent to the webhook required
         * 
         * @return builder
         * 
         */
        public Builder policy(@Nullable Output<PolicyPatchArgs> policy) {
            $.policy = policy;
            return this;
        }

        /**
         * @param policy Policy defines the policy for selecting which events should be sent to the webhook required
         * 
         * @return builder
         * 
         */
        public Builder policy(PolicyPatchArgs policy) {
            return policy(Output.of(policy));
        }

        /**
         * @param webhook Webhook to send events required
         * 
         * @return builder
         * 
         */
        public Builder webhook(@Nullable Output<WebhookPatchArgs> webhook) {
            $.webhook = webhook;
            return this;
        }

        /**
         * @param webhook Webhook to send events required
         * 
         * @return builder
         * 
         */
        public Builder webhook(WebhookPatchArgs webhook) {
            return webhook(Output.of(webhook));
        }

        public AuditSinkSpecPatchArgs build() {
            return $;
        }
    }

}
