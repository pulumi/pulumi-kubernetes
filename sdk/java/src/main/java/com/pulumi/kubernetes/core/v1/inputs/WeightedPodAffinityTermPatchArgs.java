// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.core.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.kubernetes.core.v1.inputs.PodAffinityTermPatchArgs;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)
 * 
 */
public final class WeightedPodAffinityTermPatchArgs extends com.pulumi.resources.ResourceArgs {

    public static final WeightedPodAffinityTermPatchArgs Empty = new WeightedPodAffinityTermPatchArgs();

    /**
     * Required. A pod affinity term, associated with the corresponding weight.
     * 
     */
    @Import(name="podAffinityTerm")
    private @Nullable Output<PodAffinityTermPatchArgs> podAffinityTerm;

    /**
     * @return Required. A pod affinity term, associated with the corresponding weight.
     * 
     */
    public Optional<Output<PodAffinityTermPatchArgs>> podAffinityTerm() {
        return Optional.ofNullable(this.podAffinityTerm);
    }

    /**
     * weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
     * 
     */
    @Import(name="weight")
    private @Nullable Output<Integer> weight;

    /**
     * @return weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
     * 
     */
    public Optional<Output<Integer>> weight() {
        return Optional.ofNullable(this.weight);
    }

    private WeightedPodAffinityTermPatchArgs() {}

    private WeightedPodAffinityTermPatchArgs(WeightedPodAffinityTermPatchArgs $) {
        this.podAffinityTerm = $.podAffinityTerm;
        this.weight = $.weight;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WeightedPodAffinityTermPatchArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WeightedPodAffinityTermPatchArgs $;

        public Builder() {
            $ = new WeightedPodAffinityTermPatchArgs();
        }

        public Builder(WeightedPodAffinityTermPatchArgs defaults) {
            $ = new WeightedPodAffinityTermPatchArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param podAffinityTerm Required. A pod affinity term, associated with the corresponding weight.
         * 
         * @return builder
         * 
         */
        public Builder podAffinityTerm(@Nullable Output<PodAffinityTermPatchArgs> podAffinityTerm) {
            $.podAffinityTerm = podAffinityTerm;
            return this;
        }

        /**
         * @param podAffinityTerm Required. A pod affinity term, associated with the corresponding weight.
         * 
         * @return builder
         * 
         */
        public Builder podAffinityTerm(PodAffinityTermPatchArgs podAffinityTerm) {
            return podAffinityTerm(Output.of(podAffinityTerm));
        }

        /**
         * @param weight weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
         * 
         * @return builder
         * 
         */
        public Builder weight(@Nullable Output<Integer> weight) {
            $.weight = weight;
            return this;
        }

        /**
         * @param weight weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
         * 
         * @return builder
         * 
         */
        public Builder weight(Integer weight) {
            return weight(Output.of(weight));
        }

        public WeightedPodAffinityTermPatchArgs build() {
            return $;
        }
    }

}
