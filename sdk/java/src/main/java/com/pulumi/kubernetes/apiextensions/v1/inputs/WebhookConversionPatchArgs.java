// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.apiextensions.v1.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.kubernetes.apiextensions.v1.inputs.WebhookClientConfigPatchArgs;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


/**
 * WebhookConversion describes how to call a conversion webhook
 * 
 */
public final class WebhookConversionPatchArgs extends com.pulumi.resources.ResourceArgs {

    public static final WebhookConversionPatchArgs Empty = new WebhookConversionPatchArgs();

    /**
     * clientConfig is the instructions for how to call the webhook if strategy is `Webhook`.
     * 
     */
    @Import(name="clientConfig")
    private @Nullable Output<WebhookClientConfigPatchArgs> clientConfig;

    /**
     * @return clientConfig is the instructions for how to call the webhook if strategy is `Webhook`.
     * 
     */
    public Optional<Output<WebhookClientConfigPatchArgs>> clientConfig() {
        return Optional.ofNullable(this.clientConfig);
    }

    /**
     * conversionReviewVersions is an ordered list of preferred `ConversionReview` versions the Webhook expects. The API server will use the first version in the list which it supports. If none of the versions specified in this list are supported by API server, conversion will fail for the custom resource. If a persisted Webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail.
     * 
     */
    @Import(name="conversionReviewVersions")
    private @Nullable Output<List<String>> conversionReviewVersions;

    /**
     * @return conversionReviewVersions is an ordered list of preferred `ConversionReview` versions the Webhook expects. The API server will use the first version in the list which it supports. If none of the versions specified in this list are supported by API server, conversion will fail for the custom resource. If a persisted Webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail.
     * 
     */
    public Optional<Output<List<String>>> conversionReviewVersions() {
        return Optional.ofNullable(this.conversionReviewVersions);
    }

    private WebhookConversionPatchArgs() {}

    private WebhookConversionPatchArgs(WebhookConversionPatchArgs $) {
        this.clientConfig = $.clientConfig;
        this.conversionReviewVersions = $.conversionReviewVersions;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(WebhookConversionPatchArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private WebhookConversionPatchArgs $;

        public Builder() {
            $ = new WebhookConversionPatchArgs();
        }

        public Builder(WebhookConversionPatchArgs defaults) {
            $ = new WebhookConversionPatchArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param clientConfig clientConfig is the instructions for how to call the webhook if strategy is `Webhook`.
         * 
         * @return builder
         * 
         */
        public Builder clientConfig(@Nullable Output<WebhookClientConfigPatchArgs> clientConfig) {
            $.clientConfig = clientConfig;
            return this;
        }

        /**
         * @param clientConfig clientConfig is the instructions for how to call the webhook if strategy is `Webhook`.
         * 
         * @return builder
         * 
         */
        public Builder clientConfig(WebhookClientConfigPatchArgs clientConfig) {
            return clientConfig(Output.of(clientConfig));
        }

        /**
         * @param conversionReviewVersions conversionReviewVersions is an ordered list of preferred `ConversionReview` versions the Webhook expects. The API server will use the first version in the list which it supports. If none of the versions specified in this list are supported by API server, conversion will fail for the custom resource. If a persisted Webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail.
         * 
         * @return builder
         * 
         */
        public Builder conversionReviewVersions(@Nullable Output<List<String>> conversionReviewVersions) {
            $.conversionReviewVersions = conversionReviewVersions;
            return this;
        }

        /**
         * @param conversionReviewVersions conversionReviewVersions is an ordered list of preferred `ConversionReview` versions the Webhook expects. The API server will use the first version in the list which it supports. If none of the versions specified in this list are supported by API server, conversion will fail for the custom resource. If a persisted Webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail.
         * 
         * @return builder
         * 
         */
        public Builder conversionReviewVersions(List<String> conversionReviewVersions) {
            return conversionReviewVersions(Output.of(conversionReviewVersions));
        }

        /**
         * @param conversionReviewVersions conversionReviewVersions is an ordered list of preferred `ConversionReview` versions the Webhook expects. The API server will use the first version in the list which it supports. If none of the versions specified in this list are supported by API server, conversion will fail for the custom resource. If a persisted Webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail.
         * 
         * @return builder
         * 
         */
        public Builder conversionReviewVersions(String... conversionReviewVersions) {
            return conversionReviewVersions(List.of(conversionReviewVersions));
        }

        public WebhookConversionPatchArgs build() {
            return $;
        }
    }

}
