// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.resource.v1beta2.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.kubernetes.resource.v1beta2.outputs.DeviceClassConfigurationPatch;
import com.pulumi.kubernetes.resource.v1beta2.outputs.DeviceSelectorPatch;
import java.util.List;
import java.util.Objects;
import javax.annotation.Nullable;

@CustomType
public final class DeviceClassSpecPatch {
    /**
     * @return Config defines configuration parameters that apply to each device that is claimed via this class. Some classses may potentially be satisfied by multiple drivers, so each instance of a vendor configuration applies to exactly one driver.
     * 
     * They are passed to the driver, but are not considered while allocating the claim.
     * 
     */
    private @Nullable List<DeviceClassConfigurationPatch> config;
    /**
     * @return Each selector must be satisfied by a device which is claimed via this class.
     * 
     */
    private @Nullable List<DeviceSelectorPatch> selectors;

    private DeviceClassSpecPatch() {}
    /**
     * @return Config defines configuration parameters that apply to each device that is claimed via this class. Some classses may potentially be satisfied by multiple drivers, so each instance of a vendor configuration applies to exactly one driver.
     * 
     * They are passed to the driver, but are not considered while allocating the claim.
     * 
     */
    public List<DeviceClassConfigurationPatch> config() {
        return this.config == null ? List.of() : this.config;
    }
    /**
     * @return Each selector must be satisfied by a device which is claimed via this class.
     * 
     */
    public List<DeviceSelectorPatch> selectors() {
        return this.selectors == null ? List.of() : this.selectors;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(DeviceClassSpecPatch defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<DeviceClassConfigurationPatch> config;
        private @Nullable List<DeviceSelectorPatch> selectors;
        public Builder() {}
        public Builder(DeviceClassSpecPatch defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.config = defaults.config;
    	      this.selectors = defaults.selectors;
        }

        @CustomType.Setter
        public Builder config(@Nullable List<DeviceClassConfigurationPatch> config) {

            this.config = config;
            return this;
        }
        public Builder config(DeviceClassConfigurationPatch... config) {
            return config(List.of(config));
        }
        @CustomType.Setter
        public Builder selectors(@Nullable List<DeviceSelectorPatch> selectors) {

            this.selectors = selectors;
            return this;
        }
        public Builder selectors(DeviceSelectorPatch... selectors) {
            return selectors(List.of(selectors));
        }
        public DeviceClassSpecPatch build() {
            final var _resultValue = new DeviceClassSpecPatch();
            _resultValue.config = config;
            _resultValue.selectors = selectors;
            return _resultValue;
        }
    }
}
