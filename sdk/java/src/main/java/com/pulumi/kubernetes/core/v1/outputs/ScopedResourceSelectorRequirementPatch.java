// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.kubernetes.core.v1.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ScopedResourceSelectorRequirementPatch {
    /**
     * @return Represents a scope&#39;s relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist.
     * 
     */
    private @Nullable String operator;
    /**
     * @return The name of the scope that the selector applies to.
     * 
     */
    private @Nullable String scopeName;
    /**
     * @return An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
     * 
     */
    private @Nullable List<String> values;

    private ScopedResourceSelectorRequirementPatch() {}
    /**
     * @return Represents a scope&#39;s relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist.
     * 
     */
    public Optional<String> operator() {
        return Optional.ofNullable(this.operator);
    }
    /**
     * @return The name of the scope that the selector applies to.
     * 
     */
    public Optional<String> scopeName() {
        return Optional.ofNullable(this.scopeName);
    }
    /**
     * @return An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
     * 
     */
    public List<String> values() {
        return this.values == null ? List.of() : this.values;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ScopedResourceSelectorRequirementPatch defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String operator;
        private @Nullable String scopeName;
        private @Nullable List<String> values;
        public Builder() {}
        public Builder(ScopedResourceSelectorRequirementPatch defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.operator = defaults.operator;
    	      this.scopeName = defaults.scopeName;
    	      this.values = defaults.values;
        }

        @CustomType.Setter
        public Builder operator(@Nullable String operator) {
            this.operator = operator;
            return this;
        }
        @CustomType.Setter
        public Builder scopeName(@Nullable String scopeName) {
            this.scopeName = scopeName;
            return this;
        }
        @CustomType.Setter
        public Builder values(@Nullable List<String> values) {
            this.values = values;
            return this;
        }
        public Builder values(String... values) {
            return values(List.of(values));
        }
        public ScopedResourceSelectorRequirementPatch build() {
            final var o = new ScopedResourceSelectorRequirementPatch();
            o.operator = operator;
            o.scopeName = scopeName;
            o.values = values;
            return o;
        }
    }
}
