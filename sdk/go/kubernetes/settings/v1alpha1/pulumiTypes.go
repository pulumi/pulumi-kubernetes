// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

// nolint: lll
package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/go/pulumi"
)

// PodPreset is a policy resource that defines additional runtime requirements for a Pod.
type PodPreset struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	Spec *PodPresetSpec `pulumi:"spec"`
}

type PodPresetInput interface {
	pulumi.Input

	ToPodPresetOutput() PodPresetOutput
	ToPodPresetOutputWithContext(context.Context) PodPresetOutput
}

// PodPreset is a policy resource that defines additional runtime requirements for a Pod.
type PodPresetArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	Metadata metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	Spec PodPresetSpecPtrInput `pulumi:"spec"`
}

func (PodPresetArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PodPreset)(nil)).Elem()
}

func (i PodPresetArgs) ToPodPresetOutput() PodPresetOutput {
	return i.ToPodPresetOutputWithContext(context.Background())
}

func (i PodPresetArgs) ToPodPresetOutputWithContext(ctx context.Context) PodPresetOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PodPresetOutput)
}

type PodPresetArrayInput interface {
	pulumi.Input

	ToPodPresetArrayOutput() PodPresetArrayOutput
	ToPodPresetArrayOutputWithContext(context.Context) PodPresetArrayOutput
}

type PodPresetArray []PodPresetInput

func (PodPresetArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PodPreset)(nil)).Elem()
}

func (i PodPresetArray) ToPodPresetArrayOutput() PodPresetArrayOutput {
	return i.ToPodPresetArrayOutputWithContext(context.Background())
}

func (i PodPresetArray) ToPodPresetArrayOutputWithContext(ctx context.Context) PodPresetArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PodPresetArrayOutput)
}

// PodPreset is a policy resource that defines additional runtime requirements for a Pod.
type PodPresetOutput struct { *pulumi.OutputState }

func (PodPresetOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PodPreset)(nil)).Elem()
}

func (o PodPresetOutput) ToPodPresetOutput() PodPresetOutput {
	return o
}

func (o PodPresetOutput) ToPodPresetOutputWithContext(ctx context.Context) PodPresetOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PodPresetOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func (v PodPreset) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PodPresetOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func (v PodPreset) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o PodPresetOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func (v PodPreset) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

func (o PodPresetOutput) Spec() PodPresetSpecPtrOutput {
	return o.ApplyT(func (v PodPreset) *PodPresetSpec { return v.Spec }).(PodPresetSpecPtrOutput)
}

type PodPresetArrayOutput struct { *pulumi.OutputState }

func (PodPresetArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PodPreset)(nil)).Elem()
}

func (o PodPresetArrayOutput) ToPodPresetArrayOutput() PodPresetArrayOutput {
	return o
}

func (o PodPresetArrayOutput) ToPodPresetArrayOutputWithContext(ctx context.Context) PodPresetArrayOutput {
	return o
}

func (o PodPresetArrayOutput) Index(i pulumi.IntInput) PodPresetOutput {
	return pulumi.All(o, i).ApplyT(func (vs []interface{}) PodPreset {
		return vs[0].([]PodPreset)[vs[1].(int)]
	}).(PodPresetOutput)
}

// PodPresetList is a list of PodPreset objects.
type PodPresetList struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Items is a list of schema objects.
	Items []PodPreset `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

type PodPresetListInput interface {
	pulumi.Input

	ToPodPresetListOutput() PodPresetListOutput
	ToPodPresetListOutputWithContext(context.Context) PodPresetListOutput
}

// PodPresetList is a list of PodPreset objects.
type PodPresetListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Items is a list of schema objects.
	Items PodPresetArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (PodPresetListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PodPresetList)(nil)).Elem()
}

func (i PodPresetListArgs) ToPodPresetListOutput() PodPresetListOutput {
	return i.ToPodPresetListOutputWithContext(context.Background())
}

func (i PodPresetListArgs) ToPodPresetListOutputWithContext(ctx context.Context) PodPresetListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PodPresetListOutput)
}

// PodPresetList is a list of PodPreset objects.
type PodPresetListOutput struct { *pulumi.OutputState }

func (PodPresetListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PodPresetList)(nil)).Elem()
}

func (o PodPresetListOutput) ToPodPresetListOutput() PodPresetListOutput {
	return o
}

func (o PodPresetListOutput) ToPodPresetListOutputWithContext(ctx context.Context) PodPresetListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PodPresetListOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func (v PodPresetList) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Items is a list of schema objects.
func (o PodPresetListOutput) Items() PodPresetArrayOutput {
	return o.ApplyT(func (v PodPresetList) []PodPreset { return v.Items }).(PodPresetArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PodPresetListOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func (v PodPresetList) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o PodPresetListOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func (v PodPresetList) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

// PodPresetSpec is a description of a pod preset.
type PodPresetSpec struct {
	// Env defines the collection of EnvVar to inject into containers.
	Env []corev1.EnvVar `pulumi:"env"`
	// EnvFrom defines the collection of EnvFromSource to inject into containers.
	EnvFrom []corev1.EnvFromSource `pulumi:"envFrom"`
	// Selector is a label query over a set of resources, in this case pods. Required.
	Selector *metav1.LabelSelector `pulumi:"selector"`
	// VolumeMounts defines the collection of VolumeMount to inject into containers.
	VolumeMounts []corev1.VolumeMount `pulumi:"volumeMounts"`
	// Volumes defines the collection of Volume to inject into the pod.
	Volumes []corev1.Volume `pulumi:"volumes"`
}

type PodPresetSpecInput interface {
	pulumi.Input

	ToPodPresetSpecOutput() PodPresetSpecOutput
	ToPodPresetSpecOutputWithContext(context.Context) PodPresetSpecOutput
}

// PodPresetSpec is a description of a pod preset.
type PodPresetSpecArgs struct {
	// Env defines the collection of EnvVar to inject into containers.
	Env corev1.EnvVarArrayInput `pulumi:"env"`
	// EnvFrom defines the collection of EnvFromSource to inject into containers.
	EnvFrom corev1.EnvFromSourceArrayInput `pulumi:"envFrom"`
	// Selector is a label query over a set of resources, in this case pods. Required.
	Selector metav1.LabelSelectorPtrInput `pulumi:"selector"`
	// VolumeMounts defines the collection of VolumeMount to inject into containers.
	VolumeMounts corev1.VolumeMountArrayInput `pulumi:"volumeMounts"`
	// Volumes defines the collection of Volume to inject into the pod.
	Volumes corev1.VolumeArrayInput `pulumi:"volumes"`
}

func (PodPresetSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*PodPresetSpec)(nil)).Elem()
}

func (i PodPresetSpecArgs) ToPodPresetSpecOutput() PodPresetSpecOutput {
	return i.ToPodPresetSpecOutputWithContext(context.Background())
}

func (i PodPresetSpecArgs) ToPodPresetSpecOutputWithContext(ctx context.Context) PodPresetSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PodPresetSpecOutput)
}

func (i PodPresetSpecArgs) ToPodPresetSpecPtrOutput() PodPresetSpecPtrOutput {
	return i.ToPodPresetSpecPtrOutputWithContext(context.Background())
}

func (i PodPresetSpecArgs) ToPodPresetSpecPtrOutputWithContext(ctx context.Context) PodPresetSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PodPresetSpecOutput).ToPodPresetSpecPtrOutputWithContext(ctx)
}

type PodPresetSpecPtrInput interface {
	pulumi.Input

	ToPodPresetSpecPtrOutput() PodPresetSpecPtrOutput
	ToPodPresetSpecPtrOutputWithContext(context.Context) PodPresetSpecPtrOutput
}

type podPresetSpecPtrType PodPresetSpecArgs

func PodPresetSpecPtr(v *PodPresetSpecArgs) PodPresetSpecPtrInput {	return (*podPresetSpecPtrType)(v)
}

func (*podPresetSpecPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PodPresetSpec)(nil)).Elem()
}

func (i *podPresetSpecPtrType) ToPodPresetSpecPtrOutput() PodPresetSpecPtrOutput {
	return i.ToPodPresetSpecPtrOutputWithContext(context.Background())
}

func (i *podPresetSpecPtrType) ToPodPresetSpecPtrOutputWithContext(ctx context.Context) PodPresetSpecPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PodPresetSpecPtrOutput)
}

// PodPresetSpec is a description of a pod preset.
type PodPresetSpecOutput struct { *pulumi.OutputState }

func (PodPresetSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PodPresetSpec)(nil)).Elem()
}

func (o PodPresetSpecOutput) ToPodPresetSpecOutput() PodPresetSpecOutput {
	return o
}

func (o PodPresetSpecOutput) ToPodPresetSpecOutputWithContext(ctx context.Context) PodPresetSpecOutput {
	return o
}

func (o PodPresetSpecOutput) ToPodPresetSpecPtrOutput() PodPresetSpecPtrOutput {
	return o.ToPodPresetSpecPtrOutputWithContext(context.Background())
}

func (o PodPresetSpecOutput) ToPodPresetSpecPtrOutputWithContext(ctx context.Context) PodPresetSpecPtrOutput {
	return o.ApplyT(func(v PodPresetSpec) *PodPresetSpec {
		return &v
	}).(PodPresetSpecPtrOutput)
}
// Env defines the collection of EnvVar to inject into containers.
func (o PodPresetSpecOutput) Env() corev1.EnvVarArrayOutput {
	return o.ApplyT(func (v PodPresetSpec) []corev1.EnvVar { return v.Env }).(corev1.EnvVarArrayOutput)
}

// EnvFrom defines the collection of EnvFromSource to inject into containers.
func (o PodPresetSpecOutput) EnvFrom() corev1.EnvFromSourceArrayOutput {
	return o.ApplyT(func (v PodPresetSpec) []corev1.EnvFromSource { return v.EnvFrom }).(corev1.EnvFromSourceArrayOutput)
}

// Selector is a label query over a set of resources, in this case pods. Required.
func (o PodPresetSpecOutput) Selector() metav1.LabelSelectorPtrOutput {
	return o.ApplyT(func (v PodPresetSpec) *metav1.LabelSelector { return v.Selector }).(metav1.LabelSelectorPtrOutput)
}

// VolumeMounts defines the collection of VolumeMount to inject into containers.
func (o PodPresetSpecOutput) VolumeMounts() corev1.VolumeMountArrayOutput {
	return o.ApplyT(func (v PodPresetSpec) []corev1.VolumeMount { return v.VolumeMounts }).(corev1.VolumeMountArrayOutput)
}

// Volumes defines the collection of Volume to inject into the pod.
func (o PodPresetSpecOutput) Volumes() corev1.VolumeArrayOutput {
	return o.ApplyT(func (v PodPresetSpec) []corev1.Volume { return v.Volumes }).(corev1.VolumeArrayOutput)
}

type PodPresetSpecPtrOutput struct { *pulumi.OutputState }

func (PodPresetSpecPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PodPresetSpec)(nil)).Elem()
}

func (o PodPresetSpecPtrOutput) ToPodPresetSpecPtrOutput() PodPresetSpecPtrOutput {
	return o
}

func (o PodPresetSpecPtrOutput) ToPodPresetSpecPtrOutputWithContext(ctx context.Context) PodPresetSpecPtrOutput {
	return o
}

func (o PodPresetSpecPtrOutput) Elem() PodPresetSpecOutput {
	return o.ApplyT(func (v *PodPresetSpec) PodPresetSpec { return *v }).(PodPresetSpecOutput)
}

// Env defines the collection of EnvVar to inject into containers.
func (o PodPresetSpecPtrOutput) Env() corev1.EnvVarArrayOutput {
	return o.ApplyT(func (v PodPresetSpec) []corev1.EnvVar { return v.Env }).(corev1.EnvVarArrayOutput)
}

// EnvFrom defines the collection of EnvFromSource to inject into containers.
func (o PodPresetSpecPtrOutput) EnvFrom() corev1.EnvFromSourceArrayOutput {
	return o.ApplyT(func (v PodPresetSpec) []corev1.EnvFromSource { return v.EnvFrom }).(corev1.EnvFromSourceArrayOutput)
}

// Selector is a label query over a set of resources, in this case pods. Required.
func (o PodPresetSpecPtrOutput) Selector() metav1.LabelSelectorPtrOutput {
	return o.ApplyT(func (v PodPresetSpec) *metav1.LabelSelector { return v.Selector }).(metav1.LabelSelectorPtrOutput)
}

// VolumeMounts defines the collection of VolumeMount to inject into containers.
func (o PodPresetSpecPtrOutput) VolumeMounts() corev1.VolumeMountArrayOutput {
	return o.ApplyT(func (v PodPresetSpec) []corev1.VolumeMount { return v.VolumeMounts }).(corev1.VolumeMountArrayOutput)
}

// Volumes defines the collection of Volume to inject into the pod.
func (o PodPresetSpecPtrOutput) Volumes() corev1.VolumeArrayOutput {
	return o.ApplyT(func (v PodPresetSpec) []corev1.Volume { return v.Volumes }).(corev1.VolumeArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(PodPresetOutput{})
	pulumi.RegisterOutputType(PodPresetArrayOutput{})
	pulumi.RegisterOutputType(PodPresetListOutput{})
	pulumi.RegisterOutputType(PodPresetSpecOutput{})
	pulumi.RegisterOutputType(PodPresetSpecPtrOutput{})
}
