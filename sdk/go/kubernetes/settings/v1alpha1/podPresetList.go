// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// PodPresetList is a list of PodPreset objects.
type PodPresetList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Items is a list of schema objects.
	Items PodPresetTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ListMetaPtrOutput `pulumi:"metadata"`
}

// NewPodPresetList registers a new resource with the given unique name, arguments, and options.
func NewPodPresetList(ctx *pulumi.Context,
	name string, args *PodPresetListArgs, opts ...pulumi.ResourceOption) (*PodPresetList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("settings.k8s.io/v1alpha1")
	args.Kind = pulumi.StringPtr("PodPresetList")
	var resource PodPresetList
	err := ctx.RegisterResource("kubernetes:settings.k8s.io/v1alpha1:PodPresetList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPodPresetList gets an existing PodPresetList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPodPresetList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PodPresetListState, opts ...pulumi.ResourceOption) (*PodPresetList, error) {
	var resource PodPresetList
	err := ctx.ReadResource("kubernetes:settings.k8s.io/v1alpha1:PodPresetList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PodPresetList resources.
type podPresetListState struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Items is a list of schema objects.
	Items []PodPresetType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

type PodPresetListState struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Items is a list of schema objects.
	Items PodPresetTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ListMetaPtrInput
}

func (PodPresetListState) ElementType() reflect.Type {
	return reflect.TypeOf((*podPresetListState)(nil)).Elem()
}

type podPresetListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Items is a list of schema objects.
	Items []PodPresetType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a PodPresetList resource.
type PodPresetListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Items is a list of schema objects.
	Items PodPresetTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ListMetaPtrInput
}

func (PodPresetListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*podPresetListArgs)(nil)).Elem()
}

type PodPresetListInput interface {
	pulumi.Input

	ToPodPresetListOutput() PodPresetListOutput
	ToPodPresetListOutputWithContext(ctx context.Context) PodPresetListOutput
}

func (*PodPresetList) ElementType() reflect.Type {
	return reflect.TypeOf((*PodPresetList)(nil))
}

func (i *PodPresetList) ToPodPresetListOutput() PodPresetListOutput {
	return i.ToPodPresetListOutputWithContext(context.Background())
}

func (i *PodPresetList) ToPodPresetListOutputWithContext(ctx context.Context) PodPresetListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PodPresetListOutput)
}

func (i *PodPresetList) ToPodPresetListPtrOutput() PodPresetListPtrOutput {
	return i.ToPodPresetListPtrOutputWithContext(context.Background())
}

func (i *PodPresetList) ToPodPresetListPtrOutputWithContext(ctx context.Context) PodPresetListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PodPresetListPtrOutput)
}

type PodPresetListPtrInput interface {
	pulumi.Input

	ToPodPresetListPtrOutput() PodPresetListPtrOutput
	ToPodPresetListPtrOutputWithContext(ctx context.Context) PodPresetListPtrOutput
}

type podPresetListPtrType PodPresetListArgs

func (*podPresetListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PodPresetList)(nil))
}

func (i *podPresetListPtrType) ToPodPresetListPtrOutput() PodPresetListPtrOutput {
	return i.ToPodPresetListPtrOutputWithContext(context.Background())
}

func (i *podPresetListPtrType) ToPodPresetListPtrOutputWithContext(ctx context.Context) PodPresetListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PodPresetListPtrOutput)
}

// PodPresetListArrayInput is an input type that accepts PodPresetListArray and PodPresetListArrayOutput values.
// You can construct a concrete instance of `PodPresetListArrayInput` via:
//
//          PodPresetListArray{ PodPresetListArgs{...} }
type PodPresetListArrayInput interface {
	pulumi.Input

	ToPodPresetListArrayOutput() PodPresetListArrayOutput
	ToPodPresetListArrayOutputWithContext(context.Context) PodPresetListArrayOutput
}

type PodPresetListArray []PodPresetListInput

func (PodPresetListArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*PodPresetList)(nil))
}

func (i PodPresetListArray) ToPodPresetListArrayOutput() PodPresetListArrayOutput {
	return i.ToPodPresetListArrayOutputWithContext(context.Background())
}

func (i PodPresetListArray) ToPodPresetListArrayOutputWithContext(ctx context.Context) PodPresetListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PodPresetListArrayOutput)
}

// PodPresetListMapInput is an input type that accepts PodPresetListMap and PodPresetListMapOutput values.
// You can construct a concrete instance of `PodPresetListMapInput` via:
//
//          PodPresetListMap{ "key": PodPresetListArgs{...} }
type PodPresetListMapInput interface {
	pulumi.Input

	ToPodPresetListMapOutput() PodPresetListMapOutput
	ToPodPresetListMapOutputWithContext(context.Context) PodPresetListMapOutput
}

type PodPresetListMap map[string]PodPresetListInput

func (PodPresetListMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*PodPresetList)(nil))
}

func (i PodPresetListMap) ToPodPresetListMapOutput() PodPresetListMapOutput {
	return i.ToPodPresetListMapOutputWithContext(context.Background())
}

func (i PodPresetListMap) ToPodPresetListMapOutputWithContext(ctx context.Context) PodPresetListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PodPresetListMapOutput)
}

type PodPresetListOutput struct {
	*pulumi.OutputState
}

func (PodPresetListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PodPresetList)(nil))
}

func (o PodPresetListOutput) ToPodPresetListOutput() PodPresetListOutput {
	return o
}

func (o PodPresetListOutput) ToPodPresetListOutputWithContext(ctx context.Context) PodPresetListOutput {
	return o
}

func (o PodPresetListOutput) ToPodPresetListPtrOutput() PodPresetListPtrOutput {
	return o.ToPodPresetListPtrOutputWithContext(context.Background())
}

func (o PodPresetListOutput) ToPodPresetListPtrOutputWithContext(ctx context.Context) PodPresetListPtrOutput {
	return o.ApplyT(func(v PodPresetList) *PodPresetList {
		return &v
	}).(PodPresetListPtrOutput)
}

type PodPresetListPtrOutput struct {
	*pulumi.OutputState
}

func (PodPresetListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PodPresetList)(nil))
}

func (o PodPresetListPtrOutput) ToPodPresetListPtrOutput() PodPresetListPtrOutput {
	return o
}

func (o PodPresetListPtrOutput) ToPodPresetListPtrOutputWithContext(ctx context.Context) PodPresetListPtrOutput {
	return o
}

type PodPresetListArrayOutput struct{ *pulumi.OutputState }

func (PodPresetListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PodPresetList)(nil))
}

func (o PodPresetListArrayOutput) ToPodPresetListArrayOutput() PodPresetListArrayOutput {
	return o
}

func (o PodPresetListArrayOutput) ToPodPresetListArrayOutputWithContext(ctx context.Context) PodPresetListArrayOutput {
	return o
}

func (o PodPresetListArrayOutput) Index(i pulumi.IntInput) PodPresetListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PodPresetList {
		return vs[0].([]PodPresetList)[vs[1].(int)]
	}).(PodPresetListOutput)
}

type PodPresetListMapOutput struct{ *pulumi.OutputState }

func (PodPresetListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]PodPresetList)(nil))
}

func (o PodPresetListMapOutput) ToPodPresetListMapOutput() PodPresetListMapOutput {
	return o
}

func (o PodPresetListMapOutput) ToPodPresetListMapOutputWithContext(ctx context.Context) PodPresetListMapOutput {
	return o
}

func (o PodPresetListMapOutput) MapIndex(k pulumi.StringInput) PodPresetListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) PodPresetList {
		return vs[0].(map[string]PodPresetList)[vs[1].(string)]
	}).(PodPresetListOutput)
}

func init() {
	pulumi.RegisterOutputType(PodPresetListOutput{})
	pulumi.RegisterOutputType(PodPresetListPtrOutput{})
	pulumi.RegisterOutputType(PodPresetListArrayOutput{})
	pulumi.RegisterOutputType(PodPresetListMapOutput{})
}
