// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// PersistentVolumeList is a list of PersistentVolume items.
type PersistentVolumeList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// List of persistent volumes. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes
	Items PersistentVolumeTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrOutput `pulumi:"metadata"`
}

// NewPersistentVolumeList registers a new resource with the given unique name, arguments, and options.
func NewPersistentVolumeList(ctx *pulumi.Context,
	name string, args *PersistentVolumeListArgs, opts ...pulumi.ResourceOption) (*PersistentVolumeList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("v1")
	args.Kind = pulumi.StringPtr("PersistentVolumeList")
	var resource PersistentVolumeList
	err := ctx.RegisterResource("kubernetes:core/v1:PersistentVolumeList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPersistentVolumeList gets an existing PersistentVolumeList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPersistentVolumeList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PersistentVolumeListState, opts ...pulumi.ResourceOption) (*PersistentVolumeList, error) {
	var resource PersistentVolumeList
	err := ctx.ReadResource("kubernetes:core/v1:PersistentVolumeList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PersistentVolumeList resources.
type persistentVolumeListState struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of persistent volumes. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes
	Items []PersistentVolumeType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

type PersistentVolumeListState struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of persistent volumes. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes
	Items PersistentVolumeTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (PersistentVolumeListState) ElementType() reflect.Type {
	return reflect.TypeOf((*persistentVolumeListState)(nil)).Elem()
}

type persistentVolumeListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of persistent volumes. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes
	Items []PersistentVolumeType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a PersistentVolumeList resource.
type PersistentVolumeListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of persistent volumes. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes
	Items PersistentVolumeTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (PersistentVolumeListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*persistentVolumeListArgs)(nil)).Elem()
}

type PersistentVolumeListInput interface {
	pulumi.Input

	ToPersistentVolumeListOutput() PersistentVolumeListOutput
	ToPersistentVolumeListOutputWithContext(ctx context.Context) PersistentVolumeListOutput
}

func (*PersistentVolumeList) ElementType() reflect.Type {
	return reflect.TypeOf((*PersistentVolumeList)(nil))
}

func (i *PersistentVolumeList) ToPersistentVolumeListOutput() PersistentVolumeListOutput {
	return i.ToPersistentVolumeListOutputWithContext(context.Background())
}

func (i *PersistentVolumeList) ToPersistentVolumeListOutputWithContext(ctx context.Context) PersistentVolumeListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PersistentVolumeListOutput)
}

func (i *PersistentVolumeList) ToPersistentVolumeListPtrOutput() PersistentVolumeListPtrOutput {
	return i.ToPersistentVolumeListPtrOutputWithContext(context.Background())
}

func (i *PersistentVolumeList) ToPersistentVolumeListPtrOutputWithContext(ctx context.Context) PersistentVolumeListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PersistentVolumeListPtrOutput)
}

type PersistentVolumeListPtrInput interface {
	pulumi.Input

	ToPersistentVolumeListPtrOutput() PersistentVolumeListPtrOutput
	ToPersistentVolumeListPtrOutputWithContext(ctx context.Context) PersistentVolumeListPtrOutput
}

type persistentVolumeListPtrType PersistentVolumeListArgs

func (*persistentVolumeListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**PersistentVolumeList)(nil))
}

func (i *persistentVolumeListPtrType) ToPersistentVolumeListPtrOutput() PersistentVolumeListPtrOutput {
	return i.ToPersistentVolumeListPtrOutputWithContext(context.Background())
}

func (i *persistentVolumeListPtrType) ToPersistentVolumeListPtrOutputWithContext(ctx context.Context) PersistentVolumeListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PersistentVolumeListPtrOutput)
}

// PersistentVolumeListArrayInput is an input type that accepts PersistentVolumeListArray and PersistentVolumeListArrayOutput values.
// You can construct a concrete instance of `PersistentVolumeListArrayInput` via:
//
//          PersistentVolumeListArray{ PersistentVolumeListArgs{...} }
type PersistentVolumeListArrayInput interface {
	pulumi.Input

	ToPersistentVolumeListArrayOutput() PersistentVolumeListArrayOutput
	ToPersistentVolumeListArrayOutputWithContext(context.Context) PersistentVolumeListArrayOutput
}

type PersistentVolumeListArray []PersistentVolumeListInput

func (PersistentVolumeListArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*PersistentVolumeList)(nil))
}

func (i PersistentVolumeListArray) ToPersistentVolumeListArrayOutput() PersistentVolumeListArrayOutput {
	return i.ToPersistentVolumeListArrayOutputWithContext(context.Background())
}

func (i PersistentVolumeListArray) ToPersistentVolumeListArrayOutputWithContext(ctx context.Context) PersistentVolumeListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PersistentVolumeListArrayOutput)
}

// PersistentVolumeListMapInput is an input type that accepts PersistentVolumeListMap and PersistentVolumeListMapOutput values.
// You can construct a concrete instance of `PersistentVolumeListMapInput` via:
//
//          PersistentVolumeListMap{ "key": PersistentVolumeListArgs{...} }
type PersistentVolumeListMapInput interface {
	pulumi.Input

	ToPersistentVolumeListMapOutput() PersistentVolumeListMapOutput
	ToPersistentVolumeListMapOutputWithContext(context.Context) PersistentVolumeListMapOutput
}

type PersistentVolumeListMap map[string]PersistentVolumeListInput

func (PersistentVolumeListMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*PersistentVolumeList)(nil))
}

func (i PersistentVolumeListMap) ToPersistentVolumeListMapOutput() PersistentVolumeListMapOutput {
	return i.ToPersistentVolumeListMapOutputWithContext(context.Background())
}

func (i PersistentVolumeListMap) ToPersistentVolumeListMapOutputWithContext(ctx context.Context) PersistentVolumeListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PersistentVolumeListMapOutput)
}

type PersistentVolumeListOutput struct {
	*pulumi.OutputState
}

func (PersistentVolumeListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*PersistentVolumeList)(nil))
}

func (o PersistentVolumeListOutput) ToPersistentVolumeListOutput() PersistentVolumeListOutput {
	return o
}

func (o PersistentVolumeListOutput) ToPersistentVolumeListOutputWithContext(ctx context.Context) PersistentVolumeListOutput {
	return o
}

func (o PersistentVolumeListOutput) ToPersistentVolumeListPtrOutput() PersistentVolumeListPtrOutput {
	return o.ToPersistentVolumeListPtrOutputWithContext(context.Background())
}

func (o PersistentVolumeListOutput) ToPersistentVolumeListPtrOutputWithContext(ctx context.Context) PersistentVolumeListPtrOutput {
	return o.ApplyT(func(v PersistentVolumeList) *PersistentVolumeList {
		return &v
	}).(PersistentVolumeListPtrOutput)
}

type PersistentVolumeListPtrOutput struct {
	*pulumi.OutputState
}

func (PersistentVolumeListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PersistentVolumeList)(nil))
}

func (o PersistentVolumeListPtrOutput) ToPersistentVolumeListPtrOutput() PersistentVolumeListPtrOutput {
	return o
}

func (o PersistentVolumeListPtrOutput) ToPersistentVolumeListPtrOutputWithContext(ctx context.Context) PersistentVolumeListPtrOutput {
	return o
}

type PersistentVolumeListArrayOutput struct{ *pulumi.OutputState }

func (PersistentVolumeListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]PersistentVolumeList)(nil))
}

func (o PersistentVolumeListArrayOutput) ToPersistentVolumeListArrayOutput() PersistentVolumeListArrayOutput {
	return o
}

func (o PersistentVolumeListArrayOutput) ToPersistentVolumeListArrayOutputWithContext(ctx context.Context) PersistentVolumeListArrayOutput {
	return o
}

func (o PersistentVolumeListArrayOutput) Index(i pulumi.IntInput) PersistentVolumeListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) PersistentVolumeList {
		return vs[0].([]PersistentVolumeList)[vs[1].(int)]
	}).(PersistentVolumeListOutput)
}

type PersistentVolumeListMapOutput struct{ *pulumi.OutputState }

func (PersistentVolumeListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]PersistentVolumeList)(nil))
}

func (o PersistentVolumeListMapOutput) ToPersistentVolumeListMapOutput() PersistentVolumeListMapOutput {
	return o
}

func (o PersistentVolumeListMapOutput) ToPersistentVolumeListMapOutputWithContext(ctx context.Context) PersistentVolumeListMapOutput {
	return o
}

func (o PersistentVolumeListMapOutput) MapIndex(k pulumi.StringInput) PersistentVolumeListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) PersistentVolumeList {
		return vs[0].(map[string]PersistentVolumeList)[vs[1].(string)]
	}).(PersistentVolumeListOutput)
}

func init() {
	pulumi.RegisterOutputType(PersistentVolumeListOutput{})
	pulumi.RegisterOutputType(PersistentVolumeListPtrOutput{})
	pulumi.RegisterOutputType(PersistentVolumeListArrayOutput{})
	pulumi.RegisterOutputType(PersistentVolumeListMapOutput{})
}
