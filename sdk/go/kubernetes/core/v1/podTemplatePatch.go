// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v3/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Patch resources are used to modify existing Kubernetes resources by using
// Server-Side Apply updates. The name of the resource must be specified, but all other properties are optional. More than
// one patch may be applied to the same resource, and a random FieldManager name will be used for each Patch resource.
// Conflicts will result in an error by default, but can be forced using the "pulumi.com/patchForce" annotation. See the
// [Server-Side Apply Docs](https://www.pulumi.com/registry/packages/kubernetes/how-to-guides/managing-resources-with-server-side-apply/) for
// additional information about using Server-Side Apply to manage Kubernetes resources with Pulumi.
// PodTemplate describes a template for creating copies of a predefined pod.
type PodTemplatePatch struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrOutput `pulumi:"metadata"`
	// Template defines the pods that will be created from this pod template. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Template PodTemplateSpecPatchPtrOutput `pulumi:"template"`
}

// NewPodTemplatePatch registers a new resource with the given unique name, arguments, and options.
func NewPodTemplatePatch(ctx *pulumi.Context,
	name string, args *PodTemplatePatchArgs, opts ...pulumi.ResourceOption) (*PodTemplatePatch, error) {
	if args == nil {
		args = &PodTemplatePatchArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("v1")
	args.Kind = pulumi.StringPtr("PodTemplate")
	var resource PodTemplatePatch
	err := ctx.RegisterResource("kubernetes:core/v1:PodTemplatePatch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPodTemplatePatch gets an existing PodTemplatePatch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPodTemplatePatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PodTemplatePatchState, opts ...pulumi.ResourceOption) (*PodTemplatePatch, error) {
	var resource PodTemplatePatch
	err := ctx.ReadResource("kubernetes:core/v1:PodTemplatePatch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PodTemplatePatch resources.
type podTemplatePatchState struct {
}

type PodTemplatePatchState struct {
}

func (PodTemplatePatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*podTemplatePatchState)(nil)).Elem()
}

type podTemplatePatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	// Template defines the pods that will be created from this pod template. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Template *PodTemplateSpecPatch `pulumi:"template"`
}

// The set of arguments for constructing a PodTemplatePatch resource.
type PodTemplatePatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput
	// Template defines the pods that will be created from this pod template. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
	Template PodTemplateSpecPatchPtrInput
}

func (PodTemplatePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*podTemplatePatchArgs)(nil)).Elem()
}

type PodTemplatePatchInput interface {
	pulumi.Input

	ToPodTemplatePatchOutput() PodTemplatePatchOutput
	ToPodTemplatePatchOutputWithContext(ctx context.Context) PodTemplatePatchOutput
}

func (*PodTemplatePatch) ElementType() reflect.Type {
	return reflect.TypeOf((**PodTemplatePatch)(nil)).Elem()
}

func (i *PodTemplatePatch) ToPodTemplatePatchOutput() PodTemplatePatchOutput {
	return i.ToPodTemplatePatchOutputWithContext(context.Background())
}

func (i *PodTemplatePatch) ToPodTemplatePatchOutputWithContext(ctx context.Context) PodTemplatePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PodTemplatePatchOutput)
}

// PodTemplatePatchArrayInput is an input type that accepts PodTemplatePatchArray and PodTemplatePatchArrayOutput values.
// You can construct a concrete instance of `PodTemplatePatchArrayInput` via:
//
//	PodTemplatePatchArray{ PodTemplatePatchArgs{...} }
type PodTemplatePatchArrayInput interface {
	pulumi.Input

	ToPodTemplatePatchArrayOutput() PodTemplatePatchArrayOutput
	ToPodTemplatePatchArrayOutputWithContext(context.Context) PodTemplatePatchArrayOutput
}

type PodTemplatePatchArray []PodTemplatePatchInput

func (PodTemplatePatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PodTemplatePatch)(nil)).Elem()
}

func (i PodTemplatePatchArray) ToPodTemplatePatchArrayOutput() PodTemplatePatchArrayOutput {
	return i.ToPodTemplatePatchArrayOutputWithContext(context.Background())
}

func (i PodTemplatePatchArray) ToPodTemplatePatchArrayOutputWithContext(ctx context.Context) PodTemplatePatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PodTemplatePatchArrayOutput)
}

// PodTemplatePatchMapInput is an input type that accepts PodTemplatePatchMap and PodTemplatePatchMapOutput values.
// You can construct a concrete instance of `PodTemplatePatchMapInput` via:
//
//	PodTemplatePatchMap{ "key": PodTemplatePatchArgs{...} }
type PodTemplatePatchMapInput interface {
	pulumi.Input

	ToPodTemplatePatchMapOutput() PodTemplatePatchMapOutput
	ToPodTemplatePatchMapOutputWithContext(context.Context) PodTemplatePatchMapOutput
}

type PodTemplatePatchMap map[string]PodTemplatePatchInput

func (PodTemplatePatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PodTemplatePatch)(nil)).Elem()
}

func (i PodTemplatePatchMap) ToPodTemplatePatchMapOutput() PodTemplatePatchMapOutput {
	return i.ToPodTemplatePatchMapOutputWithContext(context.Background())
}

func (i PodTemplatePatchMap) ToPodTemplatePatchMapOutputWithContext(ctx context.Context) PodTemplatePatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PodTemplatePatchMapOutput)
}

type PodTemplatePatchOutput struct{ *pulumi.OutputState }

func (PodTemplatePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PodTemplatePatch)(nil)).Elem()
}

func (o PodTemplatePatchOutput) ToPodTemplatePatchOutput() PodTemplatePatchOutput {
	return o
}

func (o PodTemplatePatchOutput) ToPodTemplatePatchOutputWithContext(ctx context.Context) PodTemplatePatchOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PodTemplatePatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PodTemplatePatch) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PodTemplatePatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PodTemplatePatch) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o PodTemplatePatchOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v *PodTemplatePatch) metav1.ObjectMetaPatchPtrOutput { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

// Template defines the pods that will be created from this pod template. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
func (o PodTemplatePatchOutput) Template() PodTemplateSpecPatchPtrOutput {
	return o.ApplyT(func(v *PodTemplatePatch) PodTemplateSpecPatchPtrOutput { return v.Template }).(PodTemplateSpecPatchPtrOutput)
}

type PodTemplatePatchArrayOutput struct{ *pulumi.OutputState }

func (PodTemplatePatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PodTemplatePatch)(nil)).Elem()
}

func (o PodTemplatePatchArrayOutput) ToPodTemplatePatchArrayOutput() PodTemplatePatchArrayOutput {
	return o
}

func (o PodTemplatePatchArrayOutput) ToPodTemplatePatchArrayOutputWithContext(ctx context.Context) PodTemplatePatchArrayOutput {
	return o
}

func (o PodTemplatePatchArrayOutput) Index(i pulumi.IntInput) PodTemplatePatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PodTemplatePatch {
		return vs[0].([]*PodTemplatePatch)[vs[1].(int)]
	}).(PodTemplatePatchOutput)
}

type PodTemplatePatchMapOutput struct{ *pulumi.OutputState }

func (PodTemplatePatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PodTemplatePatch)(nil)).Elem()
}

func (o PodTemplatePatchMapOutput) ToPodTemplatePatchMapOutput() PodTemplatePatchMapOutput {
	return o
}

func (o PodTemplatePatchMapOutput) ToPodTemplatePatchMapOutputWithContext(ctx context.Context) PodTemplatePatchMapOutput {
	return o
}

func (o PodTemplatePatchMapOutput) MapIndex(k pulumi.StringInput) PodTemplatePatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PodTemplatePatch {
		return vs[0].(map[string]*PodTemplatePatch)[vs[1].(string)]
	}).(PodTemplatePatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PodTemplatePatchInput)(nil)).Elem(), &PodTemplatePatch{})
	pulumi.RegisterInputType(reflect.TypeOf((*PodTemplatePatchArrayInput)(nil)).Elem(), PodTemplatePatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PodTemplatePatchMapInput)(nil)).Elem(), PodTemplatePatchMap{})
	pulumi.RegisterOutputType(PodTemplatePatchOutput{})
	pulumi.RegisterOutputType(PodTemplatePatchArrayOutput{})
	pulumi.RegisterOutputType(PodTemplatePatchMapOutput{})
}
