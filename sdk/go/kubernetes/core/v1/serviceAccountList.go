// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// ServiceAccountList is a list of ServiceAccount objects
type ServiceAccountList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// List of ServiceAccounts. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
	Items ServiceAccountTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrOutput `pulumi:"metadata"`
}

// NewServiceAccountList registers a new resource with the given unique name, arguments, and options.
func NewServiceAccountList(ctx *pulumi.Context,
	name string, args *ServiceAccountListArgs, opts ...pulumi.ResourceOption) (*ServiceAccountList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("v1")
	args.Kind = pulumi.StringPtr("ServiceAccountList")
	var resource ServiceAccountList
	err := ctx.RegisterResource("kubernetes:core/v1:ServiceAccountList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceAccountList gets an existing ServiceAccountList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceAccountList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceAccountListState, opts ...pulumi.ResourceOption) (*ServiceAccountList, error) {
	var resource ServiceAccountList
	err := ctx.ReadResource("kubernetes:core/v1:ServiceAccountList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceAccountList resources.
type serviceAccountListState struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of ServiceAccounts. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
	Items []ServiceAccountType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

type ServiceAccountListState struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of ServiceAccounts. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
	Items ServiceAccountTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (ServiceAccountListState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceAccountListState)(nil)).Elem()
}

type serviceAccountListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of ServiceAccounts. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
	Items []ServiceAccountType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a ServiceAccountList resource.
type ServiceAccountListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of ServiceAccounts. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
	Items ServiceAccountTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (ServiceAccountListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceAccountListArgs)(nil)).Elem()
}

type ServiceAccountListInput interface {
	pulumi.Input

	ToServiceAccountListOutput() ServiceAccountListOutput
	ToServiceAccountListOutputWithContext(ctx context.Context) ServiceAccountListOutput
}

func (*ServiceAccountList) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAccountList)(nil))
}

func (i *ServiceAccountList) ToServiceAccountListOutput() ServiceAccountListOutput {
	return i.ToServiceAccountListOutputWithContext(context.Background())
}

func (i *ServiceAccountList) ToServiceAccountListOutputWithContext(ctx context.Context) ServiceAccountListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAccountListOutput)
}

func (i *ServiceAccountList) ToServiceAccountListPtrOutput() ServiceAccountListPtrOutput {
	return i.ToServiceAccountListPtrOutputWithContext(context.Background())
}

func (i *ServiceAccountList) ToServiceAccountListPtrOutputWithContext(ctx context.Context) ServiceAccountListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAccountListPtrOutput)
}

type ServiceAccountListPtrInput interface {
	pulumi.Input

	ToServiceAccountListPtrOutput() ServiceAccountListPtrOutput
	ToServiceAccountListPtrOutputWithContext(ctx context.Context) ServiceAccountListPtrOutput
}

type serviceAccountListPtrType ServiceAccountListArgs

func (*serviceAccountListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAccountList)(nil))
}

func (i *serviceAccountListPtrType) ToServiceAccountListPtrOutput() ServiceAccountListPtrOutput {
	return i.ToServiceAccountListPtrOutputWithContext(context.Background())
}

func (i *serviceAccountListPtrType) ToServiceAccountListPtrOutputWithContext(ctx context.Context) ServiceAccountListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAccountListPtrOutput)
}

// ServiceAccountListArrayInput is an input type that accepts ServiceAccountListArray and ServiceAccountListArrayOutput values.
// You can construct a concrete instance of `ServiceAccountListArrayInput` via:
//
//          ServiceAccountListArray{ ServiceAccountListArgs{...} }
type ServiceAccountListArrayInput interface {
	pulumi.Input

	ToServiceAccountListArrayOutput() ServiceAccountListArrayOutput
	ToServiceAccountListArrayOutputWithContext(context.Context) ServiceAccountListArrayOutput
}

type ServiceAccountListArray []ServiceAccountListInput

func (ServiceAccountListArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*ServiceAccountList)(nil))
}

func (i ServiceAccountListArray) ToServiceAccountListArrayOutput() ServiceAccountListArrayOutput {
	return i.ToServiceAccountListArrayOutputWithContext(context.Background())
}

func (i ServiceAccountListArray) ToServiceAccountListArrayOutputWithContext(ctx context.Context) ServiceAccountListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAccountListArrayOutput)
}

// ServiceAccountListMapInput is an input type that accepts ServiceAccountListMap and ServiceAccountListMapOutput values.
// You can construct a concrete instance of `ServiceAccountListMapInput` via:
//
//          ServiceAccountListMap{ "key": ServiceAccountListArgs{...} }
type ServiceAccountListMapInput interface {
	pulumi.Input

	ToServiceAccountListMapOutput() ServiceAccountListMapOutput
	ToServiceAccountListMapOutputWithContext(context.Context) ServiceAccountListMapOutput
}

type ServiceAccountListMap map[string]ServiceAccountListInput

func (ServiceAccountListMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*ServiceAccountList)(nil))
}

func (i ServiceAccountListMap) ToServiceAccountListMapOutput() ServiceAccountListMapOutput {
	return i.ToServiceAccountListMapOutputWithContext(context.Background())
}

func (i ServiceAccountListMap) ToServiceAccountListMapOutputWithContext(ctx context.Context) ServiceAccountListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceAccountListMapOutput)
}

type ServiceAccountListOutput struct {
	*pulumi.OutputState
}

func (ServiceAccountListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceAccountList)(nil))
}

func (o ServiceAccountListOutput) ToServiceAccountListOutput() ServiceAccountListOutput {
	return o
}

func (o ServiceAccountListOutput) ToServiceAccountListOutputWithContext(ctx context.Context) ServiceAccountListOutput {
	return o
}

func (o ServiceAccountListOutput) ToServiceAccountListPtrOutput() ServiceAccountListPtrOutput {
	return o.ToServiceAccountListPtrOutputWithContext(context.Background())
}

func (o ServiceAccountListOutput) ToServiceAccountListPtrOutputWithContext(ctx context.Context) ServiceAccountListPtrOutput {
	return o.ApplyT(func(v ServiceAccountList) *ServiceAccountList {
		return &v
	}).(ServiceAccountListPtrOutput)
}

type ServiceAccountListPtrOutput struct {
	*pulumi.OutputState
}

func (ServiceAccountListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceAccountList)(nil))
}

func (o ServiceAccountListPtrOutput) ToServiceAccountListPtrOutput() ServiceAccountListPtrOutput {
	return o
}

func (o ServiceAccountListPtrOutput) ToServiceAccountListPtrOutputWithContext(ctx context.Context) ServiceAccountListPtrOutput {
	return o
}

type ServiceAccountListArrayOutput struct{ *pulumi.OutputState }

func (ServiceAccountListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]ServiceAccountList)(nil))
}

func (o ServiceAccountListArrayOutput) ToServiceAccountListArrayOutput() ServiceAccountListArrayOutput {
	return o
}

func (o ServiceAccountListArrayOutput) ToServiceAccountListArrayOutputWithContext(ctx context.Context) ServiceAccountListArrayOutput {
	return o
}

func (o ServiceAccountListArrayOutput) Index(i pulumi.IntInput) ServiceAccountListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) ServiceAccountList {
		return vs[0].([]ServiceAccountList)[vs[1].(int)]
	}).(ServiceAccountListOutput)
}

type ServiceAccountListMapOutput struct{ *pulumi.OutputState }

func (ServiceAccountListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]ServiceAccountList)(nil))
}

func (o ServiceAccountListMapOutput) ToServiceAccountListMapOutput() ServiceAccountListMapOutput {
	return o
}

func (o ServiceAccountListMapOutput) ToServiceAccountListMapOutputWithContext(ctx context.Context) ServiceAccountListMapOutput {
	return o
}

func (o ServiceAccountListMapOutput) MapIndex(k pulumi.StringInput) ServiceAccountListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) ServiceAccountList {
		return vs[0].(map[string]ServiceAccountList)[vs[1].(string)]
	}).(ServiceAccountListOutput)
}

func init() {
	pulumi.RegisterOutputType(ServiceAccountListOutput{})
	pulumi.RegisterOutputType(ServiceAccountListPtrOutput{})
	pulumi.RegisterOutputType(ServiceAccountListArrayOutput{})
	pulumi.RegisterOutputType(ServiceAccountListMapOutput{})
}
