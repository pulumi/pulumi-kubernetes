// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Patch resources are used to modify existing Kubernetes resources by using
// Server-Side Apply updates. The name of the resource must be specified, but all other properties are optional. More than
// one patch may be applied to the same resource, and a random FieldManager name will be used for each Patch resource.
// Conflicts will result in an error by default, but can be forced using the "pulumi.com/patchForce" annotation. See the
// [Server-Side Apply Docs](https://www.pulumi.com/registry/packages/kubernetes/how-to-guides/managing-resources-with-server-side-apply/) for
// additional information about using Server-Side Apply to manage Kubernetes resources with Pulumi.
// PodSecurityPolicy governs the ability to make requests that affect the Security Context that will be applied to a pod and container.
type PodSecurityPolicyPatch struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrOutput `pulumi:"metadata"`
	// spec defines the policy enforced.
	Spec PodSecurityPolicySpecPatchPtrOutput `pulumi:"spec"`
}

// NewPodSecurityPolicyPatch registers a new resource with the given unique name, arguments, and options.
func NewPodSecurityPolicyPatch(ctx *pulumi.Context,
	name string, args *PodSecurityPolicyPatchArgs, opts ...pulumi.ResourceOption) (*PodSecurityPolicyPatch, error) {
	if args == nil {
		args = &PodSecurityPolicyPatchArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("policy/v1beta1")
	args.Kind = pulumi.StringPtr("PodSecurityPolicy")
	aliases := pulumi.Aliases([]pulumi.Alias{
		{
			Type: pulumi.String("kubernetes:extensions/v1beta1:PodSecurityPolicyPatch"),
		},
	})
	opts = append(opts, aliases)
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PodSecurityPolicyPatch
	err := ctx.RegisterResource("kubernetes:policy/v1beta1:PodSecurityPolicyPatch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPodSecurityPolicyPatch gets an existing PodSecurityPolicyPatch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPodSecurityPolicyPatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PodSecurityPolicyPatchState, opts ...pulumi.ResourceOption) (*PodSecurityPolicyPatch, error) {
	var resource PodSecurityPolicyPatch
	err := ctx.ReadResource("kubernetes:policy/v1beta1:PodSecurityPolicyPatch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PodSecurityPolicyPatch resources.
type podSecurityPolicyPatchState struct {
}

type PodSecurityPolicyPatchState struct {
}

func (PodSecurityPolicyPatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*podSecurityPolicyPatchState)(nil)).Elem()
}

type podSecurityPolicyPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	// spec defines the policy enforced.
	Spec *PodSecurityPolicySpecPatch `pulumi:"spec"`
}

// The set of arguments for constructing a PodSecurityPolicyPatch resource.
type PodSecurityPolicyPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ObjectMetaPatchPtrInput
	// spec defines the policy enforced.
	Spec PodSecurityPolicySpecPatchPtrInput
}

func (PodSecurityPolicyPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*podSecurityPolicyPatchArgs)(nil)).Elem()
}

type PodSecurityPolicyPatchInput interface {
	pulumi.Input

	ToPodSecurityPolicyPatchOutput() PodSecurityPolicyPatchOutput
	ToPodSecurityPolicyPatchOutputWithContext(ctx context.Context) PodSecurityPolicyPatchOutput
}

func (*PodSecurityPolicyPatch) ElementType() reflect.Type {
	return reflect.TypeOf((**PodSecurityPolicyPatch)(nil)).Elem()
}

func (i *PodSecurityPolicyPatch) ToPodSecurityPolicyPatchOutput() PodSecurityPolicyPatchOutput {
	return i.ToPodSecurityPolicyPatchOutputWithContext(context.Background())
}

func (i *PodSecurityPolicyPatch) ToPodSecurityPolicyPatchOutputWithContext(ctx context.Context) PodSecurityPolicyPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PodSecurityPolicyPatchOutput)
}

// PodSecurityPolicyPatchArrayInput is an input type that accepts PodSecurityPolicyPatchArray and PodSecurityPolicyPatchArrayOutput values.
// You can construct a concrete instance of `PodSecurityPolicyPatchArrayInput` via:
//
//	PodSecurityPolicyPatchArray{ PodSecurityPolicyPatchArgs{...} }
type PodSecurityPolicyPatchArrayInput interface {
	pulumi.Input

	ToPodSecurityPolicyPatchArrayOutput() PodSecurityPolicyPatchArrayOutput
	ToPodSecurityPolicyPatchArrayOutputWithContext(context.Context) PodSecurityPolicyPatchArrayOutput
}

type PodSecurityPolicyPatchArray []PodSecurityPolicyPatchInput

func (PodSecurityPolicyPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PodSecurityPolicyPatch)(nil)).Elem()
}

func (i PodSecurityPolicyPatchArray) ToPodSecurityPolicyPatchArrayOutput() PodSecurityPolicyPatchArrayOutput {
	return i.ToPodSecurityPolicyPatchArrayOutputWithContext(context.Background())
}

func (i PodSecurityPolicyPatchArray) ToPodSecurityPolicyPatchArrayOutputWithContext(ctx context.Context) PodSecurityPolicyPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PodSecurityPolicyPatchArrayOutput)
}

// PodSecurityPolicyPatchMapInput is an input type that accepts PodSecurityPolicyPatchMap and PodSecurityPolicyPatchMapOutput values.
// You can construct a concrete instance of `PodSecurityPolicyPatchMapInput` via:
//
//	PodSecurityPolicyPatchMap{ "key": PodSecurityPolicyPatchArgs{...} }
type PodSecurityPolicyPatchMapInput interface {
	pulumi.Input

	ToPodSecurityPolicyPatchMapOutput() PodSecurityPolicyPatchMapOutput
	ToPodSecurityPolicyPatchMapOutputWithContext(context.Context) PodSecurityPolicyPatchMapOutput
}

type PodSecurityPolicyPatchMap map[string]PodSecurityPolicyPatchInput

func (PodSecurityPolicyPatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PodSecurityPolicyPatch)(nil)).Elem()
}

func (i PodSecurityPolicyPatchMap) ToPodSecurityPolicyPatchMapOutput() PodSecurityPolicyPatchMapOutput {
	return i.ToPodSecurityPolicyPatchMapOutputWithContext(context.Background())
}

func (i PodSecurityPolicyPatchMap) ToPodSecurityPolicyPatchMapOutputWithContext(ctx context.Context) PodSecurityPolicyPatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PodSecurityPolicyPatchMapOutput)
}

type PodSecurityPolicyPatchOutput struct{ *pulumi.OutputState }

func (PodSecurityPolicyPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PodSecurityPolicyPatch)(nil)).Elem()
}

func (o PodSecurityPolicyPatchOutput) ToPodSecurityPolicyPatchOutput() PodSecurityPolicyPatchOutput {
	return o
}

func (o PodSecurityPolicyPatchOutput) ToPodSecurityPolicyPatchOutputWithContext(ctx context.Context) PodSecurityPolicyPatchOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PodSecurityPolicyPatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PodSecurityPolicyPatch) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PodSecurityPolicyPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *PodSecurityPolicyPatch) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o PodSecurityPolicyPatchOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v *PodSecurityPolicyPatch) metav1.ObjectMetaPatchPtrOutput { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

// spec defines the policy enforced.
func (o PodSecurityPolicyPatchOutput) Spec() PodSecurityPolicySpecPatchPtrOutput {
	return o.ApplyT(func(v *PodSecurityPolicyPatch) PodSecurityPolicySpecPatchPtrOutput { return v.Spec }).(PodSecurityPolicySpecPatchPtrOutput)
}

type PodSecurityPolicyPatchArrayOutput struct{ *pulumi.OutputState }

func (PodSecurityPolicyPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PodSecurityPolicyPatch)(nil)).Elem()
}

func (o PodSecurityPolicyPatchArrayOutput) ToPodSecurityPolicyPatchArrayOutput() PodSecurityPolicyPatchArrayOutput {
	return o
}

func (o PodSecurityPolicyPatchArrayOutput) ToPodSecurityPolicyPatchArrayOutputWithContext(ctx context.Context) PodSecurityPolicyPatchArrayOutput {
	return o
}

func (o PodSecurityPolicyPatchArrayOutput) Index(i pulumi.IntInput) PodSecurityPolicyPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PodSecurityPolicyPatch {
		return vs[0].([]*PodSecurityPolicyPatch)[vs[1].(int)]
	}).(PodSecurityPolicyPatchOutput)
}

type PodSecurityPolicyPatchMapOutput struct{ *pulumi.OutputState }

func (PodSecurityPolicyPatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PodSecurityPolicyPatch)(nil)).Elem()
}

func (o PodSecurityPolicyPatchMapOutput) ToPodSecurityPolicyPatchMapOutput() PodSecurityPolicyPatchMapOutput {
	return o
}

func (o PodSecurityPolicyPatchMapOutput) ToPodSecurityPolicyPatchMapOutputWithContext(ctx context.Context) PodSecurityPolicyPatchMapOutput {
	return o
}

func (o PodSecurityPolicyPatchMapOutput) MapIndex(k pulumi.StringInput) PodSecurityPolicyPatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PodSecurityPolicyPatch {
		return vs[0].(map[string]*PodSecurityPolicyPatch)[vs[1].(string)]
	}).(PodSecurityPolicyPatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PodSecurityPolicyPatchInput)(nil)).Elem(), &PodSecurityPolicyPatch{})
	pulumi.RegisterInputType(reflect.TypeOf((*PodSecurityPolicyPatchArrayInput)(nil)).Elem(), PodSecurityPolicyPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PodSecurityPolicyPatchMapInput)(nil)).Elem(), PodSecurityPolicyPatchMap{})
	pulumi.RegisterOutputType(PodSecurityPolicyPatchOutput{})
	pulumi.RegisterOutputType(PodSecurityPolicyPatchArrayOutput{})
	pulumi.RegisterOutputType(PodSecurityPolicyPatchMapOutput{})
}
