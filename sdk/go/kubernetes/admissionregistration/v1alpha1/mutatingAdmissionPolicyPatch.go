// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Patch resources are used to modify existing Kubernetes resources by using
// Server-Side Apply updates. The name of the resource must be specified, but all other properties are optional. More than
// one patch may be applied to the same resource, and a random FieldManager name will be used for each Patch resource.
// Conflicts will result in an error by default, but can be forced using the "pulumi.com/patchForce" annotation. See the
// [Server-Side Apply Docs](https://www.pulumi.com/registry/packages/kubernetes/how-to-guides/managing-resources-with-server-side-apply/) for
// additional information about using Server-Side Apply to manage Kubernetes resources with Pulumi.
// MutatingAdmissionPolicy describes the definition of an admission mutation policy that mutates the object coming into admission chain.
type MutatingAdmissionPolicyPatch struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.
	Metadata metav1.ObjectMetaPatchPtrOutput `pulumi:"metadata"`
	// Specification of the desired behavior of the MutatingAdmissionPolicy.
	Spec MutatingAdmissionPolicySpecPatchPtrOutput `pulumi:"spec"`
}

// NewMutatingAdmissionPolicyPatch registers a new resource with the given unique name, arguments, and options.
func NewMutatingAdmissionPolicyPatch(ctx *pulumi.Context,
	name string, args *MutatingAdmissionPolicyPatchArgs, opts ...pulumi.ResourceOption) (*MutatingAdmissionPolicyPatch, error) {
	if args == nil {
		args = &MutatingAdmissionPolicyPatchArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("admissionregistration.k8s.io/v1alpha1")
	args.Kind = pulumi.StringPtr("MutatingAdmissionPolicy")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource MutatingAdmissionPolicyPatch
	err := ctx.RegisterResource("kubernetes:admissionregistration.k8s.io/v1alpha1:MutatingAdmissionPolicyPatch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMutatingAdmissionPolicyPatch gets an existing MutatingAdmissionPolicyPatch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMutatingAdmissionPolicyPatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MutatingAdmissionPolicyPatchState, opts ...pulumi.ResourceOption) (*MutatingAdmissionPolicyPatch, error) {
	var resource MutatingAdmissionPolicyPatch
	err := ctx.ReadResource("kubernetes:admissionregistration.k8s.io/v1alpha1:MutatingAdmissionPolicyPatch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MutatingAdmissionPolicyPatch resources.
type mutatingAdmissionPolicyPatchState struct {
}

type MutatingAdmissionPolicyPatchState struct {
}

func (MutatingAdmissionPolicyPatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*mutatingAdmissionPolicyPatchState)(nil)).Elem()
}

type mutatingAdmissionPolicyPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	// Specification of the desired behavior of the MutatingAdmissionPolicy.
	Spec *MutatingAdmissionPolicySpecPatch `pulumi:"spec"`
}

// The set of arguments for constructing a MutatingAdmissionPolicyPatch resource.
type MutatingAdmissionPolicyPatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.
	Metadata metav1.ObjectMetaPatchPtrInput
	// Specification of the desired behavior of the MutatingAdmissionPolicy.
	Spec MutatingAdmissionPolicySpecPatchPtrInput
}

func (MutatingAdmissionPolicyPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mutatingAdmissionPolicyPatchArgs)(nil)).Elem()
}

type MutatingAdmissionPolicyPatchInput interface {
	pulumi.Input

	ToMutatingAdmissionPolicyPatchOutput() MutatingAdmissionPolicyPatchOutput
	ToMutatingAdmissionPolicyPatchOutputWithContext(ctx context.Context) MutatingAdmissionPolicyPatchOutput
}

func (*MutatingAdmissionPolicyPatch) ElementType() reflect.Type {
	return reflect.TypeOf((**MutatingAdmissionPolicyPatch)(nil)).Elem()
}

func (i *MutatingAdmissionPolicyPatch) ToMutatingAdmissionPolicyPatchOutput() MutatingAdmissionPolicyPatchOutput {
	return i.ToMutatingAdmissionPolicyPatchOutputWithContext(context.Background())
}

func (i *MutatingAdmissionPolicyPatch) ToMutatingAdmissionPolicyPatchOutputWithContext(ctx context.Context) MutatingAdmissionPolicyPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MutatingAdmissionPolicyPatchOutput)
}

// MutatingAdmissionPolicyPatchArrayInput is an input type that accepts MutatingAdmissionPolicyPatchArray and MutatingAdmissionPolicyPatchArrayOutput values.
// You can construct a concrete instance of `MutatingAdmissionPolicyPatchArrayInput` via:
//
//	MutatingAdmissionPolicyPatchArray{ MutatingAdmissionPolicyPatchArgs{...} }
type MutatingAdmissionPolicyPatchArrayInput interface {
	pulumi.Input

	ToMutatingAdmissionPolicyPatchArrayOutput() MutatingAdmissionPolicyPatchArrayOutput
	ToMutatingAdmissionPolicyPatchArrayOutputWithContext(context.Context) MutatingAdmissionPolicyPatchArrayOutput
}

type MutatingAdmissionPolicyPatchArray []MutatingAdmissionPolicyPatchInput

func (MutatingAdmissionPolicyPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MutatingAdmissionPolicyPatch)(nil)).Elem()
}

func (i MutatingAdmissionPolicyPatchArray) ToMutatingAdmissionPolicyPatchArrayOutput() MutatingAdmissionPolicyPatchArrayOutput {
	return i.ToMutatingAdmissionPolicyPatchArrayOutputWithContext(context.Background())
}

func (i MutatingAdmissionPolicyPatchArray) ToMutatingAdmissionPolicyPatchArrayOutputWithContext(ctx context.Context) MutatingAdmissionPolicyPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MutatingAdmissionPolicyPatchArrayOutput)
}

// MutatingAdmissionPolicyPatchMapInput is an input type that accepts MutatingAdmissionPolicyPatchMap and MutatingAdmissionPolicyPatchMapOutput values.
// You can construct a concrete instance of `MutatingAdmissionPolicyPatchMapInput` via:
//
//	MutatingAdmissionPolicyPatchMap{ "key": MutatingAdmissionPolicyPatchArgs{...} }
type MutatingAdmissionPolicyPatchMapInput interface {
	pulumi.Input

	ToMutatingAdmissionPolicyPatchMapOutput() MutatingAdmissionPolicyPatchMapOutput
	ToMutatingAdmissionPolicyPatchMapOutputWithContext(context.Context) MutatingAdmissionPolicyPatchMapOutput
}

type MutatingAdmissionPolicyPatchMap map[string]MutatingAdmissionPolicyPatchInput

func (MutatingAdmissionPolicyPatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MutatingAdmissionPolicyPatch)(nil)).Elem()
}

func (i MutatingAdmissionPolicyPatchMap) ToMutatingAdmissionPolicyPatchMapOutput() MutatingAdmissionPolicyPatchMapOutput {
	return i.ToMutatingAdmissionPolicyPatchMapOutputWithContext(context.Background())
}

func (i MutatingAdmissionPolicyPatchMap) ToMutatingAdmissionPolicyPatchMapOutputWithContext(ctx context.Context) MutatingAdmissionPolicyPatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MutatingAdmissionPolicyPatchMapOutput)
}

type MutatingAdmissionPolicyPatchOutput struct{ *pulumi.OutputState }

func (MutatingAdmissionPolicyPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MutatingAdmissionPolicyPatch)(nil)).Elem()
}

func (o MutatingAdmissionPolicyPatchOutput) ToMutatingAdmissionPolicyPatchOutput() MutatingAdmissionPolicyPatchOutput {
	return o
}

func (o MutatingAdmissionPolicyPatchOutput) ToMutatingAdmissionPolicyPatchOutputWithContext(ctx context.Context) MutatingAdmissionPolicyPatchOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o MutatingAdmissionPolicyPatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MutatingAdmissionPolicyPatch) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o MutatingAdmissionPolicyPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *MutatingAdmissionPolicyPatch) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object metadata; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata.
func (o MutatingAdmissionPolicyPatchOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v *MutatingAdmissionPolicyPatch) metav1.ObjectMetaPatchPtrOutput { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

// Specification of the desired behavior of the MutatingAdmissionPolicy.
func (o MutatingAdmissionPolicyPatchOutput) Spec() MutatingAdmissionPolicySpecPatchPtrOutput {
	return o.ApplyT(func(v *MutatingAdmissionPolicyPatch) MutatingAdmissionPolicySpecPatchPtrOutput { return v.Spec }).(MutatingAdmissionPolicySpecPatchPtrOutput)
}

type MutatingAdmissionPolicyPatchArrayOutput struct{ *pulumi.OutputState }

func (MutatingAdmissionPolicyPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MutatingAdmissionPolicyPatch)(nil)).Elem()
}

func (o MutatingAdmissionPolicyPatchArrayOutput) ToMutatingAdmissionPolicyPatchArrayOutput() MutatingAdmissionPolicyPatchArrayOutput {
	return o
}

func (o MutatingAdmissionPolicyPatchArrayOutput) ToMutatingAdmissionPolicyPatchArrayOutputWithContext(ctx context.Context) MutatingAdmissionPolicyPatchArrayOutput {
	return o
}

func (o MutatingAdmissionPolicyPatchArrayOutput) Index(i pulumi.IntInput) MutatingAdmissionPolicyPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MutatingAdmissionPolicyPatch {
		return vs[0].([]*MutatingAdmissionPolicyPatch)[vs[1].(int)]
	}).(MutatingAdmissionPolicyPatchOutput)
}

type MutatingAdmissionPolicyPatchMapOutput struct{ *pulumi.OutputState }

func (MutatingAdmissionPolicyPatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MutatingAdmissionPolicyPatch)(nil)).Elem()
}

func (o MutatingAdmissionPolicyPatchMapOutput) ToMutatingAdmissionPolicyPatchMapOutput() MutatingAdmissionPolicyPatchMapOutput {
	return o
}

func (o MutatingAdmissionPolicyPatchMapOutput) ToMutatingAdmissionPolicyPatchMapOutputWithContext(ctx context.Context) MutatingAdmissionPolicyPatchMapOutput {
	return o
}

func (o MutatingAdmissionPolicyPatchMapOutput) MapIndex(k pulumi.StringInput) MutatingAdmissionPolicyPatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MutatingAdmissionPolicyPatch {
		return vs[0].(map[string]*MutatingAdmissionPolicyPatch)[vs[1].(string)]
	}).(MutatingAdmissionPolicyPatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MutatingAdmissionPolicyPatchInput)(nil)).Elem(), &MutatingAdmissionPolicyPatch{})
	pulumi.RegisterInputType(reflect.TypeOf((*MutatingAdmissionPolicyPatchArrayInput)(nil)).Elem(), MutatingAdmissionPolicyPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MutatingAdmissionPolicyPatchMapInput)(nil)).Elem(), MutatingAdmissionPolicyPatchMap{})
	pulumi.RegisterOutputType(MutatingAdmissionPolicyPatchOutput{})
	pulumi.RegisterOutputType(MutatingAdmissionPolicyPatchArrayOutput{})
	pulumi.RegisterOutputType(MutatingAdmissionPolicyPatchMapOutput{})
}
