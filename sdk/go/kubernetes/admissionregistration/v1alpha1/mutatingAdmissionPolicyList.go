// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// MutatingAdmissionPolicyList is a list of MutatingAdmissionPolicy.
type MutatingAdmissionPolicyList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// List of ValidatingAdmissionPolicy.
	Items MutatingAdmissionPolicyTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewMutatingAdmissionPolicyList registers a new resource with the given unique name, arguments, and options.
func NewMutatingAdmissionPolicyList(ctx *pulumi.Context,
	name string, args *MutatingAdmissionPolicyListArgs, opts ...pulumi.ResourceOption) (*MutatingAdmissionPolicyList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("admissionregistration.k8s.io/v1alpha1")
	args.Kind = pulumi.StringPtr("MutatingAdmissionPolicyList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource MutatingAdmissionPolicyList
	err := ctx.RegisterResource("kubernetes:admissionregistration.k8s.io/v1alpha1:MutatingAdmissionPolicyList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetMutatingAdmissionPolicyList gets an existing MutatingAdmissionPolicyList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetMutatingAdmissionPolicyList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *MutatingAdmissionPolicyListState, opts ...pulumi.ResourceOption) (*MutatingAdmissionPolicyList, error) {
	var resource MutatingAdmissionPolicyList
	err := ctx.ReadResource("kubernetes:admissionregistration.k8s.io/v1alpha1:MutatingAdmissionPolicyList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering MutatingAdmissionPolicyList resources.
type mutatingAdmissionPolicyListState struct {
}

type MutatingAdmissionPolicyListState struct {
}

func (MutatingAdmissionPolicyListState) ElementType() reflect.Type {
	return reflect.TypeOf((*mutatingAdmissionPolicyListState)(nil)).Elem()
}

type mutatingAdmissionPolicyListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// List of ValidatingAdmissionPolicy.
	Items []MutatingAdmissionPolicyType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a MutatingAdmissionPolicyList resource.
type MutatingAdmissionPolicyListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// List of ValidatingAdmissionPolicy.
	Items MutatingAdmissionPolicyTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Metadata metav1.ListMetaPtrInput
}

func (MutatingAdmissionPolicyListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*mutatingAdmissionPolicyListArgs)(nil)).Elem()
}

type MutatingAdmissionPolicyListInput interface {
	pulumi.Input

	ToMutatingAdmissionPolicyListOutput() MutatingAdmissionPolicyListOutput
	ToMutatingAdmissionPolicyListOutputWithContext(ctx context.Context) MutatingAdmissionPolicyListOutput
}

func (*MutatingAdmissionPolicyList) ElementType() reflect.Type {
	return reflect.TypeOf((**MutatingAdmissionPolicyList)(nil)).Elem()
}

func (i *MutatingAdmissionPolicyList) ToMutatingAdmissionPolicyListOutput() MutatingAdmissionPolicyListOutput {
	return i.ToMutatingAdmissionPolicyListOutputWithContext(context.Background())
}

func (i *MutatingAdmissionPolicyList) ToMutatingAdmissionPolicyListOutputWithContext(ctx context.Context) MutatingAdmissionPolicyListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MutatingAdmissionPolicyListOutput)
}

// MutatingAdmissionPolicyListArrayInput is an input type that accepts MutatingAdmissionPolicyListArray and MutatingAdmissionPolicyListArrayOutput values.
// You can construct a concrete instance of `MutatingAdmissionPolicyListArrayInput` via:
//
//	MutatingAdmissionPolicyListArray{ MutatingAdmissionPolicyListArgs{...} }
type MutatingAdmissionPolicyListArrayInput interface {
	pulumi.Input

	ToMutatingAdmissionPolicyListArrayOutput() MutatingAdmissionPolicyListArrayOutput
	ToMutatingAdmissionPolicyListArrayOutputWithContext(context.Context) MutatingAdmissionPolicyListArrayOutput
}

type MutatingAdmissionPolicyListArray []MutatingAdmissionPolicyListInput

func (MutatingAdmissionPolicyListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MutatingAdmissionPolicyList)(nil)).Elem()
}

func (i MutatingAdmissionPolicyListArray) ToMutatingAdmissionPolicyListArrayOutput() MutatingAdmissionPolicyListArrayOutput {
	return i.ToMutatingAdmissionPolicyListArrayOutputWithContext(context.Background())
}

func (i MutatingAdmissionPolicyListArray) ToMutatingAdmissionPolicyListArrayOutputWithContext(ctx context.Context) MutatingAdmissionPolicyListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MutatingAdmissionPolicyListArrayOutput)
}

// MutatingAdmissionPolicyListMapInput is an input type that accepts MutatingAdmissionPolicyListMap and MutatingAdmissionPolicyListMapOutput values.
// You can construct a concrete instance of `MutatingAdmissionPolicyListMapInput` via:
//
//	MutatingAdmissionPolicyListMap{ "key": MutatingAdmissionPolicyListArgs{...} }
type MutatingAdmissionPolicyListMapInput interface {
	pulumi.Input

	ToMutatingAdmissionPolicyListMapOutput() MutatingAdmissionPolicyListMapOutput
	ToMutatingAdmissionPolicyListMapOutputWithContext(context.Context) MutatingAdmissionPolicyListMapOutput
}

type MutatingAdmissionPolicyListMap map[string]MutatingAdmissionPolicyListInput

func (MutatingAdmissionPolicyListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MutatingAdmissionPolicyList)(nil)).Elem()
}

func (i MutatingAdmissionPolicyListMap) ToMutatingAdmissionPolicyListMapOutput() MutatingAdmissionPolicyListMapOutput {
	return i.ToMutatingAdmissionPolicyListMapOutputWithContext(context.Background())
}

func (i MutatingAdmissionPolicyListMap) ToMutatingAdmissionPolicyListMapOutputWithContext(ctx context.Context) MutatingAdmissionPolicyListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(MutatingAdmissionPolicyListMapOutput)
}

type MutatingAdmissionPolicyListOutput struct{ *pulumi.OutputState }

func (MutatingAdmissionPolicyListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**MutatingAdmissionPolicyList)(nil)).Elem()
}

func (o MutatingAdmissionPolicyListOutput) ToMutatingAdmissionPolicyListOutput() MutatingAdmissionPolicyListOutput {
	return o
}

func (o MutatingAdmissionPolicyListOutput) ToMutatingAdmissionPolicyListOutputWithContext(ctx context.Context) MutatingAdmissionPolicyListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o MutatingAdmissionPolicyListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *MutatingAdmissionPolicyList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// List of ValidatingAdmissionPolicy.
func (o MutatingAdmissionPolicyListOutput) Items() MutatingAdmissionPolicyTypeArrayOutput {
	return o.ApplyT(func(v *MutatingAdmissionPolicyList) MutatingAdmissionPolicyTypeArrayOutput { return v.Items }).(MutatingAdmissionPolicyTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o MutatingAdmissionPolicyListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *MutatingAdmissionPolicyList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o MutatingAdmissionPolicyListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *MutatingAdmissionPolicyList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type MutatingAdmissionPolicyListArrayOutput struct{ *pulumi.OutputState }

func (MutatingAdmissionPolicyListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*MutatingAdmissionPolicyList)(nil)).Elem()
}

func (o MutatingAdmissionPolicyListArrayOutput) ToMutatingAdmissionPolicyListArrayOutput() MutatingAdmissionPolicyListArrayOutput {
	return o
}

func (o MutatingAdmissionPolicyListArrayOutput) ToMutatingAdmissionPolicyListArrayOutputWithContext(ctx context.Context) MutatingAdmissionPolicyListArrayOutput {
	return o
}

func (o MutatingAdmissionPolicyListArrayOutput) Index(i pulumi.IntInput) MutatingAdmissionPolicyListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *MutatingAdmissionPolicyList {
		return vs[0].([]*MutatingAdmissionPolicyList)[vs[1].(int)]
	}).(MutatingAdmissionPolicyListOutput)
}

type MutatingAdmissionPolicyListMapOutput struct{ *pulumi.OutputState }

func (MutatingAdmissionPolicyListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*MutatingAdmissionPolicyList)(nil)).Elem()
}

func (o MutatingAdmissionPolicyListMapOutput) ToMutatingAdmissionPolicyListMapOutput() MutatingAdmissionPolicyListMapOutput {
	return o
}

func (o MutatingAdmissionPolicyListMapOutput) ToMutatingAdmissionPolicyListMapOutputWithContext(ctx context.Context) MutatingAdmissionPolicyListMapOutput {
	return o
}

func (o MutatingAdmissionPolicyListMapOutput) MapIndex(k pulumi.StringInput) MutatingAdmissionPolicyListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *MutatingAdmissionPolicyList {
		return vs[0].(map[string]*MutatingAdmissionPolicyList)[vs[1].(string)]
	}).(MutatingAdmissionPolicyListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*MutatingAdmissionPolicyListInput)(nil)).Elem(), &MutatingAdmissionPolicyList{})
	pulumi.RegisterInputType(reflect.TypeOf((*MutatingAdmissionPolicyListArrayInput)(nil)).Elem(), MutatingAdmissionPolicyListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*MutatingAdmissionPolicyListMapInput)(nil)).Elem(), MutatingAdmissionPolicyListMap{})
	pulumi.RegisterOutputType(MutatingAdmissionPolicyListOutput{})
	pulumi.RegisterOutputType(MutatingAdmissionPolicyListArrayOutput{})
	pulumi.RegisterOutputType(MutatingAdmissionPolicyListMapOutput{})
}
