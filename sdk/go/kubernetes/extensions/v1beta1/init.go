// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"fmt"

	"github.com/blang/semver"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

type module struct {
	version semver.Version
}

func (m *module) Version() semver.Version {
	return m.version
}

func (m *module) Construct(ctx *pulumi.Context, name, typ, urn string) (r pulumi.Resource, err error) {
	switch typ {
	case "kubernetes:extensions/v1beta1:DaemonSet":
		r = &DaemonSet{}
	case "kubernetes:extensions/v1beta1:DaemonSetList":
		r = &DaemonSetList{}
	case "kubernetes:extensions/v1beta1:DaemonSetPatch":
		r = &DaemonSetPatch{}
	case "kubernetes:extensions/v1beta1:Deployment":
		r = &Deployment{}
	case "kubernetes:extensions/v1beta1:DeploymentList":
		r = &DeploymentList{}
	case "kubernetes:extensions/v1beta1:DeploymentPatch":
		r = &DeploymentPatch{}
	case "kubernetes:extensions/v1beta1:Ingress":
		r = &Ingress{}
	case "kubernetes:extensions/v1beta1:IngressList":
		r = &IngressList{}
	case "kubernetes:extensions/v1beta1:IngressPatch":
		r = &IngressPatch{}
	case "kubernetes:extensions/v1beta1:NetworkPolicy":
		r = &NetworkPolicy{}
	case "kubernetes:extensions/v1beta1:NetworkPolicyList":
		r = &NetworkPolicyList{}
	case "kubernetes:extensions/v1beta1:NetworkPolicyPatch":
		r = &NetworkPolicyPatch{}
	case "kubernetes:extensions/v1beta1:PodSecurityPolicy":
		r = &PodSecurityPolicy{}
	case "kubernetes:extensions/v1beta1:PodSecurityPolicyList":
		r = &PodSecurityPolicyList{}
	case "kubernetes:extensions/v1beta1:PodSecurityPolicyPatch":
		r = &PodSecurityPolicyPatch{}
	case "kubernetes:extensions/v1beta1:ReplicaSet":
		r = &ReplicaSet{}
	case "kubernetes:extensions/v1beta1:ReplicaSetList":
		r = &ReplicaSetList{}
	case "kubernetes:extensions/v1beta1:ReplicaSetPatch":
		r = &ReplicaSetPatch{}
	default:
		return nil, fmt.Errorf("unknown resource type: %s", typ)
	}

	err = ctx.RegisterResource(typ, name, nil, r, pulumi.URN_(urn))
	return
}

func init() {
	version, err := kubernetes.PkgVersion()
	if err != nil {
		version = semver.Version{Major: 1}
	}
	pulumi.RegisterResourceModule(
		"kubernetes",
		"extensions/v1beta1",
		&module{version},
	)
}
