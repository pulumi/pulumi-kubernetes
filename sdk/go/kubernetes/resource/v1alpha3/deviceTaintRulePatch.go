// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha3

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Patch resources are used to modify existing Kubernetes resources by using
// Server-Side Apply updates. The name of the resource must be specified, but all other properties are optional. More than
// one patch may be applied to the same resource, and a random FieldManager name will be used for each Patch resource.
// Conflicts will result in an error by default, but can be forced using the "pulumi.com/patchForce" annotation. See the
// [Server-Side Apply Docs](https://www.pulumi.com/registry/packages/kubernetes/how-to-guides/managing-resources-with-server-side-apply/) for
// additional information about using Server-Side Apply to manage Kubernetes resources with Pulumi.
// DeviceTaintRule adds one taint to all devices which match the selector. This has the same effect as if the taint was specified directly in the ResourceSlice by the DRA driver.
type DeviceTaintRulePatch struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard object metadata
	Metadata metav1.ObjectMetaPatchPtrOutput `pulumi:"metadata"`
	// Spec specifies the selector and one taint.
	//
	// Changing the spec automatically increments the metadata.generation number.
	Spec DeviceTaintRuleSpecPatchPtrOutput `pulumi:"spec"`
}

// NewDeviceTaintRulePatch registers a new resource with the given unique name, arguments, and options.
func NewDeviceTaintRulePatch(ctx *pulumi.Context,
	name string, args *DeviceTaintRulePatchArgs, opts ...pulumi.ResourceOption) (*DeviceTaintRulePatch, error) {
	if args == nil {
		args = &DeviceTaintRulePatchArgs{}
	}

	args.ApiVersion = pulumi.StringPtr("resource.k8s.io/v1alpha3")
	args.Kind = pulumi.StringPtr("DeviceTaintRule")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource DeviceTaintRulePatch
	err := ctx.RegisterResource("kubernetes:resource.k8s.io/v1alpha3:DeviceTaintRulePatch", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeviceTaintRulePatch gets an existing DeviceTaintRulePatch resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeviceTaintRulePatch(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeviceTaintRulePatchState, opts ...pulumi.ResourceOption) (*DeviceTaintRulePatch, error) {
	var resource DeviceTaintRulePatch
	err := ctx.ReadResource("kubernetes:resource.k8s.io/v1alpha3:DeviceTaintRulePatch", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeviceTaintRulePatch resources.
type deviceTaintRulePatchState struct {
}

type DeviceTaintRulePatchState struct {
}

func (DeviceTaintRulePatchState) ElementType() reflect.Type {
	return reflect.TypeOf((*deviceTaintRulePatchState)(nil)).Elem()
}

type deviceTaintRulePatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object metadata
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	// Spec specifies the selector and one taint.
	//
	// Changing the spec automatically increments the metadata.generation number.
	Spec *DeviceTaintRuleSpecPatch `pulumi:"spec"`
}

// The set of arguments for constructing a DeviceTaintRulePatch resource.
type DeviceTaintRulePatchArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object metadata
	Metadata metav1.ObjectMetaPatchPtrInput
	// Spec specifies the selector and one taint.
	//
	// Changing the spec automatically increments the metadata.generation number.
	Spec DeviceTaintRuleSpecPatchPtrInput
}

func (DeviceTaintRulePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deviceTaintRulePatchArgs)(nil)).Elem()
}

type DeviceTaintRulePatchInput interface {
	pulumi.Input

	ToDeviceTaintRulePatchOutput() DeviceTaintRulePatchOutput
	ToDeviceTaintRulePatchOutputWithContext(ctx context.Context) DeviceTaintRulePatchOutput
}

func (*DeviceTaintRulePatch) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceTaintRulePatch)(nil)).Elem()
}

func (i *DeviceTaintRulePatch) ToDeviceTaintRulePatchOutput() DeviceTaintRulePatchOutput {
	return i.ToDeviceTaintRulePatchOutputWithContext(context.Background())
}

func (i *DeviceTaintRulePatch) ToDeviceTaintRulePatchOutputWithContext(ctx context.Context) DeviceTaintRulePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceTaintRulePatchOutput)
}

// DeviceTaintRulePatchArrayInput is an input type that accepts DeviceTaintRulePatchArray and DeviceTaintRulePatchArrayOutput values.
// You can construct a concrete instance of `DeviceTaintRulePatchArrayInput` via:
//
//	DeviceTaintRulePatchArray{ DeviceTaintRulePatchArgs{...} }
type DeviceTaintRulePatchArrayInput interface {
	pulumi.Input

	ToDeviceTaintRulePatchArrayOutput() DeviceTaintRulePatchArrayOutput
	ToDeviceTaintRulePatchArrayOutputWithContext(context.Context) DeviceTaintRulePatchArrayOutput
}

type DeviceTaintRulePatchArray []DeviceTaintRulePatchInput

func (DeviceTaintRulePatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeviceTaintRulePatch)(nil)).Elem()
}

func (i DeviceTaintRulePatchArray) ToDeviceTaintRulePatchArrayOutput() DeviceTaintRulePatchArrayOutput {
	return i.ToDeviceTaintRulePatchArrayOutputWithContext(context.Background())
}

func (i DeviceTaintRulePatchArray) ToDeviceTaintRulePatchArrayOutputWithContext(ctx context.Context) DeviceTaintRulePatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceTaintRulePatchArrayOutput)
}

// DeviceTaintRulePatchMapInput is an input type that accepts DeviceTaintRulePatchMap and DeviceTaintRulePatchMapOutput values.
// You can construct a concrete instance of `DeviceTaintRulePatchMapInput` via:
//
//	DeviceTaintRulePatchMap{ "key": DeviceTaintRulePatchArgs{...} }
type DeviceTaintRulePatchMapInput interface {
	pulumi.Input

	ToDeviceTaintRulePatchMapOutput() DeviceTaintRulePatchMapOutput
	ToDeviceTaintRulePatchMapOutputWithContext(context.Context) DeviceTaintRulePatchMapOutput
}

type DeviceTaintRulePatchMap map[string]DeviceTaintRulePatchInput

func (DeviceTaintRulePatchMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeviceTaintRulePatch)(nil)).Elem()
}

func (i DeviceTaintRulePatchMap) ToDeviceTaintRulePatchMapOutput() DeviceTaintRulePatchMapOutput {
	return i.ToDeviceTaintRulePatchMapOutputWithContext(context.Background())
}

func (i DeviceTaintRulePatchMap) ToDeviceTaintRulePatchMapOutputWithContext(ctx context.Context) DeviceTaintRulePatchMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceTaintRulePatchMapOutput)
}

type DeviceTaintRulePatchOutput struct{ *pulumi.OutputState }

func (DeviceTaintRulePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceTaintRulePatch)(nil)).Elem()
}

func (o DeviceTaintRulePatchOutput) ToDeviceTaintRulePatchOutput() DeviceTaintRulePatchOutput {
	return o
}

func (o DeviceTaintRulePatchOutput) ToDeviceTaintRulePatchOutputWithContext(ctx context.Context) DeviceTaintRulePatchOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o DeviceTaintRulePatchOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceTaintRulePatch) pulumi.StringPtrOutput { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o DeviceTaintRulePatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *DeviceTaintRulePatch) pulumi.StringPtrOutput { return v.Kind }).(pulumi.StringPtrOutput)
}

// Standard object metadata
func (o DeviceTaintRulePatchOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v *DeviceTaintRulePatch) metav1.ObjectMetaPatchPtrOutput { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

// Spec specifies the selector and one taint.
//
// Changing the spec automatically increments the metadata.generation number.
func (o DeviceTaintRulePatchOutput) Spec() DeviceTaintRuleSpecPatchPtrOutput {
	return o.ApplyT(func(v *DeviceTaintRulePatch) DeviceTaintRuleSpecPatchPtrOutput { return v.Spec }).(DeviceTaintRuleSpecPatchPtrOutput)
}

type DeviceTaintRulePatchArrayOutput struct{ *pulumi.OutputState }

func (DeviceTaintRulePatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeviceTaintRulePatch)(nil)).Elem()
}

func (o DeviceTaintRulePatchArrayOutput) ToDeviceTaintRulePatchArrayOutput() DeviceTaintRulePatchArrayOutput {
	return o
}

func (o DeviceTaintRulePatchArrayOutput) ToDeviceTaintRulePatchArrayOutputWithContext(ctx context.Context) DeviceTaintRulePatchArrayOutput {
	return o
}

func (o DeviceTaintRulePatchArrayOutput) Index(i pulumi.IntInput) DeviceTaintRulePatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DeviceTaintRulePatch {
		return vs[0].([]*DeviceTaintRulePatch)[vs[1].(int)]
	}).(DeviceTaintRulePatchOutput)
}

type DeviceTaintRulePatchMapOutput struct{ *pulumi.OutputState }

func (DeviceTaintRulePatchMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeviceTaintRulePatch)(nil)).Elem()
}

func (o DeviceTaintRulePatchMapOutput) ToDeviceTaintRulePatchMapOutput() DeviceTaintRulePatchMapOutput {
	return o
}

func (o DeviceTaintRulePatchMapOutput) ToDeviceTaintRulePatchMapOutputWithContext(ctx context.Context) DeviceTaintRulePatchMapOutput {
	return o
}

func (o DeviceTaintRulePatchMapOutput) MapIndex(k pulumi.StringInput) DeviceTaintRulePatchOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DeviceTaintRulePatch {
		return vs[0].(map[string]*DeviceTaintRulePatch)[vs[1].(string)]
	}).(DeviceTaintRulePatchOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceTaintRulePatchInput)(nil)).Elem(), &DeviceTaintRulePatch{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceTaintRulePatchArrayInput)(nil)).Elem(), DeviceTaintRulePatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceTaintRulePatchMapInput)(nil)).Elem(), DeviceTaintRulePatchMap{})
	pulumi.RegisterOutputType(DeviceTaintRulePatchOutput{})
	pulumi.RegisterOutputType(DeviceTaintRulePatchArrayOutput{})
	pulumi.RegisterOutputType(DeviceTaintRulePatchMapOutput{})
}
