// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha3

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// DeviceTaintRuleList is a collection of DeviceTaintRules.
type DeviceTaintRuleList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Items is the list of DeviceTaintRules.
	Items DeviceTaintRuleTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewDeviceTaintRuleList registers a new resource with the given unique name, arguments, and options.
func NewDeviceTaintRuleList(ctx *pulumi.Context,
	name string, args *DeviceTaintRuleListArgs, opts ...pulumi.ResourceOption) (*DeviceTaintRuleList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("resource.k8s.io/v1alpha3")
	args.Kind = pulumi.StringPtr("DeviceTaintRuleList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource DeviceTaintRuleList
	err := ctx.RegisterResource("kubernetes:resource.k8s.io/v1alpha3:DeviceTaintRuleList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDeviceTaintRuleList gets an existing DeviceTaintRuleList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDeviceTaintRuleList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DeviceTaintRuleListState, opts ...pulumi.ResourceOption) (*DeviceTaintRuleList, error) {
	var resource DeviceTaintRuleList
	err := ctx.ReadResource("kubernetes:resource.k8s.io/v1alpha3:DeviceTaintRuleList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering DeviceTaintRuleList resources.
type deviceTaintRuleListState struct {
}

type DeviceTaintRuleListState struct {
}

func (DeviceTaintRuleListState) ElementType() reflect.Type {
	return reflect.TypeOf((*deviceTaintRuleListState)(nil)).Elem()
}

type deviceTaintRuleListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Items is the list of DeviceTaintRules.
	Items []DeviceTaintRuleType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a DeviceTaintRuleList resource.
type DeviceTaintRuleListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Items is the list of DeviceTaintRules.
	Items DeviceTaintRuleTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata
	Metadata metav1.ListMetaPtrInput
}

func (DeviceTaintRuleListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*deviceTaintRuleListArgs)(nil)).Elem()
}

type DeviceTaintRuleListInput interface {
	pulumi.Input

	ToDeviceTaintRuleListOutput() DeviceTaintRuleListOutput
	ToDeviceTaintRuleListOutputWithContext(ctx context.Context) DeviceTaintRuleListOutput
}

func (*DeviceTaintRuleList) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceTaintRuleList)(nil)).Elem()
}

func (i *DeviceTaintRuleList) ToDeviceTaintRuleListOutput() DeviceTaintRuleListOutput {
	return i.ToDeviceTaintRuleListOutputWithContext(context.Background())
}

func (i *DeviceTaintRuleList) ToDeviceTaintRuleListOutputWithContext(ctx context.Context) DeviceTaintRuleListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceTaintRuleListOutput)
}

// DeviceTaintRuleListArrayInput is an input type that accepts DeviceTaintRuleListArray and DeviceTaintRuleListArrayOutput values.
// You can construct a concrete instance of `DeviceTaintRuleListArrayInput` via:
//
//	DeviceTaintRuleListArray{ DeviceTaintRuleListArgs{...} }
type DeviceTaintRuleListArrayInput interface {
	pulumi.Input

	ToDeviceTaintRuleListArrayOutput() DeviceTaintRuleListArrayOutput
	ToDeviceTaintRuleListArrayOutputWithContext(context.Context) DeviceTaintRuleListArrayOutput
}

type DeviceTaintRuleListArray []DeviceTaintRuleListInput

func (DeviceTaintRuleListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeviceTaintRuleList)(nil)).Elem()
}

func (i DeviceTaintRuleListArray) ToDeviceTaintRuleListArrayOutput() DeviceTaintRuleListArrayOutput {
	return i.ToDeviceTaintRuleListArrayOutputWithContext(context.Background())
}

func (i DeviceTaintRuleListArray) ToDeviceTaintRuleListArrayOutputWithContext(ctx context.Context) DeviceTaintRuleListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceTaintRuleListArrayOutput)
}

// DeviceTaintRuleListMapInput is an input type that accepts DeviceTaintRuleListMap and DeviceTaintRuleListMapOutput values.
// You can construct a concrete instance of `DeviceTaintRuleListMapInput` via:
//
//	DeviceTaintRuleListMap{ "key": DeviceTaintRuleListArgs{...} }
type DeviceTaintRuleListMapInput interface {
	pulumi.Input

	ToDeviceTaintRuleListMapOutput() DeviceTaintRuleListMapOutput
	ToDeviceTaintRuleListMapOutputWithContext(context.Context) DeviceTaintRuleListMapOutput
}

type DeviceTaintRuleListMap map[string]DeviceTaintRuleListInput

func (DeviceTaintRuleListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeviceTaintRuleList)(nil)).Elem()
}

func (i DeviceTaintRuleListMap) ToDeviceTaintRuleListMapOutput() DeviceTaintRuleListMapOutput {
	return i.ToDeviceTaintRuleListMapOutputWithContext(context.Background())
}

func (i DeviceTaintRuleListMap) ToDeviceTaintRuleListMapOutputWithContext(ctx context.Context) DeviceTaintRuleListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(DeviceTaintRuleListMapOutput)
}

type DeviceTaintRuleListOutput struct{ *pulumi.OutputState }

func (DeviceTaintRuleListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**DeviceTaintRuleList)(nil)).Elem()
}

func (o DeviceTaintRuleListOutput) ToDeviceTaintRuleListOutput() DeviceTaintRuleListOutput {
	return o
}

func (o DeviceTaintRuleListOutput) ToDeviceTaintRuleListOutputWithContext(ctx context.Context) DeviceTaintRuleListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o DeviceTaintRuleListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *DeviceTaintRuleList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Items is the list of DeviceTaintRules.
func (o DeviceTaintRuleListOutput) Items() DeviceTaintRuleTypeArrayOutput {
	return o.ApplyT(func(v *DeviceTaintRuleList) DeviceTaintRuleTypeArrayOutput { return v.Items }).(DeviceTaintRuleTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o DeviceTaintRuleListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *DeviceTaintRuleList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata
func (o DeviceTaintRuleListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *DeviceTaintRuleList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type DeviceTaintRuleListArrayOutput struct{ *pulumi.OutputState }

func (DeviceTaintRuleListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*DeviceTaintRuleList)(nil)).Elem()
}

func (o DeviceTaintRuleListArrayOutput) ToDeviceTaintRuleListArrayOutput() DeviceTaintRuleListArrayOutput {
	return o
}

func (o DeviceTaintRuleListArrayOutput) ToDeviceTaintRuleListArrayOutputWithContext(ctx context.Context) DeviceTaintRuleListArrayOutput {
	return o
}

func (o DeviceTaintRuleListArrayOutput) Index(i pulumi.IntInput) DeviceTaintRuleListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *DeviceTaintRuleList {
		return vs[0].([]*DeviceTaintRuleList)[vs[1].(int)]
	}).(DeviceTaintRuleListOutput)
}

type DeviceTaintRuleListMapOutput struct{ *pulumi.OutputState }

func (DeviceTaintRuleListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*DeviceTaintRuleList)(nil)).Elem()
}

func (o DeviceTaintRuleListMapOutput) ToDeviceTaintRuleListMapOutput() DeviceTaintRuleListMapOutput {
	return o
}

func (o DeviceTaintRuleListMapOutput) ToDeviceTaintRuleListMapOutputWithContext(ctx context.Context) DeviceTaintRuleListMapOutput {
	return o
}

func (o DeviceTaintRuleListMapOutput) MapIndex(k pulumi.StringInput) DeviceTaintRuleListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *DeviceTaintRuleList {
		return vs[0].(map[string]*DeviceTaintRuleList)[vs[1].(string)]
	}).(DeviceTaintRuleListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceTaintRuleListInput)(nil)).Elem(), &DeviceTaintRuleList{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceTaintRuleListArrayInput)(nil)).Elem(), DeviceTaintRuleListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*DeviceTaintRuleListMapInput)(nil)).Elem(), DeviceTaintRuleListMap{})
	pulumi.RegisterOutputType(DeviceTaintRuleListOutput{})
	pulumi.RegisterOutputType(DeviceTaintRuleListArrayOutput{})
	pulumi.RegisterOutputType(DeviceTaintRuleListMapOutput{})
}
