// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// PodSchedulingList is a collection of Pod scheduling objects.
type PodSchedulingList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Items is the list of PodScheduling objects.
	Items PodSchedulingTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewPodSchedulingList registers a new resource with the given unique name, arguments, and options.
func NewPodSchedulingList(ctx *pulumi.Context,
	name string, args *PodSchedulingListArgs, opts ...pulumi.ResourceOption) (*PodSchedulingList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("resource.k8s.io/v1alpha1")
	args.Kind = pulumi.StringPtr("PodSchedulingList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PodSchedulingList
	err := ctx.RegisterResource("kubernetes:resource.k8s.io/v1alpha1:PodSchedulingList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPodSchedulingList gets an existing PodSchedulingList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPodSchedulingList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PodSchedulingListState, opts ...pulumi.ResourceOption) (*PodSchedulingList, error) {
	var resource PodSchedulingList
	err := ctx.ReadResource("kubernetes:resource.k8s.io/v1alpha1:PodSchedulingList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PodSchedulingList resources.
type podSchedulingListState struct {
}

type PodSchedulingListState struct {
}

func (PodSchedulingListState) ElementType() reflect.Type {
	return reflect.TypeOf((*podSchedulingListState)(nil)).Elem()
}

type podSchedulingListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Items is the list of PodScheduling objects.
	Items []PodSchedulingType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a PodSchedulingList resource.
type PodSchedulingListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Items is the list of PodScheduling objects.
	Items PodSchedulingTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata
	Metadata metav1.ListMetaPtrInput
}

func (PodSchedulingListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*podSchedulingListArgs)(nil)).Elem()
}

type PodSchedulingListInput interface {
	pulumi.Input

	ToPodSchedulingListOutput() PodSchedulingListOutput
	ToPodSchedulingListOutputWithContext(ctx context.Context) PodSchedulingListOutput
}

func (*PodSchedulingList) ElementType() reflect.Type {
	return reflect.TypeOf((**PodSchedulingList)(nil)).Elem()
}

func (i *PodSchedulingList) ToPodSchedulingListOutput() PodSchedulingListOutput {
	return i.ToPodSchedulingListOutputWithContext(context.Background())
}

func (i *PodSchedulingList) ToPodSchedulingListOutputWithContext(ctx context.Context) PodSchedulingListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PodSchedulingListOutput)
}

// PodSchedulingListArrayInput is an input type that accepts PodSchedulingListArray and PodSchedulingListArrayOutput values.
// You can construct a concrete instance of `PodSchedulingListArrayInput` via:
//
//	PodSchedulingListArray{ PodSchedulingListArgs{...} }
type PodSchedulingListArrayInput interface {
	pulumi.Input

	ToPodSchedulingListArrayOutput() PodSchedulingListArrayOutput
	ToPodSchedulingListArrayOutputWithContext(context.Context) PodSchedulingListArrayOutput
}

type PodSchedulingListArray []PodSchedulingListInput

func (PodSchedulingListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PodSchedulingList)(nil)).Elem()
}

func (i PodSchedulingListArray) ToPodSchedulingListArrayOutput() PodSchedulingListArrayOutput {
	return i.ToPodSchedulingListArrayOutputWithContext(context.Background())
}

func (i PodSchedulingListArray) ToPodSchedulingListArrayOutputWithContext(ctx context.Context) PodSchedulingListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PodSchedulingListArrayOutput)
}

// PodSchedulingListMapInput is an input type that accepts PodSchedulingListMap and PodSchedulingListMapOutput values.
// You can construct a concrete instance of `PodSchedulingListMapInput` via:
//
//	PodSchedulingListMap{ "key": PodSchedulingListArgs{...} }
type PodSchedulingListMapInput interface {
	pulumi.Input

	ToPodSchedulingListMapOutput() PodSchedulingListMapOutput
	ToPodSchedulingListMapOutputWithContext(context.Context) PodSchedulingListMapOutput
}

type PodSchedulingListMap map[string]PodSchedulingListInput

func (PodSchedulingListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PodSchedulingList)(nil)).Elem()
}

func (i PodSchedulingListMap) ToPodSchedulingListMapOutput() PodSchedulingListMapOutput {
	return i.ToPodSchedulingListMapOutputWithContext(context.Background())
}

func (i PodSchedulingListMap) ToPodSchedulingListMapOutputWithContext(ctx context.Context) PodSchedulingListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PodSchedulingListMapOutput)
}

type PodSchedulingListOutput struct{ *pulumi.OutputState }

func (PodSchedulingListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PodSchedulingList)(nil)).Elem()
}

func (o PodSchedulingListOutput) ToPodSchedulingListOutput() PodSchedulingListOutput {
	return o
}

func (o PodSchedulingListOutput) ToPodSchedulingListOutputWithContext(ctx context.Context) PodSchedulingListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PodSchedulingListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *PodSchedulingList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Items is the list of PodScheduling objects.
func (o PodSchedulingListOutput) Items() PodSchedulingTypeArrayOutput {
	return o.ApplyT(func(v *PodSchedulingList) PodSchedulingTypeArrayOutput { return v.Items }).(PodSchedulingTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PodSchedulingListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *PodSchedulingList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata
func (o PodSchedulingListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *PodSchedulingList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type PodSchedulingListArrayOutput struct{ *pulumi.OutputState }

func (PodSchedulingListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PodSchedulingList)(nil)).Elem()
}

func (o PodSchedulingListArrayOutput) ToPodSchedulingListArrayOutput() PodSchedulingListArrayOutput {
	return o
}

func (o PodSchedulingListArrayOutput) ToPodSchedulingListArrayOutputWithContext(ctx context.Context) PodSchedulingListArrayOutput {
	return o
}

func (o PodSchedulingListArrayOutput) Index(i pulumi.IntInput) PodSchedulingListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PodSchedulingList {
		return vs[0].([]*PodSchedulingList)[vs[1].(int)]
	}).(PodSchedulingListOutput)
}

type PodSchedulingListMapOutput struct{ *pulumi.OutputState }

func (PodSchedulingListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PodSchedulingList)(nil)).Elem()
}

func (o PodSchedulingListMapOutput) ToPodSchedulingListMapOutput() PodSchedulingListMapOutput {
	return o
}

func (o PodSchedulingListMapOutput) ToPodSchedulingListMapOutputWithContext(ctx context.Context) PodSchedulingListMapOutput {
	return o
}

func (o PodSchedulingListMapOutput) MapIndex(k pulumi.StringInput) PodSchedulingListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PodSchedulingList {
		return vs[0].(map[string]*PodSchedulingList)[vs[1].(string)]
	}).(PodSchedulingListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PodSchedulingListInput)(nil)).Elem(), &PodSchedulingList{})
	pulumi.RegisterInputType(reflect.TypeOf((*PodSchedulingListArrayInput)(nil)).Elem(), PodSchedulingListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PodSchedulingListMapInput)(nil)).Elem(), PodSchedulingListMap{})
	pulumi.RegisterOutputType(PodSchedulingListOutput{})
	pulumi.RegisterOutputType(PodSchedulingListArrayOutput{})
	pulumi.RegisterOutputType(PodSchedulingListMapOutput{})
}
