// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha2

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// PodSchedulingContextList is a collection of Pod scheduling objects.
type PodSchedulingContextList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Items is the list of PodSchedulingContext objects.
	Items PodSchedulingContextTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewPodSchedulingContextList registers a new resource with the given unique name, arguments, and options.
func NewPodSchedulingContextList(ctx *pulumi.Context,
	name string, args *PodSchedulingContextListArgs, opts ...pulumi.ResourceOption) (*PodSchedulingContextList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("resource.k8s.io/v1alpha2")
	args.Kind = pulumi.StringPtr("PodSchedulingContextList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource PodSchedulingContextList
	err := ctx.RegisterResource("kubernetes:resource.k8s.io/v1alpha2:PodSchedulingContextList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetPodSchedulingContextList gets an existing PodSchedulingContextList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetPodSchedulingContextList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *PodSchedulingContextListState, opts ...pulumi.ResourceOption) (*PodSchedulingContextList, error) {
	var resource PodSchedulingContextList
	err := ctx.ReadResource("kubernetes:resource.k8s.io/v1alpha2:PodSchedulingContextList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering PodSchedulingContextList resources.
type podSchedulingContextListState struct {
}

type PodSchedulingContextListState struct {
}

func (PodSchedulingContextListState) ElementType() reflect.Type {
	return reflect.TypeOf((*podSchedulingContextListState)(nil)).Elem()
}

type podSchedulingContextListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Items is the list of PodSchedulingContext objects.
	Items []PodSchedulingContextType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a PodSchedulingContextList resource.
type PodSchedulingContextListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Items is the list of PodSchedulingContext objects.
	Items PodSchedulingContextTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata
	Metadata metav1.ListMetaPtrInput
}

func (PodSchedulingContextListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*podSchedulingContextListArgs)(nil)).Elem()
}

type PodSchedulingContextListInput interface {
	pulumi.Input

	ToPodSchedulingContextListOutput() PodSchedulingContextListOutput
	ToPodSchedulingContextListOutputWithContext(ctx context.Context) PodSchedulingContextListOutput
}

func (*PodSchedulingContextList) ElementType() reflect.Type {
	return reflect.TypeOf((**PodSchedulingContextList)(nil)).Elem()
}

func (i *PodSchedulingContextList) ToPodSchedulingContextListOutput() PodSchedulingContextListOutput {
	return i.ToPodSchedulingContextListOutputWithContext(context.Background())
}

func (i *PodSchedulingContextList) ToPodSchedulingContextListOutputWithContext(ctx context.Context) PodSchedulingContextListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PodSchedulingContextListOutput)
}

// PodSchedulingContextListArrayInput is an input type that accepts PodSchedulingContextListArray and PodSchedulingContextListArrayOutput values.
// You can construct a concrete instance of `PodSchedulingContextListArrayInput` via:
//
//	PodSchedulingContextListArray{ PodSchedulingContextListArgs{...} }
type PodSchedulingContextListArrayInput interface {
	pulumi.Input

	ToPodSchedulingContextListArrayOutput() PodSchedulingContextListArrayOutput
	ToPodSchedulingContextListArrayOutputWithContext(context.Context) PodSchedulingContextListArrayOutput
}

type PodSchedulingContextListArray []PodSchedulingContextListInput

func (PodSchedulingContextListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PodSchedulingContextList)(nil)).Elem()
}

func (i PodSchedulingContextListArray) ToPodSchedulingContextListArrayOutput() PodSchedulingContextListArrayOutput {
	return i.ToPodSchedulingContextListArrayOutputWithContext(context.Background())
}

func (i PodSchedulingContextListArray) ToPodSchedulingContextListArrayOutputWithContext(ctx context.Context) PodSchedulingContextListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PodSchedulingContextListArrayOutput)
}

// PodSchedulingContextListMapInput is an input type that accepts PodSchedulingContextListMap and PodSchedulingContextListMapOutput values.
// You can construct a concrete instance of `PodSchedulingContextListMapInput` via:
//
//	PodSchedulingContextListMap{ "key": PodSchedulingContextListArgs{...} }
type PodSchedulingContextListMapInput interface {
	pulumi.Input

	ToPodSchedulingContextListMapOutput() PodSchedulingContextListMapOutput
	ToPodSchedulingContextListMapOutputWithContext(context.Context) PodSchedulingContextListMapOutput
}

type PodSchedulingContextListMap map[string]PodSchedulingContextListInput

func (PodSchedulingContextListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PodSchedulingContextList)(nil)).Elem()
}

func (i PodSchedulingContextListMap) ToPodSchedulingContextListMapOutput() PodSchedulingContextListMapOutput {
	return i.ToPodSchedulingContextListMapOutputWithContext(context.Background())
}

func (i PodSchedulingContextListMap) ToPodSchedulingContextListMapOutputWithContext(ctx context.Context) PodSchedulingContextListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(PodSchedulingContextListMapOutput)
}

type PodSchedulingContextListOutput struct{ *pulumi.OutputState }

func (PodSchedulingContextListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**PodSchedulingContextList)(nil)).Elem()
}

func (o PodSchedulingContextListOutput) ToPodSchedulingContextListOutput() PodSchedulingContextListOutput {
	return o
}

func (o PodSchedulingContextListOutput) ToPodSchedulingContextListOutputWithContext(ctx context.Context) PodSchedulingContextListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o PodSchedulingContextListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *PodSchedulingContextList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Items is the list of PodSchedulingContext objects.
func (o PodSchedulingContextListOutput) Items() PodSchedulingContextTypeArrayOutput {
	return o.ApplyT(func(v *PodSchedulingContextList) PodSchedulingContextTypeArrayOutput { return v.Items }).(PodSchedulingContextTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o PodSchedulingContextListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *PodSchedulingContextList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata
func (o PodSchedulingContextListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *PodSchedulingContextList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type PodSchedulingContextListArrayOutput struct{ *pulumi.OutputState }

func (PodSchedulingContextListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*PodSchedulingContextList)(nil)).Elem()
}

func (o PodSchedulingContextListArrayOutput) ToPodSchedulingContextListArrayOutput() PodSchedulingContextListArrayOutput {
	return o
}

func (o PodSchedulingContextListArrayOutput) ToPodSchedulingContextListArrayOutputWithContext(ctx context.Context) PodSchedulingContextListArrayOutput {
	return o
}

func (o PodSchedulingContextListArrayOutput) Index(i pulumi.IntInput) PodSchedulingContextListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *PodSchedulingContextList {
		return vs[0].([]*PodSchedulingContextList)[vs[1].(int)]
	}).(PodSchedulingContextListOutput)
}

type PodSchedulingContextListMapOutput struct{ *pulumi.OutputState }

func (PodSchedulingContextListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*PodSchedulingContextList)(nil)).Elem()
}

func (o PodSchedulingContextListMapOutput) ToPodSchedulingContextListMapOutput() PodSchedulingContextListMapOutput {
	return o
}

func (o PodSchedulingContextListMapOutput) ToPodSchedulingContextListMapOutputWithContext(ctx context.Context) PodSchedulingContextListMapOutput {
	return o
}

func (o PodSchedulingContextListMapOutput) MapIndex(k pulumi.StringInput) PodSchedulingContextListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *PodSchedulingContextList {
		return vs[0].(map[string]*PodSchedulingContextList)[vs[1].(string)]
	}).(PodSchedulingContextListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*PodSchedulingContextListInput)(nil)).Elem(), &PodSchedulingContextList{})
	pulumi.RegisterInputType(reflect.TypeOf((*PodSchedulingContextListArrayInput)(nil)).Elem(), PodSchedulingContextListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*PodSchedulingContextListMapInput)(nil)).Elem(), PodSchedulingContextListMap{})
	pulumi.RegisterOutputType(PodSchedulingContextListOutput{})
	pulumi.RegisterOutputType(PodSchedulingContextListArrayOutput{})
	pulumi.RegisterOutputType(PodSchedulingContextListMapOutput{})
}
