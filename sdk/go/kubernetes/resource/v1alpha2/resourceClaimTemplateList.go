// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha2

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ResourceClaimTemplateList is a collection of claim templates.
type ResourceClaimTemplateList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Items is the list of resource claim templates.
	Items ResourceClaimTemplateTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewResourceClaimTemplateList registers a new resource with the given unique name, arguments, and options.
func NewResourceClaimTemplateList(ctx *pulumi.Context,
	name string, args *ResourceClaimTemplateListArgs, opts ...pulumi.ResourceOption) (*ResourceClaimTemplateList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("resource.k8s.io/v1alpha2")
	args.Kind = pulumi.StringPtr("ResourceClaimTemplateList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ResourceClaimTemplateList
	err := ctx.RegisterResource("kubernetes:resource.k8s.io/v1alpha2:ResourceClaimTemplateList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourceClaimTemplateList gets an existing ResourceClaimTemplateList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourceClaimTemplateList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourceClaimTemplateListState, opts ...pulumi.ResourceOption) (*ResourceClaimTemplateList, error) {
	var resource ResourceClaimTemplateList
	err := ctx.ReadResource("kubernetes:resource.k8s.io/v1alpha2:ResourceClaimTemplateList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourceClaimTemplateList resources.
type resourceClaimTemplateListState struct {
}

type ResourceClaimTemplateListState struct {
}

func (ResourceClaimTemplateListState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceClaimTemplateListState)(nil)).Elem()
}

type resourceClaimTemplateListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Items is the list of resource claim templates.
	Items []ResourceClaimTemplateType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a ResourceClaimTemplateList resource.
type ResourceClaimTemplateListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Items is the list of resource claim templates.
	Items ResourceClaimTemplateTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata
	Metadata metav1.ListMetaPtrInput
}

func (ResourceClaimTemplateListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceClaimTemplateListArgs)(nil)).Elem()
}

type ResourceClaimTemplateListInput interface {
	pulumi.Input

	ToResourceClaimTemplateListOutput() ResourceClaimTemplateListOutput
	ToResourceClaimTemplateListOutputWithContext(ctx context.Context) ResourceClaimTemplateListOutput
}

func (*ResourceClaimTemplateList) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceClaimTemplateList)(nil)).Elem()
}

func (i *ResourceClaimTemplateList) ToResourceClaimTemplateListOutput() ResourceClaimTemplateListOutput {
	return i.ToResourceClaimTemplateListOutputWithContext(context.Background())
}

func (i *ResourceClaimTemplateList) ToResourceClaimTemplateListOutputWithContext(ctx context.Context) ResourceClaimTemplateListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceClaimTemplateListOutput)
}

// ResourceClaimTemplateListArrayInput is an input type that accepts ResourceClaimTemplateListArray and ResourceClaimTemplateListArrayOutput values.
// You can construct a concrete instance of `ResourceClaimTemplateListArrayInput` via:
//
//	ResourceClaimTemplateListArray{ ResourceClaimTemplateListArgs{...} }
type ResourceClaimTemplateListArrayInput interface {
	pulumi.Input

	ToResourceClaimTemplateListArrayOutput() ResourceClaimTemplateListArrayOutput
	ToResourceClaimTemplateListArrayOutputWithContext(context.Context) ResourceClaimTemplateListArrayOutput
}

type ResourceClaimTemplateListArray []ResourceClaimTemplateListInput

func (ResourceClaimTemplateListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceClaimTemplateList)(nil)).Elem()
}

func (i ResourceClaimTemplateListArray) ToResourceClaimTemplateListArrayOutput() ResourceClaimTemplateListArrayOutput {
	return i.ToResourceClaimTemplateListArrayOutputWithContext(context.Background())
}

func (i ResourceClaimTemplateListArray) ToResourceClaimTemplateListArrayOutputWithContext(ctx context.Context) ResourceClaimTemplateListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceClaimTemplateListArrayOutput)
}

// ResourceClaimTemplateListMapInput is an input type that accepts ResourceClaimTemplateListMap and ResourceClaimTemplateListMapOutput values.
// You can construct a concrete instance of `ResourceClaimTemplateListMapInput` via:
//
//	ResourceClaimTemplateListMap{ "key": ResourceClaimTemplateListArgs{...} }
type ResourceClaimTemplateListMapInput interface {
	pulumi.Input

	ToResourceClaimTemplateListMapOutput() ResourceClaimTemplateListMapOutput
	ToResourceClaimTemplateListMapOutputWithContext(context.Context) ResourceClaimTemplateListMapOutput
}

type ResourceClaimTemplateListMap map[string]ResourceClaimTemplateListInput

func (ResourceClaimTemplateListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceClaimTemplateList)(nil)).Elem()
}

func (i ResourceClaimTemplateListMap) ToResourceClaimTemplateListMapOutput() ResourceClaimTemplateListMapOutput {
	return i.ToResourceClaimTemplateListMapOutputWithContext(context.Background())
}

func (i ResourceClaimTemplateListMap) ToResourceClaimTemplateListMapOutputWithContext(ctx context.Context) ResourceClaimTemplateListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceClaimTemplateListMapOutput)
}

type ResourceClaimTemplateListOutput struct{ *pulumi.OutputState }

func (ResourceClaimTemplateListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceClaimTemplateList)(nil)).Elem()
}

func (o ResourceClaimTemplateListOutput) ToResourceClaimTemplateListOutput() ResourceClaimTemplateListOutput {
	return o
}

func (o ResourceClaimTemplateListOutput) ToResourceClaimTemplateListOutputWithContext(ctx context.Context) ResourceClaimTemplateListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ResourceClaimTemplateListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceClaimTemplateList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Items is the list of resource claim templates.
func (o ResourceClaimTemplateListOutput) Items() ResourceClaimTemplateTypeArrayOutput {
	return o.ApplyT(func(v *ResourceClaimTemplateList) ResourceClaimTemplateTypeArrayOutput { return v.Items }).(ResourceClaimTemplateTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ResourceClaimTemplateListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceClaimTemplateList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata
func (o ResourceClaimTemplateListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *ResourceClaimTemplateList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type ResourceClaimTemplateListArrayOutput struct{ *pulumi.OutputState }

func (ResourceClaimTemplateListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceClaimTemplateList)(nil)).Elem()
}

func (o ResourceClaimTemplateListArrayOutput) ToResourceClaimTemplateListArrayOutput() ResourceClaimTemplateListArrayOutput {
	return o
}

func (o ResourceClaimTemplateListArrayOutput) ToResourceClaimTemplateListArrayOutputWithContext(ctx context.Context) ResourceClaimTemplateListArrayOutput {
	return o
}

func (o ResourceClaimTemplateListArrayOutput) Index(i pulumi.IntInput) ResourceClaimTemplateListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ResourceClaimTemplateList {
		return vs[0].([]*ResourceClaimTemplateList)[vs[1].(int)]
	}).(ResourceClaimTemplateListOutput)
}

type ResourceClaimTemplateListMapOutput struct{ *pulumi.OutputState }

func (ResourceClaimTemplateListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceClaimTemplateList)(nil)).Elem()
}

func (o ResourceClaimTemplateListMapOutput) ToResourceClaimTemplateListMapOutput() ResourceClaimTemplateListMapOutput {
	return o
}

func (o ResourceClaimTemplateListMapOutput) ToResourceClaimTemplateListMapOutputWithContext(ctx context.Context) ResourceClaimTemplateListMapOutput {
	return o
}

func (o ResourceClaimTemplateListMapOutput) MapIndex(k pulumi.StringInput) ResourceClaimTemplateListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ResourceClaimTemplateList {
		return vs[0].(map[string]*ResourceClaimTemplateList)[vs[1].(string)]
	}).(ResourceClaimTemplateListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceClaimTemplateListInput)(nil)).Elem(), &ResourceClaimTemplateList{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceClaimTemplateListArrayInput)(nil)).Elem(), ResourceClaimTemplateListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceClaimTemplateListMapInput)(nil)).Elem(), ResourceClaimTemplateListMap{})
	pulumi.RegisterOutputType(ResourceClaimTemplateListOutput{})
	pulumi.RegisterOutputType(ResourceClaimTemplateListArrayOutput{})
	pulumi.RegisterOutputType(ResourceClaimTemplateListMapOutput{})
}
