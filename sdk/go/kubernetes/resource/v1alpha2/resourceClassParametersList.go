// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha2

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ResourceClassParametersList is a collection of ResourceClassParameters.
type ResourceClassParametersList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// Items is the list of node resource capacity objects.
	Items ResourceClassParametersTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard list metadata
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewResourceClassParametersList registers a new resource with the given unique name, arguments, and options.
func NewResourceClassParametersList(ctx *pulumi.Context,
	name string, args *ResourceClassParametersListArgs, opts ...pulumi.ResourceOption) (*ResourceClassParametersList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("resource.k8s.io/v1alpha2")
	args.Kind = pulumi.StringPtr("ResourceClassParametersList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ResourceClassParametersList
	err := ctx.RegisterResource("kubernetes:resource.k8s.io/v1alpha2:ResourceClassParametersList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetResourceClassParametersList gets an existing ResourceClassParametersList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetResourceClassParametersList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ResourceClassParametersListState, opts ...pulumi.ResourceOption) (*ResourceClassParametersList, error) {
	var resource ResourceClassParametersList
	err := ctx.ReadResource("kubernetes:resource.k8s.io/v1alpha2:ResourceClassParametersList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ResourceClassParametersList resources.
type resourceClassParametersListState struct {
}

type ResourceClassParametersListState struct {
}

func (ResourceClassParametersListState) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceClassParametersListState)(nil)).Elem()
}

type resourceClassParametersListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Items is the list of node resource capacity objects.
	Items []ResourceClassParametersType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a ResourceClassParametersList resource.
type ResourceClassParametersListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Items is the list of node resource capacity objects.
	Items ResourceClassParametersTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata
	Metadata metav1.ListMetaPtrInput
}

func (ResourceClassParametersListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*resourceClassParametersListArgs)(nil)).Elem()
}

type ResourceClassParametersListInput interface {
	pulumi.Input

	ToResourceClassParametersListOutput() ResourceClassParametersListOutput
	ToResourceClassParametersListOutputWithContext(ctx context.Context) ResourceClassParametersListOutput
}

func (*ResourceClassParametersList) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceClassParametersList)(nil)).Elem()
}

func (i *ResourceClassParametersList) ToResourceClassParametersListOutput() ResourceClassParametersListOutput {
	return i.ToResourceClassParametersListOutputWithContext(context.Background())
}

func (i *ResourceClassParametersList) ToResourceClassParametersListOutputWithContext(ctx context.Context) ResourceClassParametersListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceClassParametersListOutput)
}

// ResourceClassParametersListArrayInput is an input type that accepts ResourceClassParametersListArray and ResourceClassParametersListArrayOutput values.
// You can construct a concrete instance of `ResourceClassParametersListArrayInput` via:
//
//	ResourceClassParametersListArray{ ResourceClassParametersListArgs{...} }
type ResourceClassParametersListArrayInput interface {
	pulumi.Input

	ToResourceClassParametersListArrayOutput() ResourceClassParametersListArrayOutput
	ToResourceClassParametersListArrayOutputWithContext(context.Context) ResourceClassParametersListArrayOutput
}

type ResourceClassParametersListArray []ResourceClassParametersListInput

func (ResourceClassParametersListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceClassParametersList)(nil)).Elem()
}

func (i ResourceClassParametersListArray) ToResourceClassParametersListArrayOutput() ResourceClassParametersListArrayOutput {
	return i.ToResourceClassParametersListArrayOutputWithContext(context.Background())
}

func (i ResourceClassParametersListArray) ToResourceClassParametersListArrayOutputWithContext(ctx context.Context) ResourceClassParametersListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceClassParametersListArrayOutput)
}

// ResourceClassParametersListMapInput is an input type that accepts ResourceClassParametersListMap and ResourceClassParametersListMapOutput values.
// You can construct a concrete instance of `ResourceClassParametersListMapInput` via:
//
//	ResourceClassParametersListMap{ "key": ResourceClassParametersListArgs{...} }
type ResourceClassParametersListMapInput interface {
	pulumi.Input

	ToResourceClassParametersListMapOutput() ResourceClassParametersListMapOutput
	ToResourceClassParametersListMapOutputWithContext(context.Context) ResourceClassParametersListMapOutput
}

type ResourceClassParametersListMap map[string]ResourceClassParametersListInput

func (ResourceClassParametersListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceClassParametersList)(nil)).Elem()
}

func (i ResourceClassParametersListMap) ToResourceClassParametersListMapOutput() ResourceClassParametersListMapOutput {
	return i.ToResourceClassParametersListMapOutputWithContext(context.Background())
}

func (i ResourceClassParametersListMap) ToResourceClassParametersListMapOutputWithContext(ctx context.Context) ResourceClassParametersListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ResourceClassParametersListMapOutput)
}

type ResourceClassParametersListOutput struct{ *pulumi.OutputState }

func (ResourceClassParametersListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ResourceClassParametersList)(nil)).Elem()
}

func (o ResourceClassParametersListOutput) ToResourceClassParametersListOutput() ResourceClassParametersListOutput {
	return o
}

func (o ResourceClassParametersListOutput) ToResourceClassParametersListOutputWithContext(ctx context.Context) ResourceClassParametersListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ResourceClassParametersListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceClassParametersList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// Items is the list of node resource capacity objects.
func (o ResourceClassParametersListOutput) Items() ResourceClassParametersTypeArrayOutput {
	return o.ApplyT(func(v *ResourceClassParametersList) ResourceClassParametersTypeArrayOutput { return v.Items }).(ResourceClassParametersTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ResourceClassParametersListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *ResourceClassParametersList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard list metadata
func (o ResourceClassParametersListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *ResourceClassParametersList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type ResourceClassParametersListArrayOutput struct{ *pulumi.OutputState }

func (ResourceClassParametersListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ResourceClassParametersList)(nil)).Elem()
}

func (o ResourceClassParametersListArrayOutput) ToResourceClassParametersListArrayOutput() ResourceClassParametersListArrayOutput {
	return o
}

func (o ResourceClassParametersListArrayOutput) ToResourceClassParametersListArrayOutputWithContext(ctx context.Context) ResourceClassParametersListArrayOutput {
	return o
}

func (o ResourceClassParametersListArrayOutput) Index(i pulumi.IntInput) ResourceClassParametersListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ResourceClassParametersList {
		return vs[0].([]*ResourceClassParametersList)[vs[1].(int)]
	}).(ResourceClassParametersListOutput)
}

type ResourceClassParametersListMapOutput struct{ *pulumi.OutputState }

func (ResourceClassParametersListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ResourceClassParametersList)(nil)).Elem()
}

func (o ResourceClassParametersListMapOutput) ToResourceClassParametersListMapOutput() ResourceClassParametersListMapOutput {
	return o
}

func (o ResourceClassParametersListMapOutput) ToResourceClassParametersListMapOutputWithContext(ctx context.Context) ResourceClassParametersListMapOutput {
	return o
}

func (o ResourceClassParametersListMapOutput) MapIndex(k pulumi.StringInput) ResourceClassParametersListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ResourceClassParametersList {
		return vs[0].(map[string]*ResourceClassParametersList)[vs[1].(string)]
	}).(ResourceClassParametersListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceClassParametersListInput)(nil)).Elem(), &ResourceClassParametersList{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceClassParametersListArrayInput)(nil)).Elem(), ResourceClassParametersListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ResourceClassParametersListMapInput)(nil)).Elem(), ResourceClassParametersListMap{})
	pulumi.RegisterOutputType(ResourceClassParametersListOutput{})
	pulumi.RegisterOutputType(ResourceClassParametersListArrayOutput{})
	pulumi.RegisterOutputType(ResourceClassParametersListMapOutput{})
}
