// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	"github.com/pkg/errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v2/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

// IngressClassList is a collection of IngressClasses.
type IngressClassList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrOutput `pulumi:"apiVersion"`
	// Items is the list of IngressClasses.
	Items IngressClassTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrOutput `pulumi:"kind"`
	// Standard list metadata.
	Metadata metav1.ListMetaPtrOutput `pulumi:"metadata"`
}

// NewIngressClassList registers a new resource with the given unique name, arguments, and options.
func NewIngressClassList(ctx *pulumi.Context,
	name string, args *IngressClassListArgs, opts ...pulumi.ResourceOption) (*IngressClassList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("networking.k8s.io/v1beta1")
	args.Kind = pulumi.StringPtr("IngressClassList")
	var resource IngressClassList
	err := ctx.RegisterResource("kubernetes:networking.k8s.io/v1beta1:IngressClassList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIngressClassList gets an existing IngressClassList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIngressClassList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IngressClassListState, opts ...pulumi.ResourceOption) (*IngressClassList, error) {
	var resource IngressClassList
	err := ctx.ReadResource("kubernetes:networking.k8s.io/v1beta1:IngressClassList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IngressClassList resources.
type ingressClassListState struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Items is the list of IngressClasses.
	Items []IngressClassType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata.
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

type IngressClassListState struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Items is the list of IngressClasses.
	Items IngressClassTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata.
	Metadata metav1.ListMetaPtrInput
}

func (IngressClassListState) ElementType() reflect.Type {
	return reflect.TypeOf((*ingressClassListState)(nil)).Elem()
}

type ingressClassListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Items is the list of IngressClasses.
	Items []IngressClassType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard list metadata.
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a IngressClassList resource.
type IngressClassListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// Items is the list of IngressClasses.
	Items IngressClassTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard list metadata.
	Metadata metav1.ListMetaPtrInput
}

func (IngressClassListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ingressClassListArgs)(nil)).Elem()
}

type IngressClassListInput interface {
	pulumi.Input

	ToIngressClassListOutput() IngressClassListOutput
	ToIngressClassListOutputWithContext(ctx context.Context) IngressClassListOutput
}

func (*IngressClassList) ElementType() reflect.Type {
	return reflect.TypeOf((*IngressClassList)(nil))
}

func (i *IngressClassList) ToIngressClassListOutput() IngressClassListOutput {
	return i.ToIngressClassListOutputWithContext(context.Background())
}

func (i *IngressClassList) ToIngressClassListOutputWithContext(ctx context.Context) IngressClassListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngressClassListOutput)
}

func (i *IngressClassList) ToIngressClassListPtrOutput() IngressClassListPtrOutput {
	return i.ToIngressClassListPtrOutputWithContext(context.Background())
}

func (i *IngressClassList) ToIngressClassListPtrOutputWithContext(ctx context.Context) IngressClassListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngressClassListPtrOutput)
}

type IngressClassListPtrInput interface {
	pulumi.Input

	ToIngressClassListPtrOutput() IngressClassListPtrOutput
	ToIngressClassListPtrOutputWithContext(ctx context.Context) IngressClassListPtrOutput
}

type ingressClassListPtrType IngressClassListArgs

func (*ingressClassListPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**IngressClassList)(nil))
}

func (i *ingressClassListPtrType) ToIngressClassListPtrOutput() IngressClassListPtrOutput {
	return i.ToIngressClassListPtrOutputWithContext(context.Background())
}

func (i *ingressClassListPtrType) ToIngressClassListPtrOutputWithContext(ctx context.Context) IngressClassListPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngressClassListPtrOutput)
}

// IngressClassListArrayInput is an input type that accepts IngressClassListArray and IngressClassListArrayOutput values.
// You can construct a concrete instance of `IngressClassListArrayInput` via:
//
//          IngressClassListArray{ IngressClassListArgs{...} }
type IngressClassListArrayInput interface {
	pulumi.Input

	ToIngressClassListArrayOutput() IngressClassListArrayOutput
	ToIngressClassListArrayOutputWithContext(context.Context) IngressClassListArrayOutput
}

type IngressClassListArray []IngressClassListInput

func (IngressClassListArray) ElementType() reflect.Type {
	return reflect.TypeOf(([]*IngressClassList)(nil))
}

func (i IngressClassListArray) ToIngressClassListArrayOutput() IngressClassListArrayOutput {
	return i.ToIngressClassListArrayOutputWithContext(context.Background())
}

func (i IngressClassListArray) ToIngressClassListArrayOutputWithContext(ctx context.Context) IngressClassListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngressClassListArrayOutput)
}

// IngressClassListMapInput is an input type that accepts IngressClassListMap and IngressClassListMapOutput values.
// You can construct a concrete instance of `IngressClassListMapInput` via:
//
//          IngressClassListMap{ "key": IngressClassListArgs{...} }
type IngressClassListMapInput interface {
	pulumi.Input

	ToIngressClassListMapOutput() IngressClassListMapOutput
	ToIngressClassListMapOutputWithContext(context.Context) IngressClassListMapOutput
}

type IngressClassListMap map[string]IngressClassListInput

func (IngressClassListMap) ElementType() reflect.Type {
	return reflect.TypeOf((map[string]*IngressClassList)(nil))
}

func (i IngressClassListMap) ToIngressClassListMapOutput() IngressClassListMapOutput {
	return i.ToIngressClassListMapOutputWithContext(context.Background())
}

func (i IngressClassListMap) ToIngressClassListMapOutputWithContext(ctx context.Context) IngressClassListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IngressClassListMapOutput)
}

type IngressClassListOutput struct {
	*pulumi.OutputState
}

func (IngressClassListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*IngressClassList)(nil))
}

func (o IngressClassListOutput) ToIngressClassListOutput() IngressClassListOutput {
	return o
}

func (o IngressClassListOutput) ToIngressClassListOutputWithContext(ctx context.Context) IngressClassListOutput {
	return o
}

func (o IngressClassListOutput) ToIngressClassListPtrOutput() IngressClassListPtrOutput {
	return o.ToIngressClassListPtrOutputWithContext(context.Background())
}

func (o IngressClassListOutput) ToIngressClassListPtrOutputWithContext(ctx context.Context) IngressClassListPtrOutput {
	return o.ApplyT(func(v IngressClassList) *IngressClassList {
		return &v
	}).(IngressClassListPtrOutput)
}

type IngressClassListPtrOutput struct {
	*pulumi.OutputState
}

func (IngressClassListPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IngressClassList)(nil))
}

func (o IngressClassListPtrOutput) ToIngressClassListPtrOutput() IngressClassListPtrOutput {
	return o
}

func (o IngressClassListPtrOutput) ToIngressClassListPtrOutputWithContext(ctx context.Context) IngressClassListPtrOutput {
	return o
}

type IngressClassListArrayOutput struct{ *pulumi.OutputState }

func (IngressClassListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]IngressClassList)(nil))
}

func (o IngressClassListArrayOutput) ToIngressClassListArrayOutput() IngressClassListArrayOutput {
	return o
}

func (o IngressClassListArrayOutput) ToIngressClassListArrayOutputWithContext(ctx context.Context) IngressClassListArrayOutput {
	return o
}

func (o IngressClassListArrayOutput) Index(i pulumi.IntInput) IngressClassListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) IngressClassList {
		return vs[0].([]IngressClassList)[vs[1].(int)]
	}).(IngressClassListOutput)
}

type IngressClassListMapOutput struct{ *pulumi.OutputState }

func (IngressClassListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]IngressClassList)(nil))
}

func (o IngressClassListMapOutput) ToIngressClassListMapOutput() IngressClassListMapOutput {
	return o
}

func (o IngressClassListMapOutput) ToIngressClassListMapOutputWithContext(ctx context.Context) IngressClassListMapOutput {
	return o
}

func (o IngressClassListMapOutput) MapIndex(k pulumi.StringInput) IngressClassListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) IngressClassList {
		return vs[0].(map[string]IngressClassList)[vs[1].(string)]
	}).(IngressClassListOutput)
}

func init() {
	pulumi.RegisterOutputType(IngressClassListOutput{})
	pulumi.RegisterOutputType(IngressClassListPtrOutput{})
	pulumi.RegisterOutputType(IngressClassListArrayOutput{})
	pulumi.RegisterOutputType(IngressClassListMapOutput{})
}
