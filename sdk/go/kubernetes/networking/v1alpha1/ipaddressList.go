// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// IPAddressList contains a list of IPAddress.
type IPAddressList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// items is the list of IPAddresses.
	Items IPAddressTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewIPAddressList registers a new resource with the given unique name, arguments, and options.
func NewIPAddressList(ctx *pulumi.Context,
	name string, args *IPAddressListArgs, opts ...pulumi.ResourceOption) (*IPAddressList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("networking.k8s.io/v1alpha1")
	args.Kind = pulumi.StringPtr("IPAddressList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource IPAddressList
	err := ctx.RegisterResource("kubernetes:networking.k8s.io/v1alpha1:IPAddressList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIPAddressList gets an existing IPAddressList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIPAddressList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IPAddressListState, opts ...pulumi.ResourceOption) (*IPAddressList, error) {
	var resource IPAddressList
	err := ctx.ReadResource("kubernetes:networking.k8s.io/v1alpha1:IPAddressList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering IPAddressList resources.
type ipaddressListState struct {
}

type IPAddressListState struct {
}

func (IPAddressListState) ElementType() reflect.Type {
	return reflect.TypeOf((*ipaddressListState)(nil)).Elem()
}

type ipaddressListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// items is the list of IPAddresses.
	Items []IPAddressType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a IPAddressList resource.
type IPAddressListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// items is the list of IPAddresses.
	Items IPAddressTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ListMetaPtrInput
}

func (IPAddressListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ipaddressListArgs)(nil)).Elem()
}

type IPAddressListInput interface {
	pulumi.Input

	ToIPAddressListOutput() IPAddressListOutput
	ToIPAddressListOutputWithContext(ctx context.Context) IPAddressListOutput
}

func (*IPAddressList) ElementType() reflect.Type {
	return reflect.TypeOf((**IPAddressList)(nil)).Elem()
}

func (i *IPAddressList) ToIPAddressListOutput() IPAddressListOutput {
	return i.ToIPAddressListOutputWithContext(context.Background())
}

func (i *IPAddressList) ToIPAddressListOutputWithContext(ctx context.Context) IPAddressListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPAddressListOutput)
}

// IPAddressListArrayInput is an input type that accepts IPAddressListArray and IPAddressListArrayOutput values.
// You can construct a concrete instance of `IPAddressListArrayInput` via:
//
//	IPAddressListArray{ IPAddressListArgs{...} }
type IPAddressListArrayInput interface {
	pulumi.Input

	ToIPAddressListArrayOutput() IPAddressListArrayOutput
	ToIPAddressListArrayOutputWithContext(context.Context) IPAddressListArrayOutput
}

type IPAddressListArray []IPAddressListInput

func (IPAddressListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IPAddressList)(nil)).Elem()
}

func (i IPAddressListArray) ToIPAddressListArrayOutput() IPAddressListArrayOutput {
	return i.ToIPAddressListArrayOutputWithContext(context.Background())
}

func (i IPAddressListArray) ToIPAddressListArrayOutputWithContext(ctx context.Context) IPAddressListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPAddressListArrayOutput)
}

// IPAddressListMapInput is an input type that accepts IPAddressListMap and IPAddressListMapOutput values.
// You can construct a concrete instance of `IPAddressListMapInput` via:
//
//	IPAddressListMap{ "key": IPAddressListArgs{...} }
type IPAddressListMapInput interface {
	pulumi.Input

	ToIPAddressListMapOutput() IPAddressListMapOutput
	ToIPAddressListMapOutputWithContext(context.Context) IPAddressListMapOutput
}

type IPAddressListMap map[string]IPAddressListInput

func (IPAddressListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IPAddressList)(nil)).Elem()
}

func (i IPAddressListMap) ToIPAddressListMapOutput() IPAddressListMapOutput {
	return i.ToIPAddressListMapOutputWithContext(context.Background())
}

func (i IPAddressListMap) ToIPAddressListMapOutputWithContext(ctx context.Context) IPAddressListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(IPAddressListMapOutput)
}

type IPAddressListOutput struct{ *pulumi.OutputState }

func (IPAddressListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**IPAddressList)(nil)).Elem()
}

func (o IPAddressListOutput) ToIPAddressListOutput() IPAddressListOutput {
	return o
}

func (o IPAddressListOutput) ToIPAddressListOutputWithContext(ctx context.Context) IPAddressListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o IPAddressListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *IPAddressList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// items is the list of IPAddresses.
func (o IPAddressListOutput) Items() IPAddressTypeArrayOutput {
	return o.ApplyT(func(v *IPAddressList) IPAddressTypeArrayOutput { return v.Items }).(IPAddressTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o IPAddressListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *IPAddressList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o IPAddressListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *IPAddressList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type IPAddressListArrayOutput struct{ *pulumi.OutputState }

func (IPAddressListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*IPAddressList)(nil)).Elem()
}

func (o IPAddressListArrayOutput) ToIPAddressListArrayOutput() IPAddressListArrayOutput {
	return o
}

func (o IPAddressListArrayOutput) ToIPAddressListArrayOutputWithContext(ctx context.Context) IPAddressListArrayOutput {
	return o
}

func (o IPAddressListArrayOutput) Index(i pulumi.IntInput) IPAddressListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *IPAddressList {
		return vs[0].([]*IPAddressList)[vs[1].(int)]
	}).(IPAddressListOutput)
}

type IPAddressListMapOutput struct{ *pulumi.OutputState }

func (IPAddressListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*IPAddressList)(nil)).Elem()
}

func (o IPAddressListMapOutput) ToIPAddressListMapOutput() IPAddressListMapOutput {
	return o
}

func (o IPAddressListMapOutput) ToIPAddressListMapOutputWithContext(ctx context.Context) IPAddressListMapOutput {
	return o
}

func (o IPAddressListMapOutput) MapIndex(k pulumi.StringInput) IPAddressListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *IPAddressList {
		return vs[0].(map[string]*IPAddressList)[vs[1].(string)]
	}).(IPAddressListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*IPAddressListInput)(nil)).Elem(), &IPAddressList{})
	pulumi.RegisterInputType(reflect.TypeOf((*IPAddressListArrayInput)(nil)).Elem(), IPAddressListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*IPAddressListMapInput)(nil)).Elem(), IPAddressListMap{})
	pulumi.RegisterOutputType(IPAddressListOutput{})
	pulumi.RegisterOutputType(IPAddressListArrayOutput{})
	pulumi.RegisterOutputType(IPAddressListMapOutput{})
}
