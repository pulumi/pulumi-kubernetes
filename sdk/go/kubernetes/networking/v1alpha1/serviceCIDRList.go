// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1alpha1

import (
	"context"
	"reflect"

	"errors"
	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// ServiceCIDRList contains a list of ServiceCIDR objects.
type ServiceCIDRList struct {
	pulumi.CustomResourceState

	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringOutput `pulumi:"apiVersion"`
	// items is the list of ServiceCIDRs.
	Items ServiceCIDRTypeArrayOutput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringOutput `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ListMetaOutput `pulumi:"metadata"`
}

// NewServiceCIDRList registers a new resource with the given unique name, arguments, and options.
func NewServiceCIDRList(ctx *pulumi.Context,
	name string, args *ServiceCIDRListArgs, opts ...pulumi.ResourceOption) (*ServiceCIDRList, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.Items == nil {
		return nil, errors.New("invalid value for required argument 'Items'")
	}
	args.ApiVersion = pulumi.StringPtr("networking.k8s.io/v1alpha1")
	args.Kind = pulumi.StringPtr("ServiceCIDRList")
	opts = utilities.PkgResourceDefaultOpts(opts)
	var resource ServiceCIDRList
	err := ctx.RegisterResource("kubernetes:networking.k8s.io/v1alpha1:ServiceCIDRList", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceCIDRList gets an existing ServiceCIDRList resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceCIDRList(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceCIDRListState, opts ...pulumi.ResourceOption) (*ServiceCIDRList, error) {
	var resource ServiceCIDRList
	err := ctx.ReadResource("kubernetes:networking.k8s.io/v1alpha1:ServiceCIDRList", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceCIDRList resources.
type serviceCIDRListState struct {
}

type ServiceCIDRListState struct {
}

func (ServiceCIDRListState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceCIDRListState)(nil)).Elem()
}

type serviceCIDRListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// items is the list of ServiceCIDRs.
	Items []ServiceCIDRType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `pulumi:"kind"`
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// The set of arguments for constructing a ServiceCIDRList resource.
type ServiceCIDRListArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput
	// items is the list of ServiceCIDRs.
	Items ServiceCIDRTypeArrayInput
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind pulumi.StringPtrInput
	// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
	Metadata metav1.ListMetaPtrInput
}

func (ServiceCIDRListArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceCIDRListArgs)(nil)).Elem()
}

type ServiceCIDRListInput interface {
	pulumi.Input

	ToServiceCIDRListOutput() ServiceCIDRListOutput
	ToServiceCIDRListOutputWithContext(ctx context.Context) ServiceCIDRListOutput
}

func (*ServiceCIDRList) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceCIDRList)(nil)).Elem()
}

func (i *ServiceCIDRList) ToServiceCIDRListOutput() ServiceCIDRListOutput {
	return i.ToServiceCIDRListOutputWithContext(context.Background())
}

func (i *ServiceCIDRList) ToServiceCIDRListOutputWithContext(ctx context.Context) ServiceCIDRListOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCIDRListOutput)
}

// ServiceCIDRListArrayInput is an input type that accepts ServiceCIDRListArray and ServiceCIDRListArrayOutput values.
// You can construct a concrete instance of `ServiceCIDRListArrayInput` via:
//
//	ServiceCIDRListArray{ ServiceCIDRListArgs{...} }
type ServiceCIDRListArrayInput interface {
	pulumi.Input

	ToServiceCIDRListArrayOutput() ServiceCIDRListArrayOutput
	ToServiceCIDRListArrayOutputWithContext(context.Context) ServiceCIDRListArrayOutput
}

type ServiceCIDRListArray []ServiceCIDRListInput

func (ServiceCIDRListArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceCIDRList)(nil)).Elem()
}

func (i ServiceCIDRListArray) ToServiceCIDRListArrayOutput() ServiceCIDRListArrayOutput {
	return i.ToServiceCIDRListArrayOutputWithContext(context.Background())
}

func (i ServiceCIDRListArray) ToServiceCIDRListArrayOutputWithContext(ctx context.Context) ServiceCIDRListArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCIDRListArrayOutput)
}

// ServiceCIDRListMapInput is an input type that accepts ServiceCIDRListMap and ServiceCIDRListMapOutput values.
// You can construct a concrete instance of `ServiceCIDRListMapInput` via:
//
//	ServiceCIDRListMap{ "key": ServiceCIDRListArgs{...} }
type ServiceCIDRListMapInput interface {
	pulumi.Input

	ToServiceCIDRListMapOutput() ServiceCIDRListMapOutput
	ToServiceCIDRListMapOutputWithContext(context.Context) ServiceCIDRListMapOutput
}

type ServiceCIDRListMap map[string]ServiceCIDRListInput

func (ServiceCIDRListMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceCIDRList)(nil)).Elem()
}

func (i ServiceCIDRListMap) ToServiceCIDRListMapOutput() ServiceCIDRListMapOutput {
	return i.ToServiceCIDRListMapOutputWithContext(context.Background())
}

func (i ServiceCIDRListMap) ToServiceCIDRListMapOutputWithContext(ctx context.Context) ServiceCIDRListMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceCIDRListMapOutput)
}

type ServiceCIDRListOutput struct{ *pulumi.OutputState }

func (ServiceCIDRListOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceCIDRList)(nil)).Elem()
}

func (o ServiceCIDRListOutput) ToServiceCIDRListOutput() ServiceCIDRListOutput {
	return o
}

func (o ServiceCIDRListOutput) ToServiceCIDRListOutputWithContext(ctx context.Context) ServiceCIDRListOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o ServiceCIDRListOutput) ApiVersion() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceCIDRList) pulumi.StringOutput { return v.ApiVersion }).(pulumi.StringOutput)
}

// items is the list of ServiceCIDRs.
func (o ServiceCIDRListOutput) Items() ServiceCIDRTypeArrayOutput {
	return o.ApplyT(func(v *ServiceCIDRList) ServiceCIDRTypeArrayOutput { return v.Items }).(ServiceCIDRTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o ServiceCIDRListOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceCIDRList) pulumi.StringOutput { return v.Kind }).(pulumi.StringOutput)
}

// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
func (o ServiceCIDRListOutput) Metadata() metav1.ListMetaOutput {
	return o.ApplyT(func(v *ServiceCIDRList) metav1.ListMetaOutput { return v.Metadata }).(metav1.ListMetaOutput)
}

type ServiceCIDRListArrayOutput struct{ *pulumi.OutputState }

func (ServiceCIDRListArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceCIDRList)(nil)).Elem()
}

func (o ServiceCIDRListArrayOutput) ToServiceCIDRListArrayOutput() ServiceCIDRListArrayOutput {
	return o
}

func (o ServiceCIDRListArrayOutput) ToServiceCIDRListArrayOutputWithContext(ctx context.Context) ServiceCIDRListArrayOutput {
	return o
}

func (o ServiceCIDRListArrayOutput) Index(i pulumi.IntInput) ServiceCIDRListOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceCIDRList {
		return vs[0].([]*ServiceCIDRList)[vs[1].(int)]
	}).(ServiceCIDRListOutput)
}

type ServiceCIDRListMapOutput struct{ *pulumi.OutputState }

func (ServiceCIDRListMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceCIDRList)(nil)).Elem()
}

func (o ServiceCIDRListMapOutput) ToServiceCIDRListMapOutput() ServiceCIDRListMapOutput {
	return o
}

func (o ServiceCIDRListMapOutput) ToServiceCIDRListMapOutputWithContext(ctx context.Context) ServiceCIDRListMapOutput {
	return o
}

func (o ServiceCIDRListMapOutput) MapIndex(k pulumi.StringInput) ServiceCIDRListOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceCIDRList {
		return vs[0].(map[string]*ServiceCIDRList)[vs[1].(string)]
	}).(ServiceCIDRListOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceCIDRListInput)(nil)).Elem(), &ServiceCIDRList{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceCIDRListArrayInput)(nil)).Elem(), ServiceCIDRListArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceCIDRListMapInput)(nil)).Elem(), ServiceCIDRListMap{})
	pulumi.RegisterOutputType(ServiceCIDRListOutput{})
	pulumi.RegisterOutputType(ServiceCIDRListArrayOutput{})
	pulumi.RegisterOutputType(ServiceCIDRListMapOutput{})
}
