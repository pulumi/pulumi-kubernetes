// Code generated by pulumigen DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package v1beta1

import (
	"context"
	"reflect"

	metav1 "github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/meta/v1"
	"github.com/pulumi/pulumi-kubernetes/sdk/v4/go/kubernetes/utilities"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

var _ = utilities.GetEnvOrDefault

// CustomResourceColumnDefinition specifies a column for server side printing.
type CustomResourceColumnDefinition struct {
	// JSONPath is a simple JSON path (i.e. with array notation) which is evaluated against each custom resource to produce the value for this column.
	JSONPath string `pulumi:"JSONPath"`
	// description is a human readable description of this column.
	Description *string `pulumi:"description"`
	// format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
	Format *string `pulumi:"format"`
	// name is a human readable name for the column.
	Name string `pulumi:"name"`
	// priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a priority greater than 0.
	Priority *int `pulumi:"priority"`
	// type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
	Type string `pulumi:"type"`
}

// CustomResourceColumnDefinitionInput is an input type that accepts CustomResourceColumnDefinitionArgs and CustomResourceColumnDefinitionOutput values.
// You can construct a concrete instance of `CustomResourceColumnDefinitionInput` via:
//
//	CustomResourceColumnDefinitionArgs{...}
type CustomResourceColumnDefinitionInput interface {
	pulumi.Input

	ToCustomResourceColumnDefinitionOutput() CustomResourceColumnDefinitionOutput
	ToCustomResourceColumnDefinitionOutputWithContext(context.Context) CustomResourceColumnDefinitionOutput
}

// CustomResourceColumnDefinition specifies a column for server side printing.
type CustomResourceColumnDefinitionArgs struct {
	// JSONPath is a simple JSON path (i.e. with array notation) which is evaluated against each custom resource to produce the value for this column.
	JSONPath pulumi.StringInput `pulumi:"JSONPath"`
	// description is a human readable description of this column.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// name is a human readable name for the column.
	Name pulumi.StringInput `pulumi:"name"`
	// priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a priority greater than 0.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CustomResourceColumnDefinitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceColumnDefinition)(nil)).Elem()
}

func (i CustomResourceColumnDefinitionArgs) ToCustomResourceColumnDefinitionOutput() CustomResourceColumnDefinitionOutput {
	return i.ToCustomResourceColumnDefinitionOutputWithContext(context.Background())
}

func (i CustomResourceColumnDefinitionArgs) ToCustomResourceColumnDefinitionOutputWithContext(ctx context.Context) CustomResourceColumnDefinitionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceColumnDefinitionOutput)
}

// CustomResourceColumnDefinitionArrayInput is an input type that accepts CustomResourceColumnDefinitionArray and CustomResourceColumnDefinitionArrayOutput values.
// You can construct a concrete instance of `CustomResourceColumnDefinitionArrayInput` via:
//
//	CustomResourceColumnDefinitionArray{ CustomResourceColumnDefinitionArgs{...} }
type CustomResourceColumnDefinitionArrayInput interface {
	pulumi.Input

	ToCustomResourceColumnDefinitionArrayOutput() CustomResourceColumnDefinitionArrayOutput
	ToCustomResourceColumnDefinitionArrayOutputWithContext(context.Context) CustomResourceColumnDefinitionArrayOutput
}

type CustomResourceColumnDefinitionArray []CustomResourceColumnDefinitionInput

func (CustomResourceColumnDefinitionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomResourceColumnDefinition)(nil)).Elem()
}

func (i CustomResourceColumnDefinitionArray) ToCustomResourceColumnDefinitionArrayOutput() CustomResourceColumnDefinitionArrayOutput {
	return i.ToCustomResourceColumnDefinitionArrayOutputWithContext(context.Background())
}

func (i CustomResourceColumnDefinitionArray) ToCustomResourceColumnDefinitionArrayOutputWithContext(ctx context.Context) CustomResourceColumnDefinitionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceColumnDefinitionArrayOutput)
}

// CustomResourceColumnDefinition specifies a column for server side printing.
type CustomResourceColumnDefinitionOutput struct{ *pulumi.OutputState }

func (CustomResourceColumnDefinitionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceColumnDefinition)(nil)).Elem()
}

func (o CustomResourceColumnDefinitionOutput) ToCustomResourceColumnDefinitionOutput() CustomResourceColumnDefinitionOutput {
	return o
}

func (o CustomResourceColumnDefinitionOutput) ToCustomResourceColumnDefinitionOutputWithContext(ctx context.Context) CustomResourceColumnDefinitionOutput {
	return o
}

// JSONPath is a simple JSON path (i.e. with array notation) which is evaluated against each custom resource to produce the value for this column.
func (o CustomResourceColumnDefinitionOutput) JSONPath() pulumi.StringOutput {
	return o.ApplyT(func(v CustomResourceColumnDefinition) string { return v.JSONPath }).(pulumi.StringOutput)
}

// description is a human readable description of this column.
func (o CustomResourceColumnDefinitionOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceColumnDefinition) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
func (o CustomResourceColumnDefinitionOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceColumnDefinition) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// name is a human readable name for the column.
func (o CustomResourceColumnDefinitionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CustomResourceColumnDefinition) string { return v.Name }).(pulumi.StringOutput)
}

// priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a priority greater than 0.
func (o CustomResourceColumnDefinitionOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CustomResourceColumnDefinition) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
func (o CustomResourceColumnDefinitionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CustomResourceColumnDefinition) string { return v.Type }).(pulumi.StringOutput)
}

type CustomResourceColumnDefinitionArrayOutput struct{ *pulumi.OutputState }

func (CustomResourceColumnDefinitionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomResourceColumnDefinition)(nil)).Elem()
}

func (o CustomResourceColumnDefinitionArrayOutput) ToCustomResourceColumnDefinitionArrayOutput() CustomResourceColumnDefinitionArrayOutput {
	return o
}

func (o CustomResourceColumnDefinitionArrayOutput) ToCustomResourceColumnDefinitionArrayOutputWithContext(ctx context.Context) CustomResourceColumnDefinitionArrayOutput {
	return o
}

func (o CustomResourceColumnDefinitionArrayOutput) Index(i pulumi.IntInput) CustomResourceColumnDefinitionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomResourceColumnDefinition {
		return vs[0].([]CustomResourceColumnDefinition)[vs[1].(int)]
	}).(CustomResourceColumnDefinitionOutput)
}

// CustomResourceColumnDefinition specifies a column for server side printing.
type CustomResourceColumnDefinitionPatch struct {
	// JSONPath is a simple JSON path (i.e. with array notation) which is evaluated against each custom resource to produce the value for this column.
	JSONPath *string `pulumi:"JSONPath"`
	// description is a human readable description of this column.
	Description *string `pulumi:"description"`
	// format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
	Format *string `pulumi:"format"`
	// name is a human readable name for the column.
	Name *string `pulumi:"name"`
	// priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a priority greater than 0.
	Priority *int `pulumi:"priority"`
	// type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
	Type *string `pulumi:"type"`
}

// CustomResourceColumnDefinitionPatchInput is an input type that accepts CustomResourceColumnDefinitionPatchArgs and CustomResourceColumnDefinitionPatchOutput values.
// You can construct a concrete instance of `CustomResourceColumnDefinitionPatchInput` via:
//
//	CustomResourceColumnDefinitionPatchArgs{...}
type CustomResourceColumnDefinitionPatchInput interface {
	pulumi.Input

	ToCustomResourceColumnDefinitionPatchOutput() CustomResourceColumnDefinitionPatchOutput
	ToCustomResourceColumnDefinitionPatchOutputWithContext(context.Context) CustomResourceColumnDefinitionPatchOutput
}

// CustomResourceColumnDefinition specifies a column for server side printing.
type CustomResourceColumnDefinitionPatchArgs struct {
	// JSONPath is a simple JSON path (i.e. with array notation) which is evaluated against each custom resource to produce the value for this column.
	JSONPath pulumi.StringPtrInput `pulumi:"JSONPath"`
	// description is a human readable description of this column.
	Description pulumi.StringPtrInput `pulumi:"description"`
	// format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
	Format pulumi.StringPtrInput `pulumi:"format"`
	// name is a human readable name for the column.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a priority greater than 0.
	Priority pulumi.IntPtrInput `pulumi:"priority"`
	// type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (CustomResourceColumnDefinitionPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceColumnDefinitionPatch)(nil)).Elem()
}

func (i CustomResourceColumnDefinitionPatchArgs) ToCustomResourceColumnDefinitionPatchOutput() CustomResourceColumnDefinitionPatchOutput {
	return i.ToCustomResourceColumnDefinitionPatchOutputWithContext(context.Background())
}

func (i CustomResourceColumnDefinitionPatchArgs) ToCustomResourceColumnDefinitionPatchOutputWithContext(ctx context.Context) CustomResourceColumnDefinitionPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceColumnDefinitionPatchOutput)
}

// CustomResourceColumnDefinitionPatchArrayInput is an input type that accepts CustomResourceColumnDefinitionPatchArray and CustomResourceColumnDefinitionPatchArrayOutput values.
// You can construct a concrete instance of `CustomResourceColumnDefinitionPatchArrayInput` via:
//
//	CustomResourceColumnDefinitionPatchArray{ CustomResourceColumnDefinitionPatchArgs{...} }
type CustomResourceColumnDefinitionPatchArrayInput interface {
	pulumi.Input

	ToCustomResourceColumnDefinitionPatchArrayOutput() CustomResourceColumnDefinitionPatchArrayOutput
	ToCustomResourceColumnDefinitionPatchArrayOutputWithContext(context.Context) CustomResourceColumnDefinitionPatchArrayOutput
}

type CustomResourceColumnDefinitionPatchArray []CustomResourceColumnDefinitionPatchInput

func (CustomResourceColumnDefinitionPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomResourceColumnDefinitionPatch)(nil)).Elem()
}

func (i CustomResourceColumnDefinitionPatchArray) ToCustomResourceColumnDefinitionPatchArrayOutput() CustomResourceColumnDefinitionPatchArrayOutput {
	return i.ToCustomResourceColumnDefinitionPatchArrayOutputWithContext(context.Background())
}

func (i CustomResourceColumnDefinitionPatchArray) ToCustomResourceColumnDefinitionPatchArrayOutputWithContext(ctx context.Context) CustomResourceColumnDefinitionPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceColumnDefinitionPatchArrayOutput)
}

// CustomResourceColumnDefinition specifies a column for server side printing.
type CustomResourceColumnDefinitionPatchOutput struct{ *pulumi.OutputState }

func (CustomResourceColumnDefinitionPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceColumnDefinitionPatch)(nil)).Elem()
}

func (o CustomResourceColumnDefinitionPatchOutput) ToCustomResourceColumnDefinitionPatchOutput() CustomResourceColumnDefinitionPatchOutput {
	return o
}

func (o CustomResourceColumnDefinitionPatchOutput) ToCustomResourceColumnDefinitionPatchOutputWithContext(ctx context.Context) CustomResourceColumnDefinitionPatchOutput {
	return o
}

// JSONPath is a simple JSON path (i.e. with array notation) which is evaluated against each custom resource to produce the value for this column.
func (o CustomResourceColumnDefinitionPatchOutput) JSONPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceColumnDefinitionPatch) *string { return v.JSONPath }).(pulumi.StringPtrOutput)
}

// description is a human readable description of this column.
func (o CustomResourceColumnDefinitionPatchOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceColumnDefinitionPatch) *string { return v.Description }).(pulumi.StringPtrOutput)
}

// format is an optional OpenAPI type definition for this column. The 'name' format is applied to the primary identifier column to assist in clients identifying column is the resource name. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
func (o CustomResourceColumnDefinitionPatchOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceColumnDefinitionPatch) *string { return v.Format }).(pulumi.StringPtrOutput)
}

// name is a human readable name for the column.
func (o CustomResourceColumnDefinitionPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceColumnDefinitionPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// priority is an integer defining the relative importance of this column compared to others. Lower numbers are considered higher priority. Columns that may be omitted in limited space scenarios should be given a priority greater than 0.
func (o CustomResourceColumnDefinitionPatchOutput) Priority() pulumi.IntPtrOutput {
	return o.ApplyT(func(v CustomResourceColumnDefinitionPatch) *int { return v.Priority }).(pulumi.IntPtrOutput)
}

// type is an OpenAPI type definition for this column. See https://github.com/OAI/OpenAPI-Specification/blob/master/versions/2.0.md#data-types for details.
func (o CustomResourceColumnDefinitionPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceColumnDefinitionPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CustomResourceColumnDefinitionPatchArrayOutput struct{ *pulumi.OutputState }

func (CustomResourceColumnDefinitionPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomResourceColumnDefinitionPatch)(nil)).Elem()
}

func (o CustomResourceColumnDefinitionPatchArrayOutput) ToCustomResourceColumnDefinitionPatchArrayOutput() CustomResourceColumnDefinitionPatchArrayOutput {
	return o
}

func (o CustomResourceColumnDefinitionPatchArrayOutput) ToCustomResourceColumnDefinitionPatchArrayOutputWithContext(ctx context.Context) CustomResourceColumnDefinitionPatchArrayOutput {
	return o
}

func (o CustomResourceColumnDefinitionPatchArrayOutput) Index(i pulumi.IntInput) CustomResourceColumnDefinitionPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomResourceColumnDefinitionPatch {
		return vs[0].([]CustomResourceColumnDefinitionPatch)[vs[1].(int)]
	}).(CustomResourceColumnDefinitionPatchOutput)
}

// CustomResourceConversion describes how to convert different versions of a CR.
type CustomResourceConversion struct {
	// conversionReviewVersions is an ordered list of preferred `ConversionReview` versions the Webhook expects. The API server will use the first version in the list which it supports. If none of the versions specified in this list are supported by API server, conversion will fail for the custom resource. If a persisted Webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail. Defaults to `["v1beta1"]`.
	ConversionReviewVersions []string `pulumi:"conversionReviewVersions"`
	// strategy specifies how custom resources are converted between versions. Allowed values are: - `None`: The converter only change the apiVersion and would not touch any other field in the custom resource. - `Webhook`: API Server will call to an external webhook to do the conversion. Additional information
	//   is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhookClientConfig to be set.
	Strategy string `pulumi:"strategy"`
	// webhookClientConfig is the instructions for how to call the webhook if strategy is `Webhook`. Required when `strategy` is set to `Webhook`.
	WebhookClientConfig *WebhookClientConfig `pulumi:"webhookClientConfig"`
}

// CustomResourceConversionInput is an input type that accepts CustomResourceConversionArgs and CustomResourceConversionOutput values.
// You can construct a concrete instance of `CustomResourceConversionInput` via:
//
//	CustomResourceConversionArgs{...}
type CustomResourceConversionInput interface {
	pulumi.Input

	ToCustomResourceConversionOutput() CustomResourceConversionOutput
	ToCustomResourceConversionOutputWithContext(context.Context) CustomResourceConversionOutput
}

// CustomResourceConversion describes how to convert different versions of a CR.
type CustomResourceConversionArgs struct {
	// conversionReviewVersions is an ordered list of preferred `ConversionReview` versions the Webhook expects. The API server will use the first version in the list which it supports. If none of the versions specified in this list are supported by API server, conversion will fail for the custom resource. If a persisted Webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail. Defaults to `["v1beta1"]`.
	ConversionReviewVersions pulumi.StringArrayInput `pulumi:"conversionReviewVersions"`
	// strategy specifies how custom resources are converted between versions. Allowed values are: - `None`: The converter only change the apiVersion and would not touch any other field in the custom resource. - `Webhook`: API Server will call to an external webhook to do the conversion. Additional information
	//   is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhookClientConfig to be set.
	Strategy pulumi.StringInput `pulumi:"strategy"`
	// webhookClientConfig is the instructions for how to call the webhook if strategy is `Webhook`. Required when `strategy` is set to `Webhook`.
	WebhookClientConfig WebhookClientConfigPtrInput `pulumi:"webhookClientConfig"`
}

func (CustomResourceConversionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceConversion)(nil)).Elem()
}

func (i CustomResourceConversionArgs) ToCustomResourceConversionOutput() CustomResourceConversionOutput {
	return i.ToCustomResourceConversionOutputWithContext(context.Background())
}

func (i CustomResourceConversionArgs) ToCustomResourceConversionOutputWithContext(ctx context.Context) CustomResourceConversionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceConversionOutput)
}

func (i CustomResourceConversionArgs) ToCustomResourceConversionPtrOutput() CustomResourceConversionPtrOutput {
	return i.ToCustomResourceConversionPtrOutputWithContext(context.Background())
}

func (i CustomResourceConversionArgs) ToCustomResourceConversionPtrOutputWithContext(ctx context.Context) CustomResourceConversionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceConversionOutput).ToCustomResourceConversionPtrOutputWithContext(ctx)
}

// CustomResourceConversionPtrInput is an input type that accepts CustomResourceConversionArgs, CustomResourceConversionPtr and CustomResourceConversionPtrOutput values.
// You can construct a concrete instance of `CustomResourceConversionPtrInput` via:
//
//	        CustomResourceConversionArgs{...}
//
//	or:
//
//	        nil
type CustomResourceConversionPtrInput interface {
	pulumi.Input

	ToCustomResourceConversionPtrOutput() CustomResourceConversionPtrOutput
	ToCustomResourceConversionPtrOutputWithContext(context.Context) CustomResourceConversionPtrOutput
}

type customResourceConversionPtrType CustomResourceConversionArgs

func CustomResourceConversionPtr(v *CustomResourceConversionArgs) CustomResourceConversionPtrInput {
	return (*customResourceConversionPtrType)(v)
}

func (*customResourceConversionPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomResourceConversion)(nil)).Elem()
}

func (i *customResourceConversionPtrType) ToCustomResourceConversionPtrOutput() CustomResourceConversionPtrOutput {
	return i.ToCustomResourceConversionPtrOutputWithContext(context.Background())
}

func (i *customResourceConversionPtrType) ToCustomResourceConversionPtrOutputWithContext(ctx context.Context) CustomResourceConversionPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceConversionPtrOutput)
}

// CustomResourceConversion describes how to convert different versions of a CR.
type CustomResourceConversionOutput struct{ *pulumi.OutputState }

func (CustomResourceConversionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceConversion)(nil)).Elem()
}

func (o CustomResourceConversionOutput) ToCustomResourceConversionOutput() CustomResourceConversionOutput {
	return o
}

func (o CustomResourceConversionOutput) ToCustomResourceConversionOutputWithContext(ctx context.Context) CustomResourceConversionOutput {
	return o
}

func (o CustomResourceConversionOutput) ToCustomResourceConversionPtrOutput() CustomResourceConversionPtrOutput {
	return o.ToCustomResourceConversionPtrOutputWithContext(context.Background())
}

func (o CustomResourceConversionOutput) ToCustomResourceConversionPtrOutputWithContext(ctx context.Context) CustomResourceConversionPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomResourceConversion) *CustomResourceConversion {
		return &v
	}).(CustomResourceConversionPtrOutput)
}

// conversionReviewVersions is an ordered list of preferred `ConversionReview` versions the Webhook expects. The API server will use the first version in the list which it supports. If none of the versions specified in this list are supported by API server, conversion will fail for the custom resource. If a persisted Webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail. Defaults to `["v1beta1"]`.
func (o CustomResourceConversionOutput) ConversionReviewVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomResourceConversion) []string { return v.ConversionReviewVersions }).(pulumi.StringArrayOutput)
}

// strategy specifies how custom resources are converted between versions. Allowed values are: - `None`: The converter only change the apiVersion and would not touch any other field in the custom resource. - `Webhook`: API Server will call to an external webhook to do the conversion. Additional information
//
//	is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhookClientConfig to be set.
func (o CustomResourceConversionOutput) Strategy() pulumi.StringOutput {
	return o.ApplyT(func(v CustomResourceConversion) string { return v.Strategy }).(pulumi.StringOutput)
}

// webhookClientConfig is the instructions for how to call the webhook if strategy is `Webhook`. Required when `strategy` is set to `Webhook`.
func (o CustomResourceConversionOutput) WebhookClientConfig() WebhookClientConfigPtrOutput {
	return o.ApplyT(func(v CustomResourceConversion) *WebhookClientConfig { return v.WebhookClientConfig }).(WebhookClientConfigPtrOutput)
}

type CustomResourceConversionPtrOutput struct{ *pulumi.OutputState }

func (CustomResourceConversionPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomResourceConversion)(nil)).Elem()
}

func (o CustomResourceConversionPtrOutput) ToCustomResourceConversionPtrOutput() CustomResourceConversionPtrOutput {
	return o
}

func (o CustomResourceConversionPtrOutput) ToCustomResourceConversionPtrOutputWithContext(ctx context.Context) CustomResourceConversionPtrOutput {
	return o
}

func (o CustomResourceConversionPtrOutput) Elem() CustomResourceConversionOutput {
	return o.ApplyT(func(v *CustomResourceConversion) CustomResourceConversion {
		if v != nil {
			return *v
		}
		var ret CustomResourceConversion
		return ret
	}).(CustomResourceConversionOutput)
}

// conversionReviewVersions is an ordered list of preferred `ConversionReview` versions the Webhook expects. The API server will use the first version in the list which it supports. If none of the versions specified in this list are supported by API server, conversion will fail for the custom resource. If a persisted Webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail. Defaults to `["v1beta1"]`.
func (o CustomResourceConversionPtrOutput) ConversionReviewVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CustomResourceConversion) []string {
		if v == nil {
			return nil
		}
		return v.ConversionReviewVersions
	}).(pulumi.StringArrayOutput)
}

// strategy specifies how custom resources are converted between versions. Allowed values are: - `None`: The converter only change the apiVersion and would not touch any other field in the custom resource. - `Webhook`: API Server will call to an external webhook to do the conversion. Additional information
//
//	is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhookClientConfig to be set.
func (o CustomResourceConversionPtrOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomResourceConversion) *string {
		if v == nil {
			return nil
		}
		return &v.Strategy
	}).(pulumi.StringPtrOutput)
}

// webhookClientConfig is the instructions for how to call the webhook if strategy is `Webhook`. Required when `strategy` is set to `Webhook`.
func (o CustomResourceConversionPtrOutput) WebhookClientConfig() WebhookClientConfigPtrOutput {
	return o.ApplyT(func(v *CustomResourceConversion) *WebhookClientConfig {
		if v == nil {
			return nil
		}
		return v.WebhookClientConfig
	}).(WebhookClientConfigPtrOutput)
}

// CustomResourceConversion describes how to convert different versions of a CR.
type CustomResourceConversionPatch struct {
	// conversionReviewVersions is an ordered list of preferred `ConversionReview` versions the Webhook expects. The API server will use the first version in the list which it supports. If none of the versions specified in this list are supported by API server, conversion will fail for the custom resource. If a persisted Webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail. Defaults to `["v1beta1"]`.
	ConversionReviewVersions []string `pulumi:"conversionReviewVersions"`
	// strategy specifies how custom resources are converted between versions. Allowed values are: - `None`: The converter only change the apiVersion and would not touch any other field in the custom resource. - `Webhook`: API Server will call to an external webhook to do the conversion. Additional information
	//   is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhookClientConfig to be set.
	Strategy *string `pulumi:"strategy"`
	// webhookClientConfig is the instructions for how to call the webhook if strategy is `Webhook`. Required when `strategy` is set to `Webhook`.
	WebhookClientConfig *WebhookClientConfigPatch `pulumi:"webhookClientConfig"`
}

// CustomResourceConversionPatchInput is an input type that accepts CustomResourceConversionPatchArgs and CustomResourceConversionPatchOutput values.
// You can construct a concrete instance of `CustomResourceConversionPatchInput` via:
//
//	CustomResourceConversionPatchArgs{...}
type CustomResourceConversionPatchInput interface {
	pulumi.Input

	ToCustomResourceConversionPatchOutput() CustomResourceConversionPatchOutput
	ToCustomResourceConversionPatchOutputWithContext(context.Context) CustomResourceConversionPatchOutput
}

// CustomResourceConversion describes how to convert different versions of a CR.
type CustomResourceConversionPatchArgs struct {
	// conversionReviewVersions is an ordered list of preferred `ConversionReview` versions the Webhook expects. The API server will use the first version in the list which it supports. If none of the versions specified in this list are supported by API server, conversion will fail for the custom resource. If a persisted Webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail. Defaults to `["v1beta1"]`.
	ConversionReviewVersions pulumi.StringArrayInput `pulumi:"conversionReviewVersions"`
	// strategy specifies how custom resources are converted between versions. Allowed values are: - `None`: The converter only change the apiVersion and would not touch any other field in the custom resource. - `Webhook`: API Server will call to an external webhook to do the conversion. Additional information
	//   is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhookClientConfig to be set.
	Strategy pulumi.StringPtrInput `pulumi:"strategy"`
	// webhookClientConfig is the instructions for how to call the webhook if strategy is `Webhook`. Required when `strategy` is set to `Webhook`.
	WebhookClientConfig WebhookClientConfigPatchPtrInput `pulumi:"webhookClientConfig"`
}

func (CustomResourceConversionPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceConversionPatch)(nil)).Elem()
}

func (i CustomResourceConversionPatchArgs) ToCustomResourceConversionPatchOutput() CustomResourceConversionPatchOutput {
	return i.ToCustomResourceConversionPatchOutputWithContext(context.Background())
}

func (i CustomResourceConversionPatchArgs) ToCustomResourceConversionPatchOutputWithContext(ctx context.Context) CustomResourceConversionPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceConversionPatchOutput)
}

func (i CustomResourceConversionPatchArgs) ToCustomResourceConversionPatchPtrOutput() CustomResourceConversionPatchPtrOutput {
	return i.ToCustomResourceConversionPatchPtrOutputWithContext(context.Background())
}

func (i CustomResourceConversionPatchArgs) ToCustomResourceConversionPatchPtrOutputWithContext(ctx context.Context) CustomResourceConversionPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceConversionPatchOutput).ToCustomResourceConversionPatchPtrOutputWithContext(ctx)
}

// CustomResourceConversionPatchPtrInput is an input type that accepts CustomResourceConversionPatchArgs, CustomResourceConversionPatchPtr and CustomResourceConversionPatchPtrOutput values.
// You can construct a concrete instance of `CustomResourceConversionPatchPtrInput` via:
//
//	        CustomResourceConversionPatchArgs{...}
//
//	or:
//
//	        nil
type CustomResourceConversionPatchPtrInput interface {
	pulumi.Input

	ToCustomResourceConversionPatchPtrOutput() CustomResourceConversionPatchPtrOutput
	ToCustomResourceConversionPatchPtrOutputWithContext(context.Context) CustomResourceConversionPatchPtrOutput
}

type customResourceConversionPatchPtrType CustomResourceConversionPatchArgs

func CustomResourceConversionPatchPtr(v *CustomResourceConversionPatchArgs) CustomResourceConversionPatchPtrInput {
	return (*customResourceConversionPatchPtrType)(v)
}

func (*customResourceConversionPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomResourceConversionPatch)(nil)).Elem()
}

func (i *customResourceConversionPatchPtrType) ToCustomResourceConversionPatchPtrOutput() CustomResourceConversionPatchPtrOutput {
	return i.ToCustomResourceConversionPatchPtrOutputWithContext(context.Background())
}

func (i *customResourceConversionPatchPtrType) ToCustomResourceConversionPatchPtrOutputWithContext(ctx context.Context) CustomResourceConversionPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceConversionPatchPtrOutput)
}

// CustomResourceConversion describes how to convert different versions of a CR.
type CustomResourceConversionPatchOutput struct{ *pulumi.OutputState }

func (CustomResourceConversionPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceConversionPatch)(nil)).Elem()
}

func (o CustomResourceConversionPatchOutput) ToCustomResourceConversionPatchOutput() CustomResourceConversionPatchOutput {
	return o
}

func (o CustomResourceConversionPatchOutput) ToCustomResourceConversionPatchOutputWithContext(ctx context.Context) CustomResourceConversionPatchOutput {
	return o
}

func (o CustomResourceConversionPatchOutput) ToCustomResourceConversionPatchPtrOutput() CustomResourceConversionPatchPtrOutput {
	return o.ToCustomResourceConversionPatchPtrOutputWithContext(context.Background())
}

func (o CustomResourceConversionPatchOutput) ToCustomResourceConversionPatchPtrOutputWithContext(ctx context.Context) CustomResourceConversionPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomResourceConversionPatch) *CustomResourceConversionPatch {
		return &v
	}).(CustomResourceConversionPatchPtrOutput)
}

// conversionReviewVersions is an ordered list of preferred `ConversionReview` versions the Webhook expects. The API server will use the first version in the list which it supports. If none of the versions specified in this list are supported by API server, conversion will fail for the custom resource. If a persisted Webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail. Defaults to `["v1beta1"]`.
func (o CustomResourceConversionPatchOutput) ConversionReviewVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomResourceConversionPatch) []string { return v.ConversionReviewVersions }).(pulumi.StringArrayOutput)
}

// strategy specifies how custom resources are converted between versions. Allowed values are: - `None`: The converter only change the apiVersion and would not touch any other field in the custom resource. - `Webhook`: API Server will call to an external webhook to do the conversion. Additional information
//
//	is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhookClientConfig to be set.
func (o CustomResourceConversionPatchOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceConversionPatch) *string { return v.Strategy }).(pulumi.StringPtrOutput)
}

// webhookClientConfig is the instructions for how to call the webhook if strategy is `Webhook`. Required when `strategy` is set to `Webhook`.
func (o CustomResourceConversionPatchOutput) WebhookClientConfig() WebhookClientConfigPatchPtrOutput {
	return o.ApplyT(func(v CustomResourceConversionPatch) *WebhookClientConfigPatch { return v.WebhookClientConfig }).(WebhookClientConfigPatchPtrOutput)
}

type CustomResourceConversionPatchPtrOutput struct{ *pulumi.OutputState }

func (CustomResourceConversionPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomResourceConversionPatch)(nil)).Elem()
}

func (o CustomResourceConversionPatchPtrOutput) ToCustomResourceConversionPatchPtrOutput() CustomResourceConversionPatchPtrOutput {
	return o
}

func (o CustomResourceConversionPatchPtrOutput) ToCustomResourceConversionPatchPtrOutputWithContext(ctx context.Context) CustomResourceConversionPatchPtrOutput {
	return o
}

func (o CustomResourceConversionPatchPtrOutput) Elem() CustomResourceConversionPatchOutput {
	return o.ApplyT(func(v *CustomResourceConversionPatch) CustomResourceConversionPatch {
		if v != nil {
			return *v
		}
		var ret CustomResourceConversionPatch
		return ret
	}).(CustomResourceConversionPatchOutput)
}

// conversionReviewVersions is an ordered list of preferred `ConversionReview` versions the Webhook expects. The API server will use the first version in the list which it supports. If none of the versions specified in this list are supported by API server, conversion will fail for the custom resource. If a persisted Webhook configuration specifies allowed versions and does not include any versions known to the API Server, calls to the webhook will fail. Defaults to `["v1beta1"]`.
func (o CustomResourceConversionPatchPtrOutput) ConversionReviewVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CustomResourceConversionPatch) []string {
		if v == nil {
			return nil
		}
		return v.ConversionReviewVersions
	}).(pulumi.StringArrayOutput)
}

// strategy specifies how custom resources are converted between versions. Allowed values are: - `None`: The converter only change the apiVersion and would not touch any other field in the custom resource. - `Webhook`: API Server will call to an external webhook to do the conversion. Additional information
//
//	is needed for this option. This requires spec.preserveUnknownFields to be false, and spec.conversion.webhookClientConfig to be set.
func (o CustomResourceConversionPatchPtrOutput) Strategy() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomResourceConversionPatch) *string {
		if v == nil {
			return nil
		}
		return v.Strategy
	}).(pulumi.StringPtrOutput)
}

// webhookClientConfig is the instructions for how to call the webhook if strategy is `Webhook`. Required when `strategy` is set to `Webhook`.
func (o CustomResourceConversionPatchPtrOutput) WebhookClientConfig() WebhookClientConfigPatchPtrOutput {
	return o.ApplyT(func(v *CustomResourceConversionPatch) *WebhookClientConfigPatch {
		if v == nil {
			return nil
		}
		return v.WebhookClientConfig
	}).(WebhookClientConfigPatchPtrOutput)
}

// CustomResourceDefinition represents a resource that should be exposed on the API server.  Its name MUST be in the format <.spec.name>.<.spec.group>. Deprecated in v1.16, planned for removal in v1.19. Use apiextensions.k8s.io/v1 CustomResourceDefinition instead.
type CustomResourceDefinitionType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind     *string            `pulumi:"kind"`
	Metadata *metav1.ObjectMeta `pulumi:"metadata"`
	// spec describes how the user wants the resources to appear
	Spec CustomResourceDefinitionSpec `pulumi:"spec"`
	// status indicates the actual state of the CustomResourceDefinition
	Status *CustomResourceDefinitionStatus `pulumi:"status"`
}

// CustomResourceDefinitionTypeInput is an input type that accepts CustomResourceDefinitionTypeArgs and CustomResourceDefinitionTypeOutput values.
// You can construct a concrete instance of `CustomResourceDefinitionTypeInput` via:
//
//	CustomResourceDefinitionTypeArgs{...}
type CustomResourceDefinitionTypeInput interface {
	pulumi.Input

	ToCustomResourceDefinitionTypeOutput() CustomResourceDefinitionTypeOutput
	ToCustomResourceDefinitionTypeOutputWithContext(context.Context) CustomResourceDefinitionTypeOutput
}

// CustomResourceDefinition represents a resource that should be exposed on the API server.  Its name MUST be in the format <.spec.name>.<.spec.group>. Deprecated in v1.16, planned for removal in v1.19. Use apiextensions.k8s.io/v1 CustomResourceDefinition instead.
type CustomResourceDefinitionTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind     pulumi.StringPtrInput     `pulumi:"kind"`
	Metadata metav1.ObjectMetaPtrInput `pulumi:"metadata"`
	// spec describes how the user wants the resources to appear
	Spec CustomResourceDefinitionSpecInput `pulumi:"spec"`
	// status indicates the actual state of the CustomResourceDefinition
	Status CustomResourceDefinitionStatusPtrInput `pulumi:"status"`
}

func (CustomResourceDefinitionTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceDefinitionType)(nil)).Elem()
}

func (i CustomResourceDefinitionTypeArgs) ToCustomResourceDefinitionTypeOutput() CustomResourceDefinitionTypeOutput {
	return i.ToCustomResourceDefinitionTypeOutputWithContext(context.Background())
}

func (i CustomResourceDefinitionTypeArgs) ToCustomResourceDefinitionTypeOutputWithContext(ctx context.Context) CustomResourceDefinitionTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceDefinitionTypeOutput)
}

// CustomResourceDefinitionTypeArrayInput is an input type that accepts CustomResourceDefinitionTypeArray and CustomResourceDefinitionTypeArrayOutput values.
// You can construct a concrete instance of `CustomResourceDefinitionTypeArrayInput` via:
//
//	CustomResourceDefinitionTypeArray{ CustomResourceDefinitionTypeArgs{...} }
type CustomResourceDefinitionTypeArrayInput interface {
	pulumi.Input

	ToCustomResourceDefinitionTypeArrayOutput() CustomResourceDefinitionTypeArrayOutput
	ToCustomResourceDefinitionTypeArrayOutputWithContext(context.Context) CustomResourceDefinitionTypeArrayOutput
}

type CustomResourceDefinitionTypeArray []CustomResourceDefinitionTypeInput

func (CustomResourceDefinitionTypeArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomResourceDefinitionType)(nil)).Elem()
}

func (i CustomResourceDefinitionTypeArray) ToCustomResourceDefinitionTypeArrayOutput() CustomResourceDefinitionTypeArrayOutput {
	return i.ToCustomResourceDefinitionTypeArrayOutputWithContext(context.Background())
}

func (i CustomResourceDefinitionTypeArray) ToCustomResourceDefinitionTypeArrayOutputWithContext(ctx context.Context) CustomResourceDefinitionTypeArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceDefinitionTypeArrayOutput)
}

// CustomResourceDefinition represents a resource that should be exposed on the API server.  Its name MUST be in the format <.spec.name>.<.spec.group>. Deprecated in v1.16, planned for removal in v1.19. Use apiextensions.k8s.io/v1 CustomResourceDefinition instead.
type CustomResourceDefinitionTypeOutput struct{ *pulumi.OutputState }

func (CustomResourceDefinitionTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceDefinitionType)(nil)).Elem()
}

func (o CustomResourceDefinitionTypeOutput) ToCustomResourceDefinitionTypeOutput() CustomResourceDefinitionTypeOutput {
	return o
}

func (o CustomResourceDefinitionTypeOutput) ToCustomResourceDefinitionTypeOutputWithContext(ctx context.Context) CustomResourceDefinitionTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o CustomResourceDefinitionTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o CustomResourceDefinitionTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o CustomResourceDefinitionTypeOutput) Metadata() metav1.ObjectMetaPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionType) *metav1.ObjectMeta { return v.Metadata }).(metav1.ObjectMetaPtrOutput)
}

// spec describes how the user wants the resources to appear
func (o CustomResourceDefinitionTypeOutput) Spec() CustomResourceDefinitionSpecOutput {
	return o.ApplyT(func(v CustomResourceDefinitionType) CustomResourceDefinitionSpec { return v.Spec }).(CustomResourceDefinitionSpecOutput)
}

// status indicates the actual state of the CustomResourceDefinition
func (o CustomResourceDefinitionTypeOutput) Status() CustomResourceDefinitionStatusPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionType) *CustomResourceDefinitionStatus { return v.Status }).(CustomResourceDefinitionStatusPtrOutput)
}

type CustomResourceDefinitionTypeArrayOutput struct{ *pulumi.OutputState }

func (CustomResourceDefinitionTypeArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomResourceDefinitionType)(nil)).Elem()
}

func (o CustomResourceDefinitionTypeArrayOutput) ToCustomResourceDefinitionTypeArrayOutput() CustomResourceDefinitionTypeArrayOutput {
	return o
}

func (o CustomResourceDefinitionTypeArrayOutput) ToCustomResourceDefinitionTypeArrayOutputWithContext(ctx context.Context) CustomResourceDefinitionTypeArrayOutput {
	return o
}

func (o CustomResourceDefinitionTypeArrayOutput) Index(i pulumi.IntInput) CustomResourceDefinitionTypeOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomResourceDefinitionType {
		return vs[0].([]CustomResourceDefinitionType)[vs[1].(int)]
	}).(CustomResourceDefinitionTypeOutput)
}

// CustomResourceDefinitionCondition contains details for the current condition of this pod.
type CustomResourceDefinitionCondition struct {
	// lastTransitionTime last time the condition transitioned from one status to another.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// message is a human-readable message indicating details about last transition.
	Message *string `pulumi:"message"`
	// reason is a unique, one-word, CamelCase reason for the condition's last transition.
	Reason *string `pulumi:"reason"`
	// status is the status of the condition. Can be True, False, Unknown.
	Status string `pulumi:"status"`
	// type is the type of the condition. Types include Established, NamesAccepted and Terminating.
	Type string `pulumi:"type"`
}

// CustomResourceDefinitionConditionInput is an input type that accepts CustomResourceDefinitionConditionArgs and CustomResourceDefinitionConditionOutput values.
// You can construct a concrete instance of `CustomResourceDefinitionConditionInput` via:
//
//	CustomResourceDefinitionConditionArgs{...}
type CustomResourceDefinitionConditionInput interface {
	pulumi.Input

	ToCustomResourceDefinitionConditionOutput() CustomResourceDefinitionConditionOutput
	ToCustomResourceDefinitionConditionOutputWithContext(context.Context) CustomResourceDefinitionConditionOutput
}

// CustomResourceDefinitionCondition contains details for the current condition of this pod.
type CustomResourceDefinitionConditionArgs struct {
	// lastTransitionTime last time the condition transitioned from one status to another.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// message is a human-readable message indicating details about last transition.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// reason is a unique, one-word, CamelCase reason for the condition's last transition.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// status is the status of the condition. Can be True, False, Unknown.
	Status pulumi.StringInput `pulumi:"status"`
	// type is the type of the condition. Types include Established, NamesAccepted and Terminating.
	Type pulumi.StringInput `pulumi:"type"`
}

func (CustomResourceDefinitionConditionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceDefinitionCondition)(nil)).Elem()
}

func (i CustomResourceDefinitionConditionArgs) ToCustomResourceDefinitionConditionOutput() CustomResourceDefinitionConditionOutput {
	return i.ToCustomResourceDefinitionConditionOutputWithContext(context.Background())
}

func (i CustomResourceDefinitionConditionArgs) ToCustomResourceDefinitionConditionOutputWithContext(ctx context.Context) CustomResourceDefinitionConditionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceDefinitionConditionOutput)
}

// CustomResourceDefinitionConditionArrayInput is an input type that accepts CustomResourceDefinitionConditionArray and CustomResourceDefinitionConditionArrayOutput values.
// You can construct a concrete instance of `CustomResourceDefinitionConditionArrayInput` via:
//
//	CustomResourceDefinitionConditionArray{ CustomResourceDefinitionConditionArgs{...} }
type CustomResourceDefinitionConditionArrayInput interface {
	pulumi.Input

	ToCustomResourceDefinitionConditionArrayOutput() CustomResourceDefinitionConditionArrayOutput
	ToCustomResourceDefinitionConditionArrayOutputWithContext(context.Context) CustomResourceDefinitionConditionArrayOutput
}

type CustomResourceDefinitionConditionArray []CustomResourceDefinitionConditionInput

func (CustomResourceDefinitionConditionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomResourceDefinitionCondition)(nil)).Elem()
}

func (i CustomResourceDefinitionConditionArray) ToCustomResourceDefinitionConditionArrayOutput() CustomResourceDefinitionConditionArrayOutput {
	return i.ToCustomResourceDefinitionConditionArrayOutputWithContext(context.Background())
}

func (i CustomResourceDefinitionConditionArray) ToCustomResourceDefinitionConditionArrayOutputWithContext(ctx context.Context) CustomResourceDefinitionConditionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceDefinitionConditionArrayOutput)
}

// CustomResourceDefinitionCondition contains details for the current condition of this pod.
type CustomResourceDefinitionConditionOutput struct{ *pulumi.OutputState }

func (CustomResourceDefinitionConditionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceDefinitionCondition)(nil)).Elem()
}

func (o CustomResourceDefinitionConditionOutput) ToCustomResourceDefinitionConditionOutput() CustomResourceDefinitionConditionOutput {
	return o
}

func (o CustomResourceDefinitionConditionOutput) ToCustomResourceDefinitionConditionOutputWithContext(ctx context.Context) CustomResourceDefinitionConditionOutput {
	return o
}

// lastTransitionTime last time the condition transitioned from one status to another.
func (o CustomResourceDefinitionConditionOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionCondition) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// message is a human-readable message indicating details about last transition.
func (o CustomResourceDefinitionConditionOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionCondition) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// reason is a unique, one-word, CamelCase reason for the condition's last transition.
func (o CustomResourceDefinitionConditionOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionCondition) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// status is the status of the condition. Can be True, False, Unknown.
func (o CustomResourceDefinitionConditionOutput) Status() pulumi.StringOutput {
	return o.ApplyT(func(v CustomResourceDefinitionCondition) string { return v.Status }).(pulumi.StringOutput)
}

// type is the type of the condition. Types include Established, NamesAccepted and Terminating.
func (o CustomResourceDefinitionConditionOutput) Type() pulumi.StringOutput {
	return o.ApplyT(func(v CustomResourceDefinitionCondition) string { return v.Type }).(pulumi.StringOutput)
}

type CustomResourceDefinitionConditionArrayOutput struct{ *pulumi.OutputState }

func (CustomResourceDefinitionConditionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomResourceDefinitionCondition)(nil)).Elem()
}

func (o CustomResourceDefinitionConditionArrayOutput) ToCustomResourceDefinitionConditionArrayOutput() CustomResourceDefinitionConditionArrayOutput {
	return o
}

func (o CustomResourceDefinitionConditionArrayOutput) ToCustomResourceDefinitionConditionArrayOutputWithContext(ctx context.Context) CustomResourceDefinitionConditionArrayOutput {
	return o
}

func (o CustomResourceDefinitionConditionArrayOutput) Index(i pulumi.IntInput) CustomResourceDefinitionConditionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomResourceDefinitionCondition {
		return vs[0].([]CustomResourceDefinitionCondition)[vs[1].(int)]
	}).(CustomResourceDefinitionConditionOutput)
}

// CustomResourceDefinitionCondition contains details for the current condition of this pod.
type CustomResourceDefinitionConditionPatch struct {
	// lastTransitionTime last time the condition transitioned from one status to another.
	LastTransitionTime *string `pulumi:"lastTransitionTime"`
	// message is a human-readable message indicating details about last transition.
	Message *string `pulumi:"message"`
	// reason is a unique, one-word, CamelCase reason for the condition's last transition.
	Reason *string `pulumi:"reason"`
	// status is the status of the condition. Can be True, False, Unknown.
	Status *string `pulumi:"status"`
	// type is the type of the condition. Types include Established, NamesAccepted and Terminating.
	Type *string `pulumi:"type"`
}

// CustomResourceDefinitionConditionPatchInput is an input type that accepts CustomResourceDefinitionConditionPatchArgs and CustomResourceDefinitionConditionPatchOutput values.
// You can construct a concrete instance of `CustomResourceDefinitionConditionPatchInput` via:
//
//	CustomResourceDefinitionConditionPatchArgs{...}
type CustomResourceDefinitionConditionPatchInput interface {
	pulumi.Input

	ToCustomResourceDefinitionConditionPatchOutput() CustomResourceDefinitionConditionPatchOutput
	ToCustomResourceDefinitionConditionPatchOutputWithContext(context.Context) CustomResourceDefinitionConditionPatchOutput
}

// CustomResourceDefinitionCondition contains details for the current condition of this pod.
type CustomResourceDefinitionConditionPatchArgs struct {
	// lastTransitionTime last time the condition transitioned from one status to another.
	LastTransitionTime pulumi.StringPtrInput `pulumi:"lastTransitionTime"`
	// message is a human-readable message indicating details about last transition.
	Message pulumi.StringPtrInput `pulumi:"message"`
	// reason is a unique, one-word, CamelCase reason for the condition's last transition.
	Reason pulumi.StringPtrInput `pulumi:"reason"`
	// status is the status of the condition. Can be True, False, Unknown.
	Status pulumi.StringPtrInput `pulumi:"status"`
	// type is the type of the condition. Types include Established, NamesAccepted and Terminating.
	Type pulumi.StringPtrInput `pulumi:"type"`
}

func (CustomResourceDefinitionConditionPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceDefinitionConditionPatch)(nil)).Elem()
}

func (i CustomResourceDefinitionConditionPatchArgs) ToCustomResourceDefinitionConditionPatchOutput() CustomResourceDefinitionConditionPatchOutput {
	return i.ToCustomResourceDefinitionConditionPatchOutputWithContext(context.Background())
}

func (i CustomResourceDefinitionConditionPatchArgs) ToCustomResourceDefinitionConditionPatchOutputWithContext(ctx context.Context) CustomResourceDefinitionConditionPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceDefinitionConditionPatchOutput)
}

// CustomResourceDefinitionConditionPatchArrayInput is an input type that accepts CustomResourceDefinitionConditionPatchArray and CustomResourceDefinitionConditionPatchArrayOutput values.
// You can construct a concrete instance of `CustomResourceDefinitionConditionPatchArrayInput` via:
//
//	CustomResourceDefinitionConditionPatchArray{ CustomResourceDefinitionConditionPatchArgs{...} }
type CustomResourceDefinitionConditionPatchArrayInput interface {
	pulumi.Input

	ToCustomResourceDefinitionConditionPatchArrayOutput() CustomResourceDefinitionConditionPatchArrayOutput
	ToCustomResourceDefinitionConditionPatchArrayOutputWithContext(context.Context) CustomResourceDefinitionConditionPatchArrayOutput
}

type CustomResourceDefinitionConditionPatchArray []CustomResourceDefinitionConditionPatchInput

func (CustomResourceDefinitionConditionPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomResourceDefinitionConditionPatch)(nil)).Elem()
}

func (i CustomResourceDefinitionConditionPatchArray) ToCustomResourceDefinitionConditionPatchArrayOutput() CustomResourceDefinitionConditionPatchArrayOutput {
	return i.ToCustomResourceDefinitionConditionPatchArrayOutputWithContext(context.Background())
}

func (i CustomResourceDefinitionConditionPatchArray) ToCustomResourceDefinitionConditionPatchArrayOutputWithContext(ctx context.Context) CustomResourceDefinitionConditionPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceDefinitionConditionPatchArrayOutput)
}

// CustomResourceDefinitionCondition contains details for the current condition of this pod.
type CustomResourceDefinitionConditionPatchOutput struct{ *pulumi.OutputState }

func (CustomResourceDefinitionConditionPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceDefinitionConditionPatch)(nil)).Elem()
}

func (o CustomResourceDefinitionConditionPatchOutput) ToCustomResourceDefinitionConditionPatchOutput() CustomResourceDefinitionConditionPatchOutput {
	return o
}

func (o CustomResourceDefinitionConditionPatchOutput) ToCustomResourceDefinitionConditionPatchOutputWithContext(ctx context.Context) CustomResourceDefinitionConditionPatchOutput {
	return o
}

// lastTransitionTime last time the condition transitioned from one status to another.
func (o CustomResourceDefinitionConditionPatchOutput) LastTransitionTime() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionConditionPatch) *string { return v.LastTransitionTime }).(pulumi.StringPtrOutput)
}

// message is a human-readable message indicating details about last transition.
func (o CustomResourceDefinitionConditionPatchOutput) Message() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionConditionPatch) *string { return v.Message }).(pulumi.StringPtrOutput)
}

// reason is a unique, one-word, CamelCase reason for the condition's last transition.
func (o CustomResourceDefinitionConditionPatchOutput) Reason() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionConditionPatch) *string { return v.Reason }).(pulumi.StringPtrOutput)
}

// status is the status of the condition. Can be True, False, Unknown.
func (o CustomResourceDefinitionConditionPatchOutput) Status() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionConditionPatch) *string { return v.Status }).(pulumi.StringPtrOutput)
}

// type is the type of the condition. Types include Established, NamesAccepted and Terminating.
func (o CustomResourceDefinitionConditionPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionConditionPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

type CustomResourceDefinitionConditionPatchArrayOutput struct{ *pulumi.OutputState }

func (CustomResourceDefinitionConditionPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomResourceDefinitionConditionPatch)(nil)).Elem()
}

func (o CustomResourceDefinitionConditionPatchArrayOutput) ToCustomResourceDefinitionConditionPatchArrayOutput() CustomResourceDefinitionConditionPatchArrayOutput {
	return o
}

func (o CustomResourceDefinitionConditionPatchArrayOutput) ToCustomResourceDefinitionConditionPatchArrayOutputWithContext(ctx context.Context) CustomResourceDefinitionConditionPatchArrayOutput {
	return o
}

func (o CustomResourceDefinitionConditionPatchArrayOutput) Index(i pulumi.IntInput) CustomResourceDefinitionConditionPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomResourceDefinitionConditionPatch {
		return vs[0].([]CustomResourceDefinitionConditionPatch)[vs[1].(int)]
	}).(CustomResourceDefinitionConditionPatchOutput)
}

// CustomResourceDefinitionList is a list of CustomResourceDefinition objects.
type CustomResourceDefinitionListType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// items list individual CustomResourceDefinition objects
	Items []CustomResourceDefinitionType `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind     *string          `pulumi:"kind"`
	Metadata *metav1.ListMeta `pulumi:"metadata"`
}

// CustomResourceDefinitionListTypeInput is an input type that accepts CustomResourceDefinitionListTypeArgs and CustomResourceDefinitionListTypeOutput values.
// You can construct a concrete instance of `CustomResourceDefinitionListTypeInput` via:
//
//	CustomResourceDefinitionListTypeArgs{...}
type CustomResourceDefinitionListTypeInput interface {
	pulumi.Input

	ToCustomResourceDefinitionListTypeOutput() CustomResourceDefinitionListTypeOutput
	ToCustomResourceDefinitionListTypeOutputWithContext(context.Context) CustomResourceDefinitionListTypeOutput
}

// CustomResourceDefinitionList is a list of CustomResourceDefinition objects.
type CustomResourceDefinitionListTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// items list individual CustomResourceDefinition objects
	Items CustomResourceDefinitionTypeArrayInput `pulumi:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind     pulumi.StringPtrInput   `pulumi:"kind"`
	Metadata metav1.ListMetaPtrInput `pulumi:"metadata"`
}

func (CustomResourceDefinitionListTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceDefinitionListType)(nil)).Elem()
}

func (i CustomResourceDefinitionListTypeArgs) ToCustomResourceDefinitionListTypeOutput() CustomResourceDefinitionListTypeOutput {
	return i.ToCustomResourceDefinitionListTypeOutputWithContext(context.Background())
}

func (i CustomResourceDefinitionListTypeArgs) ToCustomResourceDefinitionListTypeOutputWithContext(ctx context.Context) CustomResourceDefinitionListTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceDefinitionListTypeOutput)
}

// CustomResourceDefinitionList is a list of CustomResourceDefinition objects.
type CustomResourceDefinitionListTypeOutput struct{ *pulumi.OutputState }

func (CustomResourceDefinitionListTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceDefinitionListType)(nil)).Elem()
}

func (o CustomResourceDefinitionListTypeOutput) ToCustomResourceDefinitionListTypeOutput() CustomResourceDefinitionListTypeOutput {
	return o
}

func (o CustomResourceDefinitionListTypeOutput) ToCustomResourceDefinitionListTypeOutputWithContext(ctx context.Context) CustomResourceDefinitionListTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o CustomResourceDefinitionListTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionListType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// items list individual CustomResourceDefinition objects
func (o CustomResourceDefinitionListTypeOutput) Items() CustomResourceDefinitionTypeArrayOutput {
	return o.ApplyT(func(v CustomResourceDefinitionListType) []CustomResourceDefinitionType { return v.Items }).(CustomResourceDefinitionTypeArrayOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o CustomResourceDefinitionListTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionListType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o CustomResourceDefinitionListTypeOutput) Metadata() metav1.ListMetaPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionListType) *metav1.ListMeta { return v.Metadata }).(metav1.ListMetaPtrOutput)
}

// CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition
type CustomResourceDefinitionNames struct {
	// categories is a list of grouped resources this custom resource belongs to (e.g. 'all'). This is published in API discovery documents, and used by clients to support invocations like `kubectl get all`.
	Categories []string `pulumi:"categories"`
	// kind is the serialized kind of the resource. It is normally CamelCase and singular. Custom resource instances will use this value as the `kind` attribute in API calls.
	Kind string `pulumi:"kind"`
	// listKind is the serialized kind of the list for this resource. Defaults to "`kind`List".
	ListKind *string `pulumi:"listKind"`
	// plural is the plural name of the resource to serve. The custom resources are served under `/apis/<group>/<version>/.../<plural>`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`). Must be all lowercase.
	Plural string `pulumi:"plural"`
	// shortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like `kubectl get <shortname>`. It must be all lowercase.
	ShortNames []string `pulumi:"shortNames"`
	// singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.
	Singular *string `pulumi:"singular"`
}

// CustomResourceDefinitionNamesInput is an input type that accepts CustomResourceDefinitionNamesArgs and CustomResourceDefinitionNamesOutput values.
// You can construct a concrete instance of `CustomResourceDefinitionNamesInput` via:
//
//	CustomResourceDefinitionNamesArgs{...}
type CustomResourceDefinitionNamesInput interface {
	pulumi.Input

	ToCustomResourceDefinitionNamesOutput() CustomResourceDefinitionNamesOutput
	ToCustomResourceDefinitionNamesOutputWithContext(context.Context) CustomResourceDefinitionNamesOutput
}

// CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition
type CustomResourceDefinitionNamesArgs struct {
	// categories is a list of grouped resources this custom resource belongs to (e.g. 'all'). This is published in API discovery documents, and used by clients to support invocations like `kubectl get all`.
	Categories pulumi.StringArrayInput `pulumi:"categories"`
	// kind is the serialized kind of the resource. It is normally CamelCase and singular. Custom resource instances will use this value as the `kind` attribute in API calls.
	Kind pulumi.StringInput `pulumi:"kind"`
	// listKind is the serialized kind of the list for this resource. Defaults to "`kind`List".
	ListKind pulumi.StringPtrInput `pulumi:"listKind"`
	// plural is the plural name of the resource to serve. The custom resources are served under `/apis/<group>/<version>/.../<plural>`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`). Must be all lowercase.
	Plural pulumi.StringInput `pulumi:"plural"`
	// shortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like `kubectl get <shortname>`. It must be all lowercase.
	ShortNames pulumi.StringArrayInput `pulumi:"shortNames"`
	// singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.
	Singular pulumi.StringPtrInput `pulumi:"singular"`
}

func (CustomResourceDefinitionNamesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceDefinitionNames)(nil)).Elem()
}

func (i CustomResourceDefinitionNamesArgs) ToCustomResourceDefinitionNamesOutput() CustomResourceDefinitionNamesOutput {
	return i.ToCustomResourceDefinitionNamesOutputWithContext(context.Background())
}

func (i CustomResourceDefinitionNamesArgs) ToCustomResourceDefinitionNamesOutputWithContext(ctx context.Context) CustomResourceDefinitionNamesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceDefinitionNamesOutput)
}

func (i CustomResourceDefinitionNamesArgs) ToCustomResourceDefinitionNamesPtrOutput() CustomResourceDefinitionNamesPtrOutput {
	return i.ToCustomResourceDefinitionNamesPtrOutputWithContext(context.Background())
}

func (i CustomResourceDefinitionNamesArgs) ToCustomResourceDefinitionNamesPtrOutputWithContext(ctx context.Context) CustomResourceDefinitionNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceDefinitionNamesOutput).ToCustomResourceDefinitionNamesPtrOutputWithContext(ctx)
}

// CustomResourceDefinitionNamesPtrInput is an input type that accepts CustomResourceDefinitionNamesArgs, CustomResourceDefinitionNamesPtr and CustomResourceDefinitionNamesPtrOutput values.
// You can construct a concrete instance of `CustomResourceDefinitionNamesPtrInput` via:
//
//	        CustomResourceDefinitionNamesArgs{...}
//
//	or:
//
//	        nil
type CustomResourceDefinitionNamesPtrInput interface {
	pulumi.Input

	ToCustomResourceDefinitionNamesPtrOutput() CustomResourceDefinitionNamesPtrOutput
	ToCustomResourceDefinitionNamesPtrOutputWithContext(context.Context) CustomResourceDefinitionNamesPtrOutput
}

type customResourceDefinitionNamesPtrType CustomResourceDefinitionNamesArgs

func CustomResourceDefinitionNamesPtr(v *CustomResourceDefinitionNamesArgs) CustomResourceDefinitionNamesPtrInput {
	return (*customResourceDefinitionNamesPtrType)(v)
}

func (*customResourceDefinitionNamesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomResourceDefinitionNames)(nil)).Elem()
}

func (i *customResourceDefinitionNamesPtrType) ToCustomResourceDefinitionNamesPtrOutput() CustomResourceDefinitionNamesPtrOutput {
	return i.ToCustomResourceDefinitionNamesPtrOutputWithContext(context.Background())
}

func (i *customResourceDefinitionNamesPtrType) ToCustomResourceDefinitionNamesPtrOutputWithContext(ctx context.Context) CustomResourceDefinitionNamesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceDefinitionNamesPtrOutput)
}

// CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition
type CustomResourceDefinitionNamesOutput struct{ *pulumi.OutputState }

func (CustomResourceDefinitionNamesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceDefinitionNames)(nil)).Elem()
}

func (o CustomResourceDefinitionNamesOutput) ToCustomResourceDefinitionNamesOutput() CustomResourceDefinitionNamesOutput {
	return o
}

func (o CustomResourceDefinitionNamesOutput) ToCustomResourceDefinitionNamesOutputWithContext(ctx context.Context) CustomResourceDefinitionNamesOutput {
	return o
}

func (o CustomResourceDefinitionNamesOutput) ToCustomResourceDefinitionNamesPtrOutput() CustomResourceDefinitionNamesPtrOutput {
	return o.ToCustomResourceDefinitionNamesPtrOutputWithContext(context.Background())
}

func (o CustomResourceDefinitionNamesOutput) ToCustomResourceDefinitionNamesPtrOutputWithContext(ctx context.Context) CustomResourceDefinitionNamesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomResourceDefinitionNames) *CustomResourceDefinitionNames {
		return &v
	}).(CustomResourceDefinitionNamesPtrOutput)
}

// categories is a list of grouped resources this custom resource belongs to (e.g. 'all'). This is published in API discovery documents, and used by clients to support invocations like `kubectl get all`.
func (o CustomResourceDefinitionNamesOutput) Categories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomResourceDefinitionNames) []string { return v.Categories }).(pulumi.StringArrayOutput)
}

// kind is the serialized kind of the resource. It is normally CamelCase and singular. Custom resource instances will use this value as the `kind` attribute in API calls.
func (o CustomResourceDefinitionNamesOutput) Kind() pulumi.StringOutput {
	return o.ApplyT(func(v CustomResourceDefinitionNames) string { return v.Kind }).(pulumi.StringOutput)
}

// listKind is the serialized kind of the list for this resource. Defaults to "`kind`List".
func (o CustomResourceDefinitionNamesOutput) ListKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionNames) *string { return v.ListKind }).(pulumi.StringPtrOutput)
}

// plural is the plural name of the resource to serve. The custom resources are served under `/apis/<group>/<version>/.../<plural>`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`). Must be all lowercase.
func (o CustomResourceDefinitionNamesOutput) Plural() pulumi.StringOutput {
	return o.ApplyT(func(v CustomResourceDefinitionNames) string { return v.Plural }).(pulumi.StringOutput)
}

// shortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like `kubectl get <shortname>`. It must be all lowercase.
func (o CustomResourceDefinitionNamesOutput) ShortNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomResourceDefinitionNames) []string { return v.ShortNames }).(pulumi.StringArrayOutput)
}

// singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.
func (o CustomResourceDefinitionNamesOutput) Singular() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionNames) *string { return v.Singular }).(pulumi.StringPtrOutput)
}

type CustomResourceDefinitionNamesPtrOutput struct{ *pulumi.OutputState }

func (CustomResourceDefinitionNamesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomResourceDefinitionNames)(nil)).Elem()
}

func (o CustomResourceDefinitionNamesPtrOutput) ToCustomResourceDefinitionNamesPtrOutput() CustomResourceDefinitionNamesPtrOutput {
	return o
}

func (o CustomResourceDefinitionNamesPtrOutput) ToCustomResourceDefinitionNamesPtrOutputWithContext(ctx context.Context) CustomResourceDefinitionNamesPtrOutput {
	return o
}

func (o CustomResourceDefinitionNamesPtrOutput) Elem() CustomResourceDefinitionNamesOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionNames) CustomResourceDefinitionNames {
		if v != nil {
			return *v
		}
		var ret CustomResourceDefinitionNames
		return ret
	}).(CustomResourceDefinitionNamesOutput)
}

// categories is a list of grouped resources this custom resource belongs to (e.g. 'all'). This is published in API discovery documents, and used by clients to support invocations like `kubectl get all`.
func (o CustomResourceDefinitionNamesPtrOutput) Categories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionNames) []string {
		if v == nil {
			return nil
		}
		return v.Categories
	}).(pulumi.StringArrayOutput)
}

// kind is the serialized kind of the resource. It is normally CamelCase and singular. Custom resource instances will use this value as the `kind` attribute in API calls.
func (o CustomResourceDefinitionNamesPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionNames) *string {
		if v == nil {
			return nil
		}
		return &v.Kind
	}).(pulumi.StringPtrOutput)
}

// listKind is the serialized kind of the list for this resource. Defaults to "`kind`List".
func (o CustomResourceDefinitionNamesPtrOutput) ListKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionNames) *string {
		if v == nil {
			return nil
		}
		return v.ListKind
	}).(pulumi.StringPtrOutput)
}

// plural is the plural name of the resource to serve. The custom resources are served under `/apis/<group>/<version>/.../<plural>`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`). Must be all lowercase.
func (o CustomResourceDefinitionNamesPtrOutput) Plural() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionNames) *string {
		if v == nil {
			return nil
		}
		return &v.Plural
	}).(pulumi.StringPtrOutput)
}

// shortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like `kubectl get <shortname>`. It must be all lowercase.
func (o CustomResourceDefinitionNamesPtrOutput) ShortNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionNames) []string {
		if v == nil {
			return nil
		}
		return v.ShortNames
	}).(pulumi.StringArrayOutput)
}

// singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.
func (o CustomResourceDefinitionNamesPtrOutput) Singular() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionNames) *string {
		if v == nil {
			return nil
		}
		return v.Singular
	}).(pulumi.StringPtrOutput)
}

// CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition
type CustomResourceDefinitionNamesPatch struct {
	// categories is a list of grouped resources this custom resource belongs to (e.g. 'all'). This is published in API discovery documents, and used by clients to support invocations like `kubectl get all`.
	Categories []string `pulumi:"categories"`
	// kind is the serialized kind of the resource. It is normally CamelCase and singular. Custom resource instances will use this value as the `kind` attribute in API calls.
	Kind *string `pulumi:"kind"`
	// listKind is the serialized kind of the list for this resource. Defaults to "`kind`List".
	ListKind *string `pulumi:"listKind"`
	// plural is the plural name of the resource to serve. The custom resources are served under `/apis/<group>/<version>/.../<plural>`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`). Must be all lowercase.
	Plural *string `pulumi:"plural"`
	// shortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like `kubectl get <shortname>`. It must be all lowercase.
	ShortNames []string `pulumi:"shortNames"`
	// singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.
	Singular *string `pulumi:"singular"`
}

// CustomResourceDefinitionNamesPatchInput is an input type that accepts CustomResourceDefinitionNamesPatchArgs and CustomResourceDefinitionNamesPatchOutput values.
// You can construct a concrete instance of `CustomResourceDefinitionNamesPatchInput` via:
//
//	CustomResourceDefinitionNamesPatchArgs{...}
type CustomResourceDefinitionNamesPatchInput interface {
	pulumi.Input

	ToCustomResourceDefinitionNamesPatchOutput() CustomResourceDefinitionNamesPatchOutput
	ToCustomResourceDefinitionNamesPatchOutputWithContext(context.Context) CustomResourceDefinitionNamesPatchOutput
}

// CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition
type CustomResourceDefinitionNamesPatchArgs struct {
	// categories is a list of grouped resources this custom resource belongs to (e.g. 'all'). This is published in API discovery documents, and used by clients to support invocations like `kubectl get all`.
	Categories pulumi.StringArrayInput `pulumi:"categories"`
	// kind is the serialized kind of the resource. It is normally CamelCase and singular. Custom resource instances will use this value as the `kind` attribute in API calls.
	Kind pulumi.StringPtrInput `pulumi:"kind"`
	// listKind is the serialized kind of the list for this resource. Defaults to "`kind`List".
	ListKind pulumi.StringPtrInput `pulumi:"listKind"`
	// plural is the plural name of the resource to serve. The custom resources are served under `/apis/<group>/<version>/.../<plural>`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`). Must be all lowercase.
	Plural pulumi.StringPtrInput `pulumi:"plural"`
	// shortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like `kubectl get <shortname>`. It must be all lowercase.
	ShortNames pulumi.StringArrayInput `pulumi:"shortNames"`
	// singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.
	Singular pulumi.StringPtrInput `pulumi:"singular"`
}

func (CustomResourceDefinitionNamesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceDefinitionNamesPatch)(nil)).Elem()
}

func (i CustomResourceDefinitionNamesPatchArgs) ToCustomResourceDefinitionNamesPatchOutput() CustomResourceDefinitionNamesPatchOutput {
	return i.ToCustomResourceDefinitionNamesPatchOutputWithContext(context.Background())
}

func (i CustomResourceDefinitionNamesPatchArgs) ToCustomResourceDefinitionNamesPatchOutputWithContext(ctx context.Context) CustomResourceDefinitionNamesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceDefinitionNamesPatchOutput)
}

func (i CustomResourceDefinitionNamesPatchArgs) ToCustomResourceDefinitionNamesPatchPtrOutput() CustomResourceDefinitionNamesPatchPtrOutput {
	return i.ToCustomResourceDefinitionNamesPatchPtrOutputWithContext(context.Background())
}

func (i CustomResourceDefinitionNamesPatchArgs) ToCustomResourceDefinitionNamesPatchPtrOutputWithContext(ctx context.Context) CustomResourceDefinitionNamesPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceDefinitionNamesPatchOutput).ToCustomResourceDefinitionNamesPatchPtrOutputWithContext(ctx)
}

// CustomResourceDefinitionNamesPatchPtrInput is an input type that accepts CustomResourceDefinitionNamesPatchArgs, CustomResourceDefinitionNamesPatchPtr and CustomResourceDefinitionNamesPatchPtrOutput values.
// You can construct a concrete instance of `CustomResourceDefinitionNamesPatchPtrInput` via:
//
//	        CustomResourceDefinitionNamesPatchArgs{...}
//
//	or:
//
//	        nil
type CustomResourceDefinitionNamesPatchPtrInput interface {
	pulumi.Input

	ToCustomResourceDefinitionNamesPatchPtrOutput() CustomResourceDefinitionNamesPatchPtrOutput
	ToCustomResourceDefinitionNamesPatchPtrOutputWithContext(context.Context) CustomResourceDefinitionNamesPatchPtrOutput
}

type customResourceDefinitionNamesPatchPtrType CustomResourceDefinitionNamesPatchArgs

func CustomResourceDefinitionNamesPatchPtr(v *CustomResourceDefinitionNamesPatchArgs) CustomResourceDefinitionNamesPatchPtrInput {
	return (*customResourceDefinitionNamesPatchPtrType)(v)
}

func (*customResourceDefinitionNamesPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomResourceDefinitionNamesPatch)(nil)).Elem()
}

func (i *customResourceDefinitionNamesPatchPtrType) ToCustomResourceDefinitionNamesPatchPtrOutput() CustomResourceDefinitionNamesPatchPtrOutput {
	return i.ToCustomResourceDefinitionNamesPatchPtrOutputWithContext(context.Background())
}

func (i *customResourceDefinitionNamesPatchPtrType) ToCustomResourceDefinitionNamesPatchPtrOutputWithContext(ctx context.Context) CustomResourceDefinitionNamesPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceDefinitionNamesPatchPtrOutput)
}

// CustomResourceDefinitionNames indicates the names to serve this CustomResourceDefinition
type CustomResourceDefinitionNamesPatchOutput struct{ *pulumi.OutputState }

func (CustomResourceDefinitionNamesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceDefinitionNamesPatch)(nil)).Elem()
}

func (o CustomResourceDefinitionNamesPatchOutput) ToCustomResourceDefinitionNamesPatchOutput() CustomResourceDefinitionNamesPatchOutput {
	return o
}

func (o CustomResourceDefinitionNamesPatchOutput) ToCustomResourceDefinitionNamesPatchOutputWithContext(ctx context.Context) CustomResourceDefinitionNamesPatchOutput {
	return o
}

func (o CustomResourceDefinitionNamesPatchOutput) ToCustomResourceDefinitionNamesPatchPtrOutput() CustomResourceDefinitionNamesPatchPtrOutput {
	return o.ToCustomResourceDefinitionNamesPatchPtrOutputWithContext(context.Background())
}

func (o CustomResourceDefinitionNamesPatchOutput) ToCustomResourceDefinitionNamesPatchPtrOutputWithContext(ctx context.Context) CustomResourceDefinitionNamesPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomResourceDefinitionNamesPatch) *CustomResourceDefinitionNamesPatch {
		return &v
	}).(CustomResourceDefinitionNamesPatchPtrOutput)
}

// categories is a list of grouped resources this custom resource belongs to (e.g. 'all'). This is published in API discovery documents, and used by clients to support invocations like `kubectl get all`.
func (o CustomResourceDefinitionNamesPatchOutput) Categories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomResourceDefinitionNamesPatch) []string { return v.Categories }).(pulumi.StringArrayOutput)
}

// kind is the serialized kind of the resource. It is normally CamelCase and singular. Custom resource instances will use this value as the `kind` attribute in API calls.
func (o CustomResourceDefinitionNamesPatchOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionNamesPatch) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

// listKind is the serialized kind of the list for this resource. Defaults to "`kind`List".
func (o CustomResourceDefinitionNamesPatchOutput) ListKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionNamesPatch) *string { return v.ListKind }).(pulumi.StringPtrOutput)
}

// plural is the plural name of the resource to serve. The custom resources are served under `/apis/<group>/<version>/.../<plural>`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`). Must be all lowercase.
func (o CustomResourceDefinitionNamesPatchOutput) Plural() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionNamesPatch) *string { return v.Plural }).(pulumi.StringPtrOutput)
}

// shortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like `kubectl get <shortname>`. It must be all lowercase.
func (o CustomResourceDefinitionNamesPatchOutput) ShortNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomResourceDefinitionNamesPatch) []string { return v.ShortNames }).(pulumi.StringArrayOutput)
}

// singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.
func (o CustomResourceDefinitionNamesPatchOutput) Singular() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionNamesPatch) *string { return v.Singular }).(pulumi.StringPtrOutput)
}

type CustomResourceDefinitionNamesPatchPtrOutput struct{ *pulumi.OutputState }

func (CustomResourceDefinitionNamesPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomResourceDefinitionNamesPatch)(nil)).Elem()
}

func (o CustomResourceDefinitionNamesPatchPtrOutput) ToCustomResourceDefinitionNamesPatchPtrOutput() CustomResourceDefinitionNamesPatchPtrOutput {
	return o
}

func (o CustomResourceDefinitionNamesPatchPtrOutput) ToCustomResourceDefinitionNamesPatchPtrOutputWithContext(ctx context.Context) CustomResourceDefinitionNamesPatchPtrOutput {
	return o
}

func (o CustomResourceDefinitionNamesPatchPtrOutput) Elem() CustomResourceDefinitionNamesPatchOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionNamesPatch) CustomResourceDefinitionNamesPatch {
		if v != nil {
			return *v
		}
		var ret CustomResourceDefinitionNamesPatch
		return ret
	}).(CustomResourceDefinitionNamesPatchOutput)
}

// categories is a list of grouped resources this custom resource belongs to (e.g. 'all'). This is published in API discovery documents, and used by clients to support invocations like `kubectl get all`.
func (o CustomResourceDefinitionNamesPatchPtrOutput) Categories() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionNamesPatch) []string {
		if v == nil {
			return nil
		}
		return v.Categories
	}).(pulumi.StringArrayOutput)
}

// kind is the serialized kind of the resource. It is normally CamelCase and singular. Custom resource instances will use this value as the `kind` attribute in API calls.
func (o CustomResourceDefinitionNamesPatchPtrOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionNamesPatch) *string {
		if v == nil {
			return nil
		}
		return v.Kind
	}).(pulumi.StringPtrOutput)
}

// listKind is the serialized kind of the list for this resource. Defaults to "`kind`List".
func (o CustomResourceDefinitionNamesPatchPtrOutput) ListKind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionNamesPatch) *string {
		if v == nil {
			return nil
		}
		return v.ListKind
	}).(pulumi.StringPtrOutput)
}

// plural is the plural name of the resource to serve. The custom resources are served under `/apis/<group>/<version>/.../<plural>`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`). Must be all lowercase.
func (o CustomResourceDefinitionNamesPatchPtrOutput) Plural() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionNamesPatch) *string {
		if v == nil {
			return nil
		}
		return v.Plural
	}).(pulumi.StringPtrOutput)
}

// shortNames are short names for the resource, exposed in API discovery documents, and used by clients to support invocations like `kubectl get <shortname>`. It must be all lowercase.
func (o CustomResourceDefinitionNamesPatchPtrOutput) ShortNames() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionNamesPatch) []string {
		if v == nil {
			return nil
		}
		return v.ShortNames
	}).(pulumi.StringArrayOutput)
}

// singular is the singular name of the resource. It must be all lowercase. Defaults to lowercased `kind`.
func (o CustomResourceDefinitionNamesPatchPtrOutput) Singular() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionNamesPatch) *string {
		if v == nil {
			return nil
		}
		return v.Singular
	}).(pulumi.StringPtrOutput)
}

// CustomResourceDefinition represents a resource that should be exposed on the API server.  Its name MUST be in the format <.spec.name>.<.spec.group>. Deprecated in v1.16, planned for removal in v1.19. Use apiextensions.k8s.io/v1 CustomResourceDefinition instead.
type CustomResourceDefinitionPatchType struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind     *string                 `pulumi:"kind"`
	Metadata *metav1.ObjectMetaPatch `pulumi:"metadata"`
	// spec describes how the user wants the resources to appear
	Spec *CustomResourceDefinitionSpecPatch `pulumi:"spec"`
	// status indicates the actual state of the CustomResourceDefinition
	Status *CustomResourceDefinitionStatusPatch `pulumi:"status"`
}

// CustomResourceDefinitionPatchTypeInput is an input type that accepts CustomResourceDefinitionPatchTypeArgs and CustomResourceDefinitionPatchTypeOutput values.
// You can construct a concrete instance of `CustomResourceDefinitionPatchTypeInput` via:
//
//	CustomResourceDefinitionPatchTypeArgs{...}
type CustomResourceDefinitionPatchTypeInput interface {
	pulumi.Input

	ToCustomResourceDefinitionPatchTypeOutput() CustomResourceDefinitionPatchTypeOutput
	ToCustomResourceDefinitionPatchTypeOutputWithContext(context.Context) CustomResourceDefinitionPatchTypeOutput
}

// CustomResourceDefinition represents a resource that should be exposed on the API server.  Its name MUST be in the format <.spec.name>.<.spec.group>. Deprecated in v1.16, planned for removal in v1.19. Use apiextensions.k8s.io/v1 CustomResourceDefinition instead.
type CustomResourceDefinitionPatchTypeArgs struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion pulumi.StringPtrInput `pulumi:"apiVersion"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind     pulumi.StringPtrInput          `pulumi:"kind"`
	Metadata metav1.ObjectMetaPatchPtrInput `pulumi:"metadata"`
	// spec describes how the user wants the resources to appear
	Spec CustomResourceDefinitionSpecPatchPtrInput `pulumi:"spec"`
	// status indicates the actual state of the CustomResourceDefinition
	Status CustomResourceDefinitionStatusPatchPtrInput `pulumi:"status"`
}

func (CustomResourceDefinitionPatchTypeArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceDefinitionPatchType)(nil)).Elem()
}

func (i CustomResourceDefinitionPatchTypeArgs) ToCustomResourceDefinitionPatchTypeOutput() CustomResourceDefinitionPatchTypeOutput {
	return i.ToCustomResourceDefinitionPatchTypeOutputWithContext(context.Background())
}

func (i CustomResourceDefinitionPatchTypeArgs) ToCustomResourceDefinitionPatchTypeOutputWithContext(ctx context.Context) CustomResourceDefinitionPatchTypeOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceDefinitionPatchTypeOutput)
}

// CustomResourceDefinition represents a resource that should be exposed on the API server.  Its name MUST be in the format <.spec.name>.<.spec.group>. Deprecated in v1.16, planned for removal in v1.19. Use apiextensions.k8s.io/v1 CustomResourceDefinition instead.
type CustomResourceDefinitionPatchTypeOutput struct{ *pulumi.OutputState }

func (CustomResourceDefinitionPatchTypeOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceDefinitionPatchType)(nil)).Elem()
}

func (o CustomResourceDefinitionPatchTypeOutput) ToCustomResourceDefinitionPatchTypeOutput() CustomResourceDefinitionPatchTypeOutput {
	return o
}

func (o CustomResourceDefinitionPatchTypeOutput) ToCustomResourceDefinitionPatchTypeOutputWithContext(ctx context.Context) CustomResourceDefinitionPatchTypeOutput {
	return o
}

// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
func (o CustomResourceDefinitionPatchTypeOutput) ApiVersion() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionPatchType) *string { return v.ApiVersion }).(pulumi.StringPtrOutput)
}

// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
func (o CustomResourceDefinitionPatchTypeOutput) Kind() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionPatchType) *string { return v.Kind }).(pulumi.StringPtrOutput)
}

func (o CustomResourceDefinitionPatchTypeOutput) Metadata() metav1.ObjectMetaPatchPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionPatchType) *metav1.ObjectMetaPatch { return v.Metadata }).(metav1.ObjectMetaPatchPtrOutput)
}

// spec describes how the user wants the resources to appear
func (o CustomResourceDefinitionPatchTypeOutput) Spec() CustomResourceDefinitionSpecPatchPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionPatchType) *CustomResourceDefinitionSpecPatch { return v.Spec }).(CustomResourceDefinitionSpecPatchPtrOutput)
}

// status indicates the actual state of the CustomResourceDefinition
func (o CustomResourceDefinitionPatchTypeOutput) Status() CustomResourceDefinitionStatusPatchPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionPatchType) *CustomResourceDefinitionStatusPatch { return v.Status }).(CustomResourceDefinitionStatusPatchPtrOutput)
}

// CustomResourceDefinitionSpec describes how a user wants their resource to appear
type CustomResourceDefinitionSpec struct {
	// additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. If present, this field configures columns for all versions. Top-level and per-version columns are mutually exclusive. If no top-level or per-version columns are specified, a single column displaying the age of the custom resource is used.
	AdditionalPrinterColumns []CustomResourceColumnDefinition `pulumi:"additionalPrinterColumns"`
	// conversion defines conversion settings for the CRD.
	Conversion *CustomResourceConversion `pulumi:"conversion"`
	// group is the API group of the defined custom resource. The custom resources are served under `/apis/<group>/...`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).
	Group string `pulumi:"group"`
	// names specify the resource and kind names for the custom resource.
	Names CustomResourceDefinitionNames `pulumi:"names"`
	// preserveUnknownFields indicates that object fields which are not specified in the OpenAPI schema should be preserved when persisting to storage. apiVersion, kind, metadata and known fields inside metadata are always preserved. If false, schemas must be defined for all versions. Defaults to true in v1beta for backwards compatibility. Deprecated: will be required to be false in v1. Preservation of unknown fields can be specified in the validation schema using the `x-kubernetes-preserve-unknown-fields: true` extension. See https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/#pruning-versus-preserving-unknown-fields for details.
	PreserveUnknownFields *bool `pulumi:"preserveUnknownFields"`
	// scope indicates whether the defined custom resource is cluster- or namespace-scoped. Allowed values are `Cluster` and `Namespaced`. Default is `Namespaced`.
	Scope string `pulumi:"scope"`
	// subresources specify what subresources the defined custom resource has. If present, this field configures subresources for all versions. Top-level and per-version subresources are mutually exclusive.
	Subresources *CustomResourceSubresources `pulumi:"subresources"`
	// validation describes the schema used for validation and pruning of the custom resource. If present, this validation schema is used to validate all versions. Top-level and per-version schemas are mutually exclusive.
	Validation *CustomResourceValidation `pulumi:"validation"`
	// version is the API version of the defined custom resource. The custom resources are served under `/apis/<group>/<version>/...`. Must match the name of the first item in the `versions` list if `version` and `versions` are both specified. Optional if `versions` is specified. Deprecated: use `versions` instead.
	Version *string `pulumi:"version"`
	// versions is the list of all API versions of the defined custom resource. Optional if `version` is specified. The name of the first item in the `versions` list must match the `version` field if `version` and `versions` are both specified. Version names are used to compute the order in which served versions are listed in API discovery. If the version string is "kube-like", it will sort above non "kube-like" version strings, which are ordered lexicographically. "Kube-like" versions start with a "v", then are followed by a number (the major version), then optionally the string "alpha" or "beta" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.
	Versions []CustomResourceDefinitionVersion `pulumi:"versions"`
}

// CustomResourceDefinitionSpecInput is an input type that accepts CustomResourceDefinitionSpecArgs and CustomResourceDefinitionSpecOutput values.
// You can construct a concrete instance of `CustomResourceDefinitionSpecInput` via:
//
//	CustomResourceDefinitionSpecArgs{...}
type CustomResourceDefinitionSpecInput interface {
	pulumi.Input

	ToCustomResourceDefinitionSpecOutput() CustomResourceDefinitionSpecOutput
	ToCustomResourceDefinitionSpecOutputWithContext(context.Context) CustomResourceDefinitionSpecOutput
}

// CustomResourceDefinitionSpec describes how a user wants their resource to appear
type CustomResourceDefinitionSpecArgs struct {
	// additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. If present, this field configures columns for all versions. Top-level and per-version columns are mutually exclusive. If no top-level or per-version columns are specified, a single column displaying the age of the custom resource is used.
	AdditionalPrinterColumns CustomResourceColumnDefinitionArrayInput `pulumi:"additionalPrinterColumns"`
	// conversion defines conversion settings for the CRD.
	Conversion CustomResourceConversionPtrInput `pulumi:"conversion"`
	// group is the API group of the defined custom resource. The custom resources are served under `/apis/<group>/...`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).
	Group pulumi.StringInput `pulumi:"group"`
	// names specify the resource and kind names for the custom resource.
	Names CustomResourceDefinitionNamesInput `pulumi:"names"`
	// preserveUnknownFields indicates that object fields which are not specified in the OpenAPI schema should be preserved when persisting to storage. apiVersion, kind, metadata and known fields inside metadata are always preserved. If false, schemas must be defined for all versions. Defaults to true in v1beta for backwards compatibility. Deprecated: will be required to be false in v1. Preservation of unknown fields can be specified in the validation schema using the `x-kubernetes-preserve-unknown-fields: true` extension. See https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/#pruning-versus-preserving-unknown-fields for details.
	PreserveUnknownFields pulumi.BoolPtrInput `pulumi:"preserveUnknownFields"`
	// scope indicates whether the defined custom resource is cluster- or namespace-scoped. Allowed values are `Cluster` and `Namespaced`. Default is `Namespaced`.
	Scope pulumi.StringInput `pulumi:"scope"`
	// subresources specify what subresources the defined custom resource has. If present, this field configures subresources for all versions. Top-level and per-version subresources are mutually exclusive.
	Subresources CustomResourceSubresourcesPtrInput `pulumi:"subresources"`
	// validation describes the schema used for validation and pruning of the custom resource. If present, this validation schema is used to validate all versions. Top-level and per-version schemas are mutually exclusive.
	Validation CustomResourceValidationPtrInput `pulumi:"validation"`
	// version is the API version of the defined custom resource. The custom resources are served under `/apis/<group>/<version>/...`. Must match the name of the first item in the `versions` list if `version` and `versions` are both specified. Optional if `versions` is specified. Deprecated: use `versions` instead.
	Version pulumi.StringPtrInput `pulumi:"version"`
	// versions is the list of all API versions of the defined custom resource. Optional if `version` is specified. The name of the first item in the `versions` list must match the `version` field if `version` and `versions` are both specified. Version names are used to compute the order in which served versions are listed in API discovery. If the version string is "kube-like", it will sort above non "kube-like" version strings, which are ordered lexicographically. "Kube-like" versions start with a "v", then are followed by a number (the major version), then optionally the string "alpha" or "beta" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.
	Versions CustomResourceDefinitionVersionArrayInput `pulumi:"versions"`
}

func (CustomResourceDefinitionSpecArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceDefinitionSpec)(nil)).Elem()
}

func (i CustomResourceDefinitionSpecArgs) ToCustomResourceDefinitionSpecOutput() CustomResourceDefinitionSpecOutput {
	return i.ToCustomResourceDefinitionSpecOutputWithContext(context.Background())
}

func (i CustomResourceDefinitionSpecArgs) ToCustomResourceDefinitionSpecOutputWithContext(ctx context.Context) CustomResourceDefinitionSpecOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceDefinitionSpecOutput)
}

// CustomResourceDefinitionSpec describes how a user wants their resource to appear
type CustomResourceDefinitionSpecOutput struct{ *pulumi.OutputState }

func (CustomResourceDefinitionSpecOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceDefinitionSpec)(nil)).Elem()
}

func (o CustomResourceDefinitionSpecOutput) ToCustomResourceDefinitionSpecOutput() CustomResourceDefinitionSpecOutput {
	return o
}

func (o CustomResourceDefinitionSpecOutput) ToCustomResourceDefinitionSpecOutputWithContext(ctx context.Context) CustomResourceDefinitionSpecOutput {
	return o
}

// additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. If present, this field configures columns for all versions. Top-level and per-version columns are mutually exclusive. If no top-level or per-version columns are specified, a single column displaying the age of the custom resource is used.
func (o CustomResourceDefinitionSpecOutput) AdditionalPrinterColumns() CustomResourceColumnDefinitionArrayOutput {
	return o.ApplyT(func(v CustomResourceDefinitionSpec) []CustomResourceColumnDefinition {
		return v.AdditionalPrinterColumns
	}).(CustomResourceColumnDefinitionArrayOutput)
}

// conversion defines conversion settings for the CRD.
func (o CustomResourceDefinitionSpecOutput) Conversion() CustomResourceConversionPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionSpec) *CustomResourceConversion { return v.Conversion }).(CustomResourceConversionPtrOutput)
}

// group is the API group of the defined custom resource. The custom resources are served under `/apis/<group>/...`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).
func (o CustomResourceDefinitionSpecOutput) Group() pulumi.StringOutput {
	return o.ApplyT(func(v CustomResourceDefinitionSpec) string { return v.Group }).(pulumi.StringOutput)
}

// names specify the resource and kind names for the custom resource.
func (o CustomResourceDefinitionSpecOutput) Names() CustomResourceDefinitionNamesOutput {
	return o.ApplyT(func(v CustomResourceDefinitionSpec) CustomResourceDefinitionNames { return v.Names }).(CustomResourceDefinitionNamesOutput)
}

// preserveUnknownFields indicates that object fields which are not specified in the OpenAPI schema should be preserved when persisting to storage. apiVersion, kind, metadata and known fields inside metadata are always preserved. If false, schemas must be defined for all versions. Defaults to true in v1beta for backwards compatibility. Deprecated: will be required to be false in v1. Preservation of unknown fields can be specified in the validation schema using the `x-kubernetes-preserve-unknown-fields: true` extension. See https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/#pruning-versus-preserving-unknown-fields for details.
func (o CustomResourceDefinitionSpecOutput) PreserveUnknownFields() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionSpec) *bool { return v.PreserveUnknownFields }).(pulumi.BoolPtrOutput)
}

// scope indicates whether the defined custom resource is cluster- or namespace-scoped. Allowed values are `Cluster` and `Namespaced`. Default is `Namespaced`.
func (o CustomResourceDefinitionSpecOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v CustomResourceDefinitionSpec) string { return v.Scope }).(pulumi.StringOutput)
}

// subresources specify what subresources the defined custom resource has. If present, this field configures subresources for all versions. Top-level and per-version subresources are mutually exclusive.
func (o CustomResourceDefinitionSpecOutput) Subresources() CustomResourceSubresourcesPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionSpec) *CustomResourceSubresources { return v.Subresources }).(CustomResourceSubresourcesPtrOutput)
}

// validation describes the schema used for validation and pruning of the custom resource. If present, this validation schema is used to validate all versions. Top-level and per-version schemas are mutually exclusive.
func (o CustomResourceDefinitionSpecOutput) Validation() CustomResourceValidationPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionSpec) *CustomResourceValidation { return v.Validation }).(CustomResourceValidationPtrOutput)
}

// version is the API version of the defined custom resource. The custom resources are served under `/apis/<group>/<version>/...`. Must match the name of the first item in the `versions` list if `version` and `versions` are both specified. Optional if `versions` is specified. Deprecated: use `versions` instead.
func (o CustomResourceDefinitionSpecOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionSpec) *string { return v.Version }).(pulumi.StringPtrOutput)
}

// versions is the list of all API versions of the defined custom resource. Optional if `version` is specified. The name of the first item in the `versions` list must match the `version` field if `version` and `versions` are both specified. Version names are used to compute the order in which served versions are listed in API discovery. If the version string is "kube-like", it will sort above non "kube-like" version strings, which are ordered lexicographically. "Kube-like" versions start with a "v", then are followed by a number (the major version), then optionally the string "alpha" or "beta" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.
func (o CustomResourceDefinitionSpecOutput) Versions() CustomResourceDefinitionVersionArrayOutput {
	return o.ApplyT(func(v CustomResourceDefinitionSpec) []CustomResourceDefinitionVersion { return v.Versions }).(CustomResourceDefinitionVersionArrayOutput)
}

// CustomResourceDefinitionSpec describes how a user wants their resource to appear
type CustomResourceDefinitionSpecPatch struct {
	// additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. If present, this field configures columns for all versions. Top-level and per-version columns are mutually exclusive. If no top-level or per-version columns are specified, a single column displaying the age of the custom resource is used.
	AdditionalPrinterColumns []CustomResourceColumnDefinitionPatch `pulumi:"additionalPrinterColumns"`
	// conversion defines conversion settings for the CRD.
	Conversion *CustomResourceConversionPatch `pulumi:"conversion"`
	// group is the API group of the defined custom resource. The custom resources are served under `/apis/<group>/...`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).
	Group *string `pulumi:"group"`
	// names specify the resource and kind names for the custom resource.
	Names *CustomResourceDefinitionNamesPatch `pulumi:"names"`
	// preserveUnknownFields indicates that object fields which are not specified in the OpenAPI schema should be preserved when persisting to storage. apiVersion, kind, metadata and known fields inside metadata are always preserved. If false, schemas must be defined for all versions. Defaults to true in v1beta for backwards compatibility. Deprecated: will be required to be false in v1. Preservation of unknown fields can be specified in the validation schema using the `x-kubernetes-preserve-unknown-fields: true` extension. See https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/#pruning-versus-preserving-unknown-fields for details.
	PreserveUnknownFields *bool `pulumi:"preserveUnknownFields"`
	// scope indicates whether the defined custom resource is cluster- or namespace-scoped. Allowed values are `Cluster` and `Namespaced`. Default is `Namespaced`.
	Scope *string `pulumi:"scope"`
	// subresources specify what subresources the defined custom resource has. If present, this field configures subresources for all versions. Top-level and per-version subresources are mutually exclusive.
	Subresources *CustomResourceSubresourcesPatch `pulumi:"subresources"`
	// validation describes the schema used for validation and pruning of the custom resource. If present, this validation schema is used to validate all versions. Top-level and per-version schemas are mutually exclusive.
	Validation *CustomResourceValidationPatch `pulumi:"validation"`
	// version is the API version of the defined custom resource. The custom resources are served under `/apis/<group>/<version>/...`. Must match the name of the first item in the `versions` list if `version` and `versions` are both specified. Optional if `versions` is specified. Deprecated: use `versions` instead.
	Version *string `pulumi:"version"`
	// versions is the list of all API versions of the defined custom resource. Optional if `version` is specified. The name of the first item in the `versions` list must match the `version` field if `version` and `versions` are both specified. Version names are used to compute the order in which served versions are listed in API discovery. If the version string is "kube-like", it will sort above non "kube-like" version strings, which are ordered lexicographically. "Kube-like" versions start with a "v", then are followed by a number (the major version), then optionally the string "alpha" or "beta" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.
	Versions []CustomResourceDefinitionVersionPatch `pulumi:"versions"`
}

// CustomResourceDefinitionSpecPatchInput is an input type that accepts CustomResourceDefinitionSpecPatchArgs and CustomResourceDefinitionSpecPatchOutput values.
// You can construct a concrete instance of `CustomResourceDefinitionSpecPatchInput` via:
//
//	CustomResourceDefinitionSpecPatchArgs{...}
type CustomResourceDefinitionSpecPatchInput interface {
	pulumi.Input

	ToCustomResourceDefinitionSpecPatchOutput() CustomResourceDefinitionSpecPatchOutput
	ToCustomResourceDefinitionSpecPatchOutputWithContext(context.Context) CustomResourceDefinitionSpecPatchOutput
}

// CustomResourceDefinitionSpec describes how a user wants their resource to appear
type CustomResourceDefinitionSpecPatchArgs struct {
	// additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. If present, this field configures columns for all versions. Top-level and per-version columns are mutually exclusive. If no top-level or per-version columns are specified, a single column displaying the age of the custom resource is used.
	AdditionalPrinterColumns CustomResourceColumnDefinitionPatchArrayInput `pulumi:"additionalPrinterColumns"`
	// conversion defines conversion settings for the CRD.
	Conversion CustomResourceConversionPatchPtrInput `pulumi:"conversion"`
	// group is the API group of the defined custom resource. The custom resources are served under `/apis/<group>/...`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).
	Group pulumi.StringPtrInput `pulumi:"group"`
	// names specify the resource and kind names for the custom resource.
	Names CustomResourceDefinitionNamesPatchPtrInput `pulumi:"names"`
	// preserveUnknownFields indicates that object fields which are not specified in the OpenAPI schema should be preserved when persisting to storage. apiVersion, kind, metadata and known fields inside metadata are always preserved. If false, schemas must be defined for all versions. Defaults to true in v1beta for backwards compatibility. Deprecated: will be required to be false in v1. Preservation of unknown fields can be specified in the validation schema using the `x-kubernetes-preserve-unknown-fields: true` extension. See https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/#pruning-versus-preserving-unknown-fields for details.
	PreserveUnknownFields pulumi.BoolPtrInput `pulumi:"preserveUnknownFields"`
	// scope indicates whether the defined custom resource is cluster- or namespace-scoped. Allowed values are `Cluster` and `Namespaced`. Default is `Namespaced`.
	Scope pulumi.StringPtrInput `pulumi:"scope"`
	// subresources specify what subresources the defined custom resource has. If present, this field configures subresources for all versions. Top-level and per-version subresources are mutually exclusive.
	Subresources CustomResourceSubresourcesPatchPtrInput `pulumi:"subresources"`
	// validation describes the schema used for validation and pruning of the custom resource. If present, this validation schema is used to validate all versions. Top-level and per-version schemas are mutually exclusive.
	Validation CustomResourceValidationPatchPtrInput `pulumi:"validation"`
	// version is the API version of the defined custom resource. The custom resources are served under `/apis/<group>/<version>/...`. Must match the name of the first item in the `versions` list if `version` and `versions` are both specified. Optional if `versions` is specified. Deprecated: use `versions` instead.
	Version pulumi.StringPtrInput `pulumi:"version"`
	// versions is the list of all API versions of the defined custom resource. Optional if `version` is specified. The name of the first item in the `versions` list must match the `version` field if `version` and `versions` are both specified. Version names are used to compute the order in which served versions are listed in API discovery. If the version string is "kube-like", it will sort above non "kube-like" version strings, which are ordered lexicographically. "Kube-like" versions start with a "v", then are followed by a number (the major version), then optionally the string "alpha" or "beta" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.
	Versions CustomResourceDefinitionVersionPatchArrayInput `pulumi:"versions"`
}

func (CustomResourceDefinitionSpecPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceDefinitionSpecPatch)(nil)).Elem()
}

func (i CustomResourceDefinitionSpecPatchArgs) ToCustomResourceDefinitionSpecPatchOutput() CustomResourceDefinitionSpecPatchOutput {
	return i.ToCustomResourceDefinitionSpecPatchOutputWithContext(context.Background())
}

func (i CustomResourceDefinitionSpecPatchArgs) ToCustomResourceDefinitionSpecPatchOutputWithContext(ctx context.Context) CustomResourceDefinitionSpecPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceDefinitionSpecPatchOutput)
}

func (i CustomResourceDefinitionSpecPatchArgs) ToCustomResourceDefinitionSpecPatchPtrOutput() CustomResourceDefinitionSpecPatchPtrOutput {
	return i.ToCustomResourceDefinitionSpecPatchPtrOutputWithContext(context.Background())
}

func (i CustomResourceDefinitionSpecPatchArgs) ToCustomResourceDefinitionSpecPatchPtrOutputWithContext(ctx context.Context) CustomResourceDefinitionSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceDefinitionSpecPatchOutput).ToCustomResourceDefinitionSpecPatchPtrOutputWithContext(ctx)
}

// CustomResourceDefinitionSpecPatchPtrInput is an input type that accepts CustomResourceDefinitionSpecPatchArgs, CustomResourceDefinitionSpecPatchPtr and CustomResourceDefinitionSpecPatchPtrOutput values.
// You can construct a concrete instance of `CustomResourceDefinitionSpecPatchPtrInput` via:
//
//	        CustomResourceDefinitionSpecPatchArgs{...}
//
//	or:
//
//	        nil
type CustomResourceDefinitionSpecPatchPtrInput interface {
	pulumi.Input

	ToCustomResourceDefinitionSpecPatchPtrOutput() CustomResourceDefinitionSpecPatchPtrOutput
	ToCustomResourceDefinitionSpecPatchPtrOutputWithContext(context.Context) CustomResourceDefinitionSpecPatchPtrOutput
}

type customResourceDefinitionSpecPatchPtrType CustomResourceDefinitionSpecPatchArgs

func CustomResourceDefinitionSpecPatchPtr(v *CustomResourceDefinitionSpecPatchArgs) CustomResourceDefinitionSpecPatchPtrInput {
	return (*customResourceDefinitionSpecPatchPtrType)(v)
}

func (*customResourceDefinitionSpecPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomResourceDefinitionSpecPatch)(nil)).Elem()
}

func (i *customResourceDefinitionSpecPatchPtrType) ToCustomResourceDefinitionSpecPatchPtrOutput() CustomResourceDefinitionSpecPatchPtrOutput {
	return i.ToCustomResourceDefinitionSpecPatchPtrOutputWithContext(context.Background())
}

func (i *customResourceDefinitionSpecPatchPtrType) ToCustomResourceDefinitionSpecPatchPtrOutputWithContext(ctx context.Context) CustomResourceDefinitionSpecPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceDefinitionSpecPatchPtrOutput)
}

// CustomResourceDefinitionSpec describes how a user wants their resource to appear
type CustomResourceDefinitionSpecPatchOutput struct{ *pulumi.OutputState }

func (CustomResourceDefinitionSpecPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceDefinitionSpecPatch)(nil)).Elem()
}

func (o CustomResourceDefinitionSpecPatchOutput) ToCustomResourceDefinitionSpecPatchOutput() CustomResourceDefinitionSpecPatchOutput {
	return o
}

func (o CustomResourceDefinitionSpecPatchOutput) ToCustomResourceDefinitionSpecPatchOutputWithContext(ctx context.Context) CustomResourceDefinitionSpecPatchOutput {
	return o
}

func (o CustomResourceDefinitionSpecPatchOutput) ToCustomResourceDefinitionSpecPatchPtrOutput() CustomResourceDefinitionSpecPatchPtrOutput {
	return o.ToCustomResourceDefinitionSpecPatchPtrOutputWithContext(context.Background())
}

func (o CustomResourceDefinitionSpecPatchOutput) ToCustomResourceDefinitionSpecPatchPtrOutputWithContext(ctx context.Context) CustomResourceDefinitionSpecPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomResourceDefinitionSpecPatch) *CustomResourceDefinitionSpecPatch {
		return &v
	}).(CustomResourceDefinitionSpecPatchPtrOutput)
}

// additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. If present, this field configures columns for all versions. Top-level and per-version columns are mutually exclusive. If no top-level or per-version columns are specified, a single column displaying the age of the custom resource is used.
func (o CustomResourceDefinitionSpecPatchOutput) AdditionalPrinterColumns() CustomResourceColumnDefinitionPatchArrayOutput {
	return o.ApplyT(func(v CustomResourceDefinitionSpecPatch) []CustomResourceColumnDefinitionPatch {
		return v.AdditionalPrinterColumns
	}).(CustomResourceColumnDefinitionPatchArrayOutput)
}

// conversion defines conversion settings for the CRD.
func (o CustomResourceDefinitionSpecPatchOutput) Conversion() CustomResourceConversionPatchPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionSpecPatch) *CustomResourceConversionPatch { return v.Conversion }).(CustomResourceConversionPatchPtrOutput)
}

// group is the API group of the defined custom resource. The custom resources are served under `/apis/<group>/...`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).
func (o CustomResourceDefinitionSpecPatchOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionSpecPatch) *string { return v.Group }).(pulumi.StringPtrOutput)
}

// names specify the resource and kind names for the custom resource.
func (o CustomResourceDefinitionSpecPatchOutput) Names() CustomResourceDefinitionNamesPatchPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionSpecPatch) *CustomResourceDefinitionNamesPatch { return v.Names }).(CustomResourceDefinitionNamesPatchPtrOutput)
}

// preserveUnknownFields indicates that object fields which are not specified in the OpenAPI schema should be preserved when persisting to storage. apiVersion, kind, metadata and known fields inside metadata are always preserved. If false, schemas must be defined for all versions. Defaults to true in v1beta for backwards compatibility. Deprecated: will be required to be false in v1. Preservation of unknown fields can be specified in the validation schema using the `x-kubernetes-preserve-unknown-fields: true` extension. See https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/#pruning-versus-preserving-unknown-fields for details.
func (o CustomResourceDefinitionSpecPatchOutput) PreserveUnknownFields() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionSpecPatch) *bool { return v.PreserveUnknownFields }).(pulumi.BoolPtrOutput)
}

// scope indicates whether the defined custom resource is cluster- or namespace-scoped. Allowed values are `Cluster` and `Namespaced`. Default is `Namespaced`.
func (o CustomResourceDefinitionSpecPatchOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionSpecPatch) *string { return v.Scope }).(pulumi.StringPtrOutput)
}

// subresources specify what subresources the defined custom resource has. If present, this field configures subresources for all versions. Top-level and per-version subresources are mutually exclusive.
func (o CustomResourceDefinitionSpecPatchOutput) Subresources() CustomResourceSubresourcesPatchPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionSpecPatch) *CustomResourceSubresourcesPatch { return v.Subresources }).(CustomResourceSubresourcesPatchPtrOutput)
}

// validation describes the schema used for validation and pruning of the custom resource. If present, this validation schema is used to validate all versions. Top-level and per-version schemas are mutually exclusive.
func (o CustomResourceDefinitionSpecPatchOutput) Validation() CustomResourceValidationPatchPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionSpecPatch) *CustomResourceValidationPatch { return v.Validation }).(CustomResourceValidationPatchPtrOutput)
}

// version is the API version of the defined custom resource. The custom resources are served under `/apis/<group>/<version>/...`. Must match the name of the first item in the `versions` list if `version` and `versions` are both specified. Optional if `versions` is specified. Deprecated: use `versions` instead.
func (o CustomResourceDefinitionSpecPatchOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionSpecPatch) *string { return v.Version }).(pulumi.StringPtrOutput)
}

// versions is the list of all API versions of the defined custom resource. Optional if `version` is specified. The name of the first item in the `versions` list must match the `version` field if `version` and `versions` are both specified. Version names are used to compute the order in which served versions are listed in API discovery. If the version string is "kube-like", it will sort above non "kube-like" version strings, which are ordered lexicographically. "Kube-like" versions start with a "v", then are followed by a number (the major version), then optionally the string "alpha" or "beta" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.
func (o CustomResourceDefinitionSpecPatchOutput) Versions() CustomResourceDefinitionVersionPatchArrayOutput {
	return o.ApplyT(func(v CustomResourceDefinitionSpecPatch) []CustomResourceDefinitionVersionPatch { return v.Versions }).(CustomResourceDefinitionVersionPatchArrayOutput)
}

type CustomResourceDefinitionSpecPatchPtrOutput struct{ *pulumi.OutputState }

func (CustomResourceDefinitionSpecPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomResourceDefinitionSpecPatch)(nil)).Elem()
}

func (o CustomResourceDefinitionSpecPatchPtrOutput) ToCustomResourceDefinitionSpecPatchPtrOutput() CustomResourceDefinitionSpecPatchPtrOutput {
	return o
}

func (o CustomResourceDefinitionSpecPatchPtrOutput) ToCustomResourceDefinitionSpecPatchPtrOutputWithContext(ctx context.Context) CustomResourceDefinitionSpecPatchPtrOutput {
	return o
}

func (o CustomResourceDefinitionSpecPatchPtrOutput) Elem() CustomResourceDefinitionSpecPatchOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionSpecPatch) CustomResourceDefinitionSpecPatch {
		if v != nil {
			return *v
		}
		var ret CustomResourceDefinitionSpecPatch
		return ret
	}).(CustomResourceDefinitionSpecPatchOutput)
}

// additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. If present, this field configures columns for all versions. Top-level and per-version columns are mutually exclusive. If no top-level or per-version columns are specified, a single column displaying the age of the custom resource is used.
func (o CustomResourceDefinitionSpecPatchPtrOutput) AdditionalPrinterColumns() CustomResourceColumnDefinitionPatchArrayOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionSpecPatch) []CustomResourceColumnDefinitionPatch {
		if v == nil {
			return nil
		}
		return v.AdditionalPrinterColumns
	}).(CustomResourceColumnDefinitionPatchArrayOutput)
}

// conversion defines conversion settings for the CRD.
func (o CustomResourceDefinitionSpecPatchPtrOutput) Conversion() CustomResourceConversionPatchPtrOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionSpecPatch) *CustomResourceConversionPatch {
		if v == nil {
			return nil
		}
		return v.Conversion
	}).(CustomResourceConversionPatchPtrOutput)
}

// group is the API group of the defined custom resource. The custom resources are served under `/apis/<group>/...`. Must match the name of the CustomResourceDefinition (in the form `<names.plural>.<group>`).
func (o CustomResourceDefinitionSpecPatchPtrOutput) Group() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Group
	}).(pulumi.StringPtrOutput)
}

// names specify the resource and kind names for the custom resource.
func (o CustomResourceDefinitionSpecPatchPtrOutput) Names() CustomResourceDefinitionNamesPatchPtrOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionSpecPatch) *CustomResourceDefinitionNamesPatch {
		if v == nil {
			return nil
		}
		return v.Names
	}).(CustomResourceDefinitionNamesPatchPtrOutput)
}

// preserveUnknownFields indicates that object fields which are not specified in the OpenAPI schema should be preserved when persisting to storage. apiVersion, kind, metadata and known fields inside metadata are always preserved. If false, schemas must be defined for all versions. Defaults to true in v1beta for backwards compatibility. Deprecated: will be required to be false in v1. Preservation of unknown fields can be specified in the validation schema using the `x-kubernetes-preserve-unknown-fields: true` extension. See https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions/#pruning-versus-preserving-unknown-fields for details.
func (o CustomResourceDefinitionSpecPatchPtrOutput) PreserveUnknownFields() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionSpecPatch) *bool {
		if v == nil {
			return nil
		}
		return v.PreserveUnknownFields
	}).(pulumi.BoolPtrOutput)
}

// scope indicates whether the defined custom resource is cluster- or namespace-scoped. Allowed values are `Cluster` and `Namespaced`. Default is `Namespaced`.
func (o CustomResourceDefinitionSpecPatchPtrOutput) Scope() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Scope
	}).(pulumi.StringPtrOutput)
}

// subresources specify what subresources the defined custom resource has. If present, this field configures subresources for all versions. Top-level and per-version subresources are mutually exclusive.
func (o CustomResourceDefinitionSpecPatchPtrOutput) Subresources() CustomResourceSubresourcesPatchPtrOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionSpecPatch) *CustomResourceSubresourcesPatch {
		if v == nil {
			return nil
		}
		return v.Subresources
	}).(CustomResourceSubresourcesPatchPtrOutput)
}

// validation describes the schema used for validation and pruning of the custom resource. If present, this validation schema is used to validate all versions. Top-level and per-version schemas are mutually exclusive.
func (o CustomResourceDefinitionSpecPatchPtrOutput) Validation() CustomResourceValidationPatchPtrOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionSpecPatch) *CustomResourceValidationPatch {
		if v == nil {
			return nil
		}
		return v.Validation
	}).(CustomResourceValidationPatchPtrOutput)
}

// version is the API version of the defined custom resource. The custom resources are served under `/apis/<group>/<version>/...`. Must match the name of the first item in the `versions` list if `version` and `versions` are both specified. Optional if `versions` is specified. Deprecated: use `versions` instead.
func (o CustomResourceDefinitionSpecPatchPtrOutput) Version() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionSpecPatch) *string {
		if v == nil {
			return nil
		}
		return v.Version
	}).(pulumi.StringPtrOutput)
}

// versions is the list of all API versions of the defined custom resource. Optional if `version` is specified. The name of the first item in the `versions` list must match the `version` field if `version` and `versions` are both specified. Version names are used to compute the order in which served versions are listed in API discovery. If the version string is "kube-like", it will sort above non "kube-like" version strings, which are ordered lexicographically. "Kube-like" versions start with a "v", then are followed by a number (the major version), then optionally the string "alpha" or "beta" and another number (the minor version). These are sorted first by GA > beta > alpha (where GA is a version with no suffix such as beta or alpha), and then by comparing major version, then minor version. An example sorted list of versions: v10, v2, v1, v11beta2, v10beta3, v3beta1, v12alpha1, v11alpha2, foo1, foo10.
func (o CustomResourceDefinitionSpecPatchPtrOutput) Versions() CustomResourceDefinitionVersionPatchArrayOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionSpecPatch) []CustomResourceDefinitionVersionPatch {
		if v == nil {
			return nil
		}
		return v.Versions
	}).(CustomResourceDefinitionVersionPatchArrayOutput)
}

// CustomResourceDefinitionStatus indicates the state of the CustomResourceDefinition
type CustomResourceDefinitionStatus struct {
	// acceptedNames are the names that are actually being used to serve discovery. They may be different than the names in spec.
	AcceptedNames CustomResourceDefinitionNames `pulumi:"acceptedNames"`
	// conditions indicate state for particular aspects of a CustomResourceDefinition
	Conditions []CustomResourceDefinitionCondition `pulumi:"conditions"`
	// storedVersions lists all versions of CustomResources that were ever persisted. Tracking these versions allows a migration path for stored versions in etcd. The field is mutable so a migration controller can finish a migration to another version (ensuring no old objects are left in storage), and then remove the rest of the versions from this list. Versions may not be removed from `spec.versions` while they exist in this list.
	StoredVersions []string `pulumi:"storedVersions"`
}

// CustomResourceDefinitionStatusInput is an input type that accepts CustomResourceDefinitionStatusArgs and CustomResourceDefinitionStatusOutput values.
// You can construct a concrete instance of `CustomResourceDefinitionStatusInput` via:
//
//	CustomResourceDefinitionStatusArgs{...}
type CustomResourceDefinitionStatusInput interface {
	pulumi.Input

	ToCustomResourceDefinitionStatusOutput() CustomResourceDefinitionStatusOutput
	ToCustomResourceDefinitionStatusOutputWithContext(context.Context) CustomResourceDefinitionStatusOutput
}

// CustomResourceDefinitionStatus indicates the state of the CustomResourceDefinition
type CustomResourceDefinitionStatusArgs struct {
	// acceptedNames are the names that are actually being used to serve discovery. They may be different than the names in spec.
	AcceptedNames CustomResourceDefinitionNamesInput `pulumi:"acceptedNames"`
	// conditions indicate state for particular aspects of a CustomResourceDefinition
	Conditions CustomResourceDefinitionConditionArrayInput `pulumi:"conditions"`
	// storedVersions lists all versions of CustomResources that were ever persisted. Tracking these versions allows a migration path for stored versions in etcd. The field is mutable so a migration controller can finish a migration to another version (ensuring no old objects are left in storage), and then remove the rest of the versions from this list. Versions may not be removed from `spec.versions` while they exist in this list.
	StoredVersions pulumi.StringArrayInput `pulumi:"storedVersions"`
}

func (CustomResourceDefinitionStatusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceDefinitionStatus)(nil)).Elem()
}

func (i CustomResourceDefinitionStatusArgs) ToCustomResourceDefinitionStatusOutput() CustomResourceDefinitionStatusOutput {
	return i.ToCustomResourceDefinitionStatusOutputWithContext(context.Background())
}

func (i CustomResourceDefinitionStatusArgs) ToCustomResourceDefinitionStatusOutputWithContext(ctx context.Context) CustomResourceDefinitionStatusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceDefinitionStatusOutput)
}

func (i CustomResourceDefinitionStatusArgs) ToCustomResourceDefinitionStatusPtrOutput() CustomResourceDefinitionStatusPtrOutput {
	return i.ToCustomResourceDefinitionStatusPtrOutputWithContext(context.Background())
}

func (i CustomResourceDefinitionStatusArgs) ToCustomResourceDefinitionStatusPtrOutputWithContext(ctx context.Context) CustomResourceDefinitionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceDefinitionStatusOutput).ToCustomResourceDefinitionStatusPtrOutputWithContext(ctx)
}

// CustomResourceDefinitionStatusPtrInput is an input type that accepts CustomResourceDefinitionStatusArgs, CustomResourceDefinitionStatusPtr and CustomResourceDefinitionStatusPtrOutput values.
// You can construct a concrete instance of `CustomResourceDefinitionStatusPtrInput` via:
//
//	        CustomResourceDefinitionStatusArgs{...}
//
//	or:
//
//	        nil
type CustomResourceDefinitionStatusPtrInput interface {
	pulumi.Input

	ToCustomResourceDefinitionStatusPtrOutput() CustomResourceDefinitionStatusPtrOutput
	ToCustomResourceDefinitionStatusPtrOutputWithContext(context.Context) CustomResourceDefinitionStatusPtrOutput
}

type customResourceDefinitionStatusPtrType CustomResourceDefinitionStatusArgs

func CustomResourceDefinitionStatusPtr(v *CustomResourceDefinitionStatusArgs) CustomResourceDefinitionStatusPtrInput {
	return (*customResourceDefinitionStatusPtrType)(v)
}

func (*customResourceDefinitionStatusPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomResourceDefinitionStatus)(nil)).Elem()
}

func (i *customResourceDefinitionStatusPtrType) ToCustomResourceDefinitionStatusPtrOutput() CustomResourceDefinitionStatusPtrOutput {
	return i.ToCustomResourceDefinitionStatusPtrOutputWithContext(context.Background())
}

func (i *customResourceDefinitionStatusPtrType) ToCustomResourceDefinitionStatusPtrOutputWithContext(ctx context.Context) CustomResourceDefinitionStatusPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceDefinitionStatusPtrOutput)
}

// CustomResourceDefinitionStatus indicates the state of the CustomResourceDefinition
type CustomResourceDefinitionStatusOutput struct{ *pulumi.OutputState }

func (CustomResourceDefinitionStatusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceDefinitionStatus)(nil)).Elem()
}

func (o CustomResourceDefinitionStatusOutput) ToCustomResourceDefinitionStatusOutput() CustomResourceDefinitionStatusOutput {
	return o
}

func (o CustomResourceDefinitionStatusOutput) ToCustomResourceDefinitionStatusOutputWithContext(ctx context.Context) CustomResourceDefinitionStatusOutput {
	return o
}

func (o CustomResourceDefinitionStatusOutput) ToCustomResourceDefinitionStatusPtrOutput() CustomResourceDefinitionStatusPtrOutput {
	return o.ToCustomResourceDefinitionStatusPtrOutputWithContext(context.Background())
}

func (o CustomResourceDefinitionStatusOutput) ToCustomResourceDefinitionStatusPtrOutputWithContext(ctx context.Context) CustomResourceDefinitionStatusPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomResourceDefinitionStatus) *CustomResourceDefinitionStatus {
		return &v
	}).(CustomResourceDefinitionStatusPtrOutput)
}

// acceptedNames are the names that are actually being used to serve discovery. They may be different than the names in spec.
func (o CustomResourceDefinitionStatusOutput) AcceptedNames() CustomResourceDefinitionNamesOutput {
	return o.ApplyT(func(v CustomResourceDefinitionStatus) CustomResourceDefinitionNames { return v.AcceptedNames }).(CustomResourceDefinitionNamesOutput)
}

// conditions indicate state for particular aspects of a CustomResourceDefinition
func (o CustomResourceDefinitionStatusOutput) Conditions() CustomResourceDefinitionConditionArrayOutput {
	return o.ApplyT(func(v CustomResourceDefinitionStatus) []CustomResourceDefinitionCondition { return v.Conditions }).(CustomResourceDefinitionConditionArrayOutput)
}

// storedVersions lists all versions of CustomResources that were ever persisted. Tracking these versions allows a migration path for stored versions in etcd. The field is mutable so a migration controller can finish a migration to another version (ensuring no old objects are left in storage), and then remove the rest of the versions from this list. Versions may not be removed from `spec.versions` while they exist in this list.
func (o CustomResourceDefinitionStatusOutput) StoredVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomResourceDefinitionStatus) []string { return v.StoredVersions }).(pulumi.StringArrayOutput)
}

type CustomResourceDefinitionStatusPtrOutput struct{ *pulumi.OutputState }

func (CustomResourceDefinitionStatusPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomResourceDefinitionStatus)(nil)).Elem()
}

func (o CustomResourceDefinitionStatusPtrOutput) ToCustomResourceDefinitionStatusPtrOutput() CustomResourceDefinitionStatusPtrOutput {
	return o
}

func (o CustomResourceDefinitionStatusPtrOutput) ToCustomResourceDefinitionStatusPtrOutputWithContext(ctx context.Context) CustomResourceDefinitionStatusPtrOutput {
	return o
}

func (o CustomResourceDefinitionStatusPtrOutput) Elem() CustomResourceDefinitionStatusOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionStatus) CustomResourceDefinitionStatus {
		if v != nil {
			return *v
		}
		var ret CustomResourceDefinitionStatus
		return ret
	}).(CustomResourceDefinitionStatusOutput)
}

// acceptedNames are the names that are actually being used to serve discovery. They may be different than the names in spec.
func (o CustomResourceDefinitionStatusPtrOutput) AcceptedNames() CustomResourceDefinitionNamesPtrOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionStatus) *CustomResourceDefinitionNames {
		if v == nil {
			return nil
		}
		return &v.AcceptedNames
	}).(CustomResourceDefinitionNamesPtrOutput)
}

// conditions indicate state for particular aspects of a CustomResourceDefinition
func (o CustomResourceDefinitionStatusPtrOutput) Conditions() CustomResourceDefinitionConditionArrayOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionStatus) []CustomResourceDefinitionCondition {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(CustomResourceDefinitionConditionArrayOutput)
}

// storedVersions lists all versions of CustomResources that were ever persisted. Tracking these versions allows a migration path for stored versions in etcd. The field is mutable so a migration controller can finish a migration to another version (ensuring no old objects are left in storage), and then remove the rest of the versions from this list. Versions may not be removed from `spec.versions` while they exist in this list.
func (o CustomResourceDefinitionStatusPtrOutput) StoredVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionStatus) []string {
		if v == nil {
			return nil
		}
		return v.StoredVersions
	}).(pulumi.StringArrayOutput)
}

// CustomResourceDefinitionStatus indicates the state of the CustomResourceDefinition
type CustomResourceDefinitionStatusPatch struct {
	// acceptedNames are the names that are actually being used to serve discovery. They may be different than the names in spec.
	AcceptedNames *CustomResourceDefinitionNamesPatch `pulumi:"acceptedNames"`
	// conditions indicate state for particular aspects of a CustomResourceDefinition
	Conditions []CustomResourceDefinitionConditionPatch `pulumi:"conditions"`
	// storedVersions lists all versions of CustomResources that were ever persisted. Tracking these versions allows a migration path for stored versions in etcd. The field is mutable so a migration controller can finish a migration to another version (ensuring no old objects are left in storage), and then remove the rest of the versions from this list. Versions may not be removed from `spec.versions` while they exist in this list.
	StoredVersions []string `pulumi:"storedVersions"`
}

// CustomResourceDefinitionStatusPatchInput is an input type that accepts CustomResourceDefinitionStatusPatchArgs and CustomResourceDefinitionStatusPatchOutput values.
// You can construct a concrete instance of `CustomResourceDefinitionStatusPatchInput` via:
//
//	CustomResourceDefinitionStatusPatchArgs{...}
type CustomResourceDefinitionStatusPatchInput interface {
	pulumi.Input

	ToCustomResourceDefinitionStatusPatchOutput() CustomResourceDefinitionStatusPatchOutput
	ToCustomResourceDefinitionStatusPatchOutputWithContext(context.Context) CustomResourceDefinitionStatusPatchOutput
}

// CustomResourceDefinitionStatus indicates the state of the CustomResourceDefinition
type CustomResourceDefinitionStatusPatchArgs struct {
	// acceptedNames are the names that are actually being used to serve discovery. They may be different than the names in spec.
	AcceptedNames CustomResourceDefinitionNamesPatchPtrInput `pulumi:"acceptedNames"`
	// conditions indicate state for particular aspects of a CustomResourceDefinition
	Conditions CustomResourceDefinitionConditionPatchArrayInput `pulumi:"conditions"`
	// storedVersions lists all versions of CustomResources that were ever persisted. Tracking these versions allows a migration path for stored versions in etcd. The field is mutable so a migration controller can finish a migration to another version (ensuring no old objects are left in storage), and then remove the rest of the versions from this list. Versions may not be removed from `spec.versions` while they exist in this list.
	StoredVersions pulumi.StringArrayInput `pulumi:"storedVersions"`
}

func (CustomResourceDefinitionStatusPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceDefinitionStatusPatch)(nil)).Elem()
}

func (i CustomResourceDefinitionStatusPatchArgs) ToCustomResourceDefinitionStatusPatchOutput() CustomResourceDefinitionStatusPatchOutput {
	return i.ToCustomResourceDefinitionStatusPatchOutputWithContext(context.Background())
}

func (i CustomResourceDefinitionStatusPatchArgs) ToCustomResourceDefinitionStatusPatchOutputWithContext(ctx context.Context) CustomResourceDefinitionStatusPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceDefinitionStatusPatchOutput)
}

func (i CustomResourceDefinitionStatusPatchArgs) ToCustomResourceDefinitionStatusPatchPtrOutput() CustomResourceDefinitionStatusPatchPtrOutput {
	return i.ToCustomResourceDefinitionStatusPatchPtrOutputWithContext(context.Background())
}

func (i CustomResourceDefinitionStatusPatchArgs) ToCustomResourceDefinitionStatusPatchPtrOutputWithContext(ctx context.Context) CustomResourceDefinitionStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceDefinitionStatusPatchOutput).ToCustomResourceDefinitionStatusPatchPtrOutputWithContext(ctx)
}

// CustomResourceDefinitionStatusPatchPtrInput is an input type that accepts CustomResourceDefinitionStatusPatchArgs, CustomResourceDefinitionStatusPatchPtr and CustomResourceDefinitionStatusPatchPtrOutput values.
// You can construct a concrete instance of `CustomResourceDefinitionStatusPatchPtrInput` via:
//
//	        CustomResourceDefinitionStatusPatchArgs{...}
//
//	or:
//
//	        nil
type CustomResourceDefinitionStatusPatchPtrInput interface {
	pulumi.Input

	ToCustomResourceDefinitionStatusPatchPtrOutput() CustomResourceDefinitionStatusPatchPtrOutput
	ToCustomResourceDefinitionStatusPatchPtrOutputWithContext(context.Context) CustomResourceDefinitionStatusPatchPtrOutput
}

type customResourceDefinitionStatusPatchPtrType CustomResourceDefinitionStatusPatchArgs

func CustomResourceDefinitionStatusPatchPtr(v *CustomResourceDefinitionStatusPatchArgs) CustomResourceDefinitionStatusPatchPtrInput {
	return (*customResourceDefinitionStatusPatchPtrType)(v)
}

func (*customResourceDefinitionStatusPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomResourceDefinitionStatusPatch)(nil)).Elem()
}

func (i *customResourceDefinitionStatusPatchPtrType) ToCustomResourceDefinitionStatusPatchPtrOutput() CustomResourceDefinitionStatusPatchPtrOutput {
	return i.ToCustomResourceDefinitionStatusPatchPtrOutputWithContext(context.Background())
}

func (i *customResourceDefinitionStatusPatchPtrType) ToCustomResourceDefinitionStatusPatchPtrOutputWithContext(ctx context.Context) CustomResourceDefinitionStatusPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceDefinitionStatusPatchPtrOutput)
}

// CustomResourceDefinitionStatus indicates the state of the CustomResourceDefinition
type CustomResourceDefinitionStatusPatchOutput struct{ *pulumi.OutputState }

func (CustomResourceDefinitionStatusPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceDefinitionStatusPatch)(nil)).Elem()
}

func (o CustomResourceDefinitionStatusPatchOutput) ToCustomResourceDefinitionStatusPatchOutput() CustomResourceDefinitionStatusPatchOutput {
	return o
}

func (o CustomResourceDefinitionStatusPatchOutput) ToCustomResourceDefinitionStatusPatchOutputWithContext(ctx context.Context) CustomResourceDefinitionStatusPatchOutput {
	return o
}

func (o CustomResourceDefinitionStatusPatchOutput) ToCustomResourceDefinitionStatusPatchPtrOutput() CustomResourceDefinitionStatusPatchPtrOutput {
	return o.ToCustomResourceDefinitionStatusPatchPtrOutputWithContext(context.Background())
}

func (o CustomResourceDefinitionStatusPatchOutput) ToCustomResourceDefinitionStatusPatchPtrOutputWithContext(ctx context.Context) CustomResourceDefinitionStatusPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomResourceDefinitionStatusPatch) *CustomResourceDefinitionStatusPatch {
		return &v
	}).(CustomResourceDefinitionStatusPatchPtrOutput)
}

// acceptedNames are the names that are actually being used to serve discovery. They may be different than the names in spec.
func (o CustomResourceDefinitionStatusPatchOutput) AcceptedNames() CustomResourceDefinitionNamesPatchPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionStatusPatch) *CustomResourceDefinitionNamesPatch {
		return v.AcceptedNames
	}).(CustomResourceDefinitionNamesPatchPtrOutput)
}

// conditions indicate state for particular aspects of a CustomResourceDefinition
func (o CustomResourceDefinitionStatusPatchOutput) Conditions() CustomResourceDefinitionConditionPatchArrayOutput {
	return o.ApplyT(func(v CustomResourceDefinitionStatusPatch) []CustomResourceDefinitionConditionPatch {
		return v.Conditions
	}).(CustomResourceDefinitionConditionPatchArrayOutput)
}

// storedVersions lists all versions of CustomResources that were ever persisted. Tracking these versions allows a migration path for stored versions in etcd. The field is mutable so a migration controller can finish a migration to another version (ensuring no old objects are left in storage), and then remove the rest of the versions from this list. Versions may not be removed from `spec.versions` while they exist in this list.
func (o CustomResourceDefinitionStatusPatchOutput) StoredVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v CustomResourceDefinitionStatusPatch) []string { return v.StoredVersions }).(pulumi.StringArrayOutput)
}

type CustomResourceDefinitionStatusPatchPtrOutput struct{ *pulumi.OutputState }

func (CustomResourceDefinitionStatusPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomResourceDefinitionStatusPatch)(nil)).Elem()
}

func (o CustomResourceDefinitionStatusPatchPtrOutput) ToCustomResourceDefinitionStatusPatchPtrOutput() CustomResourceDefinitionStatusPatchPtrOutput {
	return o
}

func (o CustomResourceDefinitionStatusPatchPtrOutput) ToCustomResourceDefinitionStatusPatchPtrOutputWithContext(ctx context.Context) CustomResourceDefinitionStatusPatchPtrOutput {
	return o
}

func (o CustomResourceDefinitionStatusPatchPtrOutput) Elem() CustomResourceDefinitionStatusPatchOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionStatusPatch) CustomResourceDefinitionStatusPatch {
		if v != nil {
			return *v
		}
		var ret CustomResourceDefinitionStatusPatch
		return ret
	}).(CustomResourceDefinitionStatusPatchOutput)
}

// acceptedNames are the names that are actually being used to serve discovery. They may be different than the names in spec.
func (o CustomResourceDefinitionStatusPatchPtrOutput) AcceptedNames() CustomResourceDefinitionNamesPatchPtrOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionStatusPatch) *CustomResourceDefinitionNamesPatch {
		if v == nil {
			return nil
		}
		return v.AcceptedNames
	}).(CustomResourceDefinitionNamesPatchPtrOutput)
}

// conditions indicate state for particular aspects of a CustomResourceDefinition
func (o CustomResourceDefinitionStatusPatchPtrOutput) Conditions() CustomResourceDefinitionConditionPatchArrayOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionStatusPatch) []CustomResourceDefinitionConditionPatch {
		if v == nil {
			return nil
		}
		return v.Conditions
	}).(CustomResourceDefinitionConditionPatchArrayOutput)
}

// storedVersions lists all versions of CustomResources that were ever persisted. Tracking these versions allows a migration path for stored versions in etcd. The field is mutable so a migration controller can finish a migration to another version (ensuring no old objects are left in storage), and then remove the rest of the versions from this list. Versions may not be removed from `spec.versions` while they exist in this list.
func (o CustomResourceDefinitionStatusPatchPtrOutput) StoredVersions() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *CustomResourceDefinitionStatusPatch) []string {
		if v == nil {
			return nil
		}
		return v.StoredVersions
	}).(pulumi.StringArrayOutput)
}

// CustomResourceDefinitionVersion describes a version for CRD.
type CustomResourceDefinitionVersion struct {
	// additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. Top-level and per-version columns are mutually exclusive. Per-version columns must not all be set to identical values (top-level columns should be used instead). If no top-level or per-version columns are specified, a single column displaying the age of the custom resource is used.
	AdditionalPrinterColumns []CustomResourceColumnDefinition `pulumi:"additionalPrinterColumns"`
	// deprecated indicates this version of the custom resource API is deprecated. When set to true, API requests to this version receive a warning header in the server response. Defaults to false.
	Deprecated *bool `pulumi:"deprecated"`
	// deprecationWarning overrides the default warning returned to API clients. May only be set when `deprecated` is true. The default warning indicates this version is deprecated and recommends use of the newest served version of equal or greater stability, if one exists.
	DeprecationWarning *string `pulumi:"deprecationWarning"`
	// name is the version name, e.g. “v1”, “v2beta1”, etc. The custom resources are served under this version at `/apis/<group>/<version>/...` if `served` is true.
	Name string `pulumi:"name"`
	// schema describes the schema used for validation and pruning of this version of the custom resource. Top-level and per-version schemas are mutually exclusive. Per-version schemas must not all be set to identical values (top-level validation schema should be used instead).
	Schema *CustomResourceValidation `pulumi:"schema"`
	// served is a flag enabling/disabling this version from being served via REST APIs
	Served bool `pulumi:"served"`
	// storage indicates this version should be used when persisting custom resources to storage. There must be exactly one version with storage=true.
	Storage bool `pulumi:"storage"`
	// subresources specify what subresources this version of the defined custom resource have. Top-level and per-version subresources are mutually exclusive. Per-version subresources must not all be set to identical values (top-level subresources should be used instead).
	Subresources *CustomResourceSubresources `pulumi:"subresources"`
}

// CustomResourceDefinitionVersionInput is an input type that accepts CustomResourceDefinitionVersionArgs and CustomResourceDefinitionVersionOutput values.
// You can construct a concrete instance of `CustomResourceDefinitionVersionInput` via:
//
//	CustomResourceDefinitionVersionArgs{...}
type CustomResourceDefinitionVersionInput interface {
	pulumi.Input

	ToCustomResourceDefinitionVersionOutput() CustomResourceDefinitionVersionOutput
	ToCustomResourceDefinitionVersionOutputWithContext(context.Context) CustomResourceDefinitionVersionOutput
}

// CustomResourceDefinitionVersion describes a version for CRD.
type CustomResourceDefinitionVersionArgs struct {
	// additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. Top-level and per-version columns are mutually exclusive. Per-version columns must not all be set to identical values (top-level columns should be used instead). If no top-level or per-version columns are specified, a single column displaying the age of the custom resource is used.
	AdditionalPrinterColumns CustomResourceColumnDefinitionArrayInput `pulumi:"additionalPrinterColumns"`
	// deprecated indicates this version of the custom resource API is deprecated. When set to true, API requests to this version receive a warning header in the server response. Defaults to false.
	Deprecated pulumi.BoolPtrInput `pulumi:"deprecated"`
	// deprecationWarning overrides the default warning returned to API clients. May only be set when `deprecated` is true. The default warning indicates this version is deprecated and recommends use of the newest served version of equal or greater stability, if one exists.
	DeprecationWarning pulumi.StringPtrInput `pulumi:"deprecationWarning"`
	// name is the version name, e.g. “v1”, “v2beta1”, etc. The custom resources are served under this version at `/apis/<group>/<version>/...` if `served` is true.
	Name pulumi.StringInput `pulumi:"name"`
	// schema describes the schema used for validation and pruning of this version of the custom resource. Top-level and per-version schemas are mutually exclusive. Per-version schemas must not all be set to identical values (top-level validation schema should be used instead).
	Schema CustomResourceValidationPtrInput `pulumi:"schema"`
	// served is a flag enabling/disabling this version from being served via REST APIs
	Served pulumi.BoolInput `pulumi:"served"`
	// storage indicates this version should be used when persisting custom resources to storage. There must be exactly one version with storage=true.
	Storage pulumi.BoolInput `pulumi:"storage"`
	// subresources specify what subresources this version of the defined custom resource have. Top-level and per-version subresources are mutually exclusive. Per-version subresources must not all be set to identical values (top-level subresources should be used instead).
	Subresources CustomResourceSubresourcesPtrInput `pulumi:"subresources"`
}

func (CustomResourceDefinitionVersionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceDefinitionVersion)(nil)).Elem()
}

func (i CustomResourceDefinitionVersionArgs) ToCustomResourceDefinitionVersionOutput() CustomResourceDefinitionVersionOutput {
	return i.ToCustomResourceDefinitionVersionOutputWithContext(context.Background())
}

func (i CustomResourceDefinitionVersionArgs) ToCustomResourceDefinitionVersionOutputWithContext(ctx context.Context) CustomResourceDefinitionVersionOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceDefinitionVersionOutput)
}

// CustomResourceDefinitionVersionArrayInput is an input type that accepts CustomResourceDefinitionVersionArray and CustomResourceDefinitionVersionArrayOutput values.
// You can construct a concrete instance of `CustomResourceDefinitionVersionArrayInput` via:
//
//	CustomResourceDefinitionVersionArray{ CustomResourceDefinitionVersionArgs{...} }
type CustomResourceDefinitionVersionArrayInput interface {
	pulumi.Input

	ToCustomResourceDefinitionVersionArrayOutput() CustomResourceDefinitionVersionArrayOutput
	ToCustomResourceDefinitionVersionArrayOutputWithContext(context.Context) CustomResourceDefinitionVersionArrayOutput
}

type CustomResourceDefinitionVersionArray []CustomResourceDefinitionVersionInput

func (CustomResourceDefinitionVersionArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomResourceDefinitionVersion)(nil)).Elem()
}

func (i CustomResourceDefinitionVersionArray) ToCustomResourceDefinitionVersionArrayOutput() CustomResourceDefinitionVersionArrayOutput {
	return i.ToCustomResourceDefinitionVersionArrayOutputWithContext(context.Background())
}

func (i CustomResourceDefinitionVersionArray) ToCustomResourceDefinitionVersionArrayOutputWithContext(ctx context.Context) CustomResourceDefinitionVersionArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceDefinitionVersionArrayOutput)
}

// CustomResourceDefinitionVersion describes a version for CRD.
type CustomResourceDefinitionVersionOutput struct{ *pulumi.OutputState }

func (CustomResourceDefinitionVersionOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceDefinitionVersion)(nil)).Elem()
}

func (o CustomResourceDefinitionVersionOutput) ToCustomResourceDefinitionVersionOutput() CustomResourceDefinitionVersionOutput {
	return o
}

func (o CustomResourceDefinitionVersionOutput) ToCustomResourceDefinitionVersionOutputWithContext(ctx context.Context) CustomResourceDefinitionVersionOutput {
	return o
}

// additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. Top-level and per-version columns are mutually exclusive. Per-version columns must not all be set to identical values (top-level columns should be used instead). If no top-level or per-version columns are specified, a single column displaying the age of the custom resource is used.
func (o CustomResourceDefinitionVersionOutput) AdditionalPrinterColumns() CustomResourceColumnDefinitionArrayOutput {
	return o.ApplyT(func(v CustomResourceDefinitionVersion) []CustomResourceColumnDefinition {
		return v.AdditionalPrinterColumns
	}).(CustomResourceColumnDefinitionArrayOutput)
}

// deprecated indicates this version of the custom resource API is deprecated. When set to true, API requests to this version receive a warning header in the server response. Defaults to false.
func (o CustomResourceDefinitionVersionOutput) Deprecated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionVersion) *bool { return v.Deprecated }).(pulumi.BoolPtrOutput)
}

// deprecationWarning overrides the default warning returned to API clients. May only be set when `deprecated` is true. The default warning indicates this version is deprecated and recommends use of the newest served version of equal or greater stability, if one exists.
func (o CustomResourceDefinitionVersionOutput) DeprecationWarning() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionVersion) *string { return v.DeprecationWarning }).(pulumi.StringPtrOutput)
}

// name is the version name, e.g. “v1”, “v2beta1”, etc. The custom resources are served under this version at `/apis/<group>/<version>/...` if `served` is true.
func (o CustomResourceDefinitionVersionOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v CustomResourceDefinitionVersion) string { return v.Name }).(pulumi.StringOutput)
}

// schema describes the schema used for validation and pruning of this version of the custom resource. Top-level and per-version schemas are mutually exclusive. Per-version schemas must not all be set to identical values (top-level validation schema should be used instead).
func (o CustomResourceDefinitionVersionOutput) Schema() CustomResourceValidationPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionVersion) *CustomResourceValidation { return v.Schema }).(CustomResourceValidationPtrOutput)
}

// served is a flag enabling/disabling this version from being served via REST APIs
func (o CustomResourceDefinitionVersionOutput) Served() pulumi.BoolOutput {
	return o.ApplyT(func(v CustomResourceDefinitionVersion) bool { return v.Served }).(pulumi.BoolOutput)
}

// storage indicates this version should be used when persisting custom resources to storage. There must be exactly one version with storage=true.
func (o CustomResourceDefinitionVersionOutput) Storage() pulumi.BoolOutput {
	return o.ApplyT(func(v CustomResourceDefinitionVersion) bool { return v.Storage }).(pulumi.BoolOutput)
}

// subresources specify what subresources this version of the defined custom resource have. Top-level and per-version subresources are mutually exclusive. Per-version subresources must not all be set to identical values (top-level subresources should be used instead).
func (o CustomResourceDefinitionVersionOutput) Subresources() CustomResourceSubresourcesPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionVersion) *CustomResourceSubresources { return v.Subresources }).(CustomResourceSubresourcesPtrOutput)
}

type CustomResourceDefinitionVersionArrayOutput struct{ *pulumi.OutputState }

func (CustomResourceDefinitionVersionArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomResourceDefinitionVersion)(nil)).Elem()
}

func (o CustomResourceDefinitionVersionArrayOutput) ToCustomResourceDefinitionVersionArrayOutput() CustomResourceDefinitionVersionArrayOutput {
	return o
}

func (o CustomResourceDefinitionVersionArrayOutput) ToCustomResourceDefinitionVersionArrayOutputWithContext(ctx context.Context) CustomResourceDefinitionVersionArrayOutput {
	return o
}

func (o CustomResourceDefinitionVersionArrayOutput) Index(i pulumi.IntInput) CustomResourceDefinitionVersionOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomResourceDefinitionVersion {
		return vs[0].([]CustomResourceDefinitionVersion)[vs[1].(int)]
	}).(CustomResourceDefinitionVersionOutput)
}

// CustomResourceDefinitionVersion describes a version for CRD.
type CustomResourceDefinitionVersionPatch struct {
	// additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. Top-level and per-version columns are mutually exclusive. Per-version columns must not all be set to identical values (top-level columns should be used instead). If no top-level or per-version columns are specified, a single column displaying the age of the custom resource is used.
	AdditionalPrinterColumns []CustomResourceColumnDefinitionPatch `pulumi:"additionalPrinterColumns"`
	// deprecated indicates this version of the custom resource API is deprecated. When set to true, API requests to this version receive a warning header in the server response. Defaults to false.
	Deprecated *bool `pulumi:"deprecated"`
	// deprecationWarning overrides the default warning returned to API clients. May only be set when `deprecated` is true. The default warning indicates this version is deprecated and recommends use of the newest served version of equal or greater stability, if one exists.
	DeprecationWarning *string `pulumi:"deprecationWarning"`
	// name is the version name, e.g. “v1”, “v2beta1”, etc. The custom resources are served under this version at `/apis/<group>/<version>/...` if `served` is true.
	Name *string `pulumi:"name"`
	// schema describes the schema used for validation and pruning of this version of the custom resource. Top-level and per-version schemas are mutually exclusive. Per-version schemas must not all be set to identical values (top-level validation schema should be used instead).
	Schema *CustomResourceValidationPatch `pulumi:"schema"`
	// served is a flag enabling/disabling this version from being served via REST APIs
	Served *bool `pulumi:"served"`
	// storage indicates this version should be used when persisting custom resources to storage. There must be exactly one version with storage=true.
	Storage *bool `pulumi:"storage"`
	// subresources specify what subresources this version of the defined custom resource have. Top-level and per-version subresources are mutually exclusive. Per-version subresources must not all be set to identical values (top-level subresources should be used instead).
	Subresources *CustomResourceSubresourcesPatch `pulumi:"subresources"`
}

// CustomResourceDefinitionVersionPatchInput is an input type that accepts CustomResourceDefinitionVersionPatchArgs and CustomResourceDefinitionVersionPatchOutput values.
// You can construct a concrete instance of `CustomResourceDefinitionVersionPatchInput` via:
//
//	CustomResourceDefinitionVersionPatchArgs{...}
type CustomResourceDefinitionVersionPatchInput interface {
	pulumi.Input

	ToCustomResourceDefinitionVersionPatchOutput() CustomResourceDefinitionVersionPatchOutput
	ToCustomResourceDefinitionVersionPatchOutputWithContext(context.Context) CustomResourceDefinitionVersionPatchOutput
}

// CustomResourceDefinitionVersion describes a version for CRD.
type CustomResourceDefinitionVersionPatchArgs struct {
	// additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. Top-level and per-version columns are mutually exclusive. Per-version columns must not all be set to identical values (top-level columns should be used instead). If no top-level or per-version columns are specified, a single column displaying the age of the custom resource is used.
	AdditionalPrinterColumns CustomResourceColumnDefinitionPatchArrayInput `pulumi:"additionalPrinterColumns"`
	// deprecated indicates this version of the custom resource API is deprecated. When set to true, API requests to this version receive a warning header in the server response. Defaults to false.
	Deprecated pulumi.BoolPtrInput `pulumi:"deprecated"`
	// deprecationWarning overrides the default warning returned to API clients. May only be set when `deprecated` is true. The default warning indicates this version is deprecated and recommends use of the newest served version of equal or greater stability, if one exists.
	DeprecationWarning pulumi.StringPtrInput `pulumi:"deprecationWarning"`
	// name is the version name, e.g. “v1”, “v2beta1”, etc. The custom resources are served under this version at `/apis/<group>/<version>/...` if `served` is true.
	Name pulumi.StringPtrInput `pulumi:"name"`
	// schema describes the schema used for validation and pruning of this version of the custom resource. Top-level and per-version schemas are mutually exclusive. Per-version schemas must not all be set to identical values (top-level validation schema should be used instead).
	Schema CustomResourceValidationPatchPtrInput `pulumi:"schema"`
	// served is a flag enabling/disabling this version from being served via REST APIs
	Served pulumi.BoolPtrInput `pulumi:"served"`
	// storage indicates this version should be used when persisting custom resources to storage. There must be exactly one version with storage=true.
	Storage pulumi.BoolPtrInput `pulumi:"storage"`
	// subresources specify what subresources this version of the defined custom resource have. Top-level and per-version subresources are mutually exclusive. Per-version subresources must not all be set to identical values (top-level subresources should be used instead).
	Subresources CustomResourceSubresourcesPatchPtrInput `pulumi:"subresources"`
}

func (CustomResourceDefinitionVersionPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceDefinitionVersionPatch)(nil)).Elem()
}

func (i CustomResourceDefinitionVersionPatchArgs) ToCustomResourceDefinitionVersionPatchOutput() CustomResourceDefinitionVersionPatchOutput {
	return i.ToCustomResourceDefinitionVersionPatchOutputWithContext(context.Background())
}

func (i CustomResourceDefinitionVersionPatchArgs) ToCustomResourceDefinitionVersionPatchOutputWithContext(ctx context.Context) CustomResourceDefinitionVersionPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceDefinitionVersionPatchOutput)
}

// CustomResourceDefinitionVersionPatchArrayInput is an input type that accepts CustomResourceDefinitionVersionPatchArray and CustomResourceDefinitionVersionPatchArrayOutput values.
// You can construct a concrete instance of `CustomResourceDefinitionVersionPatchArrayInput` via:
//
//	CustomResourceDefinitionVersionPatchArray{ CustomResourceDefinitionVersionPatchArgs{...} }
type CustomResourceDefinitionVersionPatchArrayInput interface {
	pulumi.Input

	ToCustomResourceDefinitionVersionPatchArrayOutput() CustomResourceDefinitionVersionPatchArrayOutput
	ToCustomResourceDefinitionVersionPatchArrayOutputWithContext(context.Context) CustomResourceDefinitionVersionPatchArrayOutput
}

type CustomResourceDefinitionVersionPatchArray []CustomResourceDefinitionVersionPatchInput

func (CustomResourceDefinitionVersionPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomResourceDefinitionVersionPatch)(nil)).Elem()
}

func (i CustomResourceDefinitionVersionPatchArray) ToCustomResourceDefinitionVersionPatchArrayOutput() CustomResourceDefinitionVersionPatchArrayOutput {
	return i.ToCustomResourceDefinitionVersionPatchArrayOutputWithContext(context.Background())
}

func (i CustomResourceDefinitionVersionPatchArray) ToCustomResourceDefinitionVersionPatchArrayOutputWithContext(ctx context.Context) CustomResourceDefinitionVersionPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceDefinitionVersionPatchArrayOutput)
}

// CustomResourceDefinitionVersion describes a version for CRD.
type CustomResourceDefinitionVersionPatchOutput struct{ *pulumi.OutputState }

func (CustomResourceDefinitionVersionPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceDefinitionVersionPatch)(nil)).Elem()
}

func (o CustomResourceDefinitionVersionPatchOutput) ToCustomResourceDefinitionVersionPatchOutput() CustomResourceDefinitionVersionPatchOutput {
	return o
}

func (o CustomResourceDefinitionVersionPatchOutput) ToCustomResourceDefinitionVersionPatchOutputWithContext(ctx context.Context) CustomResourceDefinitionVersionPatchOutput {
	return o
}

// additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. Top-level and per-version columns are mutually exclusive. Per-version columns must not all be set to identical values (top-level columns should be used instead). If no top-level or per-version columns are specified, a single column displaying the age of the custom resource is used.
func (o CustomResourceDefinitionVersionPatchOutput) AdditionalPrinterColumns() CustomResourceColumnDefinitionPatchArrayOutput {
	return o.ApplyT(func(v CustomResourceDefinitionVersionPatch) []CustomResourceColumnDefinitionPatch {
		return v.AdditionalPrinterColumns
	}).(CustomResourceColumnDefinitionPatchArrayOutput)
}

// deprecated indicates this version of the custom resource API is deprecated. When set to true, API requests to this version receive a warning header in the server response. Defaults to false.
func (o CustomResourceDefinitionVersionPatchOutput) Deprecated() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionVersionPatch) *bool { return v.Deprecated }).(pulumi.BoolPtrOutput)
}

// deprecationWarning overrides the default warning returned to API clients. May only be set when `deprecated` is true. The default warning indicates this version is deprecated and recommends use of the newest served version of equal or greater stability, if one exists.
func (o CustomResourceDefinitionVersionPatchOutput) DeprecationWarning() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionVersionPatch) *string { return v.DeprecationWarning }).(pulumi.StringPtrOutput)
}

// name is the version name, e.g. “v1”, “v2beta1”, etc. The custom resources are served under this version at `/apis/<group>/<version>/...` if `served` is true.
func (o CustomResourceDefinitionVersionPatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionVersionPatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// schema describes the schema used for validation and pruning of this version of the custom resource. Top-level and per-version schemas are mutually exclusive. Per-version schemas must not all be set to identical values (top-level validation schema should be used instead).
func (o CustomResourceDefinitionVersionPatchOutput) Schema() CustomResourceValidationPatchPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionVersionPatch) *CustomResourceValidationPatch { return v.Schema }).(CustomResourceValidationPatchPtrOutput)
}

// served is a flag enabling/disabling this version from being served via REST APIs
func (o CustomResourceDefinitionVersionPatchOutput) Served() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionVersionPatch) *bool { return v.Served }).(pulumi.BoolPtrOutput)
}

// storage indicates this version should be used when persisting custom resources to storage. There must be exactly one version with storage=true.
func (o CustomResourceDefinitionVersionPatchOutput) Storage() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionVersionPatch) *bool { return v.Storage }).(pulumi.BoolPtrOutput)
}

// subresources specify what subresources this version of the defined custom resource have. Top-level and per-version subresources are mutually exclusive. Per-version subresources must not all be set to identical values (top-level subresources should be used instead).
func (o CustomResourceDefinitionVersionPatchOutput) Subresources() CustomResourceSubresourcesPatchPtrOutput {
	return o.ApplyT(func(v CustomResourceDefinitionVersionPatch) *CustomResourceSubresourcesPatch { return v.Subresources }).(CustomResourceSubresourcesPatchPtrOutput)
}

type CustomResourceDefinitionVersionPatchArrayOutput struct{ *pulumi.OutputState }

func (CustomResourceDefinitionVersionPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]CustomResourceDefinitionVersionPatch)(nil)).Elem()
}

func (o CustomResourceDefinitionVersionPatchArrayOutput) ToCustomResourceDefinitionVersionPatchArrayOutput() CustomResourceDefinitionVersionPatchArrayOutput {
	return o
}

func (o CustomResourceDefinitionVersionPatchArrayOutput) ToCustomResourceDefinitionVersionPatchArrayOutputWithContext(ctx context.Context) CustomResourceDefinitionVersionPatchArrayOutput {
	return o
}

func (o CustomResourceDefinitionVersionPatchArrayOutput) Index(i pulumi.IntInput) CustomResourceDefinitionVersionPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) CustomResourceDefinitionVersionPatch {
		return vs[0].([]CustomResourceDefinitionVersionPatch)[vs[1].(int)]
	}).(CustomResourceDefinitionVersionPatchOutput)
}

// CustomResourceSubresourceScale defines how to serve the scale subresource for CustomResources.
type CustomResourceSubresourceScale struct {
	// labelSelectorPath defines the JSON path inside of a custom resource that corresponds to Scale `status.selector`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status` or `.spec`. Must be set to work with HorizontalPodAutoscaler. The field pointed by this JSON path must be a string field (not a complex selector struct) which contains a serialized label selector in string form. More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource If there is no value under the given path in the custom resource, the `status.selector` value in the `/scale` subresource will default to the empty string.
	LabelSelectorPath *string `pulumi:"labelSelectorPath"`
	// specReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `spec.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.spec`. If there is no value under the given path in the custom resource, the `/scale` subresource will return an error on GET.
	SpecReplicasPath string `pulumi:"specReplicasPath"`
	// statusReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `status.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status`. If there is no value under the given path in the custom resource, the `status.replicas` value in the `/scale` subresource will default to 0.
	StatusReplicasPath string `pulumi:"statusReplicasPath"`
}

// CustomResourceSubresourceScaleInput is an input type that accepts CustomResourceSubresourceScaleArgs and CustomResourceSubresourceScaleOutput values.
// You can construct a concrete instance of `CustomResourceSubresourceScaleInput` via:
//
//	CustomResourceSubresourceScaleArgs{...}
type CustomResourceSubresourceScaleInput interface {
	pulumi.Input

	ToCustomResourceSubresourceScaleOutput() CustomResourceSubresourceScaleOutput
	ToCustomResourceSubresourceScaleOutputWithContext(context.Context) CustomResourceSubresourceScaleOutput
}

// CustomResourceSubresourceScale defines how to serve the scale subresource for CustomResources.
type CustomResourceSubresourceScaleArgs struct {
	// labelSelectorPath defines the JSON path inside of a custom resource that corresponds to Scale `status.selector`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status` or `.spec`. Must be set to work with HorizontalPodAutoscaler. The field pointed by this JSON path must be a string field (not a complex selector struct) which contains a serialized label selector in string form. More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource If there is no value under the given path in the custom resource, the `status.selector` value in the `/scale` subresource will default to the empty string.
	LabelSelectorPath pulumi.StringPtrInput `pulumi:"labelSelectorPath"`
	// specReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `spec.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.spec`. If there is no value under the given path in the custom resource, the `/scale` subresource will return an error on GET.
	SpecReplicasPath pulumi.StringInput `pulumi:"specReplicasPath"`
	// statusReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `status.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status`. If there is no value under the given path in the custom resource, the `status.replicas` value in the `/scale` subresource will default to 0.
	StatusReplicasPath pulumi.StringInput `pulumi:"statusReplicasPath"`
}

func (CustomResourceSubresourceScaleArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceSubresourceScale)(nil)).Elem()
}

func (i CustomResourceSubresourceScaleArgs) ToCustomResourceSubresourceScaleOutput() CustomResourceSubresourceScaleOutput {
	return i.ToCustomResourceSubresourceScaleOutputWithContext(context.Background())
}

func (i CustomResourceSubresourceScaleArgs) ToCustomResourceSubresourceScaleOutputWithContext(ctx context.Context) CustomResourceSubresourceScaleOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceSubresourceScaleOutput)
}

func (i CustomResourceSubresourceScaleArgs) ToCustomResourceSubresourceScalePtrOutput() CustomResourceSubresourceScalePtrOutput {
	return i.ToCustomResourceSubresourceScalePtrOutputWithContext(context.Background())
}

func (i CustomResourceSubresourceScaleArgs) ToCustomResourceSubresourceScalePtrOutputWithContext(ctx context.Context) CustomResourceSubresourceScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceSubresourceScaleOutput).ToCustomResourceSubresourceScalePtrOutputWithContext(ctx)
}

// CustomResourceSubresourceScalePtrInput is an input type that accepts CustomResourceSubresourceScaleArgs, CustomResourceSubresourceScalePtr and CustomResourceSubresourceScalePtrOutput values.
// You can construct a concrete instance of `CustomResourceSubresourceScalePtrInput` via:
//
//	        CustomResourceSubresourceScaleArgs{...}
//
//	or:
//
//	        nil
type CustomResourceSubresourceScalePtrInput interface {
	pulumi.Input

	ToCustomResourceSubresourceScalePtrOutput() CustomResourceSubresourceScalePtrOutput
	ToCustomResourceSubresourceScalePtrOutputWithContext(context.Context) CustomResourceSubresourceScalePtrOutput
}

type customResourceSubresourceScalePtrType CustomResourceSubresourceScaleArgs

func CustomResourceSubresourceScalePtr(v *CustomResourceSubresourceScaleArgs) CustomResourceSubresourceScalePtrInput {
	return (*customResourceSubresourceScalePtrType)(v)
}

func (*customResourceSubresourceScalePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomResourceSubresourceScale)(nil)).Elem()
}

func (i *customResourceSubresourceScalePtrType) ToCustomResourceSubresourceScalePtrOutput() CustomResourceSubresourceScalePtrOutput {
	return i.ToCustomResourceSubresourceScalePtrOutputWithContext(context.Background())
}

func (i *customResourceSubresourceScalePtrType) ToCustomResourceSubresourceScalePtrOutputWithContext(ctx context.Context) CustomResourceSubresourceScalePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceSubresourceScalePtrOutput)
}

// CustomResourceSubresourceScale defines how to serve the scale subresource for CustomResources.
type CustomResourceSubresourceScaleOutput struct{ *pulumi.OutputState }

func (CustomResourceSubresourceScaleOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceSubresourceScale)(nil)).Elem()
}

func (o CustomResourceSubresourceScaleOutput) ToCustomResourceSubresourceScaleOutput() CustomResourceSubresourceScaleOutput {
	return o
}

func (o CustomResourceSubresourceScaleOutput) ToCustomResourceSubresourceScaleOutputWithContext(ctx context.Context) CustomResourceSubresourceScaleOutput {
	return o
}

func (o CustomResourceSubresourceScaleOutput) ToCustomResourceSubresourceScalePtrOutput() CustomResourceSubresourceScalePtrOutput {
	return o.ToCustomResourceSubresourceScalePtrOutputWithContext(context.Background())
}

func (o CustomResourceSubresourceScaleOutput) ToCustomResourceSubresourceScalePtrOutputWithContext(ctx context.Context) CustomResourceSubresourceScalePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomResourceSubresourceScale) *CustomResourceSubresourceScale {
		return &v
	}).(CustomResourceSubresourceScalePtrOutput)
}

// labelSelectorPath defines the JSON path inside of a custom resource that corresponds to Scale `status.selector`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status` or `.spec`. Must be set to work with HorizontalPodAutoscaler. The field pointed by this JSON path must be a string field (not a complex selector struct) which contains a serialized label selector in string form. More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource If there is no value under the given path in the custom resource, the `status.selector` value in the `/scale` subresource will default to the empty string.
func (o CustomResourceSubresourceScaleOutput) LabelSelectorPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceSubresourceScale) *string { return v.LabelSelectorPath }).(pulumi.StringPtrOutput)
}

// specReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `spec.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.spec`. If there is no value under the given path in the custom resource, the `/scale` subresource will return an error on GET.
func (o CustomResourceSubresourceScaleOutput) SpecReplicasPath() pulumi.StringOutput {
	return o.ApplyT(func(v CustomResourceSubresourceScale) string { return v.SpecReplicasPath }).(pulumi.StringOutput)
}

// statusReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `status.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status`. If there is no value under the given path in the custom resource, the `status.replicas` value in the `/scale` subresource will default to 0.
func (o CustomResourceSubresourceScaleOutput) StatusReplicasPath() pulumi.StringOutput {
	return o.ApplyT(func(v CustomResourceSubresourceScale) string { return v.StatusReplicasPath }).(pulumi.StringOutput)
}

type CustomResourceSubresourceScalePtrOutput struct{ *pulumi.OutputState }

func (CustomResourceSubresourceScalePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomResourceSubresourceScale)(nil)).Elem()
}

func (o CustomResourceSubresourceScalePtrOutput) ToCustomResourceSubresourceScalePtrOutput() CustomResourceSubresourceScalePtrOutput {
	return o
}

func (o CustomResourceSubresourceScalePtrOutput) ToCustomResourceSubresourceScalePtrOutputWithContext(ctx context.Context) CustomResourceSubresourceScalePtrOutput {
	return o
}

func (o CustomResourceSubresourceScalePtrOutput) Elem() CustomResourceSubresourceScaleOutput {
	return o.ApplyT(func(v *CustomResourceSubresourceScale) CustomResourceSubresourceScale {
		if v != nil {
			return *v
		}
		var ret CustomResourceSubresourceScale
		return ret
	}).(CustomResourceSubresourceScaleOutput)
}

// labelSelectorPath defines the JSON path inside of a custom resource that corresponds to Scale `status.selector`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status` or `.spec`. Must be set to work with HorizontalPodAutoscaler. The field pointed by this JSON path must be a string field (not a complex selector struct) which contains a serialized label selector in string form. More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource If there is no value under the given path in the custom resource, the `status.selector` value in the `/scale` subresource will default to the empty string.
func (o CustomResourceSubresourceScalePtrOutput) LabelSelectorPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomResourceSubresourceScale) *string {
		if v == nil {
			return nil
		}
		return v.LabelSelectorPath
	}).(pulumi.StringPtrOutput)
}

// specReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `spec.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.spec`. If there is no value under the given path in the custom resource, the `/scale` subresource will return an error on GET.
func (o CustomResourceSubresourceScalePtrOutput) SpecReplicasPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomResourceSubresourceScale) *string {
		if v == nil {
			return nil
		}
		return &v.SpecReplicasPath
	}).(pulumi.StringPtrOutput)
}

// statusReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `status.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status`. If there is no value under the given path in the custom resource, the `status.replicas` value in the `/scale` subresource will default to 0.
func (o CustomResourceSubresourceScalePtrOutput) StatusReplicasPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomResourceSubresourceScale) *string {
		if v == nil {
			return nil
		}
		return &v.StatusReplicasPath
	}).(pulumi.StringPtrOutput)
}

// CustomResourceSubresourceScale defines how to serve the scale subresource for CustomResources.
type CustomResourceSubresourceScalePatch struct {
	// labelSelectorPath defines the JSON path inside of a custom resource that corresponds to Scale `status.selector`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status` or `.spec`. Must be set to work with HorizontalPodAutoscaler. The field pointed by this JSON path must be a string field (not a complex selector struct) which contains a serialized label selector in string form. More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource If there is no value under the given path in the custom resource, the `status.selector` value in the `/scale` subresource will default to the empty string.
	LabelSelectorPath *string `pulumi:"labelSelectorPath"`
	// specReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `spec.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.spec`. If there is no value under the given path in the custom resource, the `/scale` subresource will return an error on GET.
	SpecReplicasPath *string `pulumi:"specReplicasPath"`
	// statusReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `status.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status`. If there is no value under the given path in the custom resource, the `status.replicas` value in the `/scale` subresource will default to 0.
	StatusReplicasPath *string `pulumi:"statusReplicasPath"`
}

// CustomResourceSubresourceScalePatchInput is an input type that accepts CustomResourceSubresourceScalePatchArgs and CustomResourceSubresourceScalePatchOutput values.
// You can construct a concrete instance of `CustomResourceSubresourceScalePatchInput` via:
//
//	CustomResourceSubresourceScalePatchArgs{...}
type CustomResourceSubresourceScalePatchInput interface {
	pulumi.Input

	ToCustomResourceSubresourceScalePatchOutput() CustomResourceSubresourceScalePatchOutput
	ToCustomResourceSubresourceScalePatchOutputWithContext(context.Context) CustomResourceSubresourceScalePatchOutput
}

// CustomResourceSubresourceScale defines how to serve the scale subresource for CustomResources.
type CustomResourceSubresourceScalePatchArgs struct {
	// labelSelectorPath defines the JSON path inside of a custom resource that corresponds to Scale `status.selector`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status` or `.spec`. Must be set to work with HorizontalPodAutoscaler. The field pointed by this JSON path must be a string field (not a complex selector struct) which contains a serialized label selector in string form. More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource If there is no value under the given path in the custom resource, the `status.selector` value in the `/scale` subresource will default to the empty string.
	LabelSelectorPath pulumi.StringPtrInput `pulumi:"labelSelectorPath"`
	// specReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `spec.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.spec`. If there is no value under the given path in the custom resource, the `/scale` subresource will return an error on GET.
	SpecReplicasPath pulumi.StringPtrInput `pulumi:"specReplicasPath"`
	// statusReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `status.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status`. If there is no value under the given path in the custom resource, the `status.replicas` value in the `/scale` subresource will default to 0.
	StatusReplicasPath pulumi.StringPtrInput `pulumi:"statusReplicasPath"`
}

func (CustomResourceSubresourceScalePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceSubresourceScalePatch)(nil)).Elem()
}

func (i CustomResourceSubresourceScalePatchArgs) ToCustomResourceSubresourceScalePatchOutput() CustomResourceSubresourceScalePatchOutput {
	return i.ToCustomResourceSubresourceScalePatchOutputWithContext(context.Background())
}

func (i CustomResourceSubresourceScalePatchArgs) ToCustomResourceSubresourceScalePatchOutputWithContext(ctx context.Context) CustomResourceSubresourceScalePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceSubresourceScalePatchOutput)
}

func (i CustomResourceSubresourceScalePatchArgs) ToCustomResourceSubresourceScalePatchPtrOutput() CustomResourceSubresourceScalePatchPtrOutput {
	return i.ToCustomResourceSubresourceScalePatchPtrOutputWithContext(context.Background())
}

func (i CustomResourceSubresourceScalePatchArgs) ToCustomResourceSubresourceScalePatchPtrOutputWithContext(ctx context.Context) CustomResourceSubresourceScalePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceSubresourceScalePatchOutput).ToCustomResourceSubresourceScalePatchPtrOutputWithContext(ctx)
}

// CustomResourceSubresourceScalePatchPtrInput is an input type that accepts CustomResourceSubresourceScalePatchArgs, CustomResourceSubresourceScalePatchPtr and CustomResourceSubresourceScalePatchPtrOutput values.
// You can construct a concrete instance of `CustomResourceSubresourceScalePatchPtrInput` via:
//
//	        CustomResourceSubresourceScalePatchArgs{...}
//
//	or:
//
//	        nil
type CustomResourceSubresourceScalePatchPtrInput interface {
	pulumi.Input

	ToCustomResourceSubresourceScalePatchPtrOutput() CustomResourceSubresourceScalePatchPtrOutput
	ToCustomResourceSubresourceScalePatchPtrOutputWithContext(context.Context) CustomResourceSubresourceScalePatchPtrOutput
}

type customResourceSubresourceScalePatchPtrType CustomResourceSubresourceScalePatchArgs

func CustomResourceSubresourceScalePatchPtr(v *CustomResourceSubresourceScalePatchArgs) CustomResourceSubresourceScalePatchPtrInput {
	return (*customResourceSubresourceScalePatchPtrType)(v)
}

func (*customResourceSubresourceScalePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomResourceSubresourceScalePatch)(nil)).Elem()
}

func (i *customResourceSubresourceScalePatchPtrType) ToCustomResourceSubresourceScalePatchPtrOutput() CustomResourceSubresourceScalePatchPtrOutput {
	return i.ToCustomResourceSubresourceScalePatchPtrOutputWithContext(context.Background())
}

func (i *customResourceSubresourceScalePatchPtrType) ToCustomResourceSubresourceScalePatchPtrOutputWithContext(ctx context.Context) CustomResourceSubresourceScalePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceSubresourceScalePatchPtrOutput)
}

// CustomResourceSubresourceScale defines how to serve the scale subresource for CustomResources.
type CustomResourceSubresourceScalePatchOutput struct{ *pulumi.OutputState }

func (CustomResourceSubresourceScalePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceSubresourceScalePatch)(nil)).Elem()
}

func (o CustomResourceSubresourceScalePatchOutput) ToCustomResourceSubresourceScalePatchOutput() CustomResourceSubresourceScalePatchOutput {
	return o
}

func (o CustomResourceSubresourceScalePatchOutput) ToCustomResourceSubresourceScalePatchOutputWithContext(ctx context.Context) CustomResourceSubresourceScalePatchOutput {
	return o
}

func (o CustomResourceSubresourceScalePatchOutput) ToCustomResourceSubresourceScalePatchPtrOutput() CustomResourceSubresourceScalePatchPtrOutput {
	return o.ToCustomResourceSubresourceScalePatchPtrOutputWithContext(context.Background())
}

func (o CustomResourceSubresourceScalePatchOutput) ToCustomResourceSubresourceScalePatchPtrOutputWithContext(ctx context.Context) CustomResourceSubresourceScalePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomResourceSubresourceScalePatch) *CustomResourceSubresourceScalePatch {
		return &v
	}).(CustomResourceSubresourceScalePatchPtrOutput)
}

// labelSelectorPath defines the JSON path inside of a custom resource that corresponds to Scale `status.selector`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status` or `.spec`. Must be set to work with HorizontalPodAutoscaler. The field pointed by this JSON path must be a string field (not a complex selector struct) which contains a serialized label selector in string form. More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource If there is no value under the given path in the custom resource, the `status.selector` value in the `/scale` subresource will default to the empty string.
func (o CustomResourceSubresourceScalePatchOutput) LabelSelectorPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceSubresourceScalePatch) *string { return v.LabelSelectorPath }).(pulumi.StringPtrOutput)
}

// specReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `spec.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.spec`. If there is no value under the given path in the custom resource, the `/scale` subresource will return an error on GET.
func (o CustomResourceSubresourceScalePatchOutput) SpecReplicasPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceSubresourceScalePatch) *string { return v.SpecReplicasPath }).(pulumi.StringPtrOutput)
}

// statusReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `status.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status`. If there is no value under the given path in the custom resource, the `status.replicas` value in the `/scale` subresource will default to 0.
func (o CustomResourceSubresourceScalePatchOutput) StatusReplicasPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v CustomResourceSubresourceScalePatch) *string { return v.StatusReplicasPath }).(pulumi.StringPtrOutput)
}

type CustomResourceSubresourceScalePatchPtrOutput struct{ *pulumi.OutputState }

func (CustomResourceSubresourceScalePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomResourceSubresourceScalePatch)(nil)).Elem()
}

func (o CustomResourceSubresourceScalePatchPtrOutput) ToCustomResourceSubresourceScalePatchPtrOutput() CustomResourceSubresourceScalePatchPtrOutput {
	return o
}

func (o CustomResourceSubresourceScalePatchPtrOutput) ToCustomResourceSubresourceScalePatchPtrOutputWithContext(ctx context.Context) CustomResourceSubresourceScalePatchPtrOutput {
	return o
}

func (o CustomResourceSubresourceScalePatchPtrOutput) Elem() CustomResourceSubresourceScalePatchOutput {
	return o.ApplyT(func(v *CustomResourceSubresourceScalePatch) CustomResourceSubresourceScalePatch {
		if v != nil {
			return *v
		}
		var ret CustomResourceSubresourceScalePatch
		return ret
	}).(CustomResourceSubresourceScalePatchOutput)
}

// labelSelectorPath defines the JSON path inside of a custom resource that corresponds to Scale `status.selector`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status` or `.spec`. Must be set to work with HorizontalPodAutoscaler. The field pointed by this JSON path must be a string field (not a complex selector struct) which contains a serialized label selector in string form. More info: https://kubernetes.io/docs/tasks/access-kubernetes-api/custom-resources/custom-resource-definitions#scale-subresource If there is no value under the given path in the custom resource, the `status.selector` value in the `/scale` subresource will default to the empty string.
func (o CustomResourceSubresourceScalePatchPtrOutput) LabelSelectorPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomResourceSubresourceScalePatch) *string {
		if v == nil {
			return nil
		}
		return v.LabelSelectorPath
	}).(pulumi.StringPtrOutput)
}

// specReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `spec.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.spec`. If there is no value under the given path in the custom resource, the `/scale` subresource will return an error on GET.
func (o CustomResourceSubresourceScalePatchPtrOutput) SpecReplicasPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomResourceSubresourceScalePatch) *string {
		if v == nil {
			return nil
		}
		return v.SpecReplicasPath
	}).(pulumi.StringPtrOutput)
}

// statusReplicasPath defines the JSON path inside of a custom resource that corresponds to Scale `status.replicas`. Only JSON paths without the array notation are allowed. Must be a JSON Path under `.status`. If there is no value under the given path in the custom resource, the `status.replicas` value in the `/scale` subresource will default to 0.
func (o CustomResourceSubresourceScalePatchPtrOutput) StatusReplicasPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *CustomResourceSubresourceScalePatch) *string {
		if v == nil {
			return nil
		}
		return v.StatusReplicasPath
	}).(pulumi.StringPtrOutput)
}

// CustomResourceSubresources defines the status and scale subresources for CustomResources.
type CustomResourceSubresources struct {
	// scale indicates the custom resource should serve a `/scale` subresource that returns an `autoscaling/v1` Scale object.
	Scale *CustomResourceSubresourceScale `pulumi:"scale"`
	// status indicates the custom resource should serve a `/status` subresource. When enabled: 1. requests to the custom resource primary endpoint ignore changes to the `status` stanza of the object. 2. requests to the custom resource `/status` subresource ignore changes to anything other than the `status` stanza of the object.
	Status interface{} `pulumi:"status"`
}

// CustomResourceSubresourcesInput is an input type that accepts CustomResourceSubresourcesArgs and CustomResourceSubresourcesOutput values.
// You can construct a concrete instance of `CustomResourceSubresourcesInput` via:
//
//	CustomResourceSubresourcesArgs{...}
type CustomResourceSubresourcesInput interface {
	pulumi.Input

	ToCustomResourceSubresourcesOutput() CustomResourceSubresourcesOutput
	ToCustomResourceSubresourcesOutputWithContext(context.Context) CustomResourceSubresourcesOutput
}

// CustomResourceSubresources defines the status and scale subresources for CustomResources.
type CustomResourceSubresourcesArgs struct {
	// scale indicates the custom resource should serve a `/scale` subresource that returns an `autoscaling/v1` Scale object.
	Scale CustomResourceSubresourceScalePtrInput `pulumi:"scale"`
	// status indicates the custom resource should serve a `/status` subresource. When enabled: 1. requests to the custom resource primary endpoint ignore changes to the `status` stanza of the object. 2. requests to the custom resource `/status` subresource ignore changes to anything other than the `status` stanza of the object.
	Status pulumi.Input `pulumi:"status"`
}

func (CustomResourceSubresourcesArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceSubresources)(nil)).Elem()
}

func (i CustomResourceSubresourcesArgs) ToCustomResourceSubresourcesOutput() CustomResourceSubresourcesOutput {
	return i.ToCustomResourceSubresourcesOutputWithContext(context.Background())
}

func (i CustomResourceSubresourcesArgs) ToCustomResourceSubresourcesOutputWithContext(ctx context.Context) CustomResourceSubresourcesOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceSubresourcesOutput)
}

func (i CustomResourceSubresourcesArgs) ToCustomResourceSubresourcesPtrOutput() CustomResourceSubresourcesPtrOutput {
	return i.ToCustomResourceSubresourcesPtrOutputWithContext(context.Background())
}

func (i CustomResourceSubresourcesArgs) ToCustomResourceSubresourcesPtrOutputWithContext(ctx context.Context) CustomResourceSubresourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceSubresourcesOutput).ToCustomResourceSubresourcesPtrOutputWithContext(ctx)
}

// CustomResourceSubresourcesPtrInput is an input type that accepts CustomResourceSubresourcesArgs, CustomResourceSubresourcesPtr and CustomResourceSubresourcesPtrOutput values.
// You can construct a concrete instance of `CustomResourceSubresourcesPtrInput` via:
//
//	        CustomResourceSubresourcesArgs{...}
//
//	or:
//
//	        nil
type CustomResourceSubresourcesPtrInput interface {
	pulumi.Input

	ToCustomResourceSubresourcesPtrOutput() CustomResourceSubresourcesPtrOutput
	ToCustomResourceSubresourcesPtrOutputWithContext(context.Context) CustomResourceSubresourcesPtrOutput
}

type customResourceSubresourcesPtrType CustomResourceSubresourcesArgs

func CustomResourceSubresourcesPtr(v *CustomResourceSubresourcesArgs) CustomResourceSubresourcesPtrInput {
	return (*customResourceSubresourcesPtrType)(v)
}

func (*customResourceSubresourcesPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomResourceSubresources)(nil)).Elem()
}

func (i *customResourceSubresourcesPtrType) ToCustomResourceSubresourcesPtrOutput() CustomResourceSubresourcesPtrOutput {
	return i.ToCustomResourceSubresourcesPtrOutputWithContext(context.Background())
}

func (i *customResourceSubresourcesPtrType) ToCustomResourceSubresourcesPtrOutputWithContext(ctx context.Context) CustomResourceSubresourcesPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceSubresourcesPtrOutput)
}

// CustomResourceSubresources defines the status and scale subresources for CustomResources.
type CustomResourceSubresourcesOutput struct{ *pulumi.OutputState }

func (CustomResourceSubresourcesOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceSubresources)(nil)).Elem()
}

func (o CustomResourceSubresourcesOutput) ToCustomResourceSubresourcesOutput() CustomResourceSubresourcesOutput {
	return o
}

func (o CustomResourceSubresourcesOutput) ToCustomResourceSubresourcesOutputWithContext(ctx context.Context) CustomResourceSubresourcesOutput {
	return o
}

func (o CustomResourceSubresourcesOutput) ToCustomResourceSubresourcesPtrOutput() CustomResourceSubresourcesPtrOutput {
	return o.ToCustomResourceSubresourcesPtrOutputWithContext(context.Background())
}

func (o CustomResourceSubresourcesOutput) ToCustomResourceSubresourcesPtrOutputWithContext(ctx context.Context) CustomResourceSubresourcesPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomResourceSubresources) *CustomResourceSubresources {
		return &v
	}).(CustomResourceSubresourcesPtrOutput)
}

// scale indicates the custom resource should serve a `/scale` subresource that returns an `autoscaling/v1` Scale object.
func (o CustomResourceSubresourcesOutput) Scale() CustomResourceSubresourceScalePtrOutput {
	return o.ApplyT(func(v CustomResourceSubresources) *CustomResourceSubresourceScale { return v.Scale }).(CustomResourceSubresourceScalePtrOutput)
}

// status indicates the custom resource should serve a `/status` subresource. When enabled: 1. requests to the custom resource primary endpoint ignore changes to the `status` stanza of the object. 2. requests to the custom resource `/status` subresource ignore changes to anything other than the `status` stanza of the object.
func (o CustomResourceSubresourcesOutput) Status() pulumi.AnyOutput {
	return o.ApplyT(func(v CustomResourceSubresources) interface{} { return v.Status }).(pulumi.AnyOutput)
}

type CustomResourceSubresourcesPtrOutput struct{ *pulumi.OutputState }

func (CustomResourceSubresourcesPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomResourceSubresources)(nil)).Elem()
}

func (o CustomResourceSubresourcesPtrOutput) ToCustomResourceSubresourcesPtrOutput() CustomResourceSubresourcesPtrOutput {
	return o
}

func (o CustomResourceSubresourcesPtrOutput) ToCustomResourceSubresourcesPtrOutputWithContext(ctx context.Context) CustomResourceSubresourcesPtrOutput {
	return o
}

func (o CustomResourceSubresourcesPtrOutput) Elem() CustomResourceSubresourcesOutput {
	return o.ApplyT(func(v *CustomResourceSubresources) CustomResourceSubresources {
		if v != nil {
			return *v
		}
		var ret CustomResourceSubresources
		return ret
	}).(CustomResourceSubresourcesOutput)
}

// scale indicates the custom resource should serve a `/scale` subresource that returns an `autoscaling/v1` Scale object.
func (o CustomResourceSubresourcesPtrOutput) Scale() CustomResourceSubresourceScalePtrOutput {
	return o.ApplyT(func(v *CustomResourceSubresources) *CustomResourceSubresourceScale {
		if v == nil {
			return nil
		}
		return v.Scale
	}).(CustomResourceSubresourceScalePtrOutput)
}

// status indicates the custom resource should serve a `/status` subresource. When enabled: 1. requests to the custom resource primary endpoint ignore changes to the `status` stanza of the object. 2. requests to the custom resource `/status` subresource ignore changes to anything other than the `status` stanza of the object.
func (o CustomResourceSubresourcesPtrOutput) Status() pulumi.AnyOutput {
	return o.ApplyT(func(v *CustomResourceSubresources) interface{} {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.AnyOutput)
}

// CustomResourceSubresources defines the status and scale subresources for CustomResources.
type CustomResourceSubresourcesPatch struct {
	// scale indicates the custom resource should serve a `/scale` subresource that returns an `autoscaling/v1` Scale object.
	Scale *CustomResourceSubresourceScalePatch `pulumi:"scale"`
	// status indicates the custom resource should serve a `/status` subresource. When enabled: 1. requests to the custom resource primary endpoint ignore changes to the `status` stanza of the object. 2. requests to the custom resource `/status` subresource ignore changes to anything other than the `status` stanza of the object.
	Status interface{} `pulumi:"status"`
}

// CustomResourceSubresourcesPatchInput is an input type that accepts CustomResourceSubresourcesPatchArgs and CustomResourceSubresourcesPatchOutput values.
// You can construct a concrete instance of `CustomResourceSubresourcesPatchInput` via:
//
//	CustomResourceSubresourcesPatchArgs{...}
type CustomResourceSubresourcesPatchInput interface {
	pulumi.Input

	ToCustomResourceSubresourcesPatchOutput() CustomResourceSubresourcesPatchOutput
	ToCustomResourceSubresourcesPatchOutputWithContext(context.Context) CustomResourceSubresourcesPatchOutput
}

// CustomResourceSubresources defines the status and scale subresources for CustomResources.
type CustomResourceSubresourcesPatchArgs struct {
	// scale indicates the custom resource should serve a `/scale` subresource that returns an `autoscaling/v1` Scale object.
	Scale CustomResourceSubresourceScalePatchPtrInput `pulumi:"scale"`
	// status indicates the custom resource should serve a `/status` subresource. When enabled: 1. requests to the custom resource primary endpoint ignore changes to the `status` stanza of the object. 2. requests to the custom resource `/status` subresource ignore changes to anything other than the `status` stanza of the object.
	Status pulumi.Input `pulumi:"status"`
}

func (CustomResourceSubresourcesPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceSubresourcesPatch)(nil)).Elem()
}

func (i CustomResourceSubresourcesPatchArgs) ToCustomResourceSubresourcesPatchOutput() CustomResourceSubresourcesPatchOutput {
	return i.ToCustomResourceSubresourcesPatchOutputWithContext(context.Background())
}

func (i CustomResourceSubresourcesPatchArgs) ToCustomResourceSubresourcesPatchOutputWithContext(ctx context.Context) CustomResourceSubresourcesPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceSubresourcesPatchOutput)
}

func (i CustomResourceSubresourcesPatchArgs) ToCustomResourceSubresourcesPatchPtrOutput() CustomResourceSubresourcesPatchPtrOutput {
	return i.ToCustomResourceSubresourcesPatchPtrOutputWithContext(context.Background())
}

func (i CustomResourceSubresourcesPatchArgs) ToCustomResourceSubresourcesPatchPtrOutputWithContext(ctx context.Context) CustomResourceSubresourcesPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceSubresourcesPatchOutput).ToCustomResourceSubresourcesPatchPtrOutputWithContext(ctx)
}

// CustomResourceSubresourcesPatchPtrInput is an input type that accepts CustomResourceSubresourcesPatchArgs, CustomResourceSubresourcesPatchPtr and CustomResourceSubresourcesPatchPtrOutput values.
// You can construct a concrete instance of `CustomResourceSubresourcesPatchPtrInput` via:
//
//	        CustomResourceSubresourcesPatchArgs{...}
//
//	or:
//
//	        nil
type CustomResourceSubresourcesPatchPtrInput interface {
	pulumi.Input

	ToCustomResourceSubresourcesPatchPtrOutput() CustomResourceSubresourcesPatchPtrOutput
	ToCustomResourceSubresourcesPatchPtrOutputWithContext(context.Context) CustomResourceSubresourcesPatchPtrOutput
}

type customResourceSubresourcesPatchPtrType CustomResourceSubresourcesPatchArgs

func CustomResourceSubresourcesPatchPtr(v *CustomResourceSubresourcesPatchArgs) CustomResourceSubresourcesPatchPtrInput {
	return (*customResourceSubresourcesPatchPtrType)(v)
}

func (*customResourceSubresourcesPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomResourceSubresourcesPatch)(nil)).Elem()
}

func (i *customResourceSubresourcesPatchPtrType) ToCustomResourceSubresourcesPatchPtrOutput() CustomResourceSubresourcesPatchPtrOutput {
	return i.ToCustomResourceSubresourcesPatchPtrOutputWithContext(context.Background())
}

func (i *customResourceSubresourcesPatchPtrType) ToCustomResourceSubresourcesPatchPtrOutputWithContext(ctx context.Context) CustomResourceSubresourcesPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceSubresourcesPatchPtrOutput)
}

// CustomResourceSubresources defines the status and scale subresources for CustomResources.
type CustomResourceSubresourcesPatchOutput struct{ *pulumi.OutputState }

func (CustomResourceSubresourcesPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceSubresourcesPatch)(nil)).Elem()
}

func (o CustomResourceSubresourcesPatchOutput) ToCustomResourceSubresourcesPatchOutput() CustomResourceSubresourcesPatchOutput {
	return o
}

func (o CustomResourceSubresourcesPatchOutput) ToCustomResourceSubresourcesPatchOutputWithContext(ctx context.Context) CustomResourceSubresourcesPatchOutput {
	return o
}

func (o CustomResourceSubresourcesPatchOutput) ToCustomResourceSubresourcesPatchPtrOutput() CustomResourceSubresourcesPatchPtrOutput {
	return o.ToCustomResourceSubresourcesPatchPtrOutputWithContext(context.Background())
}

func (o CustomResourceSubresourcesPatchOutput) ToCustomResourceSubresourcesPatchPtrOutputWithContext(ctx context.Context) CustomResourceSubresourcesPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomResourceSubresourcesPatch) *CustomResourceSubresourcesPatch {
		return &v
	}).(CustomResourceSubresourcesPatchPtrOutput)
}

// scale indicates the custom resource should serve a `/scale` subresource that returns an `autoscaling/v1` Scale object.
func (o CustomResourceSubresourcesPatchOutput) Scale() CustomResourceSubresourceScalePatchPtrOutput {
	return o.ApplyT(func(v CustomResourceSubresourcesPatch) *CustomResourceSubresourceScalePatch { return v.Scale }).(CustomResourceSubresourceScalePatchPtrOutput)
}

// status indicates the custom resource should serve a `/status` subresource. When enabled: 1. requests to the custom resource primary endpoint ignore changes to the `status` stanza of the object. 2. requests to the custom resource `/status` subresource ignore changes to anything other than the `status` stanza of the object.
func (o CustomResourceSubresourcesPatchOutput) Status() pulumi.AnyOutput {
	return o.ApplyT(func(v CustomResourceSubresourcesPatch) interface{} { return v.Status }).(pulumi.AnyOutput)
}

type CustomResourceSubresourcesPatchPtrOutput struct{ *pulumi.OutputState }

func (CustomResourceSubresourcesPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomResourceSubresourcesPatch)(nil)).Elem()
}

func (o CustomResourceSubresourcesPatchPtrOutput) ToCustomResourceSubresourcesPatchPtrOutput() CustomResourceSubresourcesPatchPtrOutput {
	return o
}

func (o CustomResourceSubresourcesPatchPtrOutput) ToCustomResourceSubresourcesPatchPtrOutputWithContext(ctx context.Context) CustomResourceSubresourcesPatchPtrOutput {
	return o
}

func (o CustomResourceSubresourcesPatchPtrOutput) Elem() CustomResourceSubresourcesPatchOutput {
	return o.ApplyT(func(v *CustomResourceSubresourcesPatch) CustomResourceSubresourcesPatch {
		if v != nil {
			return *v
		}
		var ret CustomResourceSubresourcesPatch
		return ret
	}).(CustomResourceSubresourcesPatchOutput)
}

// scale indicates the custom resource should serve a `/scale` subresource that returns an `autoscaling/v1` Scale object.
func (o CustomResourceSubresourcesPatchPtrOutput) Scale() CustomResourceSubresourceScalePatchPtrOutput {
	return o.ApplyT(func(v *CustomResourceSubresourcesPatch) *CustomResourceSubresourceScalePatch {
		if v == nil {
			return nil
		}
		return v.Scale
	}).(CustomResourceSubresourceScalePatchPtrOutput)
}

// status indicates the custom resource should serve a `/status` subresource. When enabled: 1. requests to the custom resource primary endpoint ignore changes to the `status` stanza of the object. 2. requests to the custom resource `/status` subresource ignore changes to anything other than the `status` stanza of the object.
func (o CustomResourceSubresourcesPatchPtrOutput) Status() pulumi.AnyOutput {
	return o.ApplyT(func(v *CustomResourceSubresourcesPatch) interface{} {
		if v == nil {
			return nil
		}
		return v.Status
	}).(pulumi.AnyOutput)
}

// CustomResourceValidation is a list of validation methods for CustomResources.
type CustomResourceValidation struct {
	// openAPIV3Schema is the OpenAPI v3 schema to use for validation and pruning.
	OpenAPIV3Schema *JSONSchemaProps `pulumi:"openAPIV3Schema"`
}

// CustomResourceValidationInput is an input type that accepts CustomResourceValidationArgs and CustomResourceValidationOutput values.
// You can construct a concrete instance of `CustomResourceValidationInput` via:
//
//	CustomResourceValidationArgs{...}
type CustomResourceValidationInput interface {
	pulumi.Input

	ToCustomResourceValidationOutput() CustomResourceValidationOutput
	ToCustomResourceValidationOutputWithContext(context.Context) CustomResourceValidationOutput
}

// CustomResourceValidation is a list of validation methods for CustomResources.
type CustomResourceValidationArgs struct {
	// openAPIV3Schema is the OpenAPI v3 schema to use for validation and pruning.
	OpenAPIV3Schema JSONSchemaPropsPtrInput `pulumi:"openAPIV3Schema"`
}

func (CustomResourceValidationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceValidation)(nil)).Elem()
}

func (i CustomResourceValidationArgs) ToCustomResourceValidationOutput() CustomResourceValidationOutput {
	return i.ToCustomResourceValidationOutputWithContext(context.Background())
}

func (i CustomResourceValidationArgs) ToCustomResourceValidationOutputWithContext(ctx context.Context) CustomResourceValidationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceValidationOutput)
}

func (i CustomResourceValidationArgs) ToCustomResourceValidationPtrOutput() CustomResourceValidationPtrOutput {
	return i.ToCustomResourceValidationPtrOutputWithContext(context.Background())
}

func (i CustomResourceValidationArgs) ToCustomResourceValidationPtrOutputWithContext(ctx context.Context) CustomResourceValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceValidationOutput).ToCustomResourceValidationPtrOutputWithContext(ctx)
}

// CustomResourceValidationPtrInput is an input type that accepts CustomResourceValidationArgs, CustomResourceValidationPtr and CustomResourceValidationPtrOutput values.
// You can construct a concrete instance of `CustomResourceValidationPtrInput` via:
//
//	        CustomResourceValidationArgs{...}
//
//	or:
//
//	        nil
type CustomResourceValidationPtrInput interface {
	pulumi.Input

	ToCustomResourceValidationPtrOutput() CustomResourceValidationPtrOutput
	ToCustomResourceValidationPtrOutputWithContext(context.Context) CustomResourceValidationPtrOutput
}

type customResourceValidationPtrType CustomResourceValidationArgs

func CustomResourceValidationPtr(v *CustomResourceValidationArgs) CustomResourceValidationPtrInput {
	return (*customResourceValidationPtrType)(v)
}

func (*customResourceValidationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomResourceValidation)(nil)).Elem()
}

func (i *customResourceValidationPtrType) ToCustomResourceValidationPtrOutput() CustomResourceValidationPtrOutput {
	return i.ToCustomResourceValidationPtrOutputWithContext(context.Background())
}

func (i *customResourceValidationPtrType) ToCustomResourceValidationPtrOutputWithContext(ctx context.Context) CustomResourceValidationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceValidationPtrOutput)
}

// CustomResourceValidation is a list of validation methods for CustomResources.
type CustomResourceValidationOutput struct{ *pulumi.OutputState }

func (CustomResourceValidationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceValidation)(nil)).Elem()
}

func (o CustomResourceValidationOutput) ToCustomResourceValidationOutput() CustomResourceValidationOutput {
	return o
}

func (o CustomResourceValidationOutput) ToCustomResourceValidationOutputWithContext(ctx context.Context) CustomResourceValidationOutput {
	return o
}

func (o CustomResourceValidationOutput) ToCustomResourceValidationPtrOutput() CustomResourceValidationPtrOutput {
	return o.ToCustomResourceValidationPtrOutputWithContext(context.Background())
}

func (o CustomResourceValidationOutput) ToCustomResourceValidationPtrOutputWithContext(ctx context.Context) CustomResourceValidationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomResourceValidation) *CustomResourceValidation {
		return &v
	}).(CustomResourceValidationPtrOutput)
}

// openAPIV3Schema is the OpenAPI v3 schema to use for validation and pruning.
func (o CustomResourceValidationOutput) OpenAPIV3Schema() JSONSchemaPropsPtrOutput {
	return o.ApplyT(func(v CustomResourceValidation) *JSONSchemaProps { return v.OpenAPIV3Schema }).(JSONSchemaPropsPtrOutput)
}

type CustomResourceValidationPtrOutput struct{ *pulumi.OutputState }

func (CustomResourceValidationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomResourceValidation)(nil)).Elem()
}

func (o CustomResourceValidationPtrOutput) ToCustomResourceValidationPtrOutput() CustomResourceValidationPtrOutput {
	return o
}

func (o CustomResourceValidationPtrOutput) ToCustomResourceValidationPtrOutputWithContext(ctx context.Context) CustomResourceValidationPtrOutput {
	return o
}

func (o CustomResourceValidationPtrOutput) Elem() CustomResourceValidationOutput {
	return o.ApplyT(func(v *CustomResourceValidation) CustomResourceValidation {
		if v != nil {
			return *v
		}
		var ret CustomResourceValidation
		return ret
	}).(CustomResourceValidationOutput)
}

// openAPIV3Schema is the OpenAPI v3 schema to use for validation and pruning.
func (o CustomResourceValidationPtrOutput) OpenAPIV3Schema() JSONSchemaPropsPtrOutput {
	return o.ApplyT(func(v *CustomResourceValidation) *JSONSchemaProps {
		if v == nil {
			return nil
		}
		return v.OpenAPIV3Schema
	}).(JSONSchemaPropsPtrOutput)
}

// CustomResourceValidation is a list of validation methods for CustomResources.
type CustomResourceValidationPatch struct {
	// openAPIV3Schema is the OpenAPI v3 schema to use for validation and pruning.
	OpenAPIV3Schema *JSONSchemaPropsPatch `pulumi:"openAPIV3Schema"`
}

// CustomResourceValidationPatchInput is an input type that accepts CustomResourceValidationPatchArgs and CustomResourceValidationPatchOutput values.
// You can construct a concrete instance of `CustomResourceValidationPatchInput` via:
//
//	CustomResourceValidationPatchArgs{...}
type CustomResourceValidationPatchInput interface {
	pulumi.Input

	ToCustomResourceValidationPatchOutput() CustomResourceValidationPatchOutput
	ToCustomResourceValidationPatchOutputWithContext(context.Context) CustomResourceValidationPatchOutput
}

// CustomResourceValidation is a list of validation methods for CustomResources.
type CustomResourceValidationPatchArgs struct {
	// openAPIV3Schema is the OpenAPI v3 schema to use for validation and pruning.
	OpenAPIV3Schema JSONSchemaPropsPatchPtrInput `pulumi:"openAPIV3Schema"`
}

func (CustomResourceValidationPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceValidationPatch)(nil)).Elem()
}

func (i CustomResourceValidationPatchArgs) ToCustomResourceValidationPatchOutput() CustomResourceValidationPatchOutput {
	return i.ToCustomResourceValidationPatchOutputWithContext(context.Background())
}

func (i CustomResourceValidationPatchArgs) ToCustomResourceValidationPatchOutputWithContext(ctx context.Context) CustomResourceValidationPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceValidationPatchOutput)
}

func (i CustomResourceValidationPatchArgs) ToCustomResourceValidationPatchPtrOutput() CustomResourceValidationPatchPtrOutput {
	return i.ToCustomResourceValidationPatchPtrOutputWithContext(context.Background())
}

func (i CustomResourceValidationPatchArgs) ToCustomResourceValidationPatchPtrOutputWithContext(ctx context.Context) CustomResourceValidationPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceValidationPatchOutput).ToCustomResourceValidationPatchPtrOutputWithContext(ctx)
}

// CustomResourceValidationPatchPtrInput is an input type that accepts CustomResourceValidationPatchArgs, CustomResourceValidationPatchPtr and CustomResourceValidationPatchPtrOutput values.
// You can construct a concrete instance of `CustomResourceValidationPatchPtrInput` via:
//
//	        CustomResourceValidationPatchArgs{...}
//
//	or:
//
//	        nil
type CustomResourceValidationPatchPtrInput interface {
	pulumi.Input

	ToCustomResourceValidationPatchPtrOutput() CustomResourceValidationPatchPtrOutput
	ToCustomResourceValidationPatchPtrOutputWithContext(context.Context) CustomResourceValidationPatchPtrOutput
}

type customResourceValidationPatchPtrType CustomResourceValidationPatchArgs

func CustomResourceValidationPatchPtr(v *CustomResourceValidationPatchArgs) CustomResourceValidationPatchPtrInput {
	return (*customResourceValidationPatchPtrType)(v)
}

func (*customResourceValidationPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomResourceValidationPatch)(nil)).Elem()
}

func (i *customResourceValidationPatchPtrType) ToCustomResourceValidationPatchPtrOutput() CustomResourceValidationPatchPtrOutput {
	return i.ToCustomResourceValidationPatchPtrOutputWithContext(context.Background())
}

func (i *customResourceValidationPatchPtrType) ToCustomResourceValidationPatchPtrOutputWithContext(ctx context.Context) CustomResourceValidationPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(CustomResourceValidationPatchPtrOutput)
}

// CustomResourceValidation is a list of validation methods for CustomResources.
type CustomResourceValidationPatchOutput struct{ *pulumi.OutputState }

func (CustomResourceValidationPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*CustomResourceValidationPatch)(nil)).Elem()
}

func (o CustomResourceValidationPatchOutput) ToCustomResourceValidationPatchOutput() CustomResourceValidationPatchOutput {
	return o
}

func (o CustomResourceValidationPatchOutput) ToCustomResourceValidationPatchOutputWithContext(ctx context.Context) CustomResourceValidationPatchOutput {
	return o
}

func (o CustomResourceValidationPatchOutput) ToCustomResourceValidationPatchPtrOutput() CustomResourceValidationPatchPtrOutput {
	return o.ToCustomResourceValidationPatchPtrOutputWithContext(context.Background())
}

func (o CustomResourceValidationPatchOutput) ToCustomResourceValidationPatchPtrOutputWithContext(ctx context.Context) CustomResourceValidationPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v CustomResourceValidationPatch) *CustomResourceValidationPatch {
		return &v
	}).(CustomResourceValidationPatchPtrOutput)
}

// openAPIV3Schema is the OpenAPI v3 schema to use for validation and pruning.
func (o CustomResourceValidationPatchOutput) OpenAPIV3Schema() JSONSchemaPropsPatchPtrOutput {
	return o.ApplyT(func(v CustomResourceValidationPatch) *JSONSchemaPropsPatch { return v.OpenAPIV3Schema }).(JSONSchemaPropsPatchPtrOutput)
}

type CustomResourceValidationPatchPtrOutput struct{ *pulumi.OutputState }

func (CustomResourceValidationPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**CustomResourceValidationPatch)(nil)).Elem()
}

func (o CustomResourceValidationPatchPtrOutput) ToCustomResourceValidationPatchPtrOutput() CustomResourceValidationPatchPtrOutput {
	return o
}

func (o CustomResourceValidationPatchPtrOutput) ToCustomResourceValidationPatchPtrOutputWithContext(ctx context.Context) CustomResourceValidationPatchPtrOutput {
	return o
}

func (o CustomResourceValidationPatchPtrOutput) Elem() CustomResourceValidationPatchOutput {
	return o.ApplyT(func(v *CustomResourceValidationPatch) CustomResourceValidationPatch {
		if v != nil {
			return *v
		}
		var ret CustomResourceValidationPatch
		return ret
	}).(CustomResourceValidationPatchOutput)
}

// openAPIV3Schema is the OpenAPI v3 schema to use for validation and pruning.
func (o CustomResourceValidationPatchPtrOutput) OpenAPIV3Schema() JSONSchemaPropsPatchPtrOutput {
	return o.ApplyT(func(v *CustomResourceValidationPatch) *JSONSchemaPropsPatch {
		if v == nil {
			return nil
		}
		return v.OpenAPIV3Schema
	}).(JSONSchemaPropsPatchPtrOutput)
}

// ExternalDocumentation allows referencing an external resource for extended documentation.
type ExternalDocumentation struct {
	Description *string `pulumi:"description"`
	Url         *string `pulumi:"url"`
}

// ExternalDocumentationInput is an input type that accepts ExternalDocumentationArgs and ExternalDocumentationOutput values.
// You can construct a concrete instance of `ExternalDocumentationInput` via:
//
//	ExternalDocumentationArgs{...}
type ExternalDocumentationInput interface {
	pulumi.Input

	ToExternalDocumentationOutput() ExternalDocumentationOutput
	ToExternalDocumentationOutputWithContext(context.Context) ExternalDocumentationOutput
}

// ExternalDocumentation allows referencing an external resource for extended documentation.
type ExternalDocumentationArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Url         pulumi.StringPtrInput `pulumi:"url"`
}

func (ExternalDocumentationArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalDocumentation)(nil)).Elem()
}

func (i ExternalDocumentationArgs) ToExternalDocumentationOutput() ExternalDocumentationOutput {
	return i.ToExternalDocumentationOutputWithContext(context.Background())
}

func (i ExternalDocumentationArgs) ToExternalDocumentationOutputWithContext(ctx context.Context) ExternalDocumentationOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalDocumentationOutput)
}

func (i ExternalDocumentationArgs) ToExternalDocumentationPtrOutput() ExternalDocumentationPtrOutput {
	return i.ToExternalDocumentationPtrOutputWithContext(context.Background())
}

func (i ExternalDocumentationArgs) ToExternalDocumentationPtrOutputWithContext(ctx context.Context) ExternalDocumentationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalDocumentationOutput).ToExternalDocumentationPtrOutputWithContext(ctx)
}

// ExternalDocumentationPtrInput is an input type that accepts ExternalDocumentationArgs, ExternalDocumentationPtr and ExternalDocumentationPtrOutput values.
// You can construct a concrete instance of `ExternalDocumentationPtrInput` via:
//
//	        ExternalDocumentationArgs{...}
//
//	or:
//
//	        nil
type ExternalDocumentationPtrInput interface {
	pulumi.Input

	ToExternalDocumentationPtrOutput() ExternalDocumentationPtrOutput
	ToExternalDocumentationPtrOutputWithContext(context.Context) ExternalDocumentationPtrOutput
}

type externalDocumentationPtrType ExternalDocumentationArgs

func ExternalDocumentationPtr(v *ExternalDocumentationArgs) ExternalDocumentationPtrInput {
	return (*externalDocumentationPtrType)(v)
}

func (*externalDocumentationPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalDocumentation)(nil)).Elem()
}

func (i *externalDocumentationPtrType) ToExternalDocumentationPtrOutput() ExternalDocumentationPtrOutput {
	return i.ToExternalDocumentationPtrOutputWithContext(context.Background())
}

func (i *externalDocumentationPtrType) ToExternalDocumentationPtrOutputWithContext(ctx context.Context) ExternalDocumentationPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalDocumentationPtrOutput)
}

// ExternalDocumentation allows referencing an external resource for extended documentation.
type ExternalDocumentationOutput struct{ *pulumi.OutputState }

func (ExternalDocumentationOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalDocumentation)(nil)).Elem()
}

func (o ExternalDocumentationOutput) ToExternalDocumentationOutput() ExternalDocumentationOutput {
	return o
}

func (o ExternalDocumentationOutput) ToExternalDocumentationOutputWithContext(ctx context.Context) ExternalDocumentationOutput {
	return o
}

func (o ExternalDocumentationOutput) ToExternalDocumentationPtrOutput() ExternalDocumentationPtrOutput {
	return o.ToExternalDocumentationPtrOutputWithContext(context.Background())
}

func (o ExternalDocumentationOutput) ToExternalDocumentationPtrOutputWithContext(ctx context.Context) ExternalDocumentationPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExternalDocumentation) *ExternalDocumentation {
		return &v
	}).(ExternalDocumentationPtrOutput)
}

func (o ExternalDocumentationOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalDocumentation) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ExternalDocumentationOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalDocumentation) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ExternalDocumentationPtrOutput struct{ *pulumi.OutputState }

func (ExternalDocumentationPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalDocumentation)(nil)).Elem()
}

func (o ExternalDocumentationPtrOutput) ToExternalDocumentationPtrOutput() ExternalDocumentationPtrOutput {
	return o
}

func (o ExternalDocumentationPtrOutput) ToExternalDocumentationPtrOutputWithContext(ctx context.Context) ExternalDocumentationPtrOutput {
	return o
}

func (o ExternalDocumentationPtrOutput) Elem() ExternalDocumentationOutput {
	return o.ApplyT(func(v *ExternalDocumentation) ExternalDocumentation {
		if v != nil {
			return *v
		}
		var ret ExternalDocumentation
		return ret
	}).(ExternalDocumentationOutput)
}

func (o ExternalDocumentationPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalDocumentation) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o ExternalDocumentationPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalDocumentation) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// ExternalDocumentation allows referencing an external resource for extended documentation.
type ExternalDocumentationPatch struct {
	Description *string `pulumi:"description"`
	Url         *string `pulumi:"url"`
}

// ExternalDocumentationPatchInput is an input type that accepts ExternalDocumentationPatchArgs and ExternalDocumentationPatchOutput values.
// You can construct a concrete instance of `ExternalDocumentationPatchInput` via:
//
//	ExternalDocumentationPatchArgs{...}
type ExternalDocumentationPatchInput interface {
	pulumi.Input

	ToExternalDocumentationPatchOutput() ExternalDocumentationPatchOutput
	ToExternalDocumentationPatchOutputWithContext(context.Context) ExternalDocumentationPatchOutput
}

// ExternalDocumentation allows referencing an external resource for extended documentation.
type ExternalDocumentationPatchArgs struct {
	Description pulumi.StringPtrInput `pulumi:"description"`
	Url         pulumi.StringPtrInput `pulumi:"url"`
}

func (ExternalDocumentationPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalDocumentationPatch)(nil)).Elem()
}

func (i ExternalDocumentationPatchArgs) ToExternalDocumentationPatchOutput() ExternalDocumentationPatchOutput {
	return i.ToExternalDocumentationPatchOutputWithContext(context.Background())
}

func (i ExternalDocumentationPatchArgs) ToExternalDocumentationPatchOutputWithContext(ctx context.Context) ExternalDocumentationPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalDocumentationPatchOutput)
}

func (i ExternalDocumentationPatchArgs) ToExternalDocumentationPatchPtrOutput() ExternalDocumentationPatchPtrOutput {
	return i.ToExternalDocumentationPatchPtrOutputWithContext(context.Background())
}

func (i ExternalDocumentationPatchArgs) ToExternalDocumentationPatchPtrOutputWithContext(ctx context.Context) ExternalDocumentationPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalDocumentationPatchOutput).ToExternalDocumentationPatchPtrOutputWithContext(ctx)
}

// ExternalDocumentationPatchPtrInput is an input type that accepts ExternalDocumentationPatchArgs, ExternalDocumentationPatchPtr and ExternalDocumentationPatchPtrOutput values.
// You can construct a concrete instance of `ExternalDocumentationPatchPtrInput` via:
//
//	        ExternalDocumentationPatchArgs{...}
//
//	or:
//
//	        nil
type ExternalDocumentationPatchPtrInput interface {
	pulumi.Input

	ToExternalDocumentationPatchPtrOutput() ExternalDocumentationPatchPtrOutput
	ToExternalDocumentationPatchPtrOutputWithContext(context.Context) ExternalDocumentationPatchPtrOutput
}

type externalDocumentationPatchPtrType ExternalDocumentationPatchArgs

func ExternalDocumentationPatchPtr(v *ExternalDocumentationPatchArgs) ExternalDocumentationPatchPtrInput {
	return (*externalDocumentationPatchPtrType)(v)
}

func (*externalDocumentationPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalDocumentationPatch)(nil)).Elem()
}

func (i *externalDocumentationPatchPtrType) ToExternalDocumentationPatchPtrOutput() ExternalDocumentationPatchPtrOutput {
	return i.ToExternalDocumentationPatchPtrOutputWithContext(context.Background())
}

func (i *externalDocumentationPatchPtrType) ToExternalDocumentationPatchPtrOutputWithContext(ctx context.Context) ExternalDocumentationPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ExternalDocumentationPatchPtrOutput)
}

// ExternalDocumentation allows referencing an external resource for extended documentation.
type ExternalDocumentationPatchOutput struct{ *pulumi.OutputState }

func (ExternalDocumentationPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ExternalDocumentationPatch)(nil)).Elem()
}

func (o ExternalDocumentationPatchOutput) ToExternalDocumentationPatchOutput() ExternalDocumentationPatchOutput {
	return o
}

func (o ExternalDocumentationPatchOutput) ToExternalDocumentationPatchOutputWithContext(ctx context.Context) ExternalDocumentationPatchOutput {
	return o
}

func (o ExternalDocumentationPatchOutput) ToExternalDocumentationPatchPtrOutput() ExternalDocumentationPatchPtrOutput {
	return o.ToExternalDocumentationPatchPtrOutputWithContext(context.Background())
}

func (o ExternalDocumentationPatchOutput) ToExternalDocumentationPatchPtrOutputWithContext(ctx context.Context) ExternalDocumentationPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ExternalDocumentationPatch) *ExternalDocumentationPatch {
		return &v
	}).(ExternalDocumentationPatchPtrOutput)
}

func (o ExternalDocumentationPatchOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalDocumentationPatch) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o ExternalDocumentationPatchOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ExternalDocumentationPatch) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type ExternalDocumentationPatchPtrOutput struct{ *pulumi.OutputState }

func (ExternalDocumentationPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ExternalDocumentationPatch)(nil)).Elem()
}

func (o ExternalDocumentationPatchPtrOutput) ToExternalDocumentationPatchPtrOutput() ExternalDocumentationPatchPtrOutput {
	return o
}

func (o ExternalDocumentationPatchPtrOutput) ToExternalDocumentationPatchPtrOutputWithContext(ctx context.Context) ExternalDocumentationPatchPtrOutput {
	return o
}

func (o ExternalDocumentationPatchPtrOutput) Elem() ExternalDocumentationPatchOutput {
	return o.ApplyT(func(v *ExternalDocumentationPatch) ExternalDocumentationPatch {
		if v != nil {
			return *v
		}
		var ret ExternalDocumentationPatch
		return ret
	}).(ExternalDocumentationPatchOutput)
}

func (o ExternalDocumentationPatchPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalDocumentationPatch) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o ExternalDocumentationPatchPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ExternalDocumentationPatch) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).
type JSONSchemaProps struct {
	Ref                  *string           `pulumi:"$ref"`
	Schema               *string           `pulumi:"$schema"`
	AdditionalItems      interface{}       `pulumi:"additionalItems"`
	AdditionalProperties interface{}       `pulumi:"additionalProperties"`
	AllOf                []JSONSchemaProps `pulumi:"allOf"`
	AnyOf                []JSONSchemaProps `pulumi:"anyOf"`
	// default is a default value for undefined object fields. Defaulting is a beta feature under the CustomResourceDefaulting feature gate. CustomResourceDefinitions with defaults must be created using the v1 (or newer) CustomResourceDefinition API.
	Default          interface{}                `pulumi:"default"`
	Definitions      map[string]JSONSchemaProps `pulumi:"definitions"`
	Dependencies     map[string]interface{}     `pulumi:"dependencies"`
	Description      *string                    `pulumi:"description"`
	Enum             []interface{}              `pulumi:"enum"`
	Example          interface{}                `pulumi:"example"`
	ExclusiveMaximum *bool                      `pulumi:"exclusiveMaximum"`
	ExclusiveMinimum *bool                      `pulumi:"exclusiveMinimum"`
	ExternalDocs     *ExternalDocumentation     `pulumi:"externalDocs"`
	// format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated:
	//
	// - bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI - email: an email address as parsed by Golang net/mail.ParseAddress - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4: an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - isbn: an ISBN10 or ISBN13 number string like "0321751043" or "978-0321751041" - isbn10: an ISBN10 number string like "0321751043" - isbn13: an ISBN13 number string like "978-0321751041" - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11})$ with any non digit characters mixed in - ssn: a U.S. social security number following the regex ^\d{3}[- ]?\d{2}[- ]?\d{4}$ - hexcolor: an hexadecimal color code like "#FFFFFF: following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor: an RGB color code like rgb like "rgb(255,255,2559" - byte: base64 encoded binary data - password: any kind of string - date: a date string like "2006-01-02" as defined by full-date in RFC3339 - duration: a duration string like "22 ns" as parsed by Golang time.ParseDuration or compatible with Scala duration format - datetime: a date time string like "2014-12-15T19:30:20.000Z" as defined by date-time in RFC3339.
	Format            *string                    `pulumi:"format"`
	Id                *string                    `pulumi:"id"`
	Items             interface{}                `pulumi:"items"`
	MaxItems          *int                       `pulumi:"maxItems"`
	MaxLength         *int                       `pulumi:"maxLength"`
	MaxProperties     *int                       `pulumi:"maxProperties"`
	Maximum           *float64                   `pulumi:"maximum"`
	MinItems          *int                       `pulumi:"minItems"`
	MinLength         *int                       `pulumi:"minLength"`
	MinProperties     *int                       `pulumi:"minProperties"`
	Minimum           *float64                   `pulumi:"minimum"`
	MultipleOf        *float64                   `pulumi:"multipleOf"`
	Not               *JSONSchemaProps           `pulumi:"not"`
	Nullable          *bool                      `pulumi:"nullable"`
	OneOf             []JSONSchemaProps          `pulumi:"oneOf"`
	Pattern           *string                    `pulumi:"pattern"`
	PatternProperties map[string]JSONSchemaProps `pulumi:"patternProperties"`
	Properties        map[string]JSONSchemaProps `pulumi:"properties"`
	Required          []string                   `pulumi:"required"`
	Title             *string                    `pulumi:"title"`
	Type              *string                    `pulumi:"type"`
	UniqueItems       *bool                      `pulumi:"uniqueItems"`
	// x-kubernetes-embedded-resource defines that the value is an embedded Kubernetes runtime.Object, with TypeMeta and ObjectMeta. The type must be object. It is allowed to further restrict the embedded object. kind, apiVersion and metadata are validated automatically. x-kubernetes-preserve-unknown-fields is allowed to be true, but does not have to be if the object is fully specified (up to kind, apiVersion, metadata).
	X_kubernetes_embedded_resource *bool `pulumi:"x_kubernetes_embedded_resource"`
	// x-kubernetes-int-or-string specifies that this value is either an integer or a string. If this is true, an empty type is allowed and type as child of anyOf is permitted if following one of the following patterns:
	//
	// 1) anyOf:
	//    - type: integer
	//    - type: string
	// 2) allOf:
	//    - anyOf:
	//      - type: integer
	//      - type: string
	//    - ... zero or more
	X_kubernetes_int_or_string *bool `pulumi:"x_kubernetes_int_or_string"`
	// x-kubernetes-list-map-keys annotates an array with the x-kubernetes-list-type `map` by specifying the keys used as the index of the map.
	//
	// This tag MUST only be used on lists that have the "x-kubernetes-list-type" extension set to "map". Also, the values specified for this attribute must be a scalar typed field of the child structure (no nesting is supported).
	X_kubernetes_list_map_keys []string `pulumi:"x_kubernetes_list_map_keys"`
	// x-kubernetes-list-type annotates an array to further describe its topology. This extension must only be used on lists and may have 3 possible values:
	//
	// 1) `atomic`: the list is treated as a single entity, like a scalar.
	//      Atomic lists will be entirely replaced when updated. This extension
	//      may be used on any type of list (struct, scalar, ...).
	// 2) `set`:
	//      Sets are lists that must not have multiple items with the same value. Each
	//      value must be a scalar, an object with x-kubernetes-map-type `atomic` or an
	//      array with x-kubernetes-list-type `atomic`.
	// 3) `map`:
	//      These lists are like maps in that their elements have a non-index key
	//      used to identify them. Order is preserved upon merge. The map tag
	//      must only be used on a list with elements of type object.
	//    Defaults to atomic for arrays.
	X_kubernetes_list_type *string `pulumi:"x_kubernetes_list_type"`
	// x-kubernetes-map-type annotates an object to further describe its topology. This extension must only be used when type is object and may have 2 possible values:
	//
	// 1) `granular`:
	//      These maps are actual maps (key-value pairs) and each fields are independent
	//      from each other (they can each be manipulated by separate actors). This is
	//      the default behaviour for all maps.
	// 2) `atomic`: the list is treated as a single entity, like a scalar.
	//      Atomic maps will be entirely replaced when updated.
	X_kubernetes_map_type *string `pulumi:"x_kubernetes_map_type"`
	// x-kubernetes-preserve-unknown-fields stops the API server decoding step from pruning fields which are not specified in the validation schema. This affects fields recursively, but switches back to normal pruning behaviour if nested properties or additionalProperties are specified in the schema. This can either be true or undefined. False is forbidden.
	X_kubernetes_preserve_unknown_fields *bool `pulumi:"x_kubernetes_preserve_unknown_fields"`
}

// JSONSchemaPropsInput is an input type that accepts JSONSchemaPropsArgs and JSONSchemaPropsOutput values.
// You can construct a concrete instance of `JSONSchemaPropsInput` via:
//
//	JSONSchemaPropsArgs{...}
type JSONSchemaPropsInput interface {
	pulumi.Input

	ToJSONSchemaPropsOutput() JSONSchemaPropsOutput
	ToJSONSchemaPropsOutputWithContext(context.Context) JSONSchemaPropsOutput
}

// JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).
type JSONSchemaPropsArgs struct {
	Ref                  pulumi.StringPtrInput     `pulumi:"$ref"`
	Schema               pulumi.StringPtrInput     `pulumi:"$schema"`
	AdditionalItems      pulumi.Input              `pulumi:"additionalItems"`
	AdditionalProperties pulumi.Input              `pulumi:"additionalProperties"`
	AllOf                JSONSchemaPropsArrayInput `pulumi:"allOf"`
	AnyOf                JSONSchemaPropsArrayInput `pulumi:"anyOf"`
	// default is a default value for undefined object fields. Defaulting is a beta feature under the CustomResourceDefaulting feature gate. CustomResourceDefinitions with defaults must be created using the v1 (or newer) CustomResourceDefinition API.
	Default          pulumi.Input                  `pulumi:"default"`
	Definitions      JSONSchemaPropsMapInput       `pulumi:"definitions"`
	Dependencies     pulumi.MapInput               `pulumi:"dependencies"`
	Description      pulumi.StringPtrInput         `pulumi:"description"`
	Enum             pulumi.ArrayInput             `pulumi:"enum"`
	Example          pulumi.Input                  `pulumi:"example"`
	ExclusiveMaximum pulumi.BoolPtrInput           `pulumi:"exclusiveMaximum"`
	ExclusiveMinimum pulumi.BoolPtrInput           `pulumi:"exclusiveMinimum"`
	ExternalDocs     ExternalDocumentationPtrInput `pulumi:"externalDocs"`
	// format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated:
	//
	// - bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI - email: an email address as parsed by Golang net/mail.ParseAddress - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4: an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - isbn: an ISBN10 or ISBN13 number string like "0321751043" or "978-0321751041" - isbn10: an ISBN10 number string like "0321751043" - isbn13: an ISBN13 number string like "978-0321751041" - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11})$ with any non digit characters mixed in - ssn: a U.S. social security number following the regex ^\d{3}[- ]?\d{2}[- ]?\d{4}$ - hexcolor: an hexadecimal color code like "#FFFFFF: following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor: an RGB color code like rgb like "rgb(255,255,2559" - byte: base64 encoded binary data - password: any kind of string - date: a date string like "2006-01-02" as defined by full-date in RFC3339 - duration: a duration string like "22 ns" as parsed by Golang time.ParseDuration or compatible with Scala duration format - datetime: a date time string like "2014-12-15T19:30:20.000Z" as defined by date-time in RFC3339.
	Format            pulumi.StringPtrInput     `pulumi:"format"`
	Id                pulumi.StringPtrInput     `pulumi:"id"`
	Items             pulumi.Input              `pulumi:"items"`
	MaxItems          pulumi.IntPtrInput        `pulumi:"maxItems"`
	MaxLength         pulumi.IntPtrInput        `pulumi:"maxLength"`
	MaxProperties     pulumi.IntPtrInput        `pulumi:"maxProperties"`
	Maximum           pulumi.Float64PtrInput    `pulumi:"maximum"`
	MinItems          pulumi.IntPtrInput        `pulumi:"minItems"`
	MinLength         pulumi.IntPtrInput        `pulumi:"minLength"`
	MinProperties     pulumi.IntPtrInput        `pulumi:"minProperties"`
	Minimum           pulumi.Float64PtrInput    `pulumi:"minimum"`
	MultipleOf        pulumi.Float64PtrInput    `pulumi:"multipleOf"`
	Not               JSONSchemaPropsPtrInput   `pulumi:"not"`
	Nullable          pulumi.BoolPtrInput       `pulumi:"nullable"`
	OneOf             JSONSchemaPropsArrayInput `pulumi:"oneOf"`
	Pattern           pulumi.StringPtrInput     `pulumi:"pattern"`
	PatternProperties JSONSchemaPropsMapInput   `pulumi:"patternProperties"`
	Properties        JSONSchemaPropsMapInput   `pulumi:"properties"`
	Required          pulumi.StringArrayInput   `pulumi:"required"`
	Title             pulumi.StringPtrInput     `pulumi:"title"`
	Type              pulumi.StringPtrInput     `pulumi:"type"`
	UniqueItems       pulumi.BoolPtrInput       `pulumi:"uniqueItems"`
	// x-kubernetes-embedded-resource defines that the value is an embedded Kubernetes runtime.Object, with TypeMeta and ObjectMeta. The type must be object. It is allowed to further restrict the embedded object. kind, apiVersion and metadata are validated automatically. x-kubernetes-preserve-unknown-fields is allowed to be true, but does not have to be if the object is fully specified (up to kind, apiVersion, metadata).
	X_kubernetes_embedded_resource pulumi.BoolPtrInput `pulumi:"x_kubernetes_embedded_resource"`
	// x-kubernetes-int-or-string specifies that this value is either an integer or a string. If this is true, an empty type is allowed and type as child of anyOf is permitted if following one of the following patterns:
	//
	// 1) anyOf:
	//    - type: integer
	//    - type: string
	// 2) allOf:
	//    - anyOf:
	//      - type: integer
	//      - type: string
	//    - ... zero or more
	X_kubernetes_int_or_string pulumi.BoolPtrInput `pulumi:"x_kubernetes_int_or_string"`
	// x-kubernetes-list-map-keys annotates an array with the x-kubernetes-list-type `map` by specifying the keys used as the index of the map.
	//
	// This tag MUST only be used on lists that have the "x-kubernetes-list-type" extension set to "map". Also, the values specified for this attribute must be a scalar typed field of the child structure (no nesting is supported).
	X_kubernetes_list_map_keys pulumi.StringArrayInput `pulumi:"x_kubernetes_list_map_keys"`
	// x-kubernetes-list-type annotates an array to further describe its topology. This extension must only be used on lists and may have 3 possible values:
	//
	// 1) `atomic`: the list is treated as a single entity, like a scalar.
	//      Atomic lists will be entirely replaced when updated. This extension
	//      may be used on any type of list (struct, scalar, ...).
	// 2) `set`:
	//      Sets are lists that must not have multiple items with the same value. Each
	//      value must be a scalar, an object with x-kubernetes-map-type `atomic` or an
	//      array with x-kubernetes-list-type `atomic`.
	// 3) `map`:
	//      These lists are like maps in that their elements have a non-index key
	//      used to identify them. Order is preserved upon merge. The map tag
	//      must only be used on a list with elements of type object.
	//    Defaults to atomic for arrays.
	X_kubernetes_list_type pulumi.StringPtrInput `pulumi:"x_kubernetes_list_type"`
	// x-kubernetes-map-type annotates an object to further describe its topology. This extension must only be used when type is object and may have 2 possible values:
	//
	// 1) `granular`:
	//      These maps are actual maps (key-value pairs) and each fields are independent
	//      from each other (they can each be manipulated by separate actors). This is
	//      the default behaviour for all maps.
	// 2) `atomic`: the list is treated as a single entity, like a scalar.
	//      Atomic maps will be entirely replaced when updated.
	X_kubernetes_map_type pulumi.StringPtrInput `pulumi:"x_kubernetes_map_type"`
	// x-kubernetes-preserve-unknown-fields stops the API server decoding step from pruning fields which are not specified in the validation schema. This affects fields recursively, but switches back to normal pruning behaviour if nested properties or additionalProperties are specified in the schema. This can either be true or undefined. False is forbidden.
	X_kubernetes_preserve_unknown_fields pulumi.BoolPtrInput `pulumi:"x_kubernetes_preserve_unknown_fields"`
}

func (JSONSchemaPropsArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JSONSchemaProps)(nil)).Elem()
}

func (i JSONSchemaPropsArgs) ToJSONSchemaPropsOutput() JSONSchemaPropsOutput {
	return i.ToJSONSchemaPropsOutputWithContext(context.Background())
}

func (i JSONSchemaPropsArgs) ToJSONSchemaPropsOutputWithContext(ctx context.Context) JSONSchemaPropsOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JSONSchemaPropsOutput)
}

func (i JSONSchemaPropsArgs) ToJSONSchemaPropsPtrOutput() JSONSchemaPropsPtrOutput {
	return i.ToJSONSchemaPropsPtrOutputWithContext(context.Background())
}

func (i JSONSchemaPropsArgs) ToJSONSchemaPropsPtrOutputWithContext(ctx context.Context) JSONSchemaPropsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JSONSchemaPropsOutput).ToJSONSchemaPropsPtrOutputWithContext(ctx)
}

// JSONSchemaPropsPtrInput is an input type that accepts JSONSchemaPropsArgs, JSONSchemaPropsPtr and JSONSchemaPropsPtrOutput values.
// You can construct a concrete instance of `JSONSchemaPropsPtrInput` via:
//
//	        JSONSchemaPropsArgs{...}
//
//	or:
//
//	        nil
type JSONSchemaPropsPtrInput interface {
	pulumi.Input

	ToJSONSchemaPropsPtrOutput() JSONSchemaPropsPtrOutput
	ToJSONSchemaPropsPtrOutputWithContext(context.Context) JSONSchemaPropsPtrOutput
}

type jsonschemaPropsPtrType JSONSchemaPropsArgs

func JSONSchemaPropsPtr(v *JSONSchemaPropsArgs) JSONSchemaPropsPtrInput {
	return (*jsonschemaPropsPtrType)(v)
}

func (*jsonschemaPropsPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JSONSchemaProps)(nil)).Elem()
}

func (i *jsonschemaPropsPtrType) ToJSONSchemaPropsPtrOutput() JSONSchemaPropsPtrOutput {
	return i.ToJSONSchemaPropsPtrOutputWithContext(context.Background())
}

func (i *jsonschemaPropsPtrType) ToJSONSchemaPropsPtrOutputWithContext(ctx context.Context) JSONSchemaPropsPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JSONSchemaPropsPtrOutput)
}

// JSONSchemaPropsArrayInput is an input type that accepts JSONSchemaPropsArray and JSONSchemaPropsArrayOutput values.
// You can construct a concrete instance of `JSONSchemaPropsArrayInput` via:
//
//	JSONSchemaPropsArray{ JSONSchemaPropsArgs{...} }
type JSONSchemaPropsArrayInput interface {
	pulumi.Input

	ToJSONSchemaPropsArrayOutput() JSONSchemaPropsArrayOutput
	ToJSONSchemaPropsArrayOutputWithContext(context.Context) JSONSchemaPropsArrayOutput
}

type JSONSchemaPropsArray []JSONSchemaPropsInput

func (JSONSchemaPropsArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JSONSchemaProps)(nil)).Elem()
}

func (i JSONSchemaPropsArray) ToJSONSchemaPropsArrayOutput() JSONSchemaPropsArrayOutput {
	return i.ToJSONSchemaPropsArrayOutputWithContext(context.Background())
}

func (i JSONSchemaPropsArray) ToJSONSchemaPropsArrayOutputWithContext(ctx context.Context) JSONSchemaPropsArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JSONSchemaPropsArrayOutput)
}

// JSONSchemaPropsMapInput is an input type that accepts JSONSchemaPropsMap and JSONSchemaPropsMapOutput values.
// You can construct a concrete instance of `JSONSchemaPropsMapInput` via:
//
//	JSONSchemaPropsMap{ "key": JSONSchemaPropsArgs{...} }
type JSONSchemaPropsMapInput interface {
	pulumi.Input

	ToJSONSchemaPropsMapOutput() JSONSchemaPropsMapOutput
	ToJSONSchemaPropsMapOutputWithContext(context.Context) JSONSchemaPropsMapOutput
}

type JSONSchemaPropsMap map[string]JSONSchemaPropsInput

func (JSONSchemaPropsMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]JSONSchemaProps)(nil)).Elem()
}

func (i JSONSchemaPropsMap) ToJSONSchemaPropsMapOutput() JSONSchemaPropsMapOutput {
	return i.ToJSONSchemaPropsMapOutputWithContext(context.Background())
}

func (i JSONSchemaPropsMap) ToJSONSchemaPropsMapOutputWithContext(ctx context.Context) JSONSchemaPropsMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JSONSchemaPropsMapOutput)
}

// JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).
type JSONSchemaPropsOutput struct{ *pulumi.OutputState }

func (JSONSchemaPropsOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JSONSchemaProps)(nil)).Elem()
}

func (o JSONSchemaPropsOutput) ToJSONSchemaPropsOutput() JSONSchemaPropsOutput {
	return o
}

func (o JSONSchemaPropsOutput) ToJSONSchemaPropsOutputWithContext(ctx context.Context) JSONSchemaPropsOutput {
	return o
}

func (o JSONSchemaPropsOutput) ToJSONSchemaPropsPtrOutput() JSONSchemaPropsPtrOutput {
	return o.ToJSONSchemaPropsPtrOutputWithContext(context.Background())
}

func (o JSONSchemaPropsOutput) ToJSONSchemaPropsPtrOutputWithContext(ctx context.Context) JSONSchemaPropsPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JSONSchemaProps) *JSONSchemaProps {
		return &v
	}).(JSONSchemaPropsPtrOutput)
}

func (o JSONSchemaPropsOutput) Ref() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JSONSchemaProps) *string { return v.Ref }).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsOutput) Schema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JSONSchemaProps) *string { return v.Schema }).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsOutput) AdditionalItems() pulumi.AnyOutput {
	return o.ApplyT(func(v JSONSchemaProps) interface{} { return v.AdditionalItems }).(pulumi.AnyOutput)
}

func (o JSONSchemaPropsOutput) AdditionalProperties() pulumi.AnyOutput {
	return o.ApplyT(func(v JSONSchemaProps) interface{} { return v.AdditionalProperties }).(pulumi.AnyOutput)
}

func (o JSONSchemaPropsOutput) AllOf() JSONSchemaPropsArrayOutput {
	return o.ApplyT(func(v JSONSchemaProps) []JSONSchemaProps { return v.AllOf }).(JSONSchemaPropsArrayOutput)
}

func (o JSONSchemaPropsOutput) AnyOf() JSONSchemaPropsArrayOutput {
	return o.ApplyT(func(v JSONSchemaProps) []JSONSchemaProps { return v.AnyOf }).(JSONSchemaPropsArrayOutput)
}

// default is a default value for undefined object fields. Defaulting is a beta feature under the CustomResourceDefaulting feature gate. CustomResourceDefinitions with defaults must be created using the v1 (or newer) CustomResourceDefinition API.
func (o JSONSchemaPropsOutput) Default() pulumi.AnyOutput {
	return o.ApplyT(func(v JSONSchemaProps) interface{} { return v.Default }).(pulumi.AnyOutput)
}

func (o JSONSchemaPropsOutput) Definitions() JSONSchemaPropsMapOutput {
	return o.ApplyT(func(v JSONSchemaProps) map[string]JSONSchemaProps { return v.Definitions }).(JSONSchemaPropsMapOutput)
}

func (o JSONSchemaPropsOutput) Dependencies() pulumi.MapOutput {
	return o.ApplyT(func(v JSONSchemaProps) map[string]interface{} { return v.Dependencies }).(pulumi.MapOutput)
}

func (o JSONSchemaPropsOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JSONSchemaProps) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsOutput) Enum() pulumi.ArrayOutput {
	return o.ApplyT(func(v JSONSchemaProps) []interface{} { return v.Enum }).(pulumi.ArrayOutput)
}

func (o JSONSchemaPropsOutput) Example() pulumi.AnyOutput {
	return o.ApplyT(func(v JSONSchemaProps) interface{} { return v.Example }).(pulumi.AnyOutput)
}

func (o JSONSchemaPropsOutput) ExclusiveMaximum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JSONSchemaProps) *bool { return v.ExclusiveMaximum }).(pulumi.BoolPtrOutput)
}

func (o JSONSchemaPropsOutput) ExclusiveMinimum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JSONSchemaProps) *bool { return v.ExclusiveMinimum }).(pulumi.BoolPtrOutput)
}

func (o JSONSchemaPropsOutput) ExternalDocs() ExternalDocumentationPtrOutput {
	return o.ApplyT(func(v JSONSchemaProps) *ExternalDocumentation { return v.ExternalDocs }).(ExternalDocumentationPtrOutput)
}

// format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated:
//
// - bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI - email: an email address as parsed by Golang net/mail.ParseAddress - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4: an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - isbn: an ISBN10 or ISBN13 number string like "0321751043" or "978-0321751041" - isbn10: an ISBN10 number string like "0321751043" - isbn13: an ISBN13 number string like "978-0321751041" - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11})$ with any non digit characters mixed in - ssn: a U.S. social security number following the regex ^\d{3}[- ]?\d{2}[- ]?\d{4}$ - hexcolor: an hexadecimal color code like "#FFFFFF: following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor: an RGB color code like rgb like "rgb(255,255,2559" - byte: base64 encoded binary data - password: any kind of string - date: a date string like "2006-01-02" as defined by full-date in RFC3339 - duration: a duration string like "22 ns" as parsed by Golang time.ParseDuration or compatible with Scala duration format - datetime: a date time string like "2014-12-15T19:30:20.000Z" as defined by date-time in RFC3339.
func (o JSONSchemaPropsOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JSONSchemaProps) *string { return v.Format }).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JSONSchemaProps) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsOutput) Items() pulumi.AnyOutput {
	return o.ApplyT(func(v JSONSchemaProps) interface{} { return v.Items }).(pulumi.AnyOutput)
}

func (o JSONSchemaPropsOutput) MaxItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JSONSchemaProps) *int { return v.MaxItems }).(pulumi.IntPtrOutput)
}

func (o JSONSchemaPropsOutput) MaxLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JSONSchemaProps) *int { return v.MaxLength }).(pulumi.IntPtrOutput)
}

func (o JSONSchemaPropsOutput) MaxProperties() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JSONSchemaProps) *int { return v.MaxProperties }).(pulumi.IntPtrOutput)
}

func (o JSONSchemaPropsOutput) Maximum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v JSONSchemaProps) *float64 { return v.Maximum }).(pulumi.Float64PtrOutput)
}

func (o JSONSchemaPropsOutput) MinItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JSONSchemaProps) *int { return v.MinItems }).(pulumi.IntPtrOutput)
}

func (o JSONSchemaPropsOutput) MinLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JSONSchemaProps) *int { return v.MinLength }).(pulumi.IntPtrOutput)
}

func (o JSONSchemaPropsOutput) MinProperties() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JSONSchemaProps) *int { return v.MinProperties }).(pulumi.IntPtrOutput)
}

func (o JSONSchemaPropsOutput) Minimum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v JSONSchemaProps) *float64 { return v.Minimum }).(pulumi.Float64PtrOutput)
}

func (o JSONSchemaPropsOutput) MultipleOf() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v JSONSchemaProps) *float64 { return v.MultipleOf }).(pulumi.Float64PtrOutput)
}

func (o JSONSchemaPropsOutput) Not() JSONSchemaPropsPtrOutput {
	return o.ApplyT(func(v JSONSchemaProps) *JSONSchemaProps { return v.Not }).(JSONSchemaPropsPtrOutput)
}

func (o JSONSchemaPropsOutput) Nullable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JSONSchemaProps) *bool { return v.Nullable }).(pulumi.BoolPtrOutput)
}

func (o JSONSchemaPropsOutput) OneOf() JSONSchemaPropsArrayOutput {
	return o.ApplyT(func(v JSONSchemaProps) []JSONSchemaProps { return v.OneOf }).(JSONSchemaPropsArrayOutput)
}

func (o JSONSchemaPropsOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JSONSchemaProps) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsOutput) PatternProperties() JSONSchemaPropsMapOutput {
	return o.ApplyT(func(v JSONSchemaProps) map[string]JSONSchemaProps { return v.PatternProperties }).(JSONSchemaPropsMapOutput)
}

func (o JSONSchemaPropsOutput) Properties() JSONSchemaPropsMapOutput {
	return o.ApplyT(func(v JSONSchemaProps) map[string]JSONSchemaProps { return v.Properties }).(JSONSchemaPropsMapOutput)
}

func (o JSONSchemaPropsOutput) Required() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JSONSchemaProps) []string { return v.Required }).(pulumi.StringArrayOutput)
}

func (o JSONSchemaPropsOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JSONSchemaProps) *string { return v.Title }).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JSONSchemaProps) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsOutput) UniqueItems() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JSONSchemaProps) *bool { return v.UniqueItems }).(pulumi.BoolPtrOutput)
}

// x-kubernetes-embedded-resource defines that the value is an embedded Kubernetes runtime.Object, with TypeMeta and ObjectMeta. The type must be object. It is allowed to further restrict the embedded object. kind, apiVersion and metadata are validated automatically. x-kubernetes-preserve-unknown-fields is allowed to be true, but does not have to be if the object is fully specified (up to kind, apiVersion, metadata).
func (o JSONSchemaPropsOutput) X_kubernetes_embedded_resource() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JSONSchemaProps) *bool { return v.X_kubernetes_embedded_resource }).(pulumi.BoolPtrOutput)
}

// x-kubernetes-int-or-string specifies that this value is either an integer or a string. If this is true, an empty type is allowed and type as child of anyOf is permitted if following one of the following patterns:
//
// 1) anyOf:
//   - type: integer
//   - type: string
//
// 2) allOf:
//   - anyOf:
//   - type: integer
//   - type: string
//   - ... zero or more
func (o JSONSchemaPropsOutput) X_kubernetes_int_or_string() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JSONSchemaProps) *bool { return v.X_kubernetes_int_or_string }).(pulumi.BoolPtrOutput)
}

// x-kubernetes-list-map-keys annotates an array with the x-kubernetes-list-type `map` by specifying the keys used as the index of the map.
//
// This tag MUST only be used on lists that have the "x-kubernetes-list-type" extension set to "map". Also, the values specified for this attribute must be a scalar typed field of the child structure (no nesting is supported).
func (o JSONSchemaPropsOutput) X_kubernetes_list_map_keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JSONSchemaProps) []string { return v.X_kubernetes_list_map_keys }).(pulumi.StringArrayOutput)
}

// x-kubernetes-list-type annotates an array to further describe its topology. This extension must only be used on lists and may have 3 possible values:
//
//  1. `atomic`: the list is treated as a single entity, like a scalar.
//     Atomic lists will be entirely replaced when updated. This extension
//     may be used on any type of list (struct, scalar, ...).
//  2. `set`:
//     Sets are lists that must not have multiple items with the same value. Each
//     value must be a scalar, an object with x-kubernetes-map-type `atomic` or an
//     array with x-kubernetes-list-type `atomic`.
//  3. `map`:
//     These lists are like maps in that their elements have a non-index key
//     used to identify them. Order is preserved upon merge. The map tag
//     must only be used on a list with elements of type object.
//     Defaults to atomic for arrays.
func (o JSONSchemaPropsOutput) X_kubernetes_list_type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JSONSchemaProps) *string { return v.X_kubernetes_list_type }).(pulumi.StringPtrOutput)
}

// x-kubernetes-map-type annotates an object to further describe its topology. This extension must only be used when type is object and may have 2 possible values:
//
//  1. `granular`:
//     These maps are actual maps (key-value pairs) and each fields are independent
//     from each other (they can each be manipulated by separate actors). This is
//     the default behaviour for all maps.
//  2. `atomic`: the list is treated as a single entity, like a scalar.
//     Atomic maps will be entirely replaced when updated.
func (o JSONSchemaPropsOutput) X_kubernetes_map_type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JSONSchemaProps) *string { return v.X_kubernetes_map_type }).(pulumi.StringPtrOutput)
}

// x-kubernetes-preserve-unknown-fields stops the API server decoding step from pruning fields which are not specified in the validation schema. This affects fields recursively, but switches back to normal pruning behaviour if nested properties or additionalProperties are specified in the schema. This can either be true or undefined. False is forbidden.
func (o JSONSchemaPropsOutput) X_kubernetes_preserve_unknown_fields() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JSONSchemaProps) *bool { return v.X_kubernetes_preserve_unknown_fields }).(pulumi.BoolPtrOutput)
}

type JSONSchemaPropsPtrOutput struct{ *pulumi.OutputState }

func (JSONSchemaPropsPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JSONSchemaProps)(nil)).Elem()
}

func (o JSONSchemaPropsPtrOutput) ToJSONSchemaPropsPtrOutput() JSONSchemaPropsPtrOutput {
	return o
}

func (o JSONSchemaPropsPtrOutput) ToJSONSchemaPropsPtrOutputWithContext(ctx context.Context) JSONSchemaPropsPtrOutput {
	return o
}

func (o JSONSchemaPropsPtrOutput) Elem() JSONSchemaPropsOutput {
	return o.ApplyT(func(v *JSONSchemaProps) JSONSchemaProps {
		if v != nil {
			return *v
		}
		var ret JSONSchemaProps
		return ret
	}).(JSONSchemaPropsOutput)
}

func (o JSONSchemaPropsPtrOutput) Ref() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JSONSchemaProps) *string {
		if v == nil {
			return nil
		}
		return v.Ref
	}).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsPtrOutput) Schema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JSONSchemaProps) *string {
		if v == nil {
			return nil
		}
		return v.Schema
	}).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsPtrOutput) AdditionalItems() pulumi.AnyOutput {
	return o.ApplyT(func(v *JSONSchemaProps) interface{} {
		if v == nil {
			return nil
		}
		return v.AdditionalItems
	}).(pulumi.AnyOutput)
}

func (o JSONSchemaPropsPtrOutput) AdditionalProperties() pulumi.AnyOutput {
	return o.ApplyT(func(v *JSONSchemaProps) interface{} {
		if v == nil {
			return nil
		}
		return v.AdditionalProperties
	}).(pulumi.AnyOutput)
}

func (o JSONSchemaPropsPtrOutput) AllOf() JSONSchemaPropsArrayOutput {
	return o.ApplyT(func(v *JSONSchemaProps) []JSONSchemaProps {
		if v == nil {
			return nil
		}
		return v.AllOf
	}).(JSONSchemaPropsArrayOutput)
}

func (o JSONSchemaPropsPtrOutput) AnyOf() JSONSchemaPropsArrayOutput {
	return o.ApplyT(func(v *JSONSchemaProps) []JSONSchemaProps {
		if v == nil {
			return nil
		}
		return v.AnyOf
	}).(JSONSchemaPropsArrayOutput)
}

// default is a default value for undefined object fields. Defaulting is a beta feature under the CustomResourceDefaulting feature gate. CustomResourceDefinitions with defaults must be created using the v1 (or newer) CustomResourceDefinition API.
func (o JSONSchemaPropsPtrOutput) Default() pulumi.AnyOutput {
	return o.ApplyT(func(v *JSONSchemaProps) interface{} {
		if v == nil {
			return nil
		}
		return v.Default
	}).(pulumi.AnyOutput)
}

func (o JSONSchemaPropsPtrOutput) Definitions() JSONSchemaPropsMapOutput {
	return o.ApplyT(func(v *JSONSchemaProps) map[string]JSONSchemaProps {
		if v == nil {
			return nil
		}
		return v.Definitions
	}).(JSONSchemaPropsMapOutput)
}

func (o JSONSchemaPropsPtrOutput) Dependencies() pulumi.MapOutput {
	return o.ApplyT(func(v *JSONSchemaProps) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Dependencies
	}).(pulumi.MapOutput)
}

func (o JSONSchemaPropsPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JSONSchemaProps) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsPtrOutput) Enum() pulumi.ArrayOutput {
	return o.ApplyT(func(v *JSONSchemaProps) []interface{} {
		if v == nil {
			return nil
		}
		return v.Enum
	}).(pulumi.ArrayOutput)
}

func (o JSONSchemaPropsPtrOutput) Example() pulumi.AnyOutput {
	return o.ApplyT(func(v *JSONSchemaProps) interface{} {
		if v == nil {
			return nil
		}
		return v.Example
	}).(pulumi.AnyOutput)
}

func (o JSONSchemaPropsPtrOutput) ExclusiveMaximum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JSONSchemaProps) *bool {
		if v == nil {
			return nil
		}
		return v.ExclusiveMaximum
	}).(pulumi.BoolPtrOutput)
}

func (o JSONSchemaPropsPtrOutput) ExclusiveMinimum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JSONSchemaProps) *bool {
		if v == nil {
			return nil
		}
		return v.ExclusiveMinimum
	}).(pulumi.BoolPtrOutput)
}

func (o JSONSchemaPropsPtrOutput) ExternalDocs() ExternalDocumentationPtrOutput {
	return o.ApplyT(func(v *JSONSchemaProps) *ExternalDocumentation {
		if v == nil {
			return nil
		}
		return v.ExternalDocs
	}).(ExternalDocumentationPtrOutput)
}

// format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated:
//
// - bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI - email: an email address as parsed by Golang net/mail.ParseAddress - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4: an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - isbn: an ISBN10 or ISBN13 number string like "0321751043" or "978-0321751041" - isbn10: an ISBN10 number string like "0321751043" - isbn13: an ISBN13 number string like "978-0321751041" - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11})$ with any non digit characters mixed in - ssn: a U.S. social security number following the regex ^\d{3}[- ]?\d{2}[- ]?\d{4}$ - hexcolor: an hexadecimal color code like "#FFFFFF: following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor: an RGB color code like rgb like "rgb(255,255,2559" - byte: base64 encoded binary data - password: any kind of string - date: a date string like "2006-01-02" as defined by full-date in RFC3339 - duration: a duration string like "22 ns" as parsed by Golang time.ParseDuration or compatible with Scala duration format - datetime: a date time string like "2014-12-15T19:30:20.000Z" as defined by date-time in RFC3339.
func (o JSONSchemaPropsPtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JSONSchemaProps) *string {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JSONSchemaProps) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsPtrOutput) Items() pulumi.AnyOutput {
	return o.ApplyT(func(v *JSONSchemaProps) interface{} {
		if v == nil {
			return nil
		}
		return v.Items
	}).(pulumi.AnyOutput)
}

func (o JSONSchemaPropsPtrOutput) MaxItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JSONSchemaProps) *int {
		if v == nil {
			return nil
		}
		return v.MaxItems
	}).(pulumi.IntPtrOutput)
}

func (o JSONSchemaPropsPtrOutput) MaxLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JSONSchemaProps) *int {
		if v == nil {
			return nil
		}
		return v.MaxLength
	}).(pulumi.IntPtrOutput)
}

func (o JSONSchemaPropsPtrOutput) MaxProperties() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JSONSchemaProps) *int {
		if v == nil {
			return nil
		}
		return v.MaxProperties
	}).(pulumi.IntPtrOutput)
}

func (o JSONSchemaPropsPtrOutput) Maximum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *JSONSchemaProps) *float64 {
		if v == nil {
			return nil
		}
		return v.Maximum
	}).(pulumi.Float64PtrOutput)
}

func (o JSONSchemaPropsPtrOutput) MinItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JSONSchemaProps) *int {
		if v == nil {
			return nil
		}
		return v.MinItems
	}).(pulumi.IntPtrOutput)
}

func (o JSONSchemaPropsPtrOutput) MinLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JSONSchemaProps) *int {
		if v == nil {
			return nil
		}
		return v.MinLength
	}).(pulumi.IntPtrOutput)
}

func (o JSONSchemaPropsPtrOutput) MinProperties() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JSONSchemaProps) *int {
		if v == nil {
			return nil
		}
		return v.MinProperties
	}).(pulumi.IntPtrOutput)
}

func (o JSONSchemaPropsPtrOutput) Minimum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *JSONSchemaProps) *float64 {
		if v == nil {
			return nil
		}
		return v.Minimum
	}).(pulumi.Float64PtrOutput)
}

func (o JSONSchemaPropsPtrOutput) MultipleOf() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *JSONSchemaProps) *float64 {
		if v == nil {
			return nil
		}
		return v.MultipleOf
	}).(pulumi.Float64PtrOutput)
}

func (o JSONSchemaPropsPtrOutput) Not() JSONSchemaPropsPtrOutput {
	return o.ApplyT(func(v *JSONSchemaProps) *JSONSchemaProps {
		if v == nil {
			return nil
		}
		return v.Not
	}).(JSONSchemaPropsPtrOutput)
}

func (o JSONSchemaPropsPtrOutput) Nullable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JSONSchemaProps) *bool {
		if v == nil {
			return nil
		}
		return v.Nullable
	}).(pulumi.BoolPtrOutput)
}

func (o JSONSchemaPropsPtrOutput) OneOf() JSONSchemaPropsArrayOutput {
	return o.ApplyT(func(v *JSONSchemaProps) []JSONSchemaProps {
		if v == nil {
			return nil
		}
		return v.OneOf
	}).(JSONSchemaPropsArrayOutput)
}

func (o JSONSchemaPropsPtrOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JSONSchemaProps) *string {
		if v == nil {
			return nil
		}
		return v.Pattern
	}).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsPtrOutput) PatternProperties() JSONSchemaPropsMapOutput {
	return o.ApplyT(func(v *JSONSchemaProps) map[string]JSONSchemaProps {
		if v == nil {
			return nil
		}
		return v.PatternProperties
	}).(JSONSchemaPropsMapOutput)
}

func (o JSONSchemaPropsPtrOutput) Properties() JSONSchemaPropsMapOutput {
	return o.ApplyT(func(v *JSONSchemaProps) map[string]JSONSchemaProps {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(JSONSchemaPropsMapOutput)
}

func (o JSONSchemaPropsPtrOutput) Required() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *JSONSchemaProps) []string {
		if v == nil {
			return nil
		}
		return v.Required
	}).(pulumi.StringArrayOutput)
}

func (o JSONSchemaPropsPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JSONSchemaProps) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JSONSchemaProps) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsPtrOutput) UniqueItems() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JSONSchemaProps) *bool {
		if v == nil {
			return nil
		}
		return v.UniqueItems
	}).(pulumi.BoolPtrOutput)
}

// x-kubernetes-embedded-resource defines that the value is an embedded Kubernetes runtime.Object, with TypeMeta and ObjectMeta. The type must be object. It is allowed to further restrict the embedded object. kind, apiVersion and metadata are validated automatically. x-kubernetes-preserve-unknown-fields is allowed to be true, but does not have to be if the object is fully specified (up to kind, apiVersion, metadata).
func (o JSONSchemaPropsPtrOutput) X_kubernetes_embedded_resource() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JSONSchemaProps) *bool {
		if v == nil {
			return nil
		}
		return v.X_kubernetes_embedded_resource
	}).(pulumi.BoolPtrOutput)
}

// x-kubernetes-int-or-string specifies that this value is either an integer or a string. If this is true, an empty type is allowed and type as child of anyOf is permitted if following one of the following patterns:
//
// 1) anyOf:
//   - type: integer
//   - type: string
//
// 2) allOf:
//   - anyOf:
//   - type: integer
//   - type: string
//   - ... zero or more
func (o JSONSchemaPropsPtrOutput) X_kubernetes_int_or_string() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JSONSchemaProps) *bool {
		if v == nil {
			return nil
		}
		return v.X_kubernetes_int_or_string
	}).(pulumi.BoolPtrOutput)
}

// x-kubernetes-list-map-keys annotates an array with the x-kubernetes-list-type `map` by specifying the keys used as the index of the map.
//
// This tag MUST only be used on lists that have the "x-kubernetes-list-type" extension set to "map". Also, the values specified for this attribute must be a scalar typed field of the child structure (no nesting is supported).
func (o JSONSchemaPropsPtrOutput) X_kubernetes_list_map_keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *JSONSchemaProps) []string {
		if v == nil {
			return nil
		}
		return v.X_kubernetes_list_map_keys
	}).(pulumi.StringArrayOutput)
}

// x-kubernetes-list-type annotates an array to further describe its topology. This extension must only be used on lists and may have 3 possible values:
//
//  1. `atomic`: the list is treated as a single entity, like a scalar.
//     Atomic lists will be entirely replaced when updated. This extension
//     may be used on any type of list (struct, scalar, ...).
//  2. `set`:
//     Sets are lists that must not have multiple items with the same value. Each
//     value must be a scalar, an object with x-kubernetes-map-type `atomic` or an
//     array with x-kubernetes-list-type `atomic`.
//  3. `map`:
//     These lists are like maps in that their elements have a non-index key
//     used to identify them. Order is preserved upon merge. The map tag
//     must only be used on a list with elements of type object.
//     Defaults to atomic for arrays.
func (o JSONSchemaPropsPtrOutput) X_kubernetes_list_type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JSONSchemaProps) *string {
		if v == nil {
			return nil
		}
		return v.X_kubernetes_list_type
	}).(pulumi.StringPtrOutput)
}

// x-kubernetes-map-type annotates an object to further describe its topology. This extension must only be used when type is object and may have 2 possible values:
//
//  1. `granular`:
//     These maps are actual maps (key-value pairs) and each fields are independent
//     from each other (they can each be manipulated by separate actors). This is
//     the default behaviour for all maps.
//  2. `atomic`: the list is treated as a single entity, like a scalar.
//     Atomic maps will be entirely replaced when updated.
func (o JSONSchemaPropsPtrOutput) X_kubernetes_map_type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JSONSchemaProps) *string {
		if v == nil {
			return nil
		}
		return v.X_kubernetes_map_type
	}).(pulumi.StringPtrOutput)
}

// x-kubernetes-preserve-unknown-fields stops the API server decoding step from pruning fields which are not specified in the validation schema. This affects fields recursively, but switches back to normal pruning behaviour if nested properties or additionalProperties are specified in the schema. This can either be true or undefined. False is forbidden.
func (o JSONSchemaPropsPtrOutput) X_kubernetes_preserve_unknown_fields() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JSONSchemaProps) *bool {
		if v == nil {
			return nil
		}
		return v.X_kubernetes_preserve_unknown_fields
	}).(pulumi.BoolPtrOutput)
}

type JSONSchemaPropsArrayOutput struct{ *pulumi.OutputState }

func (JSONSchemaPropsArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JSONSchemaProps)(nil)).Elem()
}

func (o JSONSchemaPropsArrayOutput) ToJSONSchemaPropsArrayOutput() JSONSchemaPropsArrayOutput {
	return o
}

func (o JSONSchemaPropsArrayOutput) ToJSONSchemaPropsArrayOutputWithContext(ctx context.Context) JSONSchemaPropsArrayOutput {
	return o
}

func (o JSONSchemaPropsArrayOutput) Index(i pulumi.IntInput) JSONSchemaPropsOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JSONSchemaProps {
		return vs[0].([]JSONSchemaProps)[vs[1].(int)]
	}).(JSONSchemaPropsOutput)
}

type JSONSchemaPropsMapOutput struct{ *pulumi.OutputState }

func (JSONSchemaPropsMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]JSONSchemaProps)(nil)).Elem()
}

func (o JSONSchemaPropsMapOutput) ToJSONSchemaPropsMapOutput() JSONSchemaPropsMapOutput {
	return o
}

func (o JSONSchemaPropsMapOutput) ToJSONSchemaPropsMapOutputWithContext(ctx context.Context) JSONSchemaPropsMapOutput {
	return o
}

func (o JSONSchemaPropsMapOutput) MapIndex(k pulumi.StringInput) JSONSchemaPropsOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) JSONSchemaProps {
		return vs[0].(map[string]JSONSchemaProps)[vs[1].(string)]
	}).(JSONSchemaPropsOutput)
}

// JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).
type JSONSchemaPropsPatch struct {
	Ref                  *string                `pulumi:"$ref"`
	Schema               *string                `pulumi:"$schema"`
	AdditionalItems      interface{}            `pulumi:"additionalItems"`
	AdditionalProperties interface{}            `pulumi:"additionalProperties"`
	AllOf                []JSONSchemaPropsPatch `pulumi:"allOf"`
	AnyOf                []JSONSchemaPropsPatch `pulumi:"anyOf"`
	// default is a default value for undefined object fields. Defaulting is a beta feature under the CustomResourceDefaulting feature gate. CustomResourceDefinitions with defaults must be created using the v1 (or newer) CustomResourceDefinition API.
	Default          interface{}                 `pulumi:"default"`
	Definitions      map[string]JSONSchemaProps  `pulumi:"definitions"`
	Dependencies     map[string]interface{}      `pulumi:"dependencies"`
	Description      *string                     `pulumi:"description"`
	Enum             []interface{}               `pulumi:"enum"`
	Example          interface{}                 `pulumi:"example"`
	ExclusiveMaximum *bool                       `pulumi:"exclusiveMaximum"`
	ExclusiveMinimum *bool                       `pulumi:"exclusiveMinimum"`
	ExternalDocs     *ExternalDocumentationPatch `pulumi:"externalDocs"`
	// format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated:
	//
	// - bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI - email: an email address as parsed by Golang net/mail.ParseAddress - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4: an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - isbn: an ISBN10 or ISBN13 number string like "0321751043" or "978-0321751041" - isbn10: an ISBN10 number string like "0321751043" - isbn13: an ISBN13 number string like "978-0321751041" - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11})$ with any non digit characters mixed in - ssn: a U.S. social security number following the regex ^\d{3}[- ]?\d{2}[- ]?\d{4}$ - hexcolor: an hexadecimal color code like "#FFFFFF: following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor: an RGB color code like rgb like "rgb(255,255,2559" - byte: base64 encoded binary data - password: any kind of string - date: a date string like "2006-01-02" as defined by full-date in RFC3339 - duration: a duration string like "22 ns" as parsed by Golang time.ParseDuration or compatible with Scala duration format - datetime: a date time string like "2014-12-15T19:30:20.000Z" as defined by date-time in RFC3339.
	Format            *string                    `pulumi:"format"`
	Id                *string                    `pulumi:"id"`
	Items             interface{}                `pulumi:"items"`
	MaxItems          *int                       `pulumi:"maxItems"`
	MaxLength         *int                       `pulumi:"maxLength"`
	MaxProperties     *int                       `pulumi:"maxProperties"`
	Maximum           *float64                   `pulumi:"maximum"`
	MinItems          *int                       `pulumi:"minItems"`
	MinLength         *int                       `pulumi:"minLength"`
	MinProperties     *int                       `pulumi:"minProperties"`
	Minimum           *float64                   `pulumi:"minimum"`
	MultipleOf        *float64                   `pulumi:"multipleOf"`
	Not               *JSONSchemaPropsPatch      `pulumi:"not"`
	Nullable          *bool                      `pulumi:"nullable"`
	OneOf             []JSONSchemaPropsPatch     `pulumi:"oneOf"`
	Pattern           *string                    `pulumi:"pattern"`
	PatternProperties map[string]JSONSchemaProps `pulumi:"patternProperties"`
	Properties        map[string]JSONSchemaProps `pulumi:"properties"`
	Required          []string                   `pulumi:"required"`
	Title             *string                    `pulumi:"title"`
	Type              *string                    `pulumi:"type"`
	UniqueItems       *bool                      `pulumi:"uniqueItems"`
	// x-kubernetes-embedded-resource defines that the value is an embedded Kubernetes runtime.Object, with TypeMeta and ObjectMeta. The type must be object. It is allowed to further restrict the embedded object. kind, apiVersion and metadata are validated automatically. x-kubernetes-preserve-unknown-fields is allowed to be true, but does not have to be if the object is fully specified (up to kind, apiVersion, metadata).
	X_kubernetes_embedded_resource *bool `pulumi:"x_kubernetes_embedded_resource"`
	// x-kubernetes-int-or-string specifies that this value is either an integer or a string. If this is true, an empty type is allowed and type as child of anyOf is permitted if following one of the following patterns:
	//
	// 1) anyOf:
	//    - type: integer
	//    - type: string
	// 2) allOf:
	//    - anyOf:
	//      - type: integer
	//      - type: string
	//    - ... zero or more
	X_kubernetes_int_or_string *bool `pulumi:"x_kubernetes_int_or_string"`
	// x-kubernetes-list-map-keys annotates an array with the x-kubernetes-list-type `map` by specifying the keys used as the index of the map.
	//
	// This tag MUST only be used on lists that have the "x-kubernetes-list-type" extension set to "map". Also, the values specified for this attribute must be a scalar typed field of the child structure (no nesting is supported).
	X_kubernetes_list_map_keys []string `pulumi:"x_kubernetes_list_map_keys"`
	// x-kubernetes-list-type annotates an array to further describe its topology. This extension must only be used on lists and may have 3 possible values:
	//
	// 1) `atomic`: the list is treated as a single entity, like a scalar.
	//      Atomic lists will be entirely replaced when updated. This extension
	//      may be used on any type of list (struct, scalar, ...).
	// 2) `set`:
	//      Sets are lists that must not have multiple items with the same value. Each
	//      value must be a scalar, an object with x-kubernetes-map-type `atomic` or an
	//      array with x-kubernetes-list-type `atomic`.
	// 3) `map`:
	//      These lists are like maps in that their elements have a non-index key
	//      used to identify them. Order is preserved upon merge. The map tag
	//      must only be used on a list with elements of type object.
	//    Defaults to atomic for arrays.
	X_kubernetes_list_type *string `pulumi:"x_kubernetes_list_type"`
	// x-kubernetes-map-type annotates an object to further describe its topology. This extension must only be used when type is object and may have 2 possible values:
	//
	// 1) `granular`:
	//      These maps are actual maps (key-value pairs) and each fields are independent
	//      from each other (they can each be manipulated by separate actors). This is
	//      the default behaviour for all maps.
	// 2) `atomic`: the list is treated as a single entity, like a scalar.
	//      Atomic maps will be entirely replaced when updated.
	X_kubernetes_map_type *string `pulumi:"x_kubernetes_map_type"`
	// x-kubernetes-preserve-unknown-fields stops the API server decoding step from pruning fields which are not specified in the validation schema. This affects fields recursively, but switches back to normal pruning behaviour if nested properties or additionalProperties are specified in the schema. This can either be true or undefined. False is forbidden.
	X_kubernetes_preserve_unknown_fields *bool `pulumi:"x_kubernetes_preserve_unknown_fields"`
}

// JSONSchemaPropsPatchInput is an input type that accepts JSONSchemaPropsPatchArgs and JSONSchemaPropsPatchOutput values.
// You can construct a concrete instance of `JSONSchemaPropsPatchInput` via:
//
//	JSONSchemaPropsPatchArgs{...}
type JSONSchemaPropsPatchInput interface {
	pulumi.Input

	ToJSONSchemaPropsPatchOutput() JSONSchemaPropsPatchOutput
	ToJSONSchemaPropsPatchOutputWithContext(context.Context) JSONSchemaPropsPatchOutput
}

// JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).
type JSONSchemaPropsPatchArgs struct {
	Ref                  pulumi.StringPtrInput          `pulumi:"$ref"`
	Schema               pulumi.StringPtrInput          `pulumi:"$schema"`
	AdditionalItems      pulumi.Input                   `pulumi:"additionalItems"`
	AdditionalProperties pulumi.Input                   `pulumi:"additionalProperties"`
	AllOf                JSONSchemaPropsPatchArrayInput `pulumi:"allOf"`
	AnyOf                JSONSchemaPropsPatchArrayInput `pulumi:"anyOf"`
	// default is a default value for undefined object fields. Defaulting is a beta feature under the CustomResourceDefaulting feature gate. CustomResourceDefinitions with defaults must be created using the v1 (or newer) CustomResourceDefinition API.
	Default          pulumi.Input                       `pulumi:"default"`
	Definitions      JSONSchemaPropsMapInput            `pulumi:"definitions"`
	Dependencies     pulumi.MapInput                    `pulumi:"dependencies"`
	Description      pulumi.StringPtrInput              `pulumi:"description"`
	Enum             pulumi.ArrayInput                  `pulumi:"enum"`
	Example          pulumi.Input                       `pulumi:"example"`
	ExclusiveMaximum pulumi.BoolPtrInput                `pulumi:"exclusiveMaximum"`
	ExclusiveMinimum pulumi.BoolPtrInput                `pulumi:"exclusiveMinimum"`
	ExternalDocs     ExternalDocumentationPatchPtrInput `pulumi:"externalDocs"`
	// format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated:
	//
	// - bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI - email: an email address as parsed by Golang net/mail.ParseAddress - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4: an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - isbn: an ISBN10 or ISBN13 number string like "0321751043" or "978-0321751041" - isbn10: an ISBN10 number string like "0321751043" - isbn13: an ISBN13 number string like "978-0321751041" - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11})$ with any non digit characters mixed in - ssn: a U.S. social security number following the regex ^\d{3}[- ]?\d{2}[- ]?\d{4}$ - hexcolor: an hexadecimal color code like "#FFFFFF: following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor: an RGB color code like rgb like "rgb(255,255,2559" - byte: base64 encoded binary data - password: any kind of string - date: a date string like "2006-01-02" as defined by full-date in RFC3339 - duration: a duration string like "22 ns" as parsed by Golang time.ParseDuration or compatible with Scala duration format - datetime: a date time string like "2014-12-15T19:30:20.000Z" as defined by date-time in RFC3339.
	Format            pulumi.StringPtrInput          `pulumi:"format"`
	Id                pulumi.StringPtrInput          `pulumi:"id"`
	Items             pulumi.Input                   `pulumi:"items"`
	MaxItems          pulumi.IntPtrInput             `pulumi:"maxItems"`
	MaxLength         pulumi.IntPtrInput             `pulumi:"maxLength"`
	MaxProperties     pulumi.IntPtrInput             `pulumi:"maxProperties"`
	Maximum           pulumi.Float64PtrInput         `pulumi:"maximum"`
	MinItems          pulumi.IntPtrInput             `pulumi:"minItems"`
	MinLength         pulumi.IntPtrInput             `pulumi:"minLength"`
	MinProperties     pulumi.IntPtrInput             `pulumi:"minProperties"`
	Minimum           pulumi.Float64PtrInput         `pulumi:"minimum"`
	MultipleOf        pulumi.Float64PtrInput         `pulumi:"multipleOf"`
	Not               JSONSchemaPropsPatchPtrInput   `pulumi:"not"`
	Nullable          pulumi.BoolPtrInput            `pulumi:"nullable"`
	OneOf             JSONSchemaPropsPatchArrayInput `pulumi:"oneOf"`
	Pattern           pulumi.StringPtrInput          `pulumi:"pattern"`
	PatternProperties JSONSchemaPropsMapInput        `pulumi:"patternProperties"`
	Properties        JSONSchemaPropsMapInput        `pulumi:"properties"`
	Required          pulumi.StringArrayInput        `pulumi:"required"`
	Title             pulumi.StringPtrInput          `pulumi:"title"`
	Type              pulumi.StringPtrInput          `pulumi:"type"`
	UniqueItems       pulumi.BoolPtrInput            `pulumi:"uniqueItems"`
	// x-kubernetes-embedded-resource defines that the value is an embedded Kubernetes runtime.Object, with TypeMeta and ObjectMeta. The type must be object. It is allowed to further restrict the embedded object. kind, apiVersion and metadata are validated automatically. x-kubernetes-preserve-unknown-fields is allowed to be true, but does not have to be if the object is fully specified (up to kind, apiVersion, metadata).
	X_kubernetes_embedded_resource pulumi.BoolPtrInput `pulumi:"x_kubernetes_embedded_resource"`
	// x-kubernetes-int-or-string specifies that this value is either an integer or a string. If this is true, an empty type is allowed and type as child of anyOf is permitted if following one of the following patterns:
	//
	// 1) anyOf:
	//    - type: integer
	//    - type: string
	// 2) allOf:
	//    - anyOf:
	//      - type: integer
	//      - type: string
	//    - ... zero or more
	X_kubernetes_int_or_string pulumi.BoolPtrInput `pulumi:"x_kubernetes_int_or_string"`
	// x-kubernetes-list-map-keys annotates an array with the x-kubernetes-list-type `map` by specifying the keys used as the index of the map.
	//
	// This tag MUST only be used on lists that have the "x-kubernetes-list-type" extension set to "map". Also, the values specified for this attribute must be a scalar typed field of the child structure (no nesting is supported).
	X_kubernetes_list_map_keys pulumi.StringArrayInput `pulumi:"x_kubernetes_list_map_keys"`
	// x-kubernetes-list-type annotates an array to further describe its topology. This extension must only be used on lists and may have 3 possible values:
	//
	// 1) `atomic`: the list is treated as a single entity, like a scalar.
	//      Atomic lists will be entirely replaced when updated. This extension
	//      may be used on any type of list (struct, scalar, ...).
	// 2) `set`:
	//      Sets are lists that must not have multiple items with the same value. Each
	//      value must be a scalar, an object with x-kubernetes-map-type `atomic` or an
	//      array with x-kubernetes-list-type `atomic`.
	// 3) `map`:
	//      These lists are like maps in that their elements have a non-index key
	//      used to identify them. Order is preserved upon merge. The map tag
	//      must only be used on a list with elements of type object.
	//    Defaults to atomic for arrays.
	X_kubernetes_list_type pulumi.StringPtrInput `pulumi:"x_kubernetes_list_type"`
	// x-kubernetes-map-type annotates an object to further describe its topology. This extension must only be used when type is object and may have 2 possible values:
	//
	// 1) `granular`:
	//      These maps are actual maps (key-value pairs) and each fields are independent
	//      from each other (they can each be manipulated by separate actors). This is
	//      the default behaviour for all maps.
	// 2) `atomic`: the list is treated as a single entity, like a scalar.
	//      Atomic maps will be entirely replaced when updated.
	X_kubernetes_map_type pulumi.StringPtrInput `pulumi:"x_kubernetes_map_type"`
	// x-kubernetes-preserve-unknown-fields stops the API server decoding step from pruning fields which are not specified in the validation schema. This affects fields recursively, but switches back to normal pruning behaviour if nested properties or additionalProperties are specified in the schema. This can either be true or undefined. False is forbidden.
	X_kubernetes_preserve_unknown_fields pulumi.BoolPtrInput `pulumi:"x_kubernetes_preserve_unknown_fields"`
}

func (JSONSchemaPropsPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*JSONSchemaPropsPatch)(nil)).Elem()
}

func (i JSONSchemaPropsPatchArgs) ToJSONSchemaPropsPatchOutput() JSONSchemaPropsPatchOutput {
	return i.ToJSONSchemaPropsPatchOutputWithContext(context.Background())
}

func (i JSONSchemaPropsPatchArgs) ToJSONSchemaPropsPatchOutputWithContext(ctx context.Context) JSONSchemaPropsPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JSONSchemaPropsPatchOutput)
}

func (i JSONSchemaPropsPatchArgs) ToJSONSchemaPropsPatchPtrOutput() JSONSchemaPropsPatchPtrOutput {
	return i.ToJSONSchemaPropsPatchPtrOutputWithContext(context.Background())
}

func (i JSONSchemaPropsPatchArgs) ToJSONSchemaPropsPatchPtrOutputWithContext(ctx context.Context) JSONSchemaPropsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JSONSchemaPropsPatchOutput).ToJSONSchemaPropsPatchPtrOutputWithContext(ctx)
}

// JSONSchemaPropsPatchPtrInput is an input type that accepts JSONSchemaPropsPatchArgs, JSONSchemaPropsPatchPtr and JSONSchemaPropsPatchPtrOutput values.
// You can construct a concrete instance of `JSONSchemaPropsPatchPtrInput` via:
//
//	        JSONSchemaPropsPatchArgs{...}
//
//	or:
//
//	        nil
type JSONSchemaPropsPatchPtrInput interface {
	pulumi.Input

	ToJSONSchemaPropsPatchPtrOutput() JSONSchemaPropsPatchPtrOutput
	ToJSONSchemaPropsPatchPtrOutputWithContext(context.Context) JSONSchemaPropsPatchPtrOutput
}

type jsonschemaPropsPatchPtrType JSONSchemaPropsPatchArgs

func JSONSchemaPropsPatchPtr(v *JSONSchemaPropsPatchArgs) JSONSchemaPropsPatchPtrInput {
	return (*jsonschemaPropsPatchPtrType)(v)
}

func (*jsonschemaPropsPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**JSONSchemaPropsPatch)(nil)).Elem()
}

func (i *jsonschemaPropsPatchPtrType) ToJSONSchemaPropsPatchPtrOutput() JSONSchemaPropsPatchPtrOutput {
	return i.ToJSONSchemaPropsPatchPtrOutputWithContext(context.Background())
}

func (i *jsonschemaPropsPatchPtrType) ToJSONSchemaPropsPatchPtrOutputWithContext(ctx context.Context) JSONSchemaPropsPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JSONSchemaPropsPatchPtrOutput)
}

// JSONSchemaPropsPatchArrayInput is an input type that accepts JSONSchemaPropsPatchArray and JSONSchemaPropsPatchArrayOutput values.
// You can construct a concrete instance of `JSONSchemaPropsPatchArrayInput` via:
//
//	JSONSchemaPropsPatchArray{ JSONSchemaPropsPatchArgs{...} }
type JSONSchemaPropsPatchArrayInput interface {
	pulumi.Input

	ToJSONSchemaPropsPatchArrayOutput() JSONSchemaPropsPatchArrayOutput
	ToJSONSchemaPropsPatchArrayOutputWithContext(context.Context) JSONSchemaPropsPatchArrayOutput
}

type JSONSchemaPropsPatchArray []JSONSchemaPropsPatchInput

func (JSONSchemaPropsPatchArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JSONSchemaPropsPatch)(nil)).Elem()
}

func (i JSONSchemaPropsPatchArray) ToJSONSchemaPropsPatchArrayOutput() JSONSchemaPropsPatchArrayOutput {
	return i.ToJSONSchemaPropsPatchArrayOutputWithContext(context.Background())
}

func (i JSONSchemaPropsPatchArray) ToJSONSchemaPropsPatchArrayOutputWithContext(ctx context.Context) JSONSchemaPropsPatchArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(JSONSchemaPropsPatchArrayOutput)
}

// JSONSchemaProps is a JSON-Schema following Specification Draft 4 (http://json-schema.org/).
type JSONSchemaPropsPatchOutput struct{ *pulumi.OutputState }

func (JSONSchemaPropsPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*JSONSchemaPropsPatch)(nil)).Elem()
}

func (o JSONSchemaPropsPatchOutput) ToJSONSchemaPropsPatchOutput() JSONSchemaPropsPatchOutput {
	return o
}

func (o JSONSchemaPropsPatchOutput) ToJSONSchemaPropsPatchOutputWithContext(ctx context.Context) JSONSchemaPropsPatchOutput {
	return o
}

func (o JSONSchemaPropsPatchOutput) ToJSONSchemaPropsPatchPtrOutput() JSONSchemaPropsPatchPtrOutput {
	return o.ToJSONSchemaPropsPatchPtrOutputWithContext(context.Background())
}

func (o JSONSchemaPropsPatchOutput) ToJSONSchemaPropsPatchPtrOutputWithContext(ctx context.Context) JSONSchemaPropsPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v JSONSchemaPropsPatch) *JSONSchemaPropsPatch {
		return &v
	}).(JSONSchemaPropsPatchPtrOutput)
}

func (o JSONSchemaPropsPatchOutput) Ref() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) *string { return v.Ref }).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsPatchOutput) Schema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) *string { return v.Schema }).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsPatchOutput) AdditionalItems() pulumi.AnyOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) interface{} { return v.AdditionalItems }).(pulumi.AnyOutput)
}

func (o JSONSchemaPropsPatchOutput) AdditionalProperties() pulumi.AnyOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) interface{} { return v.AdditionalProperties }).(pulumi.AnyOutput)
}

func (o JSONSchemaPropsPatchOutput) AllOf() JSONSchemaPropsPatchArrayOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) []JSONSchemaPropsPatch { return v.AllOf }).(JSONSchemaPropsPatchArrayOutput)
}

func (o JSONSchemaPropsPatchOutput) AnyOf() JSONSchemaPropsPatchArrayOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) []JSONSchemaPropsPatch { return v.AnyOf }).(JSONSchemaPropsPatchArrayOutput)
}

// default is a default value for undefined object fields. Defaulting is a beta feature under the CustomResourceDefaulting feature gate. CustomResourceDefinitions with defaults must be created using the v1 (or newer) CustomResourceDefinition API.
func (o JSONSchemaPropsPatchOutput) Default() pulumi.AnyOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) interface{} { return v.Default }).(pulumi.AnyOutput)
}

func (o JSONSchemaPropsPatchOutput) Definitions() JSONSchemaPropsMapOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) map[string]JSONSchemaProps { return v.Definitions }).(JSONSchemaPropsMapOutput)
}

func (o JSONSchemaPropsPatchOutput) Dependencies() pulumi.MapOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) map[string]interface{} { return v.Dependencies }).(pulumi.MapOutput)
}

func (o JSONSchemaPropsPatchOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) *string { return v.Description }).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsPatchOutput) Enum() pulumi.ArrayOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) []interface{} { return v.Enum }).(pulumi.ArrayOutput)
}

func (o JSONSchemaPropsPatchOutput) Example() pulumi.AnyOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) interface{} { return v.Example }).(pulumi.AnyOutput)
}

func (o JSONSchemaPropsPatchOutput) ExclusiveMaximum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) *bool { return v.ExclusiveMaximum }).(pulumi.BoolPtrOutput)
}

func (o JSONSchemaPropsPatchOutput) ExclusiveMinimum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) *bool { return v.ExclusiveMinimum }).(pulumi.BoolPtrOutput)
}

func (o JSONSchemaPropsPatchOutput) ExternalDocs() ExternalDocumentationPatchPtrOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) *ExternalDocumentationPatch { return v.ExternalDocs }).(ExternalDocumentationPatchPtrOutput)
}

// format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated:
//
// - bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI - email: an email address as parsed by Golang net/mail.ParseAddress - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4: an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - isbn: an ISBN10 or ISBN13 number string like "0321751043" or "978-0321751041" - isbn10: an ISBN10 number string like "0321751043" - isbn13: an ISBN13 number string like "978-0321751041" - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11})$ with any non digit characters mixed in - ssn: a U.S. social security number following the regex ^\d{3}[- ]?\d{2}[- ]?\d{4}$ - hexcolor: an hexadecimal color code like "#FFFFFF: following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor: an RGB color code like rgb like "rgb(255,255,2559" - byte: base64 encoded binary data - password: any kind of string - date: a date string like "2006-01-02" as defined by full-date in RFC3339 - duration: a duration string like "22 ns" as parsed by Golang time.ParseDuration or compatible with Scala duration format - datetime: a date time string like "2014-12-15T19:30:20.000Z" as defined by date-time in RFC3339.
func (o JSONSchemaPropsPatchOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) *string { return v.Format }).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsPatchOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) *string { return v.Id }).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsPatchOutput) Items() pulumi.AnyOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) interface{} { return v.Items }).(pulumi.AnyOutput)
}

func (o JSONSchemaPropsPatchOutput) MaxItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) *int { return v.MaxItems }).(pulumi.IntPtrOutput)
}

func (o JSONSchemaPropsPatchOutput) MaxLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) *int { return v.MaxLength }).(pulumi.IntPtrOutput)
}

func (o JSONSchemaPropsPatchOutput) MaxProperties() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) *int { return v.MaxProperties }).(pulumi.IntPtrOutput)
}

func (o JSONSchemaPropsPatchOutput) Maximum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) *float64 { return v.Maximum }).(pulumi.Float64PtrOutput)
}

func (o JSONSchemaPropsPatchOutput) MinItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) *int { return v.MinItems }).(pulumi.IntPtrOutput)
}

func (o JSONSchemaPropsPatchOutput) MinLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) *int { return v.MinLength }).(pulumi.IntPtrOutput)
}

func (o JSONSchemaPropsPatchOutput) MinProperties() pulumi.IntPtrOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) *int { return v.MinProperties }).(pulumi.IntPtrOutput)
}

func (o JSONSchemaPropsPatchOutput) Minimum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) *float64 { return v.Minimum }).(pulumi.Float64PtrOutput)
}

func (o JSONSchemaPropsPatchOutput) MultipleOf() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) *float64 { return v.MultipleOf }).(pulumi.Float64PtrOutput)
}

func (o JSONSchemaPropsPatchOutput) Not() JSONSchemaPropsPatchPtrOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) *JSONSchemaPropsPatch { return v.Not }).(JSONSchemaPropsPatchPtrOutput)
}

func (o JSONSchemaPropsPatchOutput) Nullable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) *bool { return v.Nullable }).(pulumi.BoolPtrOutput)
}

func (o JSONSchemaPropsPatchOutput) OneOf() JSONSchemaPropsPatchArrayOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) []JSONSchemaPropsPatch { return v.OneOf }).(JSONSchemaPropsPatchArrayOutput)
}

func (o JSONSchemaPropsPatchOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) *string { return v.Pattern }).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsPatchOutput) PatternProperties() JSONSchemaPropsMapOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) map[string]JSONSchemaProps { return v.PatternProperties }).(JSONSchemaPropsMapOutput)
}

func (o JSONSchemaPropsPatchOutput) Properties() JSONSchemaPropsMapOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) map[string]JSONSchemaProps { return v.Properties }).(JSONSchemaPropsMapOutput)
}

func (o JSONSchemaPropsPatchOutput) Required() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) []string { return v.Required }).(pulumi.StringArrayOutput)
}

func (o JSONSchemaPropsPatchOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) *string { return v.Title }).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsPatchOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) *string { return v.Type }).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsPatchOutput) UniqueItems() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) *bool { return v.UniqueItems }).(pulumi.BoolPtrOutput)
}

// x-kubernetes-embedded-resource defines that the value is an embedded Kubernetes runtime.Object, with TypeMeta and ObjectMeta. The type must be object. It is allowed to further restrict the embedded object. kind, apiVersion and metadata are validated automatically. x-kubernetes-preserve-unknown-fields is allowed to be true, but does not have to be if the object is fully specified (up to kind, apiVersion, metadata).
func (o JSONSchemaPropsPatchOutput) X_kubernetes_embedded_resource() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) *bool { return v.X_kubernetes_embedded_resource }).(pulumi.BoolPtrOutput)
}

// x-kubernetes-int-or-string specifies that this value is either an integer or a string. If this is true, an empty type is allowed and type as child of anyOf is permitted if following one of the following patterns:
//
// 1) anyOf:
//   - type: integer
//   - type: string
//
// 2) allOf:
//   - anyOf:
//   - type: integer
//   - type: string
//   - ... zero or more
func (o JSONSchemaPropsPatchOutput) X_kubernetes_int_or_string() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) *bool { return v.X_kubernetes_int_or_string }).(pulumi.BoolPtrOutput)
}

// x-kubernetes-list-map-keys annotates an array with the x-kubernetes-list-type `map` by specifying the keys used as the index of the map.
//
// This tag MUST only be used on lists that have the "x-kubernetes-list-type" extension set to "map". Also, the values specified for this attribute must be a scalar typed field of the child structure (no nesting is supported).
func (o JSONSchemaPropsPatchOutput) X_kubernetes_list_map_keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) []string { return v.X_kubernetes_list_map_keys }).(pulumi.StringArrayOutput)
}

// x-kubernetes-list-type annotates an array to further describe its topology. This extension must only be used on lists and may have 3 possible values:
//
//  1. `atomic`: the list is treated as a single entity, like a scalar.
//     Atomic lists will be entirely replaced when updated. This extension
//     may be used on any type of list (struct, scalar, ...).
//  2. `set`:
//     Sets are lists that must not have multiple items with the same value. Each
//     value must be a scalar, an object with x-kubernetes-map-type `atomic` or an
//     array with x-kubernetes-list-type `atomic`.
//  3. `map`:
//     These lists are like maps in that their elements have a non-index key
//     used to identify them. Order is preserved upon merge. The map tag
//     must only be used on a list with elements of type object.
//     Defaults to atomic for arrays.
func (o JSONSchemaPropsPatchOutput) X_kubernetes_list_type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) *string { return v.X_kubernetes_list_type }).(pulumi.StringPtrOutput)
}

// x-kubernetes-map-type annotates an object to further describe its topology. This extension must only be used when type is object and may have 2 possible values:
//
//  1. `granular`:
//     These maps are actual maps (key-value pairs) and each fields are independent
//     from each other (they can each be manipulated by separate actors). This is
//     the default behaviour for all maps.
//  2. `atomic`: the list is treated as a single entity, like a scalar.
//     Atomic maps will be entirely replaced when updated.
func (o JSONSchemaPropsPatchOutput) X_kubernetes_map_type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) *string { return v.X_kubernetes_map_type }).(pulumi.StringPtrOutput)
}

// x-kubernetes-preserve-unknown-fields stops the API server decoding step from pruning fields which are not specified in the validation schema. This affects fields recursively, but switches back to normal pruning behaviour if nested properties or additionalProperties are specified in the schema. This can either be true or undefined. False is forbidden.
func (o JSONSchemaPropsPatchOutput) X_kubernetes_preserve_unknown_fields() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v JSONSchemaPropsPatch) *bool { return v.X_kubernetes_preserve_unknown_fields }).(pulumi.BoolPtrOutput)
}

type JSONSchemaPropsPatchPtrOutput struct{ *pulumi.OutputState }

func (JSONSchemaPropsPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**JSONSchemaPropsPatch)(nil)).Elem()
}

func (o JSONSchemaPropsPatchPtrOutput) ToJSONSchemaPropsPatchPtrOutput() JSONSchemaPropsPatchPtrOutput {
	return o
}

func (o JSONSchemaPropsPatchPtrOutput) ToJSONSchemaPropsPatchPtrOutputWithContext(ctx context.Context) JSONSchemaPropsPatchPtrOutput {
	return o
}

func (o JSONSchemaPropsPatchPtrOutput) Elem() JSONSchemaPropsPatchOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) JSONSchemaPropsPatch {
		if v != nil {
			return *v
		}
		var ret JSONSchemaPropsPatch
		return ret
	}).(JSONSchemaPropsPatchOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) Ref() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Ref
	}).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) Schema() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Schema
	}).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) AdditionalItems() pulumi.AnyOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) interface{} {
		if v == nil {
			return nil
		}
		return v.AdditionalItems
	}).(pulumi.AnyOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) AdditionalProperties() pulumi.AnyOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) interface{} {
		if v == nil {
			return nil
		}
		return v.AdditionalProperties
	}).(pulumi.AnyOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) AllOf() JSONSchemaPropsPatchArrayOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) []JSONSchemaPropsPatch {
		if v == nil {
			return nil
		}
		return v.AllOf
	}).(JSONSchemaPropsPatchArrayOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) AnyOf() JSONSchemaPropsPatchArrayOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) []JSONSchemaPropsPatch {
		if v == nil {
			return nil
		}
		return v.AnyOf
	}).(JSONSchemaPropsPatchArrayOutput)
}

// default is a default value for undefined object fields. Defaulting is a beta feature under the CustomResourceDefaulting feature gate. CustomResourceDefinitions with defaults must be created using the v1 (or newer) CustomResourceDefinition API.
func (o JSONSchemaPropsPatchPtrOutput) Default() pulumi.AnyOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) interface{} {
		if v == nil {
			return nil
		}
		return v.Default
	}).(pulumi.AnyOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) Definitions() JSONSchemaPropsMapOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) map[string]JSONSchemaProps {
		if v == nil {
			return nil
		}
		return v.Definitions
	}).(JSONSchemaPropsMapOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) Dependencies() pulumi.MapOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) map[string]interface{} {
		if v == nil {
			return nil
		}
		return v.Dependencies
	}).(pulumi.MapOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Description
	}).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) Enum() pulumi.ArrayOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) []interface{} {
		if v == nil {
			return nil
		}
		return v.Enum
	}).(pulumi.ArrayOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) Example() pulumi.AnyOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) interface{} {
		if v == nil {
			return nil
		}
		return v.Example
	}).(pulumi.AnyOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) ExclusiveMaximum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) *bool {
		if v == nil {
			return nil
		}
		return v.ExclusiveMaximum
	}).(pulumi.BoolPtrOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) ExclusiveMinimum() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) *bool {
		if v == nil {
			return nil
		}
		return v.ExclusiveMinimum
	}).(pulumi.BoolPtrOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) ExternalDocs() ExternalDocumentationPatchPtrOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) *ExternalDocumentationPatch {
		if v == nil {
			return nil
		}
		return v.ExternalDocs
	}).(ExternalDocumentationPatchPtrOutput)
}

// format is an OpenAPI v3 format string. Unknown formats are ignored. The following formats are validated:
//
// - bsonobjectid: a bson object ID, i.e. a 24 characters hex string - uri: an URI as parsed by Golang net/url.ParseRequestURI - email: an email address as parsed by Golang net/mail.ParseAddress - hostname: a valid representation for an Internet host name, as defined by RFC 1034, section 3.1 [RFC1034]. - ipv4: an IPv4 IP as parsed by Golang net.ParseIP - ipv6: an IPv6 IP as parsed by Golang net.ParseIP - cidr: a CIDR as parsed by Golang net.ParseCIDR - mac: a MAC address as parsed by Golang net.ParseMAC - uuid: an UUID that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid3: an UUID3 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?3[0-9a-f]{3}-?[0-9a-f]{4}-?[0-9a-f]{12}$ - uuid4: an UUID4 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?4[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - uuid5: an UUID5 that allows uppercase defined by the regex (?i)^[0-9a-f]{8}-?[0-9a-f]{4}-?5[0-9a-f]{3}-?[89ab][0-9a-f]{3}-?[0-9a-f]{12}$ - isbn: an ISBN10 or ISBN13 number string like "0321751043" or "978-0321751041" - isbn10: an ISBN10 number string like "0321751043" - isbn13: an ISBN13 number string like "978-0321751041" - creditcard: a credit card number defined by the regex ^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14}|6(?:011|5[0-9][0-9])[0-9]{12}|3[47][0-9]{13}|3(?:0[0-5]|[68][0-9])[0-9]{11}|(?:2131|1800|35\d{3})\d{11})$ with any non digit characters mixed in - ssn: a U.S. social security number following the regex ^\d{3}[- ]?\d{2}[- ]?\d{4}$ - hexcolor: an hexadecimal color code like "#FFFFFF: following the regex ^#?([0-9a-fA-F]{3}|[0-9a-fA-F]{6})$ - rgbcolor: an RGB color code like rgb like "rgb(255,255,2559" - byte: base64 encoded binary data - password: any kind of string - date: a date string like "2006-01-02" as defined by full-date in RFC3339 - duration: a duration string like "22 ns" as parsed by Golang time.ParseDuration or compatible with Scala duration format - datetime: a date time string like "2014-12-15T19:30:20.000Z" as defined by date-time in RFC3339.
func (o JSONSchemaPropsPatchPtrOutput) Format() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Format
	}).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) Id() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Id
	}).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) Items() pulumi.AnyOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) interface{} {
		if v == nil {
			return nil
		}
		return v.Items
	}).(pulumi.AnyOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) MaxItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxItems
	}).(pulumi.IntPtrOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) MaxLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxLength
	}).(pulumi.IntPtrOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) MaxProperties() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) *int {
		if v == nil {
			return nil
		}
		return v.MaxProperties
	}).(pulumi.IntPtrOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) Maximum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) *float64 {
		if v == nil {
			return nil
		}
		return v.Maximum
	}).(pulumi.Float64PtrOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) MinItems() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) *int {
		if v == nil {
			return nil
		}
		return v.MinItems
	}).(pulumi.IntPtrOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) MinLength() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) *int {
		if v == nil {
			return nil
		}
		return v.MinLength
	}).(pulumi.IntPtrOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) MinProperties() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) *int {
		if v == nil {
			return nil
		}
		return v.MinProperties
	}).(pulumi.IntPtrOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) Minimum() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) *float64 {
		if v == nil {
			return nil
		}
		return v.Minimum
	}).(pulumi.Float64PtrOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) MultipleOf() pulumi.Float64PtrOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) *float64 {
		if v == nil {
			return nil
		}
		return v.MultipleOf
	}).(pulumi.Float64PtrOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) Not() JSONSchemaPropsPatchPtrOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) *JSONSchemaPropsPatch {
		if v == nil {
			return nil
		}
		return v.Not
	}).(JSONSchemaPropsPatchPtrOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) Nullable() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) *bool {
		if v == nil {
			return nil
		}
		return v.Nullable
	}).(pulumi.BoolPtrOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) OneOf() JSONSchemaPropsPatchArrayOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) []JSONSchemaPropsPatch {
		if v == nil {
			return nil
		}
		return v.OneOf
	}).(JSONSchemaPropsPatchArrayOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) Pattern() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Pattern
	}).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) PatternProperties() JSONSchemaPropsMapOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) map[string]JSONSchemaProps {
		if v == nil {
			return nil
		}
		return v.PatternProperties
	}).(JSONSchemaPropsMapOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) Properties() JSONSchemaPropsMapOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) map[string]JSONSchemaProps {
		if v == nil {
			return nil
		}
		return v.Properties
	}).(JSONSchemaPropsMapOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) Required() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) []string {
		if v == nil {
			return nil
		}
		return v.Required
	}).(pulumi.StringArrayOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) Title() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Title
	}).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) Type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) *string {
		if v == nil {
			return nil
		}
		return v.Type
	}).(pulumi.StringPtrOutput)
}

func (o JSONSchemaPropsPatchPtrOutput) UniqueItems() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) *bool {
		if v == nil {
			return nil
		}
		return v.UniqueItems
	}).(pulumi.BoolPtrOutput)
}

// x-kubernetes-embedded-resource defines that the value is an embedded Kubernetes runtime.Object, with TypeMeta and ObjectMeta. The type must be object. It is allowed to further restrict the embedded object. kind, apiVersion and metadata are validated automatically. x-kubernetes-preserve-unknown-fields is allowed to be true, but does not have to be if the object is fully specified (up to kind, apiVersion, metadata).
func (o JSONSchemaPropsPatchPtrOutput) X_kubernetes_embedded_resource() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) *bool {
		if v == nil {
			return nil
		}
		return v.X_kubernetes_embedded_resource
	}).(pulumi.BoolPtrOutput)
}

// x-kubernetes-int-or-string specifies that this value is either an integer or a string. If this is true, an empty type is allowed and type as child of anyOf is permitted if following one of the following patterns:
//
// 1) anyOf:
//   - type: integer
//   - type: string
//
// 2) allOf:
//   - anyOf:
//   - type: integer
//   - type: string
//   - ... zero or more
func (o JSONSchemaPropsPatchPtrOutput) X_kubernetes_int_or_string() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) *bool {
		if v == nil {
			return nil
		}
		return v.X_kubernetes_int_or_string
	}).(pulumi.BoolPtrOutput)
}

// x-kubernetes-list-map-keys annotates an array with the x-kubernetes-list-type `map` by specifying the keys used as the index of the map.
//
// This tag MUST only be used on lists that have the "x-kubernetes-list-type" extension set to "map". Also, the values specified for this attribute must be a scalar typed field of the child structure (no nesting is supported).
func (o JSONSchemaPropsPatchPtrOutput) X_kubernetes_list_map_keys() pulumi.StringArrayOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) []string {
		if v == nil {
			return nil
		}
		return v.X_kubernetes_list_map_keys
	}).(pulumi.StringArrayOutput)
}

// x-kubernetes-list-type annotates an array to further describe its topology. This extension must only be used on lists and may have 3 possible values:
//
//  1. `atomic`: the list is treated as a single entity, like a scalar.
//     Atomic lists will be entirely replaced when updated. This extension
//     may be used on any type of list (struct, scalar, ...).
//  2. `set`:
//     Sets are lists that must not have multiple items with the same value. Each
//     value must be a scalar, an object with x-kubernetes-map-type `atomic` or an
//     array with x-kubernetes-list-type `atomic`.
//  3. `map`:
//     These lists are like maps in that their elements have a non-index key
//     used to identify them. Order is preserved upon merge. The map tag
//     must only be used on a list with elements of type object.
//     Defaults to atomic for arrays.
func (o JSONSchemaPropsPatchPtrOutput) X_kubernetes_list_type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) *string {
		if v == nil {
			return nil
		}
		return v.X_kubernetes_list_type
	}).(pulumi.StringPtrOutput)
}

// x-kubernetes-map-type annotates an object to further describe its topology. This extension must only be used when type is object and may have 2 possible values:
//
//  1. `granular`:
//     These maps are actual maps (key-value pairs) and each fields are independent
//     from each other (they can each be manipulated by separate actors). This is
//     the default behaviour for all maps.
//  2. `atomic`: the list is treated as a single entity, like a scalar.
//     Atomic maps will be entirely replaced when updated.
func (o JSONSchemaPropsPatchPtrOutput) X_kubernetes_map_type() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) *string {
		if v == nil {
			return nil
		}
		return v.X_kubernetes_map_type
	}).(pulumi.StringPtrOutput)
}

// x-kubernetes-preserve-unknown-fields stops the API server decoding step from pruning fields which are not specified in the validation schema. This affects fields recursively, but switches back to normal pruning behaviour if nested properties or additionalProperties are specified in the schema. This can either be true or undefined. False is forbidden.
func (o JSONSchemaPropsPatchPtrOutput) X_kubernetes_preserve_unknown_fields() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *JSONSchemaPropsPatch) *bool {
		if v == nil {
			return nil
		}
		return v.X_kubernetes_preserve_unknown_fields
	}).(pulumi.BoolPtrOutput)
}

type JSONSchemaPropsPatchArrayOutput struct{ *pulumi.OutputState }

func (JSONSchemaPropsPatchArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]JSONSchemaPropsPatch)(nil)).Elem()
}

func (o JSONSchemaPropsPatchArrayOutput) ToJSONSchemaPropsPatchArrayOutput() JSONSchemaPropsPatchArrayOutput {
	return o
}

func (o JSONSchemaPropsPatchArrayOutput) ToJSONSchemaPropsPatchArrayOutputWithContext(ctx context.Context) JSONSchemaPropsPatchArrayOutput {
	return o
}

func (o JSONSchemaPropsPatchArrayOutput) Index(i pulumi.IntInput) JSONSchemaPropsPatchOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) JSONSchemaPropsPatch {
		return vs[0].([]JSONSchemaPropsPatch)[vs[1].(int)]
	}).(JSONSchemaPropsPatchOutput)
}

// ServiceReference holds a reference to Service.legacy.k8s.io
type ServiceReference struct {
	// name is the name of the service. Required
	Name string `pulumi:"name"`
	// namespace is the namespace of the service. Required
	Namespace string `pulumi:"namespace"`
	// path is an optional URL path at which the webhook will be contacted.
	Path *string `pulumi:"path"`
	// port is an optional service port at which the webhook will be contacted. `port` should be a valid port number (1-65535, inclusive). Defaults to 443 for backward compatibility.
	Port *int `pulumi:"port"`
}

// ServiceReferenceInput is an input type that accepts ServiceReferenceArgs and ServiceReferenceOutput values.
// You can construct a concrete instance of `ServiceReferenceInput` via:
//
//	ServiceReferenceArgs{...}
type ServiceReferenceInput interface {
	pulumi.Input

	ToServiceReferenceOutput() ServiceReferenceOutput
	ToServiceReferenceOutputWithContext(context.Context) ServiceReferenceOutput
}

// ServiceReference holds a reference to Service.legacy.k8s.io
type ServiceReferenceArgs struct {
	// name is the name of the service. Required
	Name pulumi.StringInput `pulumi:"name"`
	// namespace is the namespace of the service. Required
	Namespace pulumi.StringInput `pulumi:"namespace"`
	// path is an optional URL path at which the webhook will be contacted.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// port is an optional service port at which the webhook will be contacted. `port` should be a valid port number (1-65535, inclusive). Defaults to 443 for backward compatibility.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (ServiceReferenceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceReference)(nil)).Elem()
}

func (i ServiceReferenceArgs) ToServiceReferenceOutput() ServiceReferenceOutput {
	return i.ToServiceReferenceOutputWithContext(context.Background())
}

func (i ServiceReferenceArgs) ToServiceReferenceOutputWithContext(ctx context.Context) ServiceReferenceOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceReferenceOutput)
}

func (i ServiceReferenceArgs) ToServiceReferencePtrOutput() ServiceReferencePtrOutput {
	return i.ToServiceReferencePtrOutputWithContext(context.Background())
}

func (i ServiceReferenceArgs) ToServiceReferencePtrOutputWithContext(ctx context.Context) ServiceReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceReferenceOutput).ToServiceReferencePtrOutputWithContext(ctx)
}

// ServiceReferencePtrInput is an input type that accepts ServiceReferenceArgs, ServiceReferencePtr and ServiceReferencePtrOutput values.
// You can construct a concrete instance of `ServiceReferencePtrInput` via:
//
//	        ServiceReferenceArgs{...}
//
//	or:
//
//	        nil
type ServiceReferencePtrInput interface {
	pulumi.Input

	ToServiceReferencePtrOutput() ServiceReferencePtrOutput
	ToServiceReferencePtrOutputWithContext(context.Context) ServiceReferencePtrOutput
}

type serviceReferencePtrType ServiceReferenceArgs

func ServiceReferencePtr(v *ServiceReferenceArgs) ServiceReferencePtrInput {
	return (*serviceReferencePtrType)(v)
}

func (*serviceReferencePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceReference)(nil)).Elem()
}

func (i *serviceReferencePtrType) ToServiceReferencePtrOutput() ServiceReferencePtrOutput {
	return i.ToServiceReferencePtrOutputWithContext(context.Background())
}

func (i *serviceReferencePtrType) ToServiceReferencePtrOutputWithContext(ctx context.Context) ServiceReferencePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceReferencePtrOutput)
}

// ServiceReference holds a reference to Service.legacy.k8s.io
type ServiceReferenceOutput struct{ *pulumi.OutputState }

func (ServiceReferenceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceReference)(nil)).Elem()
}

func (o ServiceReferenceOutput) ToServiceReferenceOutput() ServiceReferenceOutput {
	return o
}

func (o ServiceReferenceOutput) ToServiceReferenceOutputWithContext(ctx context.Context) ServiceReferenceOutput {
	return o
}

func (o ServiceReferenceOutput) ToServiceReferencePtrOutput() ServiceReferencePtrOutput {
	return o.ToServiceReferencePtrOutputWithContext(context.Background())
}

func (o ServiceReferenceOutput) ToServiceReferencePtrOutputWithContext(ctx context.Context) ServiceReferencePtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceReference) *ServiceReference {
		return &v
	}).(ServiceReferencePtrOutput)
}

// name is the name of the service. Required
func (o ServiceReferenceOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceReference) string { return v.Name }).(pulumi.StringOutput)
}

// namespace is the namespace of the service. Required
func (o ServiceReferenceOutput) Namespace() pulumi.StringOutput {
	return o.ApplyT(func(v ServiceReference) string { return v.Namespace }).(pulumi.StringOutput)
}

// path is an optional URL path at which the webhook will be contacted.
func (o ServiceReferenceOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceReference) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// port is an optional service port at which the webhook will be contacted. `port` should be a valid port number (1-65535, inclusive). Defaults to 443 for backward compatibility.
func (o ServiceReferenceOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceReference) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type ServiceReferencePtrOutput struct{ *pulumi.OutputState }

func (ServiceReferencePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceReference)(nil)).Elem()
}

func (o ServiceReferencePtrOutput) ToServiceReferencePtrOutput() ServiceReferencePtrOutput {
	return o
}

func (o ServiceReferencePtrOutput) ToServiceReferencePtrOutputWithContext(ctx context.Context) ServiceReferencePtrOutput {
	return o
}

func (o ServiceReferencePtrOutput) Elem() ServiceReferenceOutput {
	return o.ApplyT(func(v *ServiceReference) ServiceReference {
		if v != nil {
			return *v
		}
		var ret ServiceReference
		return ret
	}).(ServiceReferenceOutput)
}

// name is the name of the service. Required
func (o ServiceReferencePtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceReference) *string {
		if v == nil {
			return nil
		}
		return &v.Name
	}).(pulumi.StringPtrOutput)
}

// namespace is the namespace of the service. Required
func (o ServiceReferencePtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceReference) *string {
		if v == nil {
			return nil
		}
		return &v.Namespace
	}).(pulumi.StringPtrOutput)
}

// path is an optional URL path at which the webhook will be contacted.
func (o ServiceReferencePtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceReference) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// port is an optional service port at which the webhook will be contacted. `port` should be a valid port number (1-65535, inclusive). Defaults to 443 for backward compatibility.
func (o ServiceReferencePtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceReference) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// ServiceReference holds a reference to Service.legacy.k8s.io
type ServiceReferencePatch struct {
	// name is the name of the service. Required
	Name *string `pulumi:"name"`
	// namespace is the namespace of the service. Required
	Namespace *string `pulumi:"namespace"`
	// path is an optional URL path at which the webhook will be contacted.
	Path *string `pulumi:"path"`
	// port is an optional service port at which the webhook will be contacted. `port` should be a valid port number (1-65535, inclusive). Defaults to 443 for backward compatibility.
	Port *int `pulumi:"port"`
}

// ServiceReferencePatchInput is an input type that accepts ServiceReferencePatchArgs and ServiceReferencePatchOutput values.
// You can construct a concrete instance of `ServiceReferencePatchInput` via:
//
//	ServiceReferencePatchArgs{...}
type ServiceReferencePatchInput interface {
	pulumi.Input

	ToServiceReferencePatchOutput() ServiceReferencePatchOutput
	ToServiceReferencePatchOutputWithContext(context.Context) ServiceReferencePatchOutput
}

// ServiceReference holds a reference to Service.legacy.k8s.io
type ServiceReferencePatchArgs struct {
	// name is the name of the service. Required
	Name pulumi.StringPtrInput `pulumi:"name"`
	// namespace is the namespace of the service. Required
	Namespace pulumi.StringPtrInput `pulumi:"namespace"`
	// path is an optional URL path at which the webhook will be contacted.
	Path pulumi.StringPtrInput `pulumi:"path"`
	// port is an optional service port at which the webhook will be contacted. `port` should be a valid port number (1-65535, inclusive). Defaults to 443 for backward compatibility.
	Port pulumi.IntPtrInput `pulumi:"port"`
}

func (ServiceReferencePatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceReferencePatch)(nil)).Elem()
}

func (i ServiceReferencePatchArgs) ToServiceReferencePatchOutput() ServiceReferencePatchOutput {
	return i.ToServiceReferencePatchOutputWithContext(context.Background())
}

func (i ServiceReferencePatchArgs) ToServiceReferencePatchOutputWithContext(ctx context.Context) ServiceReferencePatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceReferencePatchOutput)
}

func (i ServiceReferencePatchArgs) ToServiceReferencePatchPtrOutput() ServiceReferencePatchPtrOutput {
	return i.ToServiceReferencePatchPtrOutputWithContext(context.Background())
}

func (i ServiceReferencePatchArgs) ToServiceReferencePatchPtrOutputWithContext(ctx context.Context) ServiceReferencePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceReferencePatchOutput).ToServiceReferencePatchPtrOutputWithContext(ctx)
}

// ServiceReferencePatchPtrInput is an input type that accepts ServiceReferencePatchArgs, ServiceReferencePatchPtr and ServiceReferencePatchPtrOutput values.
// You can construct a concrete instance of `ServiceReferencePatchPtrInput` via:
//
//	        ServiceReferencePatchArgs{...}
//
//	or:
//
//	        nil
type ServiceReferencePatchPtrInput interface {
	pulumi.Input

	ToServiceReferencePatchPtrOutput() ServiceReferencePatchPtrOutput
	ToServiceReferencePatchPtrOutputWithContext(context.Context) ServiceReferencePatchPtrOutput
}

type serviceReferencePatchPtrType ServiceReferencePatchArgs

func ServiceReferencePatchPtr(v *ServiceReferencePatchArgs) ServiceReferencePatchPtrInput {
	return (*serviceReferencePatchPtrType)(v)
}

func (*serviceReferencePatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceReferencePatch)(nil)).Elem()
}

func (i *serviceReferencePatchPtrType) ToServiceReferencePatchPtrOutput() ServiceReferencePatchPtrOutput {
	return i.ToServiceReferencePatchPtrOutputWithContext(context.Background())
}

func (i *serviceReferencePatchPtrType) ToServiceReferencePatchPtrOutputWithContext(ctx context.Context) ServiceReferencePatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceReferencePatchPtrOutput)
}

// ServiceReference holds a reference to Service.legacy.k8s.io
type ServiceReferencePatchOutput struct{ *pulumi.OutputState }

func (ServiceReferencePatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*ServiceReferencePatch)(nil)).Elem()
}

func (o ServiceReferencePatchOutput) ToServiceReferencePatchOutput() ServiceReferencePatchOutput {
	return o
}

func (o ServiceReferencePatchOutput) ToServiceReferencePatchOutputWithContext(ctx context.Context) ServiceReferencePatchOutput {
	return o
}

func (o ServiceReferencePatchOutput) ToServiceReferencePatchPtrOutput() ServiceReferencePatchPtrOutput {
	return o.ToServiceReferencePatchPtrOutputWithContext(context.Background())
}

func (o ServiceReferencePatchOutput) ToServiceReferencePatchPtrOutputWithContext(ctx context.Context) ServiceReferencePatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v ServiceReferencePatch) *ServiceReferencePatch {
		return &v
	}).(ServiceReferencePatchPtrOutput)
}

// name is the name of the service. Required
func (o ServiceReferencePatchOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceReferencePatch) *string { return v.Name }).(pulumi.StringPtrOutput)
}

// namespace is the namespace of the service. Required
func (o ServiceReferencePatchOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceReferencePatch) *string { return v.Namespace }).(pulumi.StringPtrOutput)
}

// path is an optional URL path at which the webhook will be contacted.
func (o ServiceReferencePatchOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v ServiceReferencePatch) *string { return v.Path }).(pulumi.StringPtrOutput)
}

// port is an optional service port at which the webhook will be contacted. `port` should be a valid port number (1-65535, inclusive). Defaults to 443 for backward compatibility.
func (o ServiceReferencePatchOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v ServiceReferencePatch) *int { return v.Port }).(pulumi.IntPtrOutput)
}

type ServiceReferencePatchPtrOutput struct{ *pulumi.OutputState }

func (ServiceReferencePatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceReferencePatch)(nil)).Elem()
}

func (o ServiceReferencePatchPtrOutput) ToServiceReferencePatchPtrOutput() ServiceReferencePatchPtrOutput {
	return o
}

func (o ServiceReferencePatchPtrOutput) ToServiceReferencePatchPtrOutputWithContext(ctx context.Context) ServiceReferencePatchPtrOutput {
	return o
}

func (o ServiceReferencePatchPtrOutput) Elem() ServiceReferencePatchOutput {
	return o.ApplyT(func(v *ServiceReferencePatch) ServiceReferencePatch {
		if v != nil {
			return *v
		}
		var ret ServiceReferencePatch
		return ret
	}).(ServiceReferencePatchOutput)
}

// name is the name of the service. Required
func (o ServiceReferencePatchPtrOutput) Name() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceReferencePatch) *string {
		if v == nil {
			return nil
		}
		return v.Name
	}).(pulumi.StringPtrOutput)
}

// namespace is the namespace of the service. Required
func (o ServiceReferencePatchPtrOutput) Namespace() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceReferencePatch) *string {
		if v == nil {
			return nil
		}
		return v.Namespace
	}).(pulumi.StringPtrOutput)
}

// path is an optional URL path at which the webhook will be contacted.
func (o ServiceReferencePatchPtrOutput) Path() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceReferencePatch) *string {
		if v == nil {
			return nil
		}
		return v.Path
	}).(pulumi.StringPtrOutput)
}

// port is an optional service port at which the webhook will be contacted. `port` should be a valid port number (1-65535, inclusive). Defaults to 443 for backward compatibility.
func (o ServiceReferencePatchPtrOutput) Port() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *ServiceReferencePatch) *int {
		if v == nil {
			return nil
		}
		return v.Port
	}).(pulumi.IntPtrOutput)
}

// WebhookClientConfig contains the information to make a TLS connection with the webhook.
type WebhookClientConfig struct {
	// caBundle is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.
	CaBundle *string `pulumi:"caBundle"`
	// service is a reference to the service for this webhook. Either service or url must be specified.
	//
	// If the webhook is running within the cluster, then you should use `service`.
	Service *ServiceReference `pulumi:"service"`
	// url gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.
	//
	// The `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.
	//
	// Please note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.
	//
	// The scheme must be "https"; the URL must begin with "https://".
	//
	// A path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.
	//
	// Attempting to use a user or basic auth e.g. "user:password@" is not allowed. Fragments ("#...") and query parameters ("?...") are not allowed, either.
	Url *string `pulumi:"url"`
}

// WebhookClientConfigInput is an input type that accepts WebhookClientConfigArgs and WebhookClientConfigOutput values.
// You can construct a concrete instance of `WebhookClientConfigInput` via:
//
//	WebhookClientConfigArgs{...}
type WebhookClientConfigInput interface {
	pulumi.Input

	ToWebhookClientConfigOutput() WebhookClientConfigOutput
	ToWebhookClientConfigOutputWithContext(context.Context) WebhookClientConfigOutput
}

// WebhookClientConfig contains the information to make a TLS connection with the webhook.
type WebhookClientConfigArgs struct {
	// caBundle is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.
	CaBundle pulumi.StringPtrInput `pulumi:"caBundle"`
	// service is a reference to the service for this webhook. Either service or url must be specified.
	//
	// If the webhook is running within the cluster, then you should use `service`.
	Service ServiceReferencePtrInput `pulumi:"service"`
	// url gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.
	//
	// The `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.
	//
	// Please note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.
	//
	// The scheme must be "https"; the URL must begin with "https://".
	//
	// A path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.
	//
	// Attempting to use a user or basic auth e.g. "user:password@" is not allowed. Fragments ("#...") and query parameters ("?...") are not allowed, either.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (WebhookClientConfigArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookClientConfig)(nil)).Elem()
}

func (i WebhookClientConfigArgs) ToWebhookClientConfigOutput() WebhookClientConfigOutput {
	return i.ToWebhookClientConfigOutputWithContext(context.Background())
}

func (i WebhookClientConfigArgs) ToWebhookClientConfigOutputWithContext(ctx context.Context) WebhookClientConfigOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookClientConfigOutput)
}

func (i WebhookClientConfigArgs) ToWebhookClientConfigPtrOutput() WebhookClientConfigPtrOutput {
	return i.ToWebhookClientConfigPtrOutputWithContext(context.Background())
}

func (i WebhookClientConfigArgs) ToWebhookClientConfigPtrOutputWithContext(ctx context.Context) WebhookClientConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookClientConfigOutput).ToWebhookClientConfigPtrOutputWithContext(ctx)
}

// WebhookClientConfigPtrInput is an input type that accepts WebhookClientConfigArgs, WebhookClientConfigPtr and WebhookClientConfigPtrOutput values.
// You can construct a concrete instance of `WebhookClientConfigPtrInput` via:
//
//	        WebhookClientConfigArgs{...}
//
//	or:
//
//	        nil
type WebhookClientConfigPtrInput interface {
	pulumi.Input

	ToWebhookClientConfigPtrOutput() WebhookClientConfigPtrOutput
	ToWebhookClientConfigPtrOutputWithContext(context.Context) WebhookClientConfigPtrOutput
}

type webhookClientConfigPtrType WebhookClientConfigArgs

func WebhookClientConfigPtr(v *WebhookClientConfigArgs) WebhookClientConfigPtrInput {
	return (*webhookClientConfigPtrType)(v)
}

func (*webhookClientConfigPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookClientConfig)(nil)).Elem()
}

func (i *webhookClientConfigPtrType) ToWebhookClientConfigPtrOutput() WebhookClientConfigPtrOutput {
	return i.ToWebhookClientConfigPtrOutputWithContext(context.Background())
}

func (i *webhookClientConfigPtrType) ToWebhookClientConfigPtrOutputWithContext(ctx context.Context) WebhookClientConfigPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookClientConfigPtrOutput)
}

// WebhookClientConfig contains the information to make a TLS connection with the webhook.
type WebhookClientConfigOutput struct{ *pulumi.OutputState }

func (WebhookClientConfigOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookClientConfig)(nil)).Elem()
}

func (o WebhookClientConfigOutput) ToWebhookClientConfigOutput() WebhookClientConfigOutput {
	return o
}

func (o WebhookClientConfigOutput) ToWebhookClientConfigOutputWithContext(ctx context.Context) WebhookClientConfigOutput {
	return o
}

func (o WebhookClientConfigOutput) ToWebhookClientConfigPtrOutput() WebhookClientConfigPtrOutput {
	return o.ToWebhookClientConfigPtrOutputWithContext(context.Background())
}

func (o WebhookClientConfigOutput) ToWebhookClientConfigPtrOutputWithContext(ctx context.Context) WebhookClientConfigPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebhookClientConfig) *WebhookClientConfig {
		return &v
	}).(WebhookClientConfigPtrOutput)
}

// caBundle is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.
func (o WebhookClientConfigOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookClientConfig) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

// service is a reference to the service for this webhook. Either service or url must be specified.
//
// If the webhook is running within the cluster, then you should use `service`.
func (o WebhookClientConfigOutput) Service() ServiceReferencePtrOutput {
	return o.ApplyT(func(v WebhookClientConfig) *ServiceReference { return v.Service }).(ServiceReferencePtrOutput)
}

// url gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.
//
// The `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.
//
// Please note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.
//
// The scheme must be "https"; the URL must begin with "https://".
//
// A path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.
//
// Attempting to use a user or basic auth e.g. "user:password@" is not allowed. Fragments ("#...") and query parameters ("?...") are not allowed, either.
func (o WebhookClientConfigOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookClientConfig) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type WebhookClientConfigPtrOutput struct{ *pulumi.OutputState }

func (WebhookClientConfigPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookClientConfig)(nil)).Elem()
}

func (o WebhookClientConfigPtrOutput) ToWebhookClientConfigPtrOutput() WebhookClientConfigPtrOutput {
	return o
}

func (o WebhookClientConfigPtrOutput) ToWebhookClientConfigPtrOutputWithContext(ctx context.Context) WebhookClientConfigPtrOutput {
	return o
}

func (o WebhookClientConfigPtrOutput) Elem() WebhookClientConfigOutput {
	return o.ApplyT(func(v *WebhookClientConfig) WebhookClientConfig {
		if v != nil {
			return *v
		}
		var ret WebhookClientConfig
		return ret
	}).(WebhookClientConfigOutput)
}

// caBundle is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.
func (o WebhookClientConfigPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookClientConfig) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

// service is a reference to the service for this webhook. Either service or url must be specified.
//
// If the webhook is running within the cluster, then you should use `service`.
func (o WebhookClientConfigPtrOutput) Service() ServiceReferencePtrOutput {
	return o.ApplyT(func(v *WebhookClientConfig) *ServiceReference {
		if v == nil {
			return nil
		}
		return v.Service
	}).(ServiceReferencePtrOutput)
}

// url gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.
//
// The `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.
//
// Please note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.
//
// The scheme must be "https"; the URL must begin with "https://".
//
// A path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.
//
// Attempting to use a user or basic auth e.g. "user:password@" is not allowed. Fragments ("#...") and query parameters ("?...") are not allowed, either.
func (o WebhookClientConfigPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookClientConfig) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

// WebhookClientConfig contains the information to make a TLS connection with the webhook.
type WebhookClientConfigPatch struct {
	// caBundle is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.
	CaBundle *string `pulumi:"caBundle"`
	// service is a reference to the service for this webhook. Either service or url must be specified.
	//
	// If the webhook is running within the cluster, then you should use `service`.
	Service *ServiceReferencePatch `pulumi:"service"`
	// url gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.
	//
	// The `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.
	//
	// Please note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.
	//
	// The scheme must be "https"; the URL must begin with "https://".
	//
	// A path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.
	//
	// Attempting to use a user or basic auth e.g. "user:password@" is not allowed. Fragments ("#...") and query parameters ("?...") are not allowed, either.
	Url *string `pulumi:"url"`
}

// WebhookClientConfigPatchInput is an input type that accepts WebhookClientConfigPatchArgs and WebhookClientConfigPatchOutput values.
// You can construct a concrete instance of `WebhookClientConfigPatchInput` via:
//
//	WebhookClientConfigPatchArgs{...}
type WebhookClientConfigPatchInput interface {
	pulumi.Input

	ToWebhookClientConfigPatchOutput() WebhookClientConfigPatchOutput
	ToWebhookClientConfigPatchOutputWithContext(context.Context) WebhookClientConfigPatchOutput
}

// WebhookClientConfig contains the information to make a TLS connection with the webhook.
type WebhookClientConfigPatchArgs struct {
	// caBundle is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.
	CaBundle pulumi.StringPtrInput `pulumi:"caBundle"`
	// service is a reference to the service for this webhook. Either service or url must be specified.
	//
	// If the webhook is running within the cluster, then you should use `service`.
	Service ServiceReferencePatchPtrInput `pulumi:"service"`
	// url gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.
	//
	// The `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.
	//
	// Please note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.
	//
	// The scheme must be "https"; the URL must begin with "https://".
	//
	// A path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.
	//
	// Attempting to use a user or basic auth e.g. "user:password@" is not allowed. Fragments ("#...") and query parameters ("?...") are not allowed, either.
	Url pulumi.StringPtrInput `pulumi:"url"`
}

func (WebhookClientConfigPatchArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookClientConfigPatch)(nil)).Elem()
}

func (i WebhookClientConfigPatchArgs) ToWebhookClientConfigPatchOutput() WebhookClientConfigPatchOutput {
	return i.ToWebhookClientConfigPatchOutputWithContext(context.Background())
}

func (i WebhookClientConfigPatchArgs) ToWebhookClientConfigPatchOutputWithContext(ctx context.Context) WebhookClientConfigPatchOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookClientConfigPatchOutput)
}

func (i WebhookClientConfigPatchArgs) ToWebhookClientConfigPatchPtrOutput() WebhookClientConfigPatchPtrOutput {
	return i.ToWebhookClientConfigPatchPtrOutputWithContext(context.Background())
}

func (i WebhookClientConfigPatchArgs) ToWebhookClientConfigPatchPtrOutputWithContext(ctx context.Context) WebhookClientConfigPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookClientConfigPatchOutput).ToWebhookClientConfigPatchPtrOutputWithContext(ctx)
}

// WebhookClientConfigPatchPtrInput is an input type that accepts WebhookClientConfigPatchArgs, WebhookClientConfigPatchPtr and WebhookClientConfigPatchPtrOutput values.
// You can construct a concrete instance of `WebhookClientConfigPatchPtrInput` via:
//
//	        WebhookClientConfigPatchArgs{...}
//
//	or:
//
//	        nil
type WebhookClientConfigPatchPtrInput interface {
	pulumi.Input

	ToWebhookClientConfigPatchPtrOutput() WebhookClientConfigPatchPtrOutput
	ToWebhookClientConfigPatchPtrOutputWithContext(context.Context) WebhookClientConfigPatchPtrOutput
}

type webhookClientConfigPatchPtrType WebhookClientConfigPatchArgs

func WebhookClientConfigPatchPtr(v *WebhookClientConfigPatchArgs) WebhookClientConfigPatchPtrInput {
	return (*webhookClientConfigPatchPtrType)(v)
}

func (*webhookClientConfigPatchPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookClientConfigPatch)(nil)).Elem()
}

func (i *webhookClientConfigPatchPtrType) ToWebhookClientConfigPatchPtrOutput() WebhookClientConfigPatchPtrOutput {
	return i.ToWebhookClientConfigPatchPtrOutputWithContext(context.Background())
}

func (i *webhookClientConfigPatchPtrType) ToWebhookClientConfigPatchPtrOutputWithContext(ctx context.Context) WebhookClientConfigPatchPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(WebhookClientConfigPatchPtrOutput)
}

// WebhookClientConfig contains the information to make a TLS connection with the webhook.
type WebhookClientConfigPatchOutput struct{ *pulumi.OutputState }

func (WebhookClientConfigPatchOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*WebhookClientConfigPatch)(nil)).Elem()
}

func (o WebhookClientConfigPatchOutput) ToWebhookClientConfigPatchOutput() WebhookClientConfigPatchOutput {
	return o
}

func (o WebhookClientConfigPatchOutput) ToWebhookClientConfigPatchOutputWithContext(ctx context.Context) WebhookClientConfigPatchOutput {
	return o
}

func (o WebhookClientConfigPatchOutput) ToWebhookClientConfigPatchPtrOutput() WebhookClientConfigPatchPtrOutput {
	return o.ToWebhookClientConfigPatchPtrOutputWithContext(context.Background())
}

func (o WebhookClientConfigPatchOutput) ToWebhookClientConfigPatchPtrOutputWithContext(ctx context.Context) WebhookClientConfigPatchPtrOutput {
	return o.ApplyTWithContext(ctx, func(_ context.Context, v WebhookClientConfigPatch) *WebhookClientConfigPatch {
		return &v
	}).(WebhookClientConfigPatchPtrOutput)
}

// caBundle is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.
func (o WebhookClientConfigPatchOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookClientConfigPatch) *string { return v.CaBundle }).(pulumi.StringPtrOutput)
}

// service is a reference to the service for this webhook. Either service or url must be specified.
//
// If the webhook is running within the cluster, then you should use `service`.
func (o WebhookClientConfigPatchOutput) Service() ServiceReferencePatchPtrOutput {
	return o.ApplyT(func(v WebhookClientConfigPatch) *ServiceReferencePatch { return v.Service }).(ServiceReferencePatchPtrOutput)
}

// url gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.
//
// The `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.
//
// Please note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.
//
// The scheme must be "https"; the URL must begin with "https://".
//
// A path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.
//
// Attempting to use a user or basic auth e.g. "user:password@" is not allowed. Fragments ("#...") and query parameters ("?...") are not allowed, either.
func (o WebhookClientConfigPatchOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v WebhookClientConfigPatch) *string { return v.Url }).(pulumi.StringPtrOutput)
}

type WebhookClientConfigPatchPtrOutput struct{ *pulumi.OutputState }

func (WebhookClientConfigPatchPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**WebhookClientConfigPatch)(nil)).Elem()
}

func (o WebhookClientConfigPatchPtrOutput) ToWebhookClientConfigPatchPtrOutput() WebhookClientConfigPatchPtrOutput {
	return o
}

func (o WebhookClientConfigPatchPtrOutput) ToWebhookClientConfigPatchPtrOutputWithContext(ctx context.Context) WebhookClientConfigPatchPtrOutput {
	return o
}

func (o WebhookClientConfigPatchPtrOutput) Elem() WebhookClientConfigPatchOutput {
	return o.ApplyT(func(v *WebhookClientConfigPatch) WebhookClientConfigPatch {
		if v != nil {
			return *v
		}
		var ret WebhookClientConfigPatch
		return ret
	}).(WebhookClientConfigPatchOutput)
}

// caBundle is a PEM encoded CA bundle which will be used to validate the webhook's server certificate. If unspecified, system trust roots on the apiserver are used.
func (o WebhookClientConfigPatchPtrOutput) CaBundle() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookClientConfigPatch) *string {
		if v == nil {
			return nil
		}
		return v.CaBundle
	}).(pulumi.StringPtrOutput)
}

// service is a reference to the service for this webhook. Either service or url must be specified.
//
// If the webhook is running within the cluster, then you should use `service`.
func (o WebhookClientConfigPatchPtrOutput) Service() ServiceReferencePatchPtrOutput {
	return o.ApplyT(func(v *WebhookClientConfigPatch) *ServiceReferencePatch {
		if v == nil {
			return nil
		}
		return v.Service
	}).(ServiceReferencePatchPtrOutput)
}

// url gives the location of the webhook, in standard URL form (`scheme://host:port/path`). Exactly one of `url` or `service` must be specified.
//
// The `host` should not refer to a service running in the cluster; use the `service` field instead. The host might be resolved via external DNS in some apiservers (e.g., `kube-apiserver` cannot resolve in-cluster DNS as that would be a layering violation). `host` may also be an IP address.
//
// Please note that using `localhost` or `127.0.0.1` as a `host` is risky unless you take great care to run this webhook on all hosts which run an apiserver which might need to make calls to this webhook. Such installs are likely to be non-portable, i.e., not easy to turn up in a new cluster.
//
// The scheme must be "https"; the URL must begin with "https://".
//
// A path is optional, and if present may be any string permissible in a URL. You may use the path to pass an arbitrary string to the webhook, for example, a cluster identifier.
//
// Attempting to use a user or basic auth e.g. "user:password@" is not allowed. Fragments ("#...") and query parameters ("?...") are not allowed, either.
func (o WebhookClientConfigPatchPtrOutput) Url() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *WebhookClientConfigPatch) *string {
		if v == nil {
			return nil
		}
		return v.Url
	}).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceColumnDefinitionInput)(nil)).Elem(), CustomResourceColumnDefinitionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceColumnDefinitionArrayInput)(nil)).Elem(), CustomResourceColumnDefinitionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceColumnDefinitionPatchInput)(nil)).Elem(), CustomResourceColumnDefinitionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceColumnDefinitionPatchArrayInput)(nil)).Elem(), CustomResourceColumnDefinitionPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceConversionInput)(nil)).Elem(), CustomResourceConversionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceConversionPtrInput)(nil)).Elem(), CustomResourceConversionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceConversionPatchInput)(nil)).Elem(), CustomResourceConversionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceConversionPatchPtrInput)(nil)).Elem(), CustomResourceConversionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceDefinitionTypeInput)(nil)).Elem(), CustomResourceDefinitionTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceDefinitionTypeArrayInput)(nil)).Elem(), CustomResourceDefinitionTypeArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceDefinitionConditionInput)(nil)).Elem(), CustomResourceDefinitionConditionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceDefinitionConditionArrayInput)(nil)).Elem(), CustomResourceDefinitionConditionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceDefinitionConditionPatchInput)(nil)).Elem(), CustomResourceDefinitionConditionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceDefinitionConditionPatchArrayInput)(nil)).Elem(), CustomResourceDefinitionConditionPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceDefinitionListTypeInput)(nil)).Elem(), CustomResourceDefinitionListTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceDefinitionNamesInput)(nil)).Elem(), CustomResourceDefinitionNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceDefinitionNamesPtrInput)(nil)).Elem(), CustomResourceDefinitionNamesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceDefinitionNamesPatchInput)(nil)).Elem(), CustomResourceDefinitionNamesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceDefinitionNamesPatchPtrInput)(nil)).Elem(), CustomResourceDefinitionNamesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceDefinitionPatchTypeInput)(nil)).Elem(), CustomResourceDefinitionPatchTypeArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceDefinitionSpecInput)(nil)).Elem(), CustomResourceDefinitionSpecArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceDefinitionSpecPatchInput)(nil)).Elem(), CustomResourceDefinitionSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceDefinitionSpecPatchPtrInput)(nil)).Elem(), CustomResourceDefinitionSpecPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceDefinitionStatusInput)(nil)).Elem(), CustomResourceDefinitionStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceDefinitionStatusPtrInput)(nil)).Elem(), CustomResourceDefinitionStatusArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceDefinitionStatusPatchInput)(nil)).Elem(), CustomResourceDefinitionStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceDefinitionStatusPatchPtrInput)(nil)).Elem(), CustomResourceDefinitionStatusPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceDefinitionVersionInput)(nil)).Elem(), CustomResourceDefinitionVersionArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceDefinitionVersionArrayInput)(nil)).Elem(), CustomResourceDefinitionVersionArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceDefinitionVersionPatchInput)(nil)).Elem(), CustomResourceDefinitionVersionPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceDefinitionVersionPatchArrayInput)(nil)).Elem(), CustomResourceDefinitionVersionPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceSubresourceScaleInput)(nil)).Elem(), CustomResourceSubresourceScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceSubresourceScalePtrInput)(nil)).Elem(), CustomResourceSubresourceScaleArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceSubresourceScalePatchInput)(nil)).Elem(), CustomResourceSubresourceScalePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceSubresourceScalePatchPtrInput)(nil)).Elem(), CustomResourceSubresourceScalePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceSubresourcesInput)(nil)).Elem(), CustomResourceSubresourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceSubresourcesPtrInput)(nil)).Elem(), CustomResourceSubresourcesArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceSubresourcesPatchInput)(nil)).Elem(), CustomResourceSubresourcesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceSubresourcesPatchPtrInput)(nil)).Elem(), CustomResourceSubresourcesPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceValidationInput)(nil)).Elem(), CustomResourceValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceValidationPtrInput)(nil)).Elem(), CustomResourceValidationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceValidationPatchInput)(nil)).Elem(), CustomResourceValidationPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*CustomResourceValidationPatchPtrInput)(nil)).Elem(), CustomResourceValidationPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalDocumentationInput)(nil)).Elem(), ExternalDocumentationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalDocumentationPtrInput)(nil)).Elem(), ExternalDocumentationArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalDocumentationPatchInput)(nil)).Elem(), ExternalDocumentationPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ExternalDocumentationPatchPtrInput)(nil)).Elem(), ExternalDocumentationPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JSONSchemaPropsInput)(nil)).Elem(), JSONSchemaPropsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JSONSchemaPropsPtrInput)(nil)).Elem(), JSONSchemaPropsArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JSONSchemaPropsArrayInput)(nil)).Elem(), JSONSchemaPropsArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*JSONSchemaPropsMapInput)(nil)).Elem(), JSONSchemaPropsMap{})
	pulumi.RegisterInputType(reflect.TypeOf((*JSONSchemaPropsPatchInput)(nil)).Elem(), JSONSchemaPropsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JSONSchemaPropsPatchPtrInput)(nil)).Elem(), JSONSchemaPropsPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*JSONSchemaPropsPatchArrayInput)(nil)).Elem(), JSONSchemaPropsPatchArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceReferenceInput)(nil)).Elem(), ServiceReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceReferencePtrInput)(nil)).Elem(), ServiceReferenceArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceReferencePatchInput)(nil)).Elem(), ServiceReferencePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceReferencePatchPtrInput)(nil)).Elem(), ServiceReferencePatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookClientConfigInput)(nil)).Elem(), WebhookClientConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookClientConfigPtrInput)(nil)).Elem(), WebhookClientConfigArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookClientConfigPatchInput)(nil)).Elem(), WebhookClientConfigPatchArgs{})
	pulumi.RegisterInputType(reflect.TypeOf((*WebhookClientConfigPatchPtrInput)(nil)).Elem(), WebhookClientConfigPatchArgs{})
	pulumi.RegisterOutputType(CustomResourceColumnDefinitionOutput{})
	pulumi.RegisterOutputType(CustomResourceColumnDefinitionArrayOutput{})
	pulumi.RegisterOutputType(CustomResourceColumnDefinitionPatchOutput{})
	pulumi.RegisterOutputType(CustomResourceColumnDefinitionPatchArrayOutput{})
	pulumi.RegisterOutputType(CustomResourceConversionOutput{})
	pulumi.RegisterOutputType(CustomResourceConversionPtrOutput{})
	pulumi.RegisterOutputType(CustomResourceConversionPatchOutput{})
	pulumi.RegisterOutputType(CustomResourceConversionPatchPtrOutput{})
	pulumi.RegisterOutputType(CustomResourceDefinitionTypeOutput{})
	pulumi.RegisterOutputType(CustomResourceDefinitionTypeArrayOutput{})
	pulumi.RegisterOutputType(CustomResourceDefinitionConditionOutput{})
	pulumi.RegisterOutputType(CustomResourceDefinitionConditionArrayOutput{})
	pulumi.RegisterOutputType(CustomResourceDefinitionConditionPatchOutput{})
	pulumi.RegisterOutputType(CustomResourceDefinitionConditionPatchArrayOutput{})
	pulumi.RegisterOutputType(CustomResourceDefinitionListTypeOutput{})
	pulumi.RegisterOutputType(CustomResourceDefinitionNamesOutput{})
	pulumi.RegisterOutputType(CustomResourceDefinitionNamesPtrOutput{})
	pulumi.RegisterOutputType(CustomResourceDefinitionNamesPatchOutput{})
	pulumi.RegisterOutputType(CustomResourceDefinitionNamesPatchPtrOutput{})
	pulumi.RegisterOutputType(CustomResourceDefinitionPatchTypeOutput{})
	pulumi.RegisterOutputType(CustomResourceDefinitionSpecOutput{})
	pulumi.RegisterOutputType(CustomResourceDefinitionSpecPatchOutput{})
	pulumi.RegisterOutputType(CustomResourceDefinitionSpecPatchPtrOutput{})
	pulumi.RegisterOutputType(CustomResourceDefinitionStatusOutput{})
	pulumi.RegisterOutputType(CustomResourceDefinitionStatusPtrOutput{})
	pulumi.RegisterOutputType(CustomResourceDefinitionStatusPatchOutput{})
	pulumi.RegisterOutputType(CustomResourceDefinitionStatusPatchPtrOutput{})
	pulumi.RegisterOutputType(CustomResourceDefinitionVersionOutput{})
	pulumi.RegisterOutputType(CustomResourceDefinitionVersionArrayOutput{})
	pulumi.RegisterOutputType(CustomResourceDefinitionVersionPatchOutput{})
	pulumi.RegisterOutputType(CustomResourceDefinitionVersionPatchArrayOutput{})
	pulumi.RegisterOutputType(CustomResourceSubresourceScaleOutput{})
	pulumi.RegisterOutputType(CustomResourceSubresourceScalePtrOutput{})
	pulumi.RegisterOutputType(CustomResourceSubresourceScalePatchOutput{})
	pulumi.RegisterOutputType(CustomResourceSubresourceScalePatchPtrOutput{})
	pulumi.RegisterOutputType(CustomResourceSubresourcesOutput{})
	pulumi.RegisterOutputType(CustomResourceSubresourcesPtrOutput{})
	pulumi.RegisterOutputType(CustomResourceSubresourcesPatchOutput{})
	pulumi.RegisterOutputType(CustomResourceSubresourcesPatchPtrOutput{})
	pulumi.RegisterOutputType(CustomResourceValidationOutput{})
	pulumi.RegisterOutputType(CustomResourceValidationPtrOutput{})
	pulumi.RegisterOutputType(CustomResourceValidationPatchOutput{})
	pulumi.RegisterOutputType(CustomResourceValidationPatchPtrOutput{})
	pulumi.RegisterOutputType(ExternalDocumentationOutput{})
	pulumi.RegisterOutputType(ExternalDocumentationPtrOutput{})
	pulumi.RegisterOutputType(ExternalDocumentationPatchOutput{})
	pulumi.RegisterOutputType(ExternalDocumentationPatchPtrOutput{})
	pulumi.RegisterOutputType(JSONSchemaPropsOutput{})
	pulumi.RegisterOutputType(JSONSchemaPropsPtrOutput{})
	pulumi.RegisterOutputType(JSONSchemaPropsArrayOutput{})
	pulumi.RegisterOutputType(JSONSchemaPropsMapOutput{})
	pulumi.RegisterOutputType(JSONSchemaPropsPatchOutput{})
	pulumi.RegisterOutputType(JSONSchemaPropsPatchPtrOutput{})
	pulumi.RegisterOutputType(JSONSchemaPropsPatchArrayOutput{})
	pulumi.RegisterOutputType(ServiceReferenceOutput{})
	pulumi.RegisterOutputType(ServiceReferencePtrOutput{})
	pulumi.RegisterOutputType(ServiceReferencePatchOutput{})
	pulumi.RegisterOutputType(ServiceReferencePatchPtrOutput{})
	pulumi.RegisterOutputType(WebhookClientConfigOutput{})
	pulumi.RegisterOutputType(WebhookClientConfigPtrOutput{})
	pulumi.RegisterOutputType(WebhookClientConfigPatchOutput{})
	pulumi.RegisterOutputType(WebhookClientConfigPatchPtrOutput{})
}
