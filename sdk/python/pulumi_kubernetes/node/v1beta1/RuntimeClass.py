# *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime

from ... import tables


class RuntimeClass(pulumi.CustomResource):
    """
    RuntimeClass defines a class of container runtime supported in the cluster. The RuntimeClass is
    used to determine which container runtime is used to run all containers in a pod. RuntimeClasses
    are (currently) manually defined by a user or cluster provisioner, and referenced in the
    PodSpec. The Kubelet is responsible for resolving the RuntimeClassName reference before running
    the pod.  For more details, see https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md
    """
    def __init__(self, __name__, __opts__=None, handler=None, metadata=None):
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['apiVersion'] = 'node.k8s.io/v1beta1'
        __props__['kind'] = 'RuntimeClass'
        if handler is None:
            raise TypeError('Missing required property handler')
        __props__['handler'] = handler
        __props__['metadata'] = metadata

        super(RuntimeClass, self).__init__(
            "kubernetes:node.k8s.io/v1beta1:RuntimeClass",
            __name__,
            __props__,
            __opts__)

    def translate_output_property(self, prop: str) -> str:
        return tables._CASING_FORWARD_TABLE.get(prop) or prop

    def translate_input_property(self, prop: str) -> str:
        return tables._CASING_BACKWARD_TABLE.get(prop) or prop
