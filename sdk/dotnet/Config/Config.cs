// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;

namespace Pulumi.Kubernetes
{
    public static class Config
    {
        private static readonly Pulumi.Config __config = new Pulumi.Config("kubernetes");
        /// <summary>
        /// If present, the name of the kubeconfig cluster to use.
        /// </summary>
        public static string? Cluster { get; set; } = __config.Get("cluster");

        /// <summary>
        /// If present, the name of the kubeconfig context to use.
        /// </summary>
        public static string? Context { get; set; } = __config.Get("context");

        /// <summary>
        /// BETA FEATURE - If present and set to true, enable server-side diff calculations.
        /// This feature is in developer preview, and is disabled by default.
        /// 
        /// This config can be specified in the following ways, using this precedence:
        /// 1. This `enableDryRun` parameter.
        /// 2. The `PULUMI_K8S_ENABLE_DRY_RUN` environment variable.
        /// </summary>
        public static bool? EnableDryRun { get; set; } = __config.GetBoolean("enableDryRun");

        /// <summary>
        /// The contents of a kubeconfig file. If this is set, this config will be used instead of $KUBECONFIG.
        /// </summary>
        public static string? KubeConfig { get; set; } = __config.Get("kubeconfig");

        /// <summary>
        /// If present, the default namespace to use. This flag is ignored for cluster-scoped resources.
        /// 
        /// A namespace can be specified in multiple places, and the precedence is as follows:
        /// 1. `.metadata.namespace` set on the resource.
        /// 2. This `namespace` parameter.
        /// 3. `namespace` set for the active context in the kubeconfig.
        /// </summary>
        public static string? Namespace { get; set; } = __config.Get("namespace");

        /// <summary>
        /// BETA FEATURE - If present, render resource manifests to this directory. In this mode, resources will not
        /// be created on a Kubernetes cluster, but the rendered manifests will be kept in sync with changes
        /// to the Pulumi program. This feature is in developer preview, and is disabled by default.
        /// 
        /// Note that some computed Outputs such as status fields will not be populated
        /// since the resources are not created on a Kubernetes cluster. These Output values will remain undefined,
        /// and may result in an error if they are referenced by other resources. Also note that any secret values
        /// used in these resources will be rendered in plaintext to the resulting YAML.
        /// </summary>
        public static string? RenderYamlToDirectory { get; set; } = __config.Get("renderYamlToDirectory");

        /// <summary>
        /// If present and set to true, suppress apiVersion deprecation warnings from the CLI.
        /// 
        /// This config can be specified in the following ways, using this precedence:
        /// 1. This `suppressDeprecationWarnings` parameter.
        /// 2. The `PULUMI_K8S_SUPPRESS_DEPRECATION_WARNINGS` environment variable.
        /// </summary>
        public static bool? SuppressDeprecationWarnings { get; set; } = __config.GetBoolean("suppressDeprecationWarnings");

    }
}
