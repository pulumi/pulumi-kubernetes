// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Resource.V1Alpha2
{

    /// <summary>
    /// ResourceClass is used by administrators to influence how resources are allocated.
    /// 
    /// This is an alpha type and requires enabling the DynamicResourceAllocation feature gate.
    /// </summary>
    [OutputType]
    public sealed class ResourceClass
    {
        /// <summary>
        /// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
        /// </summary>
        public readonly string ApiVersion;
        /// <summary>
        /// DriverName defines the name of the dynamic resource driver that is used for allocation of a ResourceClaim that uses this class.
        /// 
        /// Resource drivers have a unique name in forward domain order (acme.example.com).
        /// </summary>
        public readonly string DriverName;
        /// <summary>
        /// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Standard object metadata
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Meta.V1.ObjectMeta Metadata;
        /// <summary>
        /// ParametersRef references an arbitrary separate object that may hold parameters that will be used by the driver when allocating a resource that uses this class. A dynamic resource driver can distinguish between parameters stored here and and those stored in ResourceClaimSpec.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Resource.V1Alpha2.ResourceClassParametersReference ParametersRef;
        /// <summary>
        /// If and only if allocation of claims using this class is handled via structured parameters, then StructuredParameters must be set to true.
        /// </summary>
        public readonly bool StructuredParameters;
        /// <summary>
        /// Only nodes matching the selector will be considered by the scheduler when trying to find a Node that fits a Pod when that Pod uses a ResourceClaim that has not been allocated yet.
        /// 
        /// Setting this field is optional. If null, all nodes are candidates.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Core.V1.NodeSelector SuitableNodes;

        [OutputConstructor]
        private ResourceClass(
            string apiVersion,

            string driverName,

            string kind,

            Pulumi.Kubernetes.Types.Outputs.Meta.V1.ObjectMeta metadata,

            Pulumi.Kubernetes.Types.Outputs.Resource.V1Alpha2.ResourceClassParametersReference parametersRef,

            bool structuredParameters,

            Pulumi.Kubernetes.Types.Outputs.Core.V1.NodeSelector suitableNodes)
        {
            ApiVersion = apiVersion;
            DriverName = driverName;
            Kind = kind;
            Metadata = metadata;
            ParametersRef = parametersRef;
            StructuredParameters = structuredParameters;
            SuitableNodes = suitableNodes;
        }
    }
}
