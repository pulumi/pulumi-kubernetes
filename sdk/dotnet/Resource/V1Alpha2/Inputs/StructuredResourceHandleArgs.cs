// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Resource.V1Alpha2
{

    /// <summary>
    /// StructuredResourceHandle is the in-tree representation of the allocation result.
    /// </summary>
    public class StructuredResourceHandleArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// NodeName is the name of the node providing the necessary resources if the resources are local to a node.
        /// </summary>
        [Input("nodeName")]
        public Input<string>? NodeName { get; set; }

        [Input("results", required: true)]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Resource.V1Alpha2.DriverAllocationResultArgs>? _results;

        /// <summary>
        /// Results lists all allocated driver resources.
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Resource.V1Alpha2.DriverAllocationResultArgs> Results
        {
            get => _results ?? (_results = new InputList<Pulumi.Kubernetes.Types.Inputs.Resource.V1Alpha2.DriverAllocationResultArgs>());
            set => _results = value;
        }

        /// <summary>
        /// VendorClaimParameters are the per-claim configuration parameters from the resource claim parameters at the time that the claim was allocated.
        /// </summary>
        [Input("vendorClaimParameters")]
        public InputJson? VendorClaimParameters { get; set; }

        /// <summary>
        /// VendorClassParameters are the per-claim configuration parameters from the resource class at the time that the claim was allocated.
        /// </summary>
        [Input("vendorClassParameters")]
        public InputJson? VendorClassParameters { get; set; }

        public StructuredResourceHandleArgs()
        {
        }
        public static new StructuredResourceHandleArgs Empty => new StructuredResourceHandleArgs();
    }
}
