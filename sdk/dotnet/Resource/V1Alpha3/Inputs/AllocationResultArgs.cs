// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Resource.V1Alpha3
{

    /// <summary>
    /// AllocationResult contains attributes of an allocated resource.
    /// </summary>
    public class AllocationResultArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Controller is the name of the DRA driver which handled the allocation. That driver is also responsible for deallocating the claim. It is empty when the claim can be deallocated without involving a driver.
        /// 
        /// A driver may allocate devices provided by other drivers, so this driver name here can be different from the driver names listed for the results.
        /// 
        /// This is an alpha field and requires enabling the DRAControlPlaneController feature gate.
        /// </summary>
        [Input("controller")]
        public Input<string>? Controller { get; set; }

        /// <summary>
        /// Devices is the result of allocating devices.
        /// </summary>
        [Input("devices")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Resource.V1Alpha3.DeviceAllocationResultArgs>? Devices { get; set; }

        /// <summary>
        /// NodeSelector defines where the allocated resources are available. If unset, they are available everywhere.
        /// </summary>
        [Input("nodeSelector")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Core.V1.NodeSelectorArgs>? NodeSelector { get; set; }

        public AllocationResultArgs()
        {
        }
        public static new AllocationResultArgs Empty => new AllocationResultArgs();
    }
}
