// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Resource.V1Alpha3
{

    /// <summary>
    /// DeviceClassSpec is used in a [DeviceClass] to define what can be allocated and how to configure it.
    /// </summary>
    public class DeviceClassSpecPatchArgs : global::Pulumi.ResourceArgs
    {
        [Input("config")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Resource.V1Alpha3.DeviceClassConfigurationPatchArgs>? _config;

        /// <summary>
        /// Config defines configuration parameters that apply to each device that is claimed via this class. Some classses may potentially be satisfied by multiple drivers, so each instance of a vendor configuration applies to exactly one driver.
        /// 
        /// They are passed to the driver, but are not considered while allocating the claim.
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Resource.V1Alpha3.DeviceClassConfigurationPatchArgs> Config
        {
            get => _config ?? (_config = new InputList<Pulumi.Kubernetes.Types.Inputs.Resource.V1Alpha3.DeviceClassConfigurationPatchArgs>());
            set => _config = value;
        }

        [Input("selectors")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Resource.V1Alpha3.DeviceSelectorPatchArgs>? _selectors;

        /// <summary>
        /// Each selector must be satisfied by a device which is claimed via this class.
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Resource.V1Alpha3.DeviceSelectorPatchArgs> Selectors
        {
            get => _selectors ?? (_selectors = new InputList<Pulumi.Kubernetes.Types.Inputs.Resource.V1Alpha3.DeviceSelectorPatchArgs>());
            set => _selectors = value;
        }

        /// <summary>
        /// Only nodes matching the selector will be considered by the scheduler when trying to find a Node that fits a Pod when that Pod uses a claim that has not been allocated yet *and* that claim gets allocated through a control plane controller. It is ignored when the claim does not use a control plane controller for allocation.
        /// 
        /// Setting this field is optional. If unset, all Nodes are candidates.
        /// 
        /// This is an alpha field and requires enabling the DRAControlPlaneController feature gate.
        /// </summary>
        [Input("suitableNodes")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Core.V1.NodeSelectorPatchArgs>? SuitableNodes { get; set; }

        public DeviceClassSpecPatchArgs()
        {
        }
        public static new DeviceClassSpecPatchArgs Empty => new DeviceClassSpecPatchArgs();
    }
}
