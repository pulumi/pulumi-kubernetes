// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Resource.V1Alpha3
{

    /// <summary>
    /// DeviceClaim defines how to request devices with a ResourceClaim.
    /// </summary>
    [OutputType]
    public sealed class DeviceClaimPatch
    {
        /// <summary>
        /// This field holds configuration for multiple potential drivers which could satisfy requests in this claim. It is ignored while allocating the claim.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Resource.V1Alpha3.DeviceClaimConfigurationPatch> Config;
        /// <summary>
        /// These constraints must be satisfied by the set of devices that get allocated for the claim.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Resource.V1Alpha3.DeviceConstraintPatch> Constraints;
        /// <summary>
        /// Requests represent individual requests for distinct devices which must all be satisfied. If empty, nothing needs to be allocated.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Resource.V1Alpha3.DeviceRequestPatch> Requests;

        [OutputConstructor]
        private DeviceClaimPatch(
            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Resource.V1Alpha3.DeviceClaimConfigurationPatch> config,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Resource.V1Alpha3.DeviceConstraintPatch> constraints,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Resource.V1Alpha3.DeviceRequestPatch> requests)
        {
            Config = config;
            Constraints = constraints;
            Requests = requests;
        }
    }
}
