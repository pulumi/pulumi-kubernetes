// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Resource.V1Alpha3
{

    /// <summary>
    /// BasicDevice defines one device instance.
    /// </summary>
    [OutputType]
    public sealed class BasicDevicePatch
    {
        /// <summary>
        /// Attributes defines the set of attributes for this device. The name of each attribute must be unique in that set.
        /// 
        /// The maximum number of attributes and capacities combined is 32.
        /// </summary>
        public readonly ImmutableDictionary<string, Pulumi.Kubernetes.Types.Outputs.Resource.V1Alpha3.DeviceAttribute> Attributes;
        /// <summary>
        /// Capacity defines the set of capacities for this device. The name of each capacity must be unique in that set.
        /// 
        /// The maximum number of attributes and capacities combined is 32.
        /// </summary>
        public readonly ImmutableDictionary<string, string> Capacity;

        [OutputConstructor]
        private BasicDevicePatch(
            ImmutableDictionary<string, Pulumi.Kubernetes.Types.Outputs.Resource.V1Alpha3.DeviceAttribute> attributes,

            ImmutableDictionary<string, string> capacity)
        {
            Attributes = attributes;
            Capacity = capacity;
        }
    }
}
