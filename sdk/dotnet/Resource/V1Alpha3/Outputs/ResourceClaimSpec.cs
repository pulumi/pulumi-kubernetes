// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Resource.V1Alpha3
{

    /// <summary>
    /// ResourceClaimSpec defines what is being requested in a ResourceClaim and how to configure it.
    /// </summary>
    [OutputType]
    public sealed class ResourceClaimSpec
    {
        /// <summary>
        /// Controller is the name of the DRA driver that is meant to handle allocation of this claim. If empty, allocation is handled by the scheduler while scheduling a pod.
        /// 
        /// Must be a DNS subdomain and should end with a DNS domain owned by the vendor of the driver.
        /// 
        /// This is an alpha field and requires enabling the DRAControlPlaneController feature gate.
        /// </summary>
        public readonly string Controller;
        /// <summary>
        /// Devices defines how to request devices.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Resource.V1Alpha3.DeviceClaim Devices;

        [OutputConstructor]
        private ResourceClaimSpec(
            string controller,

            Pulumi.Kubernetes.Types.Outputs.Resource.V1Alpha3.DeviceClaim devices)
        {
            Controller = controller;
            Devices = devices;
        }
    }
}
