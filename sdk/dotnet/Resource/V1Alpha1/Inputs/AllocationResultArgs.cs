// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Resource.V1Alpha1
{

    /// <summary>
    /// AllocationResult contains attributed of an allocated resource.
    /// </summary>
    public class AllocationResultArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// This field will get set by the resource driver after it has allocated the resource driver to inform the scheduler where it can schedule Pods using the ResourceClaim.
        /// 
        /// Setting this field is optional. If null, the resource is available everywhere.
        /// </summary>
        [Input("availableOnNodes")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Core.V1.NodeSelectorArgs>? AvailableOnNodes { get; set; }

        /// <summary>
        /// ResourceHandle contains arbitrary data returned by the driver after a successful allocation. This is opaque for Kubernetes. Driver documentation may explain to users how to interpret this data if needed.
        /// 
        /// The maximum size of this field is 16KiB. This may get increased in the future, but not reduced.
        /// </summary>
        [Input("resourceHandle")]
        public Input<string>? ResourceHandle { get; set; }

        /// <summary>
        /// Shareable determines whether the resource supports more than one consumer at a time.
        /// </summary>
        [Input("shareable")]
        public Input<bool>? Shareable { get; set; }

        public AllocationResultArgs()
        {
        }
        public static new AllocationResultArgs Empty => new AllocationResultArgs();
    }
}
