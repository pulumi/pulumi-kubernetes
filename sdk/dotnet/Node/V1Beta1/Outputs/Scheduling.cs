// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Node.V1Beta1
{

    [OutputType]
    public sealed class Scheduling
    {
        /// <summary>
        /// nodeSelector lists labels that must be present on nodes that support this RuntimeClass. Pods using this RuntimeClass can only be scheduled to a node matched by this selector. The RuntimeClass nodeSelector is merged with a pod's existing nodeSelector. Any conflicts will cause the pod to be rejected in admission.
        /// </summary>
        public readonly ImmutableDictionary<string, string> NodeSelector;
        /// <summary>
        /// tolerations are appended (excluding duplicates) to pods running with this RuntimeClass during admission, effectively unioning the set of nodes tolerated by the pod and the RuntimeClass.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Core.V1.Toleration> Tolerations;

        [OutputConstructor]
        private Scheduling(
            ImmutableDictionary<string, string> nodeSelector,

            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Core.V1.Toleration> tolerations)
        {
            NodeSelector = nodeSelector;
            Tolerations = tolerations;
        }
    }
}
