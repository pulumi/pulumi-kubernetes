// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Discovery.V1
{

    /// <summary>
    /// Endpoint represents a single logical "backend" implementing a service.
    /// </summary>
    [OutputType]
    public sealed class Endpoint
    {
        /// <summary>
        /// addresses of this endpoint. For EndpointSlices of addressType "IPv4" or "IPv6", the values are IP addresses in canonical form. The syntax and semantics of other addressType values are not defined. This must contain at least one address but no more than 100. EndpointSlices generated by the EndpointSlice controller will always have exactly 1 address. No semantics are defined for additional addresses beyond the first, and kube-proxy does not look at them.
        /// </summary>
        public readonly ImmutableArray<string> Addresses;
        /// <summary>
        /// conditions contains information about the current status of the endpoint.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Discovery.V1.EndpointConditions Conditions;
        /// <summary>
        /// deprecatedTopology contains topology information part of the v1beta1 API. This field is deprecated, and will be removed when the v1beta1 API is removed (no sooner than kubernetes v1.24).  While this field can hold values, it is not writable through the v1 API, and any attempts to write to it will be silently ignored. Topology information can be found in the zone and nodeName fields instead.
        /// </summary>
        public readonly ImmutableDictionary<string, string> DeprecatedTopology;
        /// <summary>
        /// hints contains information associated with how an endpoint should be consumed.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Discovery.V1.EndpointHints Hints;
        /// <summary>
        /// hostname of this endpoint. This field may be used by consumers of endpoints to distinguish endpoints from each other (e.g. in DNS names). Multiple endpoints which use the same hostname should be considered fungible (e.g. multiple A values in DNS). Must be lowercase and pass DNS Label (RFC 1123) validation.
        /// </summary>
        public readonly string Hostname;
        /// <summary>
        /// nodeName represents the name of the Node hosting this endpoint. This can be used to determine endpoints local to a Node.
        /// </summary>
        public readonly string NodeName;
        /// <summary>
        /// targetRef is a reference to a Kubernetes object that represents this endpoint.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Core.V1.ObjectReference TargetRef;
        /// <summary>
        /// zone is the name of the Zone this endpoint exists in.
        /// </summary>
        public readonly string Zone;

        [OutputConstructor]
        private Endpoint(
            ImmutableArray<string> addresses,

            Pulumi.Kubernetes.Types.Outputs.Discovery.V1.EndpointConditions conditions,

            ImmutableDictionary<string, string> deprecatedTopology,

            Pulumi.Kubernetes.Types.Outputs.Discovery.V1.EndpointHints hints,

            string hostname,

            string nodeName,

            Pulumi.Kubernetes.Types.Outputs.Core.V1.ObjectReference targetRef,

            string zone)
        {
            Addresses = addresses;
            Conditions = conditions;
            DeprecatedTopology = deprecatedTopology;
            Hints = hints;
            Hostname = hostname;
            NodeName = nodeName;
            TargetRef = targetRef;
            Zone = zone;
        }
    }
}
