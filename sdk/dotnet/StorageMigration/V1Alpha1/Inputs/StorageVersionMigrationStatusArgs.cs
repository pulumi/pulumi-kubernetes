// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.StorageMigration.V1Alpha1
{

    /// <summary>
    /// Status of the storage version migration.
    /// </summary>
    public class StorageVersionMigrationStatusArgs : global::Pulumi.ResourceArgs
    {
        [Input("conditions")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.StorageMigration.V1Alpha1.MigrationConditionArgs>? _conditions;

        /// <summary>
        /// The latest available observations of the migration's current state.
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.StorageMigration.V1Alpha1.MigrationConditionArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Pulumi.Kubernetes.Types.Inputs.StorageMigration.V1Alpha1.MigrationConditionArgs>());
            set => _conditions = value;
        }

        /// <summary>
        /// ResourceVersion to compare with the GC cache for performing the migration. This is the current resource version of given group, version and resource when kube-controller-manager first observes this StorageVersionMigration resource.
        /// </summary>
        [Input("resourceVersion")]
        public Input<string>? ResourceVersion { get; set; }

        public StorageVersionMigrationStatusArgs()
        {
        }
        public static new StorageVersionMigrationStatusArgs Empty => new StorageVersionMigrationStatusArgs();
    }
}
