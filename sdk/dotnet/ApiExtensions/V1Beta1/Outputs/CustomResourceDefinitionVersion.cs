// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.ApiExtensions.V1Beta1
{

    [OutputType]
    public sealed class CustomResourceDefinitionVersion
    {
        /// <summary>
        /// additionalPrinterColumns specifies additional columns returned in Table output. See https://kubernetes.io/docs/reference/using-api/api-concepts/#receiving-resources-as-tables for details. Top-level and per-version columns are mutually exclusive. Per-version columns must not all be set to identical values (top-level columns should be used instead). If no top-level or per-version columns are specified, a single column displaying the age of the custom resource is used.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.ApiExtensions.V1Beta1.CustomResourceColumnDefinition> AdditionalPrinterColumns;
        /// <summary>
        /// name is the version name, e.g. “v1”, “v2beta1”, etc. The custom resources are served under this version at `/apis/&lt;group&gt;/&lt;version&gt;/...` if `served` is true.
        /// </summary>
        public readonly string Name;
        /// <summary>
        /// schema describes the schema used for validation and pruning of this version of the custom resource. Top-level and per-version schemas are mutually exclusive. Per-version schemas must not all be set to identical values (top-level validation schema should be used instead).
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.ApiExtensions.V1Beta1.CustomResourceValidation Schema;
        /// <summary>
        /// served is a flag enabling/disabling this version from being served via REST APIs
        /// </summary>
        public readonly bool Served;
        /// <summary>
        /// storage indicates this version should be used when persisting custom resources to storage. There must be exactly one version with storage=true.
        /// </summary>
        public readonly bool Storage;
        /// <summary>
        /// subresources specify what subresources this version of the defined custom resource have. Top-level and per-version subresources are mutually exclusive. Per-version subresources must not all be set to identical values (top-level subresources should be used instead).
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.ApiExtensions.V1Beta1.CustomResourceSubresources Subresources;

        [OutputConstructor]
        private CustomResourceDefinitionVersion(
            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.ApiExtensions.V1Beta1.CustomResourceColumnDefinition> additionalPrinterColumns,

            string name,

            Pulumi.Kubernetes.Types.Outputs.ApiExtensions.V1Beta1.CustomResourceValidation schema,

            bool served,

            bool storage,

            Pulumi.Kubernetes.Types.Outputs.ApiExtensions.V1Beta1.CustomResourceSubresources subresources)
        {
            AdditionalPrinterColumns = additionalPrinterColumns;
            Name = name;
            Schema = schema;
            Served = served;
            Storage = storage;
            Subresources = subresources;
        }
    }
}
