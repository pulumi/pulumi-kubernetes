// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.AdmissionRegistration.V1Alpha1
{

    /// <summary>
    /// Mutation specifies the CEL expression which is used to apply the Mutation.
    /// </summary>
    public class MutationPatchArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// applyConfiguration defines the desired configuration values of an object. The configuration is applied to the admission object using [structured merge diff](https://github.com/kubernetes-sigs/structured-merge-diff). A CEL expression is used to create apply configuration.
        /// </summary>
        [Input("applyConfiguration")]
        public Input<Pulumi.Kubernetes.Types.Inputs.AdmissionRegistration.V1Alpha1.ApplyConfigurationPatchArgs>? ApplyConfiguration { get; set; }

        /// <summary>
        /// jsonPatch defines a [JSON patch](https://jsonpatch.com/) operation to perform a mutation to the object. A CEL expression is used to create the JSON patch.
        /// </summary>
        [Input("jsonPatch")]
        public Input<Pulumi.Kubernetes.Types.Inputs.AdmissionRegistration.V1Alpha1.JSONPatchPatchArgs>? JsonPatch { get; set; }

        /// <summary>
        /// patchType indicates the patch strategy used. Allowed values are "ApplyConfiguration" and "JSONPatch". Required.
        /// </summary>
        [Input("patchType")]
        public Input<string>? PatchType { get; set; }

        public MutationPatchArgs()
        {
        }
        public static new MutationPatchArgs Empty => new MutationPatchArgs();
    }
}
