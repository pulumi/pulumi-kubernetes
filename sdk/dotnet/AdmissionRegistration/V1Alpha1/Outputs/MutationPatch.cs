// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.AdmissionRegistration.V1Alpha1
{

    /// <summary>
    /// Mutation specifies the CEL expression which is used to apply the Mutation.
    /// </summary>
    [OutputType]
    public sealed class MutationPatch
    {
        /// <summary>
        /// applyConfiguration defines the desired configuration values of an object. The configuration is applied to the admission object using [structured merge diff](https://github.com/kubernetes-sigs/structured-merge-diff). A CEL expression is used to create apply configuration.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.AdmissionRegistration.V1Alpha1.ApplyConfigurationPatch ApplyConfiguration;
        /// <summary>
        /// jsonPatch defines a [JSON patch](https://jsonpatch.com/) operation to perform a mutation to the object. A CEL expression is used to create the JSON patch.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.AdmissionRegistration.V1Alpha1.JSONPatchPatch JsonPatch;
        /// <summary>
        /// patchType indicates the patch strategy used. Allowed values are "ApplyConfiguration" and "JSONPatch". Required.
        /// </summary>
        public readonly string PatchType;

        [OutputConstructor]
        private MutationPatch(
            Pulumi.Kubernetes.Types.Outputs.AdmissionRegistration.V1Alpha1.ApplyConfigurationPatch applyConfiguration,

            Pulumi.Kubernetes.Types.Outputs.AdmissionRegistration.V1Alpha1.JSONPatchPatch jsonPatch,

            string patchType)
        {
            ApplyConfiguration = applyConfiguration;
            JsonPatch = jsonPatch;
            PatchType = patchType;
        }
    }
}
