// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.AdmissionRegistration.V1
{

    /// <summary>
    /// Variable is the definition of a variable that is used for composition. A variable is defined as a named expression.
    /// </summary>
    [OutputType]
    public sealed class VariablePatch
    {
        /// <summary>
        /// Expression is the expression that will be evaluated as the value of the variable. The CEL expression has access to the same identifiers as the CEL expressions in Validation.
        /// </summary>
        public readonly string Expression;
        /// <summary>
        /// Name is the name of the variable. The name must be a valid CEL identifier and unique among all variables. The variable can be accessed in other expressions through `variables` For example, if name is "foo", the variable will be available as `variables.foo`
        /// </summary>
        public readonly string Name;

        [OutputConstructor]
        private VariablePatch(
            string expression,

            string name)
        {
            Expression = expression;
            Name = name;
        }
    }
}
