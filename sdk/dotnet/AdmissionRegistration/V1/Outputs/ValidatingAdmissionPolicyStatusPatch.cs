// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.AdmissionRegistration.V1
{

    /// <summary>
    /// ValidatingAdmissionPolicyStatus represents the status of an admission validation policy.
    /// </summary>
    [OutputType]
    public sealed class ValidatingAdmissionPolicyStatusPatch
    {
        /// <summary>
        /// The conditions represent the latest available observations of a policy's current state.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Meta.V1.ConditionPatch> Conditions;
        /// <summary>
        /// The generation observed by the controller.
        /// </summary>
        public readonly int ObservedGeneration;
        /// <summary>
        /// The results of type checking for each expression. Presence of this field indicates the completion of the type checking.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.AdmissionRegistration.V1.TypeCheckingPatch TypeChecking;

        [OutputConstructor]
        private ValidatingAdmissionPolicyStatusPatch(
            ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Meta.V1.ConditionPatch> conditions,

            int observedGeneration,

            Pulumi.Kubernetes.Types.Outputs.AdmissionRegistration.V1.TypeCheckingPatch typeChecking)
        {
            Conditions = conditions;
            ObservedGeneration = observedGeneration;
            TypeChecking = typeChecking;
        }
    }
}
