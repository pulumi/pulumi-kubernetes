// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

/// <summary>
/// PersistentVolume (PV) is a storage resource provisioned by an administrator. It is analogous to
/// a node. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes
/// </summary>
namespace Pulumi.Kubernetes.Core.V1 {
    public partial class PersistentVolume : Pulumi.CustomResource {
        /// <summary>
        /// APIVersion defines the versioned schema of this representation of an object. Servers should
        /// convert recognized schemas to the latest internal value, and may reject unrecognized values.
        /// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
        /// </summary>
        public Output<string> ApiVersion { get; private set; } = null!;

        /// <summary>
        /// Kind is a string value representing the REST resource this object represents. Servers may infer
        /// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
        /// info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
        /// </summary>
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// Standard object's metadata. More info:
        /// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
        /// </summary>
        public Output<Types.Outputs.Meta.V1.ObjectMeta> Metadata { get; private set; } = null!;

        /// <summary>
        /// Spec defines a specification of a persistent volume owned by the cluster. Provisioned by
        /// an administrator. More info:
        /// https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistent-volumes
        /// </summary>
        public Output<Types.Outputs.Core.V1.PersistentVolumeSpec> Spec { get; private set; } = null!;

        /// <summary>
        /// Status represents the current information/status for the persistent volume. Populated by
        /// the system. Read-only. More info:
        /// https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistent-volumes
        /// </summary>
        public Output<Types.Outputs.Core.V1.PersistentVolumeStatus> Status { get; private set; } = null!;


        
    }
}
