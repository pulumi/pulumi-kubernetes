// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

/// <summary>
/// Ingress is a collection of rules that allow inbound connections to reach the endpoints defined
/// by a backend. An Ingress can be configured to give services externally-reachable urls, load
/// balance traffic, terminate SSL, offer name based virtual hosting etc.
/// 
/// This resource waits until its status is ready before registering success
/// for create/update, and populating output properties from the current state of the resource.
/// The following conditions are used to determine whether the resource creation has
/// succeeded or failed:
/// 
/// 1.  Ingress object exists.
/// 2.  Endpoint objects exist with matching names for each Ingress path (except when Service
///     type is ExternalName).
/// 3.  Ingress entry exists for '.status.loadBalancer.ingress'.
/// 
/// If the Ingress has not reached a Ready state after 10 minutes, it will
/// time out and mark the resource update as Failed. You can override the default timeout value
/// by setting the 'customTimeouts' option on the resource.
/// </summary>
namespace Pulumi.Kubernetes.Networking.V1Beta1 {
    public partial class Ingress : Pulumi.CustomResource {
        /// <summary>
        /// APIVersion defines the versioned schema of this representation of an object. Servers should
        /// convert recognized schemas to the latest internal value, and may reject unrecognized values.
        /// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
        /// </summary>
        public Output<string> ApiVersion { get; private set; } = null!;

        /// <summary>
        /// Kind is a string value representing the REST resource this object represents. Servers may infer
        /// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
        /// info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
        /// </summary>
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// Standard object's metadata. More info:
        /// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
        /// </summary>
        public Output<dict> Metadata { get; private set; } = null!;

        /// <summary>
        /// Spec is the desired state of the Ingress. More info:
        /// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
        /// </summary>
        public Output<dict> Spec { get; private set; } = null!;

        /// <summary>
        /// Status is the current state of the Ingress. More info:
        /// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
        /// </summary>
        public Output<dict> Status { get; private set; } = null!;


        
    }
}
