// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Core.V1
{

    [OutputType]
    public sealed class Event
    {
        /// <summary>
        /// What action was taken/failed regarding to the Regarding object.
        /// </summary>
        public readonly string Action;
        /// <summary>
        /// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
        /// </summary>
        public readonly string ApiVersion;
        /// <summary>
        /// The number of times this event has occurred.
        /// </summary>
        public readonly int Count;
        /// <summary>
        /// Time when this Event was first observed.
        /// </summary>
        public readonly string EventTime;
        /// <summary>
        /// The time at which the event was first recorded. (Time of server receipt is in TypeMeta.)
        /// </summary>
        public readonly string FirstTimestamp;
        /// <summary>
        /// The object that this event is about.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Core.V1.ObjectReference InvolvedObject;
        /// <summary>
        /// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// The time at which the most recent occurrence of this event was recorded.
        /// </summary>
        public readonly string LastTimestamp;
        /// <summary>
        /// A human-readable description of the status of this operation.
        /// </summary>
        public readonly string Message;
        /// <summary>
        /// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Meta.V1.ObjectMeta Metadata;
        /// <summary>
        /// This should be a short, machine understandable string that gives the reason for the transition into the object's current status.
        /// </summary>
        public readonly string Reason;
        /// <summary>
        /// Optional secondary object for more complex actions.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Core.V1.ObjectReference Related;
        /// <summary>
        /// Name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`.
        /// </summary>
        public readonly string ReportingComponent;
        /// <summary>
        /// ID of the controller instance, e.g. `kubelet-xyzf`.
        /// </summary>
        public readonly string ReportingInstance;
        /// <summary>
        /// Data about the Event series this event represents or nil if it's a singleton Event.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Core.V1.EventSeries Series;
        /// <summary>
        /// The component reporting this event. Should be a short machine understandable string.
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Core.V1.EventSource Source;
        /// <summary>
        /// Type of this event (Normal, Warning), new types could be added in the future
        /// </summary>
        public readonly string Type;

        [OutputConstructor]
        private Event(
            string action,

            string apiVersion,

            int count,

            string eventTime,

            string firstTimestamp,

            Pulumi.Kubernetes.Types.Outputs.Core.V1.ObjectReference involvedObject,

            string kind,

            string lastTimestamp,

            string message,

            Pulumi.Kubernetes.Types.Outputs.Meta.V1.ObjectMeta metadata,

            string reason,

            Pulumi.Kubernetes.Types.Outputs.Core.V1.ObjectReference related,

            string reportingComponent,

            string reportingInstance,

            Pulumi.Kubernetes.Types.Outputs.Core.V1.EventSeries series,

            Pulumi.Kubernetes.Types.Outputs.Core.V1.EventSource source,

            string type)
        {
            Action = action;
            ApiVersion = apiVersion;
            Count = count;
            EventTime = eventTime;
            FirstTimestamp = firstTimestamp;
            InvolvedObject = involvedObject;
            Kind = kind;
            LastTimestamp = lastTimestamp;
            Message = message;
            Metadata = metadata;
            Reason = reason;
            Related = related;
            ReportingComponent = reportingComponent;
            ReportingInstance = reportingInstance;
            Series = series;
            Source = source;
            Type = type;
        }
    }
}
