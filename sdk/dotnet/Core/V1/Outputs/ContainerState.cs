// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Core.V1
{

    [OutputType]
    public sealed class ContainerState
    {
        /// <summary>
        /// Details about a running container
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Core.V1.ContainerStateRunning Running;
        /// <summary>
        /// Details about a terminated container
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Core.V1.ContainerStateTerminated Terminated;
        /// <summary>
        /// Details about a waiting container
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Core.V1.ContainerStateWaiting Waiting;

        [OutputConstructor]
        private ContainerState(
            Pulumi.Kubernetes.Types.Outputs.Core.V1.ContainerStateRunning running,

            Pulumi.Kubernetes.Types.Outputs.Core.V1.ContainerStateTerminated terminated,

            Pulumi.Kubernetes.Types.Outputs.Core.V1.ContainerStateWaiting waiting)
        {
            Running = running;
            Terminated = terminated;
            Waiting = waiting;
        }
    }
}
