// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Core.V1
{

    /// <summary>
    /// Service is a named abstraction of software service (for example, mysql) consisting of local port (for example 3306) that the proxy listens on, and the selector that determines which pods will answer requests sent through the proxy.
    /// 
    /// This resource waits until its status is ready before registering success
    /// for create/update, and populating output properties from the current state of the resource.
    /// The following conditions are used to determine whether the resource creation has
    /// succeeded or failed:
    /// 
    /// 1. Service object exists.
    /// 2. Related Endpoint objects are created. Each time we get an update, wait 10 seconds
    ///    for any stragglers.
    /// 3. The endpoints objects target some number of living objects (unless the Service is
    ///    an "empty headless" Service [1] or a Service with '.spec.type: ExternalName').
    /// 4. External IP address is allocated (if Service has '.spec.type: LoadBalancer').
    /// 
    /// Known limitations: 
    /// Services targeting ReplicaSets (and, by extension, Deployments,
    /// StatefulSets, etc.) with '.spec.replicas' set to 0 are not handled, and will time
    /// out. To work around this limitation, set 'pulumi.com/skipAwait: "true"' on
    /// '.metadata.annotations' for the Service. Work to handle this case is in progress [2].
    /// 
    /// [1] https://kubernetes.io/docs/concepts/services-networking/service/#headless-services
    /// [2] https://github.com/pulumi/pulumi-kubernetes/pull/703
    /// 
    /// If the Service has not reached a Ready state after 10 minutes, it will
    /// time out and mark the resource update as Failed. You can override the default timeout value
    /// by setting the 'customTimeouts' option on the resource.
    /// </summary>
    [OutputType]
    public sealed class ServicePatch
    {
        /// <summary>
        /// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
        /// </summary>
        public readonly string ApiVersion;
        /// <summary>
        /// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
        /// </summary>
        public readonly string Kind;
        /// <summary>
        /// Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Meta.V1.ObjectMetaPatch Metadata;
        /// <summary>
        /// Spec defines the behavior of a service. https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Core.V1.ServiceSpecPatch Spec;
        /// <summary>
        /// Most recently observed status of the service. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status
        /// </summary>
        public readonly Pulumi.Kubernetes.Types.Outputs.Core.V1.ServiceStatusPatch Status;

        [OutputConstructor]
        private ServicePatch(
            string apiVersion,

            string kind,

            Pulumi.Kubernetes.Types.Outputs.Meta.V1.ObjectMetaPatch metadata,

            Pulumi.Kubernetes.Types.Outputs.Core.V1.ServiceSpecPatch spec,

            Pulumi.Kubernetes.Types.Outputs.Core.V1.ServiceStatusPatch status)
        {
            ApiVersion = apiVersion;
            Kind = kind;
            Metadata = metadata;
            Spec = spec;
            Status = status;
        }
    }
}
