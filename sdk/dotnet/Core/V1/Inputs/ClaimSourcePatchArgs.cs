// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Core.V1
{

    /// <summary>
    /// ClaimSource describes a reference to a ResourceClaim.
    /// 
    /// Exactly one of these fields should be set.  Consumers of this type must treat an empty object as if it has an unknown value.
    /// </summary>
    public class ClaimSourcePatchArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// ResourceClaimName is the name of a ResourceClaim object in the same namespace as this pod.
        /// </summary>
        [Input("resourceClaimName")]
        public Input<string>? ResourceClaimName { get; set; }

        /// <summary>
        /// ResourceClaimTemplateName is the name of a ResourceClaimTemplate object in the same namespace as this pod.
        /// 
        /// The template will be used to create a new ResourceClaim, which will be bound to this pod. When this pod is deleted, the ResourceClaim will also be deleted. The pod name and resource name, along with a generated component, will be used to form a unique name for the ResourceClaim, which will be recorded in pod.status.resourceClaimStatuses.
        /// 
        /// This field is immutable and no changes will be made to the corresponding ResourceClaim by the control plane after creating the ResourceClaim.
        /// </summary>
        [Input("resourceClaimTemplateName")]
        public Input<string>? ResourceClaimTemplateName { get; set; }

        public ClaimSourcePatchArgs()
        {
        }
        public static new ClaimSourcePatchArgs Empty => new ClaimSourcePatchArgs();
    }
}
