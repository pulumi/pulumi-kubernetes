// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Core.V1
{

    public class ResourceStatusArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Name of the resource. Must be unique within the pod and match one of the resources from the pod spec.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        [Input("resources")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Core.V1.ResourceHealthArgs>? _resources;

        /// <summary>
        /// List of unique Resources health. Each element in the list contains an unique resource ID and resource health. At a minimum, ResourceID must uniquely identify the Resource allocated to the Pod on the Node for the lifetime of a Pod. See ResourceID type for it's definition.
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Core.V1.ResourceHealthArgs> Resources
        {
            get => _resources ?? (_resources = new InputList<Pulumi.Kubernetes.Types.Inputs.Core.V1.ResourceHealthArgs>());
            set => _resources = value;
        }

        public ResourceStatusArgs()
        {
        }
        public static new ResourceStatusArgs Empty => new ResourceStatusArgs();
    }
}
