// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Core.V1
{

    /// <summary>
    /// VolumeMountStatus shows status of volume mounts.
    /// </summary>
    public class VolumeMountStatusArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// MountPath corresponds to the original VolumeMount.
        /// </summary>
        [Input("mountPath", required: true)]
        public Input<string> MountPath { get; set; } = null!;

        /// <summary>
        /// Name corresponds to the name of the original VolumeMount.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// ReadOnly corresponds to the original VolumeMount.
        /// </summary>
        [Input("readOnly")]
        public Input<bool>? ReadOnly { get; set; }

        /// <summary>
        /// RecursiveReadOnly must be set to Disabled, Enabled, or unspecified (for non-readonly mounts). An IfPossible value in the original VolumeMount must be translated to Disabled or Enabled, depending on the mount result.
        /// </summary>
        [Input("recursiveReadOnly")]
        public Input<string>? RecursiveReadOnly { get; set; }

        public VolumeMountStatusArgs()
        {
        }
        public static new VolumeMountStatusArgs Empty => new VolumeMountStatusArgs();
    }
}
