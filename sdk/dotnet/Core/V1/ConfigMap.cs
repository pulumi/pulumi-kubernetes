// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;


namespace Pulumi.Kubernetes.Core.V1 {
    /// <summary>
    /// ConfigMap holds configuration data for pods to consume.
    /// </summary>
    public partial class ConfigMap : Pulumi.CustomResource {
        /// <summary>
        /// APIVersion defines the versioned schema of this representation of an object. Servers should
        /// convert recognized schemas to the latest internal value, and may reject unrecognized values.
        /// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
        /// </summary>
        public Output<string> ApiVersion { get; private set; } = null!;

        /// <summary>
        /// Kind is a string value representing the REST resource this object represents. Servers may infer
        /// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
        /// info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
        /// </summary>
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// BinaryData contains the binary data. Each key must consist of alphanumeric characters,
        /// '-', '_' or '.'. BinaryData can contain byte sequences that are not in the UTF-8 range.
        /// The keys stored in BinaryData must not overlap with the ones in the Data field, this is
        /// enforced during validation process. Using this field will require 1.10+ apiserver and
        /// kubelet.
        /// </summary>
        public Output<object> BinaryData { get; private set; } = null!;

        /// <summary>
        /// Data contains the configuration data. Each key must consist of alphanumeric characters,
        /// '-', '_' or '.'. Values with non-UTF-8 byte sequences must use the BinaryData field. The
        /// keys stored in Data must not overlap with the keys in the BinaryData field, this is
        /// enforced during validation process.
        /// </summary>
        public Output<ImmutableDictionary<string, string>> Data { get; private set; } = null!;

        /// <summary>
        /// Standard object's metadata. More info:
        /// https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata
        /// </summary>
        public Output<Types.Outputs.Meta.V1.ObjectMeta> Metadata { get; private set; } = null!;


        /// <summary>
        /// Create a ConfigMap resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ConfigMap(string name, Types.Inputs.Core.V1.ConfigMap args, CustomResourceOptions? options = null)
            : base("kubernetes:core/v1:ConfigMap", name, args, MakeResourceOptions(options, ""))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }

    }
}
