// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Autoscaling.V2Beta1
{

    /// <summary>
    /// ExternalMetricSource indicates how to scale on a metric not associated with any Kubernetes object (for example length of queue in cloud messaging service, or QPS from loadbalancer running outside of cluster). Exactly one "target" type should be set.
    /// </summary>
    public class ExternalMetricSourceArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// metricName is the name of the metric in question.
        /// </summary>
        [Input("metricName", required: true)]
        public Input<string> MetricName { get; set; } = null!;

        /// <summary>
        /// metricSelector is used to identify a specific time series within a given metric.
        /// </summary>
        [Input("metricSelector")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Meta.V1.LabelSelectorArgs>? MetricSelector { get; set; }

        /// <summary>
        /// targetAverageValue is the target per-pod value of global metric (as a quantity). Mutually exclusive with TargetValue.
        /// </summary>
        [Input("targetAverageValue")]
        public Input<string>? TargetAverageValue { get; set; }

        /// <summary>
        /// targetValue is the target value of the metric (as a quantity). Mutually exclusive with TargetAverageValue.
        /// </summary>
        [Input("targetValue")]
        public Input<string>? TargetValue { get; set; }

        public ExternalMetricSourceArgs()
        {
        }
    }
}
