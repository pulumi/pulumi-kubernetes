// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;


namespace Pulumi.Kubernetes.Rbac.V1 {
    /// <summary>
    /// ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a
    /// ClusterRole in the global namespace, and adds who information via Subject.
    /// </summary>
    public partial class ClusterRoleBinding : Pulumi.CustomResource {
        /// <summary>
        /// APIVersion defines the versioned schema of this representation of an object. Servers should
        /// convert recognized schemas to the latest internal value, and may reject unrecognized values.
        /// More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
        /// </summary>
        public Output<string> ApiVersion { get; private set; } = null!;

        /// <summary>
        /// Kind is a string value representing the REST resource this object represents. Servers may infer
        /// this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
        /// info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
        /// </summary>
        public Output<string> Kind { get; private set; } = null!;

        /// <summary>
        /// Standard object's metadata.
        /// </summary>
        public Output<Types.Outputs.Meta.V1.ObjectMeta> Metadata { get; private set; } = null!;

        /// <summary>
        /// RoleRef can only reference a ClusterRole in the global namespace. If the RoleRef cannot
        /// be resolved, the Authorizer must return an error.
        /// </summary>
        public Output<Types.Outputs.Rbac.V1.RoleRef> RoleRef { get; private set; } = null!;

        /// <summary>
        /// Subjects holds references to the objects the role applies to.
        /// </summary>
        public Output<Types.Outputs.Rbac.V1.Subject[]> Subjects { get; private set; } = null!;


        /// <summary>
        /// Create a ClusterRoleBinding resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ClusterRoleBinding(string name, Types.Inputs.Rbac.V1.ClusterRoleBinding args, CustomResourceOptions? options = null)
            : base("kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding", name, args, MakeResourceOptions(options, ""))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }

    }
}
