// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Outputs.Batch.V1
{

    /// <summary>
    /// SuccessPolicy describes when a Job can be declared as succeeded based on the success of some indexes.
    /// </summary>
    [OutputType]
    public sealed class SuccessPolicy
    {
        /// <summary>
        /// rules represents the list of alternative rules for the declaring the Jobs as successful before `.status.succeeded &gt;= .spec.completions`. Once any of the rules are met, the "SucceededCriteriaMet" condition is added, and the lingering pods are removed. The terminal state for such a Job has the "Complete" condition. Additionally, these rules are evaluated in order; Once the Job meets one of the rules, other rules are ignored. At most 20 elements are allowed.
        /// </summary>
        public readonly ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Batch.V1.SuccessPolicyRule> Rules;

        [OutputConstructor]
        private SuccessPolicy(ImmutableArray<Pulumi.Kubernetes.Types.Outputs.Batch.V1.SuccessPolicyRule> rules)
        {
            Rules = rules;
        }
    }
}
