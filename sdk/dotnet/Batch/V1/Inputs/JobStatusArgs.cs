// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Batch.V1
{

    /// <summary>
    /// JobStatus represents the current state of a Job.
    /// </summary>
    public class JobStatusArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The number of pending and running pods.
        /// </summary>
        [Input("active")]
        public Input<int>? Active { get; set; }

        /// <summary>
        /// completedIndexes holds the completed indexes when .spec.completionMode = "Indexed" in a text format. The indexes are represented as decimal integers separated by commas. The numbers are listed in increasing order. Three or more consecutive numbers are compressed and represented by the first and last element of the series, separated by a hyphen. For example, if the completed indexes are 1, 3, 4, 5 and 7, they are represented as "1,3-5,7".
        /// </summary>
        [Input("completedIndexes")]
        public Input<string>? CompletedIndexes { get; set; }

        /// <summary>
        /// Represents time when the job was completed. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC. The completion time is only set when the job finishes successfully.
        /// </summary>
        [Input("completionTime")]
        public Input<string>? CompletionTime { get; set; }

        [Input("conditions")]
        private InputList<Pulumi.Kubernetes.Types.Inputs.Batch.V1.JobConditionArgs>? _conditions;

        /// <summary>
        /// The latest available observations of an object's current state. When a Job fails, one of the conditions will have type "Failed" and status true. When a Job is suspended, one of the conditions will have type "Suspended" and status true; when the Job is resumed, the status of this condition will become false. When a Job is completed, one of the conditions will have type "Complete" and status true. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/
        /// </summary>
        public InputList<Pulumi.Kubernetes.Types.Inputs.Batch.V1.JobConditionArgs> Conditions
        {
            get => _conditions ?? (_conditions = new InputList<Pulumi.Kubernetes.Types.Inputs.Batch.V1.JobConditionArgs>());
            set => _conditions = value;
        }

        /// <summary>
        /// The number of pods which reached phase Failed.
        /// </summary>
        [Input("failed")]
        public Input<int>? Failed { get; set; }

        /// <summary>
        /// FailedIndexes holds the failed indexes when backoffLimitPerIndex=true. The indexes are represented in the text format analogous as for the `completedIndexes` field, ie. they are kept as decimal integers separated by commas. The numbers are listed in increasing order. Three or more consecutive numbers are compressed and represented by the first and last element of the series, separated by a hyphen. For example, if the failed indexes are 1, 3, 4, 5 and 7, they are represented as "1,3-5,7". This field is beta-level. It can be used when the `JobBackoffLimitPerIndex` feature gate is enabled (enabled by default).
        /// </summary>
        [Input("failedIndexes")]
        public Input<string>? FailedIndexes { get; set; }

        /// <summary>
        /// The number of pods which have a Ready condition.
        /// </summary>
        [Input("ready")]
        public Input<int>? Ready { get; set; }

        /// <summary>
        /// Represents time when the job controller started processing a job. When a Job is created in the suspended state, this field is not set until the first time it is resumed. This field is reset every time a Job is resumed from suspension. It is represented in RFC3339 form and is in UTC.
        /// </summary>
        [Input("startTime")]
        public Input<string>? StartTime { get; set; }

        /// <summary>
        /// The number of pods which reached phase Succeeded.
        /// </summary>
        [Input("succeeded")]
        public Input<int>? Succeeded { get; set; }

        /// <summary>
        /// The number of pods which are terminating (in phase Pending or Running and have a deletionTimestamp).
        /// 
        /// This field is beta-level. The job controller populates the field when the feature gate JobPodReplacementPolicy is enabled (enabled by default).
        /// </summary>
        [Input("terminating")]
        public Input<int>? Terminating { get; set; }

        /// <summary>
        /// uncountedTerminatedPods holds the UIDs of Pods that have terminated but the job controller hasn't yet accounted for in the status counters.
        /// 
        /// The job controller creates pods with a finalizer. When a pod terminates (succeeded or failed), the controller does three steps to account for it in the job status:
        /// 
        /// 1. Add the pod UID to the arrays in this field. 2. Remove the pod finalizer. 3. Remove the pod UID from the arrays while increasing the corresponding
        ///     counter.
        /// 
        /// Old jobs might not be tracked using this field, in which case the field remains null.
        /// </summary>
        [Input("uncountedTerminatedPods")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Batch.V1.UncountedTerminatedPodsArgs>? UncountedTerminatedPods { get; set; }

        public JobStatusArgs()
        {
        }
        public static new JobStatusArgs Empty => new JobStatusArgs();
    }
}
