// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Provider
{

    /// <summary>
    /// Options for tuning the Kubernetes client used by a Provider.
    /// </summary>
    public class KubeClientSettingsArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Maximum burst for throttle. Default value is 120.
        /// </summary>
        [Input("burst")]
        public Input<int>? Burst { get; set; }

        /// <summary>
        /// Maximum queries per second (QPS) to the API server from this client. Default value is 50.
        /// </summary>
        [Input("qps")]
        public Input<double>? Qps { get; set; }

        /// <summary>
        /// Maximum time in seconds to wait before cancelling a HTTP request to the Kubernetes server. Default value is 32.
        /// </summary>
        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        public KubeClientSettingsArgs()
        {
            Burst = Utilities.GetEnvInt32("PULUMI_K8S_CLIENT_BURST");
            Qps = Utilities.GetEnvDouble("PULUMI_K8S_CLIENT_QPS");
            Timeout = Utilities.GetEnvInt32("PULUMI_K8S_CLIENT_TIMEOUT");
        }
        public static new KubeClientSettingsArgs Empty => new KubeClientSettingsArgs();
    }
}
