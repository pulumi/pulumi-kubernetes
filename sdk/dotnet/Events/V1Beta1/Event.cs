// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Events.V1Beta1
{
    /// <summary>
    /// Event is a report of an event somewhere in the cluster. It generally denotes some state change in the system.
    /// </summary>
    public partial class Event : KubernetesResource
    {
        /// <summary>
        /// What action was taken/failed regarding to the regarding object.
        /// </summary>
        [Output("action")]
        public Output<string> Action { get; private set; } = null!;

        /// <summary>
        /// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
        /// </summary>
        [Output("apiVersion")]
        public Output<string> ApiVersion { get; private set; } = null!;

        /// <summary>
        /// Deprecated field assuring backward compatibility with core.v1 Event type
        /// </summary>
        [Output("deprecatedCount")]
        public Output<int> DeprecatedCount { get; private set; } = null!;

        /// <summary>
        /// Deprecated field assuring backward compatibility with core.v1 Event type
        /// </summary>
        [Output("deprecatedFirstTimestamp")]
        public Output<string> DeprecatedFirstTimestamp { get; private set; } = null!;

        /// <summary>
        /// Deprecated field assuring backward compatibility with core.v1 Event type
        /// </summary>
        [Output("deprecatedLastTimestamp")]
        public Output<string> DeprecatedLastTimestamp { get; private set; } = null!;

        /// <summary>
        /// Deprecated field assuring backward compatibility with core.v1 Event type
        /// </summary>
        [Output("deprecatedSource")]
        public Output<Pulumi.Kubernetes.Types.Outputs.Core.V1.EventSource> DeprecatedSource { get; private set; } = null!;

        /// <summary>
        /// Required. Time when this Event was first observed.
        /// </summary>
        [Output("eventTime")]
        public Output<string> EventTime { get; private set; } = null!;

        /// <summary>
        /// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
        /// </summary>
        [Output("kind")]
        public Output<string> Kind { get; private set; } = null!;

        [Output("metadata")]
        public Output<Pulumi.Kubernetes.Types.Outputs.Meta.V1.ObjectMeta> Metadata { get; private set; } = null!;

        /// <summary>
        /// Optional. A human-readable description of the status of this operation. Maximal length of the note is 1kB, but libraries should be prepared to handle values up to 64kB.
        /// </summary>
        [Output("note")]
        public Output<string> Note { get; private set; } = null!;

        /// <summary>
        /// Why the action was taken.
        /// </summary>
        [Output("reason")]
        public Output<string> Reason { get; private set; } = null!;

        /// <summary>
        /// The object this Event is about. In most cases it's an Object reporting controller implements. E.g. ReplicaSetController implements ReplicaSets and this event is emitted because it acts on some changes in a ReplicaSet object.
        /// </summary>
        [Output("regarding")]
        public Output<Pulumi.Kubernetes.Types.Outputs.Core.V1.ObjectReference> Regarding { get; private set; } = null!;

        /// <summary>
        /// Optional secondary object for more complex actions. E.g. when regarding object triggers a creation or deletion of related object.
        /// </summary>
        [Output("related")]
        public Output<Pulumi.Kubernetes.Types.Outputs.Core.V1.ObjectReference> Related { get; private set; } = null!;

        /// <summary>
        /// Name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`.
        /// </summary>
        [Output("reportingController")]
        public Output<string> ReportingController { get; private set; } = null!;

        /// <summary>
        /// ID of the controller instance, e.g. `kubelet-xyzf`.
        /// </summary>
        [Output("reportingInstance")]
        public Output<string> ReportingInstance { get; private set; } = null!;

        /// <summary>
        /// Data about the Event series this event represents or nil if it's a singleton Event.
        /// </summary>
        [Output("series")]
        public Output<Pulumi.Kubernetes.Types.Outputs.Events.V1Beta1.EventSeries> Series { get; private set; } = null!;

        /// <summary>
        /// Type of this event (Normal, Warning), new types could be added in the future.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Event resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Event(string name, Pulumi.Kubernetes.Types.Inputs.Events.V1Beta1.EventArgs? args = null, CustomResourceOptions? options = null)
            : base("kubernetes:events.k8s.io/v1beta1:Event", name, MakeArgs(args), MakeResourceOptions(options, ""))
        {
        }
        internal Event(string name, ImmutableDictionary<string, object?> dictionary, CustomResourceOptions? options = null)
            : base("kubernetes:events.k8s.io/v1beta1:Event", name, new DictionaryResourceArgs(dictionary), MakeResourceOptions(options, ""))
        {
        }

        private Event(string name, Input<string> id, CustomResourceOptions? options = null)
            : base("kubernetes:events.k8s.io/v1beta1:Event", name, null, MakeResourceOptions(options, id))
        {
        }

        private static Pulumi.Kubernetes.Types.Inputs.Events.V1Beta1.EventArgs? MakeArgs(Pulumi.Kubernetes.Types.Inputs.Events.V1Beta1.EventArgs? args)
        {
            args ??= new Pulumi.Kubernetes.Types.Inputs.Events.V1Beta1.EventArgs();
            args.ApiVersion = "events.k8s.io/v1beta1";
            args.Kind = "Event";
            return args;
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                Aliases =
                {
                    new Alias { Type = "kubernetes:core/v1:Event"},
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Event resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Event Get(string name, Input<string> id, CustomResourceOptions? options = null)
        {
            return new Event(name, id, options);
        }
    }
}
namespace Pulumi.Kubernetes.Types.Inputs.Events.V1Beta1
{

    public class EventArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// What action was taken/failed regarding to the regarding object.
        /// </summary>
        [Input("action")]
        public Input<string>? Action { get; set; }

        /// <summary>
        /// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
        /// </summary>
        [Input("apiVersion")]
        public Input<string>? ApiVersion { get; set; }

        /// <summary>
        /// Deprecated field assuring backward compatibility with core.v1 Event type
        /// </summary>
        [Input("deprecatedCount")]
        public Input<int>? DeprecatedCount { get; set; }

        /// <summary>
        /// Deprecated field assuring backward compatibility with core.v1 Event type
        /// </summary>
        [Input("deprecatedFirstTimestamp")]
        public Input<string>? DeprecatedFirstTimestamp { get; set; }

        /// <summary>
        /// Deprecated field assuring backward compatibility with core.v1 Event type
        /// </summary>
        [Input("deprecatedLastTimestamp")]
        public Input<string>? DeprecatedLastTimestamp { get; set; }

        /// <summary>
        /// Deprecated field assuring backward compatibility with core.v1 Event type
        /// </summary>
        [Input("deprecatedSource")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Core.V1.EventSourceArgs>? DeprecatedSource { get; set; }

        /// <summary>
        /// Required. Time when this Event was first observed.
        /// </summary>
        [Input("eventTime", required: true)]
        public Input<string> EventTime { get; set; } = null!;

        /// <summary>
        /// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
        /// </summary>
        [Input("kind")]
        public Input<string>? Kind { get; set; }

        [Input("metadata")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Meta.V1.ObjectMetaArgs>? Metadata { get; set; }

        /// <summary>
        /// Optional. A human-readable description of the status of this operation. Maximal length of the note is 1kB, but libraries should be prepared to handle values up to 64kB.
        /// </summary>
        [Input("note")]
        public Input<string>? Note { get; set; }

        /// <summary>
        /// Why the action was taken.
        /// </summary>
        [Input("reason")]
        public Input<string>? Reason { get; set; }

        /// <summary>
        /// The object this Event is about. In most cases it's an Object reporting controller implements. E.g. ReplicaSetController implements ReplicaSets and this event is emitted because it acts on some changes in a ReplicaSet object.
        /// </summary>
        [Input("regarding")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Core.V1.ObjectReferenceArgs>? Regarding { get; set; }

        /// <summary>
        /// Optional secondary object for more complex actions. E.g. when regarding object triggers a creation or deletion of related object.
        /// </summary>
        [Input("related")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Core.V1.ObjectReferenceArgs>? Related { get; set; }

        /// <summary>
        /// Name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`.
        /// </summary>
        [Input("reportingController")]
        public Input<string>? ReportingController { get; set; }

        /// <summary>
        /// ID of the controller instance, e.g. `kubelet-xyzf`.
        /// </summary>
        [Input("reportingInstance")]
        public Input<string>? ReportingInstance { get; set; }

        /// <summary>
        /// Data about the Event series this event represents or nil if it's a singleton Event.
        /// </summary>
        [Input("series")]
        public Input<Pulumi.Kubernetes.Types.Inputs.Events.V1Beta1.EventSeriesArgs>? Series { get; set; }

        /// <summary>
        /// Type of this event (Normal, Warning), new types could be added in the future.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public EventArgs()
        {
        }
    }
}
