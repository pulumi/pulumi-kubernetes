// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Kubernetes.Types.Inputs.Events.V1
{

    /// <summary>
    /// EventSeries contain information on series of events, i.e. thing that was/is happening continuously for some time. How often to update the EventSeries is up to the event reporters. The default event reporter in "k8s.io/client-go/tools/events/event_broadcaster.go" shows how this struct is updated on heartbeats and can guide customized reporter implementations.
    /// </summary>
    public class EventSeriesPatchArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// count is the number of occurrences in this series up to the last heartbeat time.
        /// </summary>
        [Input("count")]
        public Input<int>? Count { get; set; }

        /// <summary>
        /// lastObservedTime is the time when last Event from the series was seen before last heartbeat.
        /// </summary>
        [Input("lastObservedTime")]
        public Input<string>? LastObservedTime { get; set; }

        public EventSeriesPatchArgs()
        {
        }
        public static new EventSeriesPatchArgs Empty => new EventSeriesPatchArgs();
    }
}
