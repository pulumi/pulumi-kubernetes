// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { AuditSinkArgs } from "./auditSink";
export type AuditSink = import("./auditSink").AuditSink;
export const AuditSink: typeof import("./auditSink").AuditSink = null as any;

export { AuditSinkListArgs } from "./auditSinkList";
export type AuditSinkList = import("./auditSinkList").AuditSinkList;
export const AuditSinkList: typeof import("./auditSinkList").AuditSinkList = null as any;

export { AuditSinkPatchArgs } from "./auditSinkPatch";
export type AuditSinkPatch = import("./auditSinkPatch").AuditSinkPatch;
export const AuditSinkPatch: typeof import("./auditSinkPatch").AuditSinkPatch = null as any;

utilities.lazyLoad(exports, ["AuditSink"], () => require("./auditSink"));
utilities.lazyLoad(exports, ["AuditSinkList"], () => require("./auditSinkList"));
utilities.lazyLoad(exports, ["AuditSinkPatch"], () => require("./auditSinkPatch"));

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:auditregistration.k8s.io/v1alpha1:AuditSink":
                return new AuditSink(name, <any>undefined, { urn })
            case "kubernetes:auditregistration.k8s.io/v1alpha1:AuditSinkList":
                return new AuditSinkList(name, <any>undefined, { urn })
            case "kubernetes:auditregistration.k8s.io/v1alpha1:AuditSinkPatch":
                return new AuditSinkPatch(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("kubernetes", "auditregistration.k8s.io/v1alpha1", _module)
