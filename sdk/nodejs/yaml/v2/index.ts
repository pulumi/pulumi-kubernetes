// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { ConfigFileArgs } from "./configFile";
export type ConfigFile = import("./configFile").ConfigFile;
export const ConfigFile: typeof import("./configFile").ConfigFile = null as any;
utilities.lazyLoad(exports, ["ConfigFile"], () => require("./configFile"));

export { ConfigGroupArgs } from "./configGroup";
export type ConfigGroup = import("./configGroup").ConfigGroup;
export const ConfigGroup: typeof import("./configGroup").ConfigGroup = null as any;
utilities.lazyLoad(exports, ["ConfigGroup"], () => require("./configGroup"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:yaml/v2:ConfigFile":
                return new ConfigFile(name, <any>undefined, { urn })
            case "kubernetes:yaml/v2:ConfigGroup":
                return new ConfigGroup(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("kubernetes", "yaml/v2", _module)
