// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface
 */
export interface NonResourceAttributes {
    /**
     * Path is the URL path of the request
     */
    path?: pulumi.Input<string>;
    /**
     * Verb is the standard HTTP verb
     */
    verb?: pulumi.Input<string>;
}

/**
 * NonResourceAttributes includes the authorization attributes available for non-resource requests to the Authorizer interface
 */
export interface NonResourceAttributesPatch {
    /**
     * Path is the URL path of the request
     */
    path?: pulumi.Input<string>;
    /**
     * Verb is the standard HTTP verb
     */
    verb?: pulumi.Input<string>;
}

/**
 * ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface
 */
export interface ResourceAttributes {
    /**
     * Group is the API Group of the Resource.  "*" means all.
     */
    group?: pulumi.Input<string>;
    /**
     * Name is the name of the resource being requested for a "get" or deleted for a "delete". "" (empty) means all.
     */
    name?: pulumi.Input<string>;
    /**
     * Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces "" (empty) is defaulted for LocalSubjectAccessReviews "" (empty) is empty for cluster-scoped resources "" (empty) means "all" for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview
     */
    namespace?: pulumi.Input<string>;
    /**
     * Resource is one of the existing resource types.  "*" means all.
     */
    resource?: pulumi.Input<string>;
    /**
     * Subresource is one of the existing resource types.  "" means none.
     */
    subresource?: pulumi.Input<string>;
    /**
     * Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy.  "*" means all.
     */
    verb?: pulumi.Input<string>;
    /**
     * Version is the API Version of the Resource.  "*" means all.
     */
    version?: pulumi.Input<string>;
}

/**
 * ResourceAttributes includes the authorization attributes available for resource requests to the Authorizer interface
 */
export interface ResourceAttributesPatch {
    /**
     * Group is the API Group of the Resource.  "*" means all.
     */
    group?: pulumi.Input<string>;
    /**
     * Name is the name of the resource being requested for a "get" or deleted for a "delete". "" (empty) means all.
     */
    name?: pulumi.Input<string>;
    /**
     * Namespace is the namespace of the action being requested.  Currently, there is no distinction between no namespace and all namespaces "" (empty) is defaulted for LocalSubjectAccessReviews "" (empty) is empty for cluster-scoped resources "" (empty) means "all" for namespace scoped resources from a SubjectAccessReview or SelfSubjectAccessReview
     */
    namespace?: pulumi.Input<string>;
    /**
     * Resource is one of the existing resource types.  "*" means all.
     */
    resource?: pulumi.Input<string>;
    /**
     * Subresource is one of the existing resource types.  "" means none.
     */
    subresource?: pulumi.Input<string>;
    /**
     * Verb is a kubernetes resource API verb, like: get, list, watch, create, update, delete, proxy.  "*" means all.
     */
    verb?: pulumi.Input<string>;
    /**
     * Version is the API Version of the Resource.  "*" means all.
     */
    version?: pulumi.Input<string>;
}

/**
 * SelfSubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set
 */
export interface SelfSubjectAccessReviewSpec {
    /**
     * NonResourceAttributes describes information for a non-resource access request
     */
    nonResourceAttributes?: pulumi.Input<inputs.authorization.v1.NonResourceAttributes>;
    /**
     * ResourceAuthorizationAttributes describes information for a resource access request
     */
    resourceAttributes?: pulumi.Input<inputs.authorization.v1.ResourceAttributes>;
}

/**
 * SelfSubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set
 */
export interface SelfSubjectAccessReviewSpecPatch {
    /**
     * NonResourceAttributes describes information for a non-resource access request
     */
    nonResourceAttributes?: pulumi.Input<inputs.authorization.v1.NonResourceAttributesPatch>;
    /**
     * ResourceAuthorizationAttributes describes information for a resource access request
     */
    resourceAttributes?: pulumi.Input<inputs.authorization.v1.ResourceAttributesPatch>;
}

/**
 * SelfSubjectRulesReviewSpec defines the specification for SelfSubjectRulesReview.
 */
export interface SelfSubjectRulesReviewSpec {
    /**
     * Namespace to evaluate rules for. Required.
     */
    namespace?: pulumi.Input<string>;
}

/**
 * SelfSubjectRulesReviewSpec defines the specification for SelfSubjectRulesReview.
 */
export interface SelfSubjectRulesReviewSpecPatch {
    /**
     * Namespace to evaluate rules for. Required.
     */
    namespace?: pulumi.Input<string>;
}

/**
 * SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set
 */
export interface SubjectAccessReviewSpec {
    /**
     * Extra corresponds to the user.Info.GetExtra() method from the authenticator.  Since that is input to the authorizer it needs a reflection here.
     */
    extra?: pulumi.Input<{[key: string]: pulumi.Input<pulumi.Input<string>[]>}>;
    /**
     * Groups is the groups you're testing for.
     */
    groups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * NonResourceAttributes describes information for a non-resource access request
     */
    nonResourceAttributes?: pulumi.Input<inputs.authorization.v1.NonResourceAttributes>;
    /**
     * ResourceAuthorizationAttributes describes information for a resource access request
     */
    resourceAttributes?: pulumi.Input<inputs.authorization.v1.ResourceAttributes>;
    /**
     * UID information about the requesting user.
     */
    uid?: pulumi.Input<string>;
    /**
     * User is the user you're testing for. If you specify "User" but not "Groups", then is it interpreted as "What if User were not a member of any groups
     */
    user?: pulumi.Input<string>;
}

/**
 * SubjectAccessReviewSpec is a description of the access request.  Exactly one of ResourceAuthorizationAttributes and NonResourceAuthorizationAttributes must be set
 */
export interface SubjectAccessReviewSpecPatch {
    /**
     * Extra corresponds to the user.Info.GetExtra() method from the authenticator.  Since that is input to the authorizer it needs a reflection here.
     */
    extra?: pulumi.Input<{[key: string]: pulumi.Input<pulumi.Input<string>[]>}>;
    /**
     * Groups is the groups you're testing for.
     */
    groups?: pulumi.Input<pulumi.Input<string>[]>;
    /**
     * NonResourceAttributes describes information for a non-resource access request
     */
    nonResourceAttributes?: pulumi.Input<inputs.authorization.v1.NonResourceAttributesPatch>;
    /**
     * ResourceAuthorizationAttributes describes information for a resource access request
     */
    resourceAttributes?: pulumi.Input<inputs.authorization.v1.ResourceAttributesPatch>;
    /**
     * UID information about the requesting user.
     */
    uid?: pulumi.Input<string>;
    /**
     * User is the user you're testing for. If you specify "User" but not "Groups", then is it interpreted as "What if User were not a member of any groups
     */
    user?: pulumi.Input<string>;
}

