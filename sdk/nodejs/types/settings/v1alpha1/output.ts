// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../../../types/input";
import * as outputs from "../../../types/output";
import * as enums from "../../../types/enums";
import * as utilities from "../../../utilities";

/**
 * PodPreset is a policy resource that defines additional runtime requirements for a Pod.
 */
export interface PodPreset {
    /**
     * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
     */
    apiVersion: "settings.k8s.io/v1alpha1";
    /**
     * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
     */
    kind: "PodPreset";
    metadata: outputs.meta.v1.ObjectMeta;
    spec: outputs.settings.v1alpha1.PodPresetSpec;
}

/**
 * PodPresetSpec is a description of a pod preset.
 */
export interface PodPresetSpec {
    /**
     * Env defines the collection of EnvVar to inject into containers.
     */
    env: outputs.core.v1.EnvVar[];
    /**
     * EnvFrom defines the collection of EnvFromSource to inject into containers.
     */
    envFrom: outputs.core.v1.EnvFromSource[];
    /**
     * Selector is a label query over a set of resources, in this case pods. Required.
     */
    selector: outputs.meta.v1.LabelSelector;
    /**
     * VolumeMounts defines the collection of VolumeMount to inject into containers.
     */
    volumeMounts: outputs.core.v1.VolumeMount[];
    /**
     * Volumes defines the collection of Volume to inject into the pod.
     */
    volumes: outputs.core.v1.Volume[];
}

/**
 * PodPresetSpec is a description of a pod preset.
 */
export interface PodPresetSpecPatch {
    /**
     * Env defines the collection of EnvVar to inject into containers.
     */
    env: outputs.core.v1.EnvVarPatch[];
    /**
     * EnvFrom defines the collection of EnvFromSource to inject into containers.
     */
    envFrom: outputs.core.v1.EnvFromSourcePatch[];
    /**
     * Selector is a label query over a set of resources, in this case pods. Required.
     */
    selector: outputs.meta.v1.LabelSelectorPatch;
    /**
     * VolumeMounts defines the collection of VolumeMount to inject into containers.
     */
    volumeMounts: outputs.core.v1.VolumeMountPatch[];
    /**
     * Volumes defines the collection of Volume to inject into the pod.
     */
    volumes: outputs.core.v1.VolumePatch[];
}

