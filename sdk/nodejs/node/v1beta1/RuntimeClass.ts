// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputApi from "../../types/input";
import * as outputApi from "../../types/output";

    /**
     * RuntimeClass defines a class of container runtime supported in the cluster. The RuntimeClass
     * is used to determine which container runtime is used to run all containers in a pod.
     * RuntimeClasses are (currently) manually defined by a user or cluster provisioner, and
     * referenced in the PodSpec. The Kubelet is responsible for resolving the RuntimeClassName
     * reference before running the pod.  For more details, see
     * https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md
     */
    export class RuntimeClass extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"node.k8s.io/v1beta1">;

      /**
       * Handler specifies the underlying runtime and configuration that the CRI implementation will
       * use to handle pods of this class. The possible values are specific to the node & CRI
       * configuration.  It is assumed that all handlers are available on every node, and handlers
       * of the same name are equivalent on every node. For example, a handler called "runc" might
       * specify that the runc OCI runtime (using native Linux containers) will be used to run the
       * containers in a pod. The Handler must conform to the DNS Label (RFC 1123) requirements, and
       * is immutable.
       */
      public readonly handler: pulumi.Output<string>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"RuntimeClass">;

      /**
       * More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Get the state of an existing `RuntimeClass` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrieve. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RuntimeClass {
          return new RuntimeClass(name, undefined, { ...opts, id: id });
      }

      /**
       * Create a node.v1beta1.RuntimeClass resource with the given unique name, arguments, and options.
       *
       * @param name The _unique_ name of the resource.
       * @param args The arguments to use to populate this resource's properties.
       * @param opts A bag of options that control this resource's behavior.
       */
      constructor(name: string, args?: inputApi.node.v1beta1.RuntimeClass, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "node.k8s.io/v1beta1";
          inputs["handler"] = args && args.handler || undefined;
          inputs["kind"] = "RuntimeClass";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:node.k8s.io/v1beta1:RuntimeClass", name, inputs, opts);
      }
    }
