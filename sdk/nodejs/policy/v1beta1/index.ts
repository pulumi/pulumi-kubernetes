// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { PodDisruptionBudgetArgs } from "./podDisruptionBudget";
export type PodDisruptionBudget = import("./podDisruptionBudget").PodDisruptionBudget;
export const PodDisruptionBudget: typeof import("./podDisruptionBudget").PodDisruptionBudget = null as any;
utilities.lazyLoad(exports, ["PodDisruptionBudget"], () => require("./podDisruptionBudget"));

export { PodDisruptionBudgetListArgs } from "./podDisruptionBudgetList";
export type PodDisruptionBudgetList = import("./podDisruptionBudgetList").PodDisruptionBudgetList;
export const PodDisruptionBudgetList: typeof import("./podDisruptionBudgetList").PodDisruptionBudgetList = null as any;
utilities.lazyLoad(exports, ["PodDisruptionBudgetList"], () => require("./podDisruptionBudgetList"));

export { PodDisruptionBudgetPatchArgs } from "./podDisruptionBudgetPatch";
export type PodDisruptionBudgetPatch = import("./podDisruptionBudgetPatch").PodDisruptionBudgetPatch;
export const PodDisruptionBudgetPatch: typeof import("./podDisruptionBudgetPatch").PodDisruptionBudgetPatch = null as any;
utilities.lazyLoad(exports, ["PodDisruptionBudgetPatch"], () => require("./podDisruptionBudgetPatch"));

export { PodSecurityPolicyArgs } from "./podSecurityPolicy";
export type PodSecurityPolicy = import("./podSecurityPolicy").PodSecurityPolicy;
export const PodSecurityPolicy: typeof import("./podSecurityPolicy").PodSecurityPolicy = null as any;
utilities.lazyLoad(exports, ["PodSecurityPolicy"], () => require("./podSecurityPolicy"));

export { PodSecurityPolicyListArgs } from "./podSecurityPolicyList";
export type PodSecurityPolicyList = import("./podSecurityPolicyList").PodSecurityPolicyList;
export const PodSecurityPolicyList: typeof import("./podSecurityPolicyList").PodSecurityPolicyList = null as any;
utilities.lazyLoad(exports, ["PodSecurityPolicyList"], () => require("./podSecurityPolicyList"));

export { PodSecurityPolicyPatchArgs } from "./podSecurityPolicyPatch";
export type PodSecurityPolicyPatch = import("./podSecurityPolicyPatch").PodSecurityPolicyPatch;
export const PodSecurityPolicyPatch: typeof import("./podSecurityPolicyPatch").PodSecurityPolicyPatch = null as any;
utilities.lazyLoad(exports, ["PodSecurityPolicyPatch"], () => require("./podSecurityPolicyPatch"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:policy/v1beta1:PodDisruptionBudget":
                return new PodDisruptionBudget(name, <any>undefined, { urn })
            case "kubernetes:policy/v1beta1:PodDisruptionBudgetList":
                return new PodDisruptionBudgetList(name, <any>undefined, { urn })
            case "kubernetes:policy/v1beta1:PodDisruptionBudgetPatch":
                return new PodDisruptionBudgetPatch(name, <any>undefined, { urn })
            case "kubernetes:policy/v1beta1:PodSecurityPolicy":
                return new PodSecurityPolicy(name, <any>undefined, { urn })
            case "kubernetes:policy/v1beta1:PodSecurityPolicyList":
                return new PodSecurityPolicyList(name, <any>undefined, { urn })
            case "kubernetes:policy/v1beta1:PodSecurityPolicyPatch":
                return new PodSecurityPolicyPatch(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("kubernetes", "policy/v1beta1", _module)
