// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { APIServiceArgs } from "./apiservice";
export type APIService = import("./apiservice").APIService;
export const APIService: typeof import("./apiservice").APIService = null as any;

export { APIServiceListArgs } from "./apiserviceList";
export type APIServiceList = import("./apiserviceList").APIServiceList;
export const APIServiceList: typeof import("./apiserviceList").APIServiceList = null as any;

export { APIServicePatchArgs } from "./apiservicePatch";
export type APIServicePatch = import("./apiservicePatch").APIServicePatch;
export const APIServicePatch: typeof import("./apiservicePatch").APIServicePatch = null as any;

utilities.lazyLoad(exports, ["APIService"], () => require("./apiservice"));
utilities.lazyLoad(exports, ["APIServiceList"], () => require("./apiserviceList"));
utilities.lazyLoad(exports, ["APIServicePatch"], () => require("./apiservicePatch"));

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:apiregistration.k8s.io/v1:APIService":
                return new APIService(name, <any>undefined, { urn })
            case "kubernetes:apiregistration.k8s.io/v1:APIServiceList":
                return new APIServiceList(name, <any>undefined, { urn })
            case "kubernetes:apiregistration.k8s.io/v1:APIServicePatch":
                return new APIServicePatch(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("kubernetes", "apiregistration.k8s.io/v1", _module)
