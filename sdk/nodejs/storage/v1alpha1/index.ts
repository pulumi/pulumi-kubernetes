// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export * from "./csistorageCapacity";
export * from "./csistorageCapacityList";
export * from "./volumeAttachment";
export * from "./volumeAttachmentList";

// Import resources to register:
import { CSIStorageCapacity } from "./csistorageCapacity";
import { CSIStorageCapacityList } from "./csistorageCapacityList";
import { VolumeAttachment } from "./volumeAttachment";
import { VolumeAttachmentList } from "./volumeAttachmentList";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:storage.k8s.io/v1alpha1:CSIStorageCapacity":
                return new CSIStorageCapacity(name, <any>undefined, { urn })
            case "kubernetes:storage.k8s.io/v1alpha1:CSIStorageCapacityList":
                return new CSIStorageCapacityList(name, <any>undefined, { urn })
            case "kubernetes:storage.k8s.io/v1alpha1:VolumeAttachment":
                return new VolumeAttachment(name, <any>undefined, { urn })
            case "kubernetes:storage.k8s.io/v1alpha1:VolumeAttachmentList":
                return new VolumeAttachmentList(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("kubernetes", "storage.k8s.io/v1alpha1", _module)
