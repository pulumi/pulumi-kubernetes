// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export * from "./csidriver";
export * from "./csidriverList";
export * from "./csinode";
export * from "./csinodeList";
export * from "./storageClass";
export * from "./storageClassList";
export * from "./volumeAttachment";
export * from "./volumeAttachmentList";

// Import resources to register:
import { CSIDriver } from "./csidriver";
import { CSIDriverList } from "./csidriverList";
import { CSINode } from "./csinode";
import { CSINodeList } from "./csinodeList";
import { StorageClass } from "./storageClass";
import { StorageClassList } from "./storageClassList";
import { VolumeAttachment } from "./volumeAttachment";
import { VolumeAttachmentList } from "./volumeAttachmentList";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:storage.k8s.io/v1:CSIDriver":
                return new CSIDriver(name, <any>undefined, { urn })
            case "kubernetes:storage.k8s.io/v1:CSIDriverList":
                return new CSIDriverList(name, <any>undefined, { urn })
            case "kubernetes:storage.k8s.io/v1:CSINode":
                return new CSINode(name, <any>undefined, { urn })
            case "kubernetes:storage.k8s.io/v1:CSINodeList":
                return new CSINodeList(name, <any>undefined, { urn })
            case "kubernetes:storage.k8s.io/v1:StorageClass":
                return new StorageClass(name, <any>undefined, { urn })
            case "kubernetes:storage.k8s.io/v1:StorageClassList":
                return new StorageClassList(name, <any>undefined, { urn })
            case "kubernetes:storage.k8s.io/v1:VolumeAttachment":
                return new VolumeAttachment(name, <any>undefined, { urn })
            case "kubernetes:storage.k8s.io/v1:VolumeAttachmentList":
                return new VolumeAttachmentList(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("kubernetes", "storage.k8s.io/v1", _module)
