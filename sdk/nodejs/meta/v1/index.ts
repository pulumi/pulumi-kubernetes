// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { StatusArgs } from "./status";
export type Status = import("./status").Status;
export const Status: typeof import("./status").Status = null as any;

export { StatusPatchArgs } from "./statusPatch";
export type StatusPatch = import("./statusPatch").StatusPatch;
export const StatusPatch: typeof import("./statusPatch").StatusPatch = null as any;

utilities.lazyLoad(exports, ["Status"], () => require("./status"));
utilities.lazyLoad(exports, ["StatusPatch"], () => require("./statusPatch"));

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:meta/v1:Status":
                return new Status(name, <any>undefined, { urn })
            case "kubernetes:meta/v1:StatusPatch":
                return new StatusPatch(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("kubernetes", "meta/v1", _module)
