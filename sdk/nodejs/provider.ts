// *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as fs from "fs";

import * as pulumi from "@pulumi/pulumi";
import * as inputApi from "./types/input";
import * as outputApi from "./types/output";
import * as jsyaml from "js-yaml";
import * as glob from "glob";
import * as got from "got";

export namespace yaml {
    export interface ConfigGroupOpts {
        /** Set of paths or a URLs that uniquely identify files. */
        files?: string[] | string;

        /** YAML text containing Kubernetes resource definitions. */
        yaml?: string[] | string;

        /** JavaScript objects represeting Kubernetes resources. */
        objs?: any[] | any;

        /**
         * A set of transformations to apply to Kubernetes resource definitions before registering
         * with engine.
         */
        transformations?: ((o: any) => void)[];
    }

    export interface ConfigFileOpts {
        /** Path or a URL that uniquely identifies a file. */
        file?: string;

        /**
         * A set of transformations to apply to Kubernetes resource definitions before registering
         * with engine.
         */
        transformations?: ((o: any) => void)[];
    }

    export interface ConfigOpts {
        /** JavaScript objects represeting Kubernetes resources. */
        objs: any[];

        /**
         * A set of transformations to apply to Kubernetes resource definitions before registering
         * with engine.
         */
        transformations?: ((o: any) => void)[];
    }

    export function parse(
        config: ConfigGroupOpts, opts?: pulumi.CustomResourceOptions
    ): pulumi.Output<{[key: string]: pulumi.CustomResource}> {
        let resources = pulumi.output<{[key: string]: pulumi.CustomResource}>({});

        if (config.files !== undefined) {
            let files: string[] = [];
            if (typeof config.files === 'string') {
                files = glob.sync(config.files);
            } else {
                for (const file of config.files) {
                    files.push(...glob.sync(file));
                }
            }

            for (const file of files) {
                const cf = new ConfigFile(file, {file: file, transformations: config.transformations}, opts);
                resources = pulumi.all([resources, cf.resources]).apply(([rs, cfrs]) => ({...rs, ...cfrs}));
            }
        }

        if (config.yaml !== undefined) {
            let yamlTexts: string[] = [];
            if (typeof config.yaml === 'string') {
                yamlTexts.push(config.yaml);
            } else {
                yamlTexts.push(...config.yaml);
            }

            for (const text of yamlTexts) {
                const objs = jsyaml.safeLoadAll(text);
                const docResources = parseYamlDocument({objs: objs, transformations: config.transformations}, opts);
                resources = pulumi.all([resources, docResources]).apply(([rs, drs]) => ({...rs, ...drs}));
            }
        }

        if (config.objs !== undefined) {
            const objs= Array.isArray(config.objs) ? config.objs: [config.objs];
                const docResources = parseYamlDocument({objs: objs, transformations: config.transformations}, opts);
                resources = pulumi.all([resources, docResources]).apply(([rs, drs]) => ({...rs, ...drs}));
        }

        return resources;
    }

    export abstract class CollectionComponentResource extends pulumi.ComponentResource {
        resources: pulumi.Output<{ [key: string]: pulumi.CustomResource }>;

        constructor(
            resourceType: string, name: string, config: any, opts?: pulumi.ComponentResourceOptions,
        ) {
            super(resourceType, name, config, opts);
        }

        /**
         * getResource returns a resource defined by a built-in Kubernetes group/version/kind and name.
         *
         * For example:
         *     getResource("apps/v1/Deployment", "nginx")
         */
        public getResource(groupVersionKind: "admissionregistration.k8s.io/v1alpha1/InitializerConfiguration", name: string): pulumi.Output<admissionregistration.v1alpha1.InitializerConfiguration>;
        public getResource(groupVersionKind: "admissionregistration.k8s.io/v1alpha1/InitializerConfiguration", namespace: string, name: string): pulumi.Output<admissionregistration.v1alpha1.InitializerConfiguration>;
        public getResource(groupVersionKind: "admissionregistration.k8s.io/v1alpha1/InitializerConfigurationList", name: string): pulumi.Output<admissionregistration.v1alpha1.InitializerConfigurationList>;
        public getResource(groupVersionKind: "admissionregistration.k8s.io/v1alpha1/InitializerConfigurationList", namespace: string, name: string): pulumi.Output<admissionregistration.v1alpha1.InitializerConfigurationList>;
        public getResource(groupVersionKind: "admissionregistration.k8s.io/v1beta1/MutatingWebhookConfiguration", name: string): pulumi.Output<admissionregistration.v1beta1.MutatingWebhookConfiguration>;
        public getResource(groupVersionKind: "admissionregistration.k8s.io/v1beta1/MutatingWebhookConfiguration", namespace: string, name: string): pulumi.Output<admissionregistration.v1beta1.MutatingWebhookConfiguration>;
        public getResource(groupVersionKind: "admissionregistration.k8s.io/v1beta1/MutatingWebhookConfigurationList", name: string): pulumi.Output<admissionregistration.v1beta1.MutatingWebhookConfigurationList>;
        public getResource(groupVersionKind: "admissionregistration.k8s.io/v1beta1/MutatingWebhookConfigurationList", namespace: string, name: string): pulumi.Output<admissionregistration.v1beta1.MutatingWebhookConfigurationList>;
        public getResource(groupVersionKind: "admissionregistration.k8s.io/v1beta1/ValidatingWebhookConfiguration", name: string): pulumi.Output<admissionregistration.v1beta1.ValidatingWebhookConfiguration>;
        public getResource(groupVersionKind: "admissionregistration.k8s.io/v1beta1/ValidatingWebhookConfiguration", namespace: string, name: string): pulumi.Output<admissionregistration.v1beta1.ValidatingWebhookConfiguration>;
        public getResource(groupVersionKind: "admissionregistration.k8s.io/v1beta1/ValidatingWebhookConfigurationList", name: string): pulumi.Output<admissionregistration.v1beta1.ValidatingWebhookConfigurationList>;
        public getResource(groupVersionKind: "admissionregistration.k8s.io/v1beta1/ValidatingWebhookConfigurationList", namespace: string, name: string): pulumi.Output<admissionregistration.v1beta1.ValidatingWebhookConfigurationList>;
        public getResource(groupVersionKind: "apiextensions.k8s.io/v1beta1/CustomResourceDefinition", name: string): pulumi.Output<apiextensions.v1beta1.CustomResourceDefinition>;
        public getResource(groupVersionKind: "apiextensions.k8s.io/v1beta1/CustomResourceDefinition", namespace: string, name: string): pulumi.Output<apiextensions.v1beta1.CustomResourceDefinition>;
        public getResource(groupVersionKind: "apiextensions.k8s.io/v1beta1/CustomResourceDefinitionList", name: string): pulumi.Output<apiextensions.v1beta1.CustomResourceDefinitionList>;
        public getResource(groupVersionKind: "apiextensions.k8s.io/v1beta1/CustomResourceDefinitionList", namespace: string, name: string): pulumi.Output<apiextensions.v1beta1.CustomResourceDefinitionList>;
        public getResource(groupVersionKind: "apiregistration.k8s.io/v1/APIService", name: string): pulumi.Output<apiregistration.v1.APIService>;
        public getResource(groupVersionKind: "apiregistration.k8s.io/v1/APIService", namespace: string, name: string): pulumi.Output<apiregistration.v1.APIService>;
        public getResource(groupVersionKind: "apiregistration/v1/APIService", name: string): pulumi.Output<apiregistration.v1.APIService>;
        public getResource(groupVersionKind: "apiregistration/v1/APIService", namespace: string, name: string): pulumi.Output<apiregistration.v1.APIService>;
        public getResource(groupVersionKind: "apiregistration.k8s.io/v1/APIServiceList", name: string): pulumi.Output<apiregistration.v1.APIServiceList>;
        public getResource(groupVersionKind: "apiregistration.k8s.io/v1/APIServiceList", namespace: string, name: string): pulumi.Output<apiregistration.v1.APIServiceList>;
        public getResource(groupVersionKind: "apiregistration/v1/APIServiceList", name: string): pulumi.Output<apiregistration.v1.APIServiceList>;
        public getResource(groupVersionKind: "apiregistration/v1/APIServiceList", namespace: string, name: string): pulumi.Output<apiregistration.v1.APIServiceList>;
        public getResource(groupVersionKind: "apiregistration.k8s.io/v1beta1/APIService", name: string): pulumi.Output<apiregistration.v1beta1.APIService>;
        public getResource(groupVersionKind: "apiregistration.k8s.io/v1beta1/APIService", namespace: string, name: string): pulumi.Output<apiregistration.v1beta1.APIService>;
        public getResource(groupVersionKind: "apiregistration/v1beta1/APIService", name: string): pulumi.Output<apiregistration.v1beta1.APIService>;
        public getResource(groupVersionKind: "apiregistration/v1beta1/APIService", namespace: string, name: string): pulumi.Output<apiregistration.v1beta1.APIService>;
        public getResource(groupVersionKind: "apiregistration.k8s.io/v1beta1/APIServiceList", name: string): pulumi.Output<apiregistration.v1beta1.APIServiceList>;
        public getResource(groupVersionKind: "apiregistration.k8s.io/v1beta1/APIServiceList", namespace: string, name: string): pulumi.Output<apiregistration.v1beta1.APIServiceList>;
        public getResource(groupVersionKind: "apiregistration/v1beta1/APIServiceList", name: string): pulumi.Output<apiregistration.v1beta1.APIServiceList>;
        public getResource(groupVersionKind: "apiregistration/v1beta1/APIServiceList", namespace: string, name: string): pulumi.Output<apiregistration.v1beta1.APIServiceList>;
        public getResource(groupVersionKind: "apps/v1/ControllerRevision", name: string): pulumi.Output<apps.v1.ControllerRevision>;
        public getResource(groupVersionKind: "apps/v1/ControllerRevision", namespace: string, name: string): pulumi.Output<apps.v1.ControllerRevision>;
        public getResource(groupVersionKind: "apps/v1/ControllerRevisionList", name: string): pulumi.Output<apps.v1.ControllerRevisionList>;
        public getResource(groupVersionKind: "apps/v1/ControllerRevisionList", namespace: string, name: string): pulumi.Output<apps.v1.ControllerRevisionList>;
        public getResource(groupVersionKind: "apps/v1/DaemonSet", name: string): pulumi.Output<apps.v1.DaemonSet>;
        public getResource(groupVersionKind: "apps/v1/DaemonSet", namespace: string, name: string): pulumi.Output<apps.v1.DaemonSet>;
        public getResource(groupVersionKind: "apps/v1/DaemonSetList", name: string): pulumi.Output<apps.v1.DaemonSetList>;
        public getResource(groupVersionKind: "apps/v1/DaemonSetList", namespace: string, name: string): pulumi.Output<apps.v1.DaemonSetList>;
        public getResource(groupVersionKind: "apps/v1/Deployment", name: string): pulumi.Output<apps.v1.Deployment>;
        public getResource(groupVersionKind: "apps/v1/Deployment", namespace: string, name: string): pulumi.Output<apps.v1.Deployment>;
        public getResource(groupVersionKind: "apps/v1/DeploymentList", name: string): pulumi.Output<apps.v1.DeploymentList>;
        public getResource(groupVersionKind: "apps/v1/DeploymentList", namespace: string, name: string): pulumi.Output<apps.v1.DeploymentList>;
        public getResource(groupVersionKind: "apps/v1/ReplicaSet", name: string): pulumi.Output<apps.v1.ReplicaSet>;
        public getResource(groupVersionKind: "apps/v1/ReplicaSet", namespace: string, name: string): pulumi.Output<apps.v1.ReplicaSet>;
        public getResource(groupVersionKind: "apps/v1/ReplicaSetList", name: string): pulumi.Output<apps.v1.ReplicaSetList>;
        public getResource(groupVersionKind: "apps/v1/ReplicaSetList", namespace: string, name: string): pulumi.Output<apps.v1.ReplicaSetList>;
        public getResource(groupVersionKind: "apps/v1/StatefulSet", name: string): pulumi.Output<apps.v1.StatefulSet>;
        public getResource(groupVersionKind: "apps/v1/StatefulSet", namespace: string, name: string): pulumi.Output<apps.v1.StatefulSet>;
        public getResource(groupVersionKind: "apps/v1/StatefulSetList", name: string): pulumi.Output<apps.v1.StatefulSetList>;
        public getResource(groupVersionKind: "apps/v1/StatefulSetList", namespace: string, name: string): pulumi.Output<apps.v1.StatefulSetList>;
        public getResource(groupVersionKind: "apps/v1beta1/ControllerRevision", name: string): pulumi.Output<apps.v1beta1.ControllerRevision>;
        public getResource(groupVersionKind: "apps/v1beta1/ControllerRevision", namespace: string, name: string): pulumi.Output<apps.v1beta1.ControllerRevision>;
        public getResource(groupVersionKind: "apps/v1beta1/ControllerRevisionList", name: string): pulumi.Output<apps.v1beta1.ControllerRevisionList>;
        public getResource(groupVersionKind: "apps/v1beta1/ControllerRevisionList", namespace: string, name: string): pulumi.Output<apps.v1beta1.ControllerRevisionList>;
        public getResource(groupVersionKind: "apps/v1beta1/Deployment", name: string): pulumi.Output<apps.v1beta1.Deployment>;
        public getResource(groupVersionKind: "apps/v1beta1/Deployment", namespace: string, name: string): pulumi.Output<apps.v1beta1.Deployment>;
        public getResource(groupVersionKind: "apps/v1beta1/DeploymentList", name: string): pulumi.Output<apps.v1beta1.DeploymentList>;
        public getResource(groupVersionKind: "apps/v1beta1/DeploymentList", namespace: string, name: string): pulumi.Output<apps.v1beta1.DeploymentList>;
        public getResource(groupVersionKind: "apps/v1beta1/DeploymentRollback", name: string): pulumi.Output<apps.v1beta1.DeploymentRollback>;
        public getResource(groupVersionKind: "apps/v1beta1/DeploymentRollback", namespace: string, name: string): pulumi.Output<apps.v1beta1.DeploymentRollback>;
        public getResource(groupVersionKind: "apps/v1beta1/Scale", name: string): pulumi.Output<apps.v1beta1.Scale>;
        public getResource(groupVersionKind: "apps/v1beta1/Scale", namespace: string, name: string): pulumi.Output<apps.v1beta1.Scale>;
        public getResource(groupVersionKind: "apps/v1beta1/StatefulSet", name: string): pulumi.Output<apps.v1beta1.StatefulSet>;
        public getResource(groupVersionKind: "apps/v1beta1/StatefulSet", namespace: string, name: string): pulumi.Output<apps.v1beta1.StatefulSet>;
        public getResource(groupVersionKind: "apps/v1beta1/StatefulSetList", name: string): pulumi.Output<apps.v1beta1.StatefulSetList>;
        public getResource(groupVersionKind: "apps/v1beta1/StatefulSetList", namespace: string, name: string): pulumi.Output<apps.v1beta1.StatefulSetList>;
        public getResource(groupVersionKind: "apps/v1beta2/ControllerRevision", name: string): pulumi.Output<apps.v1beta2.ControllerRevision>;
        public getResource(groupVersionKind: "apps/v1beta2/ControllerRevision", namespace: string, name: string): pulumi.Output<apps.v1beta2.ControllerRevision>;
        public getResource(groupVersionKind: "apps/v1beta2/ControllerRevisionList", name: string): pulumi.Output<apps.v1beta2.ControllerRevisionList>;
        public getResource(groupVersionKind: "apps/v1beta2/ControllerRevisionList", namespace: string, name: string): pulumi.Output<apps.v1beta2.ControllerRevisionList>;
        public getResource(groupVersionKind: "apps/v1beta2/DaemonSet", name: string): pulumi.Output<apps.v1beta2.DaemonSet>;
        public getResource(groupVersionKind: "apps/v1beta2/DaemonSet", namespace: string, name: string): pulumi.Output<apps.v1beta2.DaemonSet>;
        public getResource(groupVersionKind: "apps/v1beta2/DaemonSetList", name: string): pulumi.Output<apps.v1beta2.DaemonSetList>;
        public getResource(groupVersionKind: "apps/v1beta2/DaemonSetList", namespace: string, name: string): pulumi.Output<apps.v1beta2.DaemonSetList>;
        public getResource(groupVersionKind: "apps/v1beta2/Deployment", name: string): pulumi.Output<apps.v1beta2.Deployment>;
        public getResource(groupVersionKind: "apps/v1beta2/Deployment", namespace: string, name: string): pulumi.Output<apps.v1beta2.Deployment>;
        public getResource(groupVersionKind: "apps/v1beta2/DeploymentList", name: string): pulumi.Output<apps.v1beta2.DeploymentList>;
        public getResource(groupVersionKind: "apps/v1beta2/DeploymentList", namespace: string, name: string): pulumi.Output<apps.v1beta2.DeploymentList>;
        public getResource(groupVersionKind: "apps/v1beta2/ReplicaSet", name: string): pulumi.Output<apps.v1beta2.ReplicaSet>;
        public getResource(groupVersionKind: "apps/v1beta2/ReplicaSet", namespace: string, name: string): pulumi.Output<apps.v1beta2.ReplicaSet>;
        public getResource(groupVersionKind: "apps/v1beta2/ReplicaSetList", name: string): pulumi.Output<apps.v1beta2.ReplicaSetList>;
        public getResource(groupVersionKind: "apps/v1beta2/ReplicaSetList", namespace: string, name: string): pulumi.Output<apps.v1beta2.ReplicaSetList>;
        public getResource(groupVersionKind: "apps/v1beta2/Scale", name: string): pulumi.Output<apps.v1beta2.Scale>;
        public getResource(groupVersionKind: "apps/v1beta2/Scale", namespace: string, name: string): pulumi.Output<apps.v1beta2.Scale>;
        public getResource(groupVersionKind: "apps/v1beta2/StatefulSet", name: string): pulumi.Output<apps.v1beta2.StatefulSet>;
        public getResource(groupVersionKind: "apps/v1beta2/StatefulSet", namespace: string, name: string): pulumi.Output<apps.v1beta2.StatefulSet>;
        public getResource(groupVersionKind: "apps/v1beta2/StatefulSetList", name: string): pulumi.Output<apps.v1beta2.StatefulSetList>;
        public getResource(groupVersionKind: "apps/v1beta2/StatefulSetList", namespace: string, name: string): pulumi.Output<apps.v1beta2.StatefulSetList>;
        public getResource(groupVersionKind: "auditregistration.k8s.io/v1alpha1/AuditSink", name: string): pulumi.Output<auditregistration.v1alpha1.AuditSink>;
        public getResource(groupVersionKind: "auditregistration.k8s.io/v1alpha1/AuditSink", namespace: string, name: string): pulumi.Output<auditregistration.v1alpha1.AuditSink>;
        public getResource(groupVersionKind: "auditregistration.k8s.io/v1alpha1/AuditSinkList", name: string): pulumi.Output<auditregistration.v1alpha1.AuditSinkList>;
        public getResource(groupVersionKind: "auditregistration.k8s.io/v1alpha1/AuditSinkList", namespace: string, name: string): pulumi.Output<auditregistration.v1alpha1.AuditSinkList>;
        public getResource(groupVersionKind: "authentication.k8s.io/v1/TokenReview", name: string): pulumi.Output<authentication.v1.TokenReview>;
        public getResource(groupVersionKind: "authentication.k8s.io/v1/TokenReview", namespace: string, name: string): pulumi.Output<authentication.v1.TokenReview>;
        public getResource(groupVersionKind: "authentication.k8s.io/v1beta1/TokenReview", name: string): pulumi.Output<authentication.v1beta1.TokenReview>;
        public getResource(groupVersionKind: "authentication.k8s.io/v1beta1/TokenReview", namespace: string, name: string): pulumi.Output<authentication.v1beta1.TokenReview>;
        public getResource(groupVersionKind: "authorization.k8s.io/v1/LocalSubjectAccessReview", name: string): pulumi.Output<authorization.v1.LocalSubjectAccessReview>;
        public getResource(groupVersionKind: "authorization.k8s.io/v1/LocalSubjectAccessReview", namespace: string, name: string): pulumi.Output<authorization.v1.LocalSubjectAccessReview>;
        public getResource(groupVersionKind: "authorization.k8s.io/v1/SelfSubjectAccessReview", name: string): pulumi.Output<authorization.v1.SelfSubjectAccessReview>;
        public getResource(groupVersionKind: "authorization.k8s.io/v1/SelfSubjectAccessReview", namespace: string, name: string): pulumi.Output<authorization.v1.SelfSubjectAccessReview>;
        public getResource(groupVersionKind: "authorization.k8s.io/v1/SelfSubjectRulesReview", name: string): pulumi.Output<authorization.v1.SelfSubjectRulesReview>;
        public getResource(groupVersionKind: "authorization.k8s.io/v1/SelfSubjectRulesReview", namespace: string, name: string): pulumi.Output<authorization.v1.SelfSubjectRulesReview>;
        public getResource(groupVersionKind: "authorization.k8s.io/v1/SubjectAccessReview", name: string): pulumi.Output<authorization.v1.SubjectAccessReview>;
        public getResource(groupVersionKind: "authorization.k8s.io/v1/SubjectAccessReview", namespace: string, name: string): pulumi.Output<authorization.v1.SubjectAccessReview>;
        public getResource(groupVersionKind: "authorization.k8s.io/v1beta1/LocalSubjectAccessReview", name: string): pulumi.Output<authorization.v1beta1.LocalSubjectAccessReview>;
        public getResource(groupVersionKind: "authorization.k8s.io/v1beta1/LocalSubjectAccessReview", namespace: string, name: string): pulumi.Output<authorization.v1beta1.LocalSubjectAccessReview>;
        public getResource(groupVersionKind: "authorization.k8s.io/v1beta1/SelfSubjectAccessReview", name: string): pulumi.Output<authorization.v1beta1.SelfSubjectAccessReview>;
        public getResource(groupVersionKind: "authorization.k8s.io/v1beta1/SelfSubjectAccessReview", namespace: string, name: string): pulumi.Output<authorization.v1beta1.SelfSubjectAccessReview>;
        public getResource(groupVersionKind: "authorization.k8s.io/v1beta1/SelfSubjectRulesReview", name: string): pulumi.Output<authorization.v1beta1.SelfSubjectRulesReview>;
        public getResource(groupVersionKind: "authorization.k8s.io/v1beta1/SelfSubjectRulesReview", namespace: string, name: string): pulumi.Output<authorization.v1beta1.SelfSubjectRulesReview>;
        public getResource(groupVersionKind: "authorization.k8s.io/v1beta1/SubjectAccessReview", name: string): pulumi.Output<authorization.v1beta1.SubjectAccessReview>;
        public getResource(groupVersionKind: "authorization.k8s.io/v1beta1/SubjectAccessReview", namespace: string, name: string): pulumi.Output<authorization.v1beta1.SubjectAccessReview>;
        public getResource(groupVersionKind: "autoscaling/v1/CrossVersionObjectReference", name: string): pulumi.Output<autoscaling.v1.CrossVersionObjectReference>;
        public getResource(groupVersionKind: "autoscaling/v1/CrossVersionObjectReference", namespace: string, name: string): pulumi.Output<autoscaling.v1.CrossVersionObjectReference>;
        public getResource(groupVersionKind: "autoscaling/v1/HorizontalPodAutoscaler", name: string): pulumi.Output<autoscaling.v1.HorizontalPodAutoscaler>;
        public getResource(groupVersionKind: "autoscaling/v1/HorizontalPodAutoscaler", namespace: string, name: string): pulumi.Output<autoscaling.v1.HorizontalPodAutoscaler>;
        public getResource(groupVersionKind: "autoscaling/v1/HorizontalPodAutoscalerList", name: string): pulumi.Output<autoscaling.v1.HorizontalPodAutoscalerList>;
        public getResource(groupVersionKind: "autoscaling/v1/HorizontalPodAutoscalerList", namespace: string, name: string): pulumi.Output<autoscaling.v1.HorizontalPodAutoscalerList>;
        public getResource(groupVersionKind: "autoscaling/v1/Scale", name: string): pulumi.Output<autoscaling.v1.Scale>;
        public getResource(groupVersionKind: "autoscaling/v1/Scale", namespace: string, name: string): pulumi.Output<autoscaling.v1.Scale>;
        public getResource(groupVersionKind: "autoscaling/v2beta1/CrossVersionObjectReference", name: string): pulumi.Output<autoscaling.v2beta1.CrossVersionObjectReference>;
        public getResource(groupVersionKind: "autoscaling/v2beta1/CrossVersionObjectReference", namespace: string, name: string): pulumi.Output<autoscaling.v2beta1.CrossVersionObjectReference>;
        public getResource(groupVersionKind: "autoscaling/v2beta1/HorizontalPodAutoscaler", name: string): pulumi.Output<autoscaling.v2beta1.HorizontalPodAutoscaler>;
        public getResource(groupVersionKind: "autoscaling/v2beta1/HorizontalPodAutoscaler", namespace: string, name: string): pulumi.Output<autoscaling.v2beta1.HorizontalPodAutoscaler>;
        public getResource(groupVersionKind: "autoscaling/v2beta1/HorizontalPodAutoscalerList", name: string): pulumi.Output<autoscaling.v2beta1.HorizontalPodAutoscalerList>;
        public getResource(groupVersionKind: "autoscaling/v2beta1/HorizontalPodAutoscalerList", namespace: string, name: string): pulumi.Output<autoscaling.v2beta1.HorizontalPodAutoscalerList>;
        public getResource(groupVersionKind: "autoscaling/v2beta2/CrossVersionObjectReference", name: string): pulumi.Output<autoscaling.v2beta2.CrossVersionObjectReference>;
        public getResource(groupVersionKind: "autoscaling/v2beta2/CrossVersionObjectReference", namespace: string, name: string): pulumi.Output<autoscaling.v2beta2.CrossVersionObjectReference>;
        public getResource(groupVersionKind: "autoscaling/v2beta2/HorizontalPodAutoscaler", name: string): pulumi.Output<autoscaling.v2beta2.HorizontalPodAutoscaler>;
        public getResource(groupVersionKind: "autoscaling/v2beta2/HorizontalPodAutoscaler", namespace: string, name: string): pulumi.Output<autoscaling.v2beta2.HorizontalPodAutoscaler>;
        public getResource(groupVersionKind: "autoscaling/v2beta2/HorizontalPodAutoscalerList", name: string): pulumi.Output<autoscaling.v2beta2.HorizontalPodAutoscalerList>;
        public getResource(groupVersionKind: "autoscaling/v2beta2/HorizontalPodAutoscalerList", namespace: string, name: string): pulumi.Output<autoscaling.v2beta2.HorizontalPodAutoscalerList>;
        public getResource(groupVersionKind: "batch/v1/Job", name: string): pulumi.Output<batch.v1.Job>;
        public getResource(groupVersionKind: "batch/v1/Job", namespace: string, name: string): pulumi.Output<batch.v1.Job>;
        public getResource(groupVersionKind: "batch/v1/JobList", name: string): pulumi.Output<batch.v1.JobList>;
        public getResource(groupVersionKind: "batch/v1/JobList", namespace: string, name: string): pulumi.Output<batch.v1.JobList>;
        public getResource(groupVersionKind: "batch/v1beta1/CronJob", name: string): pulumi.Output<batch.v1beta1.CronJob>;
        public getResource(groupVersionKind: "batch/v1beta1/CronJob", namespace: string, name: string): pulumi.Output<batch.v1beta1.CronJob>;
        public getResource(groupVersionKind: "batch/v1beta1/CronJobList", name: string): pulumi.Output<batch.v1beta1.CronJobList>;
        public getResource(groupVersionKind: "batch/v1beta1/CronJobList", namespace: string, name: string): pulumi.Output<batch.v1beta1.CronJobList>;
        public getResource(groupVersionKind: "batch/v2alpha1/CronJob", name: string): pulumi.Output<batch.v2alpha1.CronJob>;
        public getResource(groupVersionKind: "batch/v2alpha1/CronJob", namespace: string, name: string): pulumi.Output<batch.v2alpha1.CronJob>;
        public getResource(groupVersionKind: "batch/v2alpha1/CronJobList", name: string): pulumi.Output<batch.v2alpha1.CronJobList>;
        public getResource(groupVersionKind: "batch/v2alpha1/CronJobList", namespace: string, name: string): pulumi.Output<batch.v2alpha1.CronJobList>;
        public getResource(groupVersionKind: "certificates.k8s.io/v1beta1/CertificateSigningRequest", name: string): pulumi.Output<certificates.v1beta1.CertificateSigningRequest>;
        public getResource(groupVersionKind: "certificates.k8s.io/v1beta1/CertificateSigningRequest", namespace: string, name: string): pulumi.Output<certificates.v1beta1.CertificateSigningRequest>;
        public getResource(groupVersionKind: "certificates.k8s.io/v1beta1/CertificateSigningRequestList", name: string): pulumi.Output<certificates.v1beta1.CertificateSigningRequestList>;
        public getResource(groupVersionKind: "certificates.k8s.io/v1beta1/CertificateSigningRequestList", namespace: string, name: string): pulumi.Output<certificates.v1beta1.CertificateSigningRequestList>;
        public getResource(groupVersionKind: "coordination.k8s.io/v1beta1/Lease", name: string): pulumi.Output<coordination.v1beta1.Lease>;
        public getResource(groupVersionKind: "coordination.k8s.io/v1beta1/Lease", namespace: string, name: string): pulumi.Output<coordination.v1beta1.Lease>;
        public getResource(groupVersionKind: "coordination.k8s.io/v1beta1/LeaseList", name: string): pulumi.Output<coordination.v1beta1.LeaseList>;
        public getResource(groupVersionKind: "coordination.k8s.io/v1beta1/LeaseList", namespace: string, name: string): pulumi.Output<coordination.v1beta1.LeaseList>;
        public getResource(groupVersionKind: "v1/Binding", name: string): pulumi.Output<core.v1.Binding>;
        public getResource(groupVersionKind: "v1/Binding", namespace: string, name: string): pulumi.Output<core.v1.Binding>;
        public getResource(groupVersionKind: "v1/ComponentStatus", name: string): pulumi.Output<core.v1.ComponentStatus>;
        public getResource(groupVersionKind: "v1/ComponentStatus", namespace: string, name: string): pulumi.Output<core.v1.ComponentStatus>;
        public getResource(groupVersionKind: "v1/ComponentStatusList", name: string): pulumi.Output<core.v1.ComponentStatusList>;
        public getResource(groupVersionKind: "v1/ComponentStatusList", namespace: string, name: string): pulumi.Output<core.v1.ComponentStatusList>;
        public getResource(groupVersionKind: "v1/ConfigMap", name: string): pulumi.Output<core.v1.ConfigMap>;
        public getResource(groupVersionKind: "v1/ConfigMap", namespace: string, name: string): pulumi.Output<core.v1.ConfigMap>;
        public getResource(groupVersionKind: "v1/ConfigMapList", name: string): pulumi.Output<core.v1.ConfigMapList>;
        public getResource(groupVersionKind: "v1/ConfigMapList", namespace: string, name: string): pulumi.Output<core.v1.ConfigMapList>;
        public getResource(groupVersionKind: "v1/Endpoints", name: string): pulumi.Output<core.v1.Endpoints>;
        public getResource(groupVersionKind: "v1/Endpoints", namespace: string, name: string): pulumi.Output<core.v1.Endpoints>;
        public getResource(groupVersionKind: "v1/EndpointsList", name: string): pulumi.Output<core.v1.EndpointsList>;
        public getResource(groupVersionKind: "v1/EndpointsList", namespace: string, name: string): pulumi.Output<core.v1.EndpointsList>;
        public getResource(groupVersionKind: "v1/Event", name: string): pulumi.Output<core.v1.Event>;
        public getResource(groupVersionKind: "v1/Event", namespace: string, name: string): pulumi.Output<core.v1.Event>;
        public getResource(groupVersionKind: "v1/EventList", name: string): pulumi.Output<core.v1.EventList>;
        public getResource(groupVersionKind: "v1/EventList", namespace: string, name: string): pulumi.Output<core.v1.EventList>;
        public getResource(groupVersionKind: "v1/LimitRange", name: string): pulumi.Output<core.v1.LimitRange>;
        public getResource(groupVersionKind: "v1/LimitRange", namespace: string, name: string): pulumi.Output<core.v1.LimitRange>;
        public getResource(groupVersionKind: "v1/LimitRangeList", name: string): pulumi.Output<core.v1.LimitRangeList>;
        public getResource(groupVersionKind: "v1/LimitRangeList", namespace: string, name: string): pulumi.Output<core.v1.LimitRangeList>;
        public getResource(groupVersionKind: "v1/Namespace", name: string): pulumi.Output<core.v1.Namespace>;
        public getResource(groupVersionKind: "v1/Namespace", namespace: string, name: string): pulumi.Output<core.v1.Namespace>;
        public getResource(groupVersionKind: "v1/NamespaceList", name: string): pulumi.Output<core.v1.NamespaceList>;
        public getResource(groupVersionKind: "v1/NamespaceList", namespace: string, name: string): pulumi.Output<core.v1.NamespaceList>;
        public getResource(groupVersionKind: "v1/Node", name: string): pulumi.Output<core.v1.Node>;
        public getResource(groupVersionKind: "v1/Node", namespace: string, name: string): pulumi.Output<core.v1.Node>;
        public getResource(groupVersionKind: "v1/NodeList", name: string): pulumi.Output<core.v1.NodeList>;
        public getResource(groupVersionKind: "v1/NodeList", namespace: string, name: string): pulumi.Output<core.v1.NodeList>;
        public getResource(groupVersionKind: "core/v1/ObjectReference", name: string): pulumi.Output<core.v1.ObjectReference>;
        public getResource(groupVersionKind: "core/v1/ObjectReference", namespace: string, name: string): pulumi.Output<core.v1.ObjectReference>;
        public getResource(groupVersionKind: "v1/PersistentVolume", name: string): pulumi.Output<core.v1.PersistentVolume>;
        public getResource(groupVersionKind: "v1/PersistentVolume", namespace: string, name: string): pulumi.Output<core.v1.PersistentVolume>;
        public getResource(groupVersionKind: "v1/PersistentVolumeClaim", name: string): pulumi.Output<core.v1.PersistentVolumeClaim>;
        public getResource(groupVersionKind: "v1/PersistentVolumeClaim", namespace: string, name: string): pulumi.Output<core.v1.PersistentVolumeClaim>;
        public getResource(groupVersionKind: "v1/PersistentVolumeClaimList", name: string): pulumi.Output<core.v1.PersistentVolumeClaimList>;
        public getResource(groupVersionKind: "v1/PersistentVolumeClaimList", namespace: string, name: string): pulumi.Output<core.v1.PersistentVolumeClaimList>;
        public getResource(groupVersionKind: "v1/PersistentVolumeList", name: string): pulumi.Output<core.v1.PersistentVolumeList>;
        public getResource(groupVersionKind: "v1/PersistentVolumeList", namespace: string, name: string): pulumi.Output<core.v1.PersistentVolumeList>;
        public getResource(groupVersionKind: "v1/Pod", name: string): pulumi.Output<core.v1.Pod>;
        public getResource(groupVersionKind: "v1/Pod", namespace: string, name: string): pulumi.Output<core.v1.Pod>;
        public getResource(groupVersionKind: "v1/PodList", name: string): pulumi.Output<core.v1.PodList>;
        public getResource(groupVersionKind: "v1/PodList", namespace: string, name: string): pulumi.Output<core.v1.PodList>;
        public getResource(groupVersionKind: "v1/PodTemplate", name: string): pulumi.Output<core.v1.PodTemplate>;
        public getResource(groupVersionKind: "v1/PodTemplate", namespace: string, name: string): pulumi.Output<core.v1.PodTemplate>;
        public getResource(groupVersionKind: "v1/PodTemplateList", name: string): pulumi.Output<core.v1.PodTemplateList>;
        public getResource(groupVersionKind: "v1/PodTemplateList", namespace: string, name: string): pulumi.Output<core.v1.PodTemplateList>;
        public getResource(groupVersionKind: "v1/ReplicationController", name: string): pulumi.Output<core.v1.ReplicationController>;
        public getResource(groupVersionKind: "v1/ReplicationController", namespace: string, name: string): pulumi.Output<core.v1.ReplicationController>;
        public getResource(groupVersionKind: "v1/ReplicationControllerList", name: string): pulumi.Output<core.v1.ReplicationControllerList>;
        public getResource(groupVersionKind: "v1/ReplicationControllerList", namespace: string, name: string): pulumi.Output<core.v1.ReplicationControllerList>;
        public getResource(groupVersionKind: "v1/ResourceQuota", name: string): pulumi.Output<core.v1.ResourceQuota>;
        public getResource(groupVersionKind: "v1/ResourceQuota", namespace: string, name: string): pulumi.Output<core.v1.ResourceQuota>;
        public getResource(groupVersionKind: "v1/ResourceQuotaList", name: string): pulumi.Output<core.v1.ResourceQuotaList>;
        public getResource(groupVersionKind: "v1/ResourceQuotaList", namespace: string, name: string): pulumi.Output<core.v1.ResourceQuotaList>;
        public getResource(groupVersionKind: "v1/Secret", name: string): pulumi.Output<core.v1.Secret>;
        public getResource(groupVersionKind: "v1/Secret", namespace: string, name: string): pulumi.Output<core.v1.Secret>;
        public getResource(groupVersionKind: "v1/SecretList", name: string): pulumi.Output<core.v1.SecretList>;
        public getResource(groupVersionKind: "v1/SecretList", namespace: string, name: string): pulumi.Output<core.v1.SecretList>;
        public getResource(groupVersionKind: "v1/Service", name: string): pulumi.Output<core.v1.Service>;
        public getResource(groupVersionKind: "v1/Service", namespace: string, name: string): pulumi.Output<core.v1.Service>;
        public getResource(groupVersionKind: "v1/ServiceAccount", name: string): pulumi.Output<core.v1.ServiceAccount>;
        public getResource(groupVersionKind: "v1/ServiceAccount", namespace: string, name: string): pulumi.Output<core.v1.ServiceAccount>;
        public getResource(groupVersionKind: "v1/ServiceAccountList", name: string): pulumi.Output<core.v1.ServiceAccountList>;
        public getResource(groupVersionKind: "v1/ServiceAccountList", namespace: string, name: string): pulumi.Output<core.v1.ServiceAccountList>;
        public getResource(groupVersionKind: "v1/ServiceList", name: string): pulumi.Output<core.v1.ServiceList>;
        public getResource(groupVersionKind: "v1/ServiceList", namespace: string, name: string): pulumi.Output<core.v1.ServiceList>;
        public getResource(groupVersionKind: "events.k8s.io/v1beta1/Event", name: string): pulumi.Output<events.v1beta1.Event>;
        public getResource(groupVersionKind: "events.k8s.io/v1beta1/Event", namespace: string, name: string): pulumi.Output<events.v1beta1.Event>;
        public getResource(groupVersionKind: "events.k8s.io/v1beta1/EventList", name: string): pulumi.Output<events.v1beta1.EventList>;
        public getResource(groupVersionKind: "events.k8s.io/v1beta1/EventList", namespace: string, name: string): pulumi.Output<events.v1beta1.EventList>;
        public getResource(groupVersionKind: "extensions/v1beta1/DaemonSet", name: string): pulumi.Output<extensions.v1beta1.DaemonSet>;
        public getResource(groupVersionKind: "extensions/v1beta1/DaemonSet", namespace: string, name: string): pulumi.Output<extensions.v1beta1.DaemonSet>;
        public getResource(groupVersionKind: "extensions/v1beta1/DaemonSetList", name: string): pulumi.Output<extensions.v1beta1.DaemonSetList>;
        public getResource(groupVersionKind: "extensions/v1beta1/DaemonSetList", namespace: string, name: string): pulumi.Output<extensions.v1beta1.DaemonSetList>;
        public getResource(groupVersionKind: "extensions/v1beta1/Deployment", name: string): pulumi.Output<extensions.v1beta1.Deployment>;
        public getResource(groupVersionKind: "extensions/v1beta1/Deployment", namespace: string, name: string): pulumi.Output<extensions.v1beta1.Deployment>;
        public getResource(groupVersionKind: "extensions/v1beta1/DeploymentList", name: string): pulumi.Output<extensions.v1beta1.DeploymentList>;
        public getResource(groupVersionKind: "extensions/v1beta1/DeploymentList", namespace: string, name: string): pulumi.Output<extensions.v1beta1.DeploymentList>;
        public getResource(groupVersionKind: "extensions/v1beta1/DeploymentRollback", name: string): pulumi.Output<extensions.v1beta1.DeploymentRollback>;
        public getResource(groupVersionKind: "extensions/v1beta1/DeploymentRollback", namespace: string, name: string): pulumi.Output<extensions.v1beta1.DeploymentRollback>;
        public getResource(groupVersionKind: "extensions/v1beta1/Ingress", name: string): pulumi.Output<extensions.v1beta1.Ingress>;
        public getResource(groupVersionKind: "extensions/v1beta1/Ingress", namespace: string, name: string): pulumi.Output<extensions.v1beta1.Ingress>;
        public getResource(groupVersionKind: "extensions/v1beta1/IngressList", name: string): pulumi.Output<extensions.v1beta1.IngressList>;
        public getResource(groupVersionKind: "extensions/v1beta1/IngressList", namespace: string, name: string): pulumi.Output<extensions.v1beta1.IngressList>;
        public getResource(groupVersionKind: "extensions/v1beta1/NetworkPolicy", name: string): pulumi.Output<extensions.v1beta1.NetworkPolicy>;
        public getResource(groupVersionKind: "extensions/v1beta1/NetworkPolicy", namespace: string, name: string): pulumi.Output<extensions.v1beta1.NetworkPolicy>;
        public getResource(groupVersionKind: "extensions/v1beta1/NetworkPolicyList", name: string): pulumi.Output<extensions.v1beta1.NetworkPolicyList>;
        public getResource(groupVersionKind: "extensions/v1beta1/NetworkPolicyList", namespace: string, name: string): pulumi.Output<extensions.v1beta1.NetworkPolicyList>;
        public getResource(groupVersionKind: "extensions/v1beta1/PodSecurityPolicy", name: string): pulumi.Output<extensions.v1beta1.PodSecurityPolicy>;
        public getResource(groupVersionKind: "extensions/v1beta1/PodSecurityPolicy", namespace: string, name: string): pulumi.Output<extensions.v1beta1.PodSecurityPolicy>;
        public getResource(groupVersionKind: "extensions/v1beta1/PodSecurityPolicyList", name: string): pulumi.Output<extensions.v1beta1.PodSecurityPolicyList>;
        public getResource(groupVersionKind: "extensions/v1beta1/PodSecurityPolicyList", namespace: string, name: string): pulumi.Output<extensions.v1beta1.PodSecurityPolicyList>;
        public getResource(groupVersionKind: "extensions/v1beta1/ReplicaSet", name: string): pulumi.Output<extensions.v1beta1.ReplicaSet>;
        public getResource(groupVersionKind: "extensions/v1beta1/ReplicaSet", namespace: string, name: string): pulumi.Output<extensions.v1beta1.ReplicaSet>;
        public getResource(groupVersionKind: "extensions/v1beta1/ReplicaSetList", name: string): pulumi.Output<extensions.v1beta1.ReplicaSetList>;
        public getResource(groupVersionKind: "extensions/v1beta1/ReplicaSetList", namespace: string, name: string): pulumi.Output<extensions.v1beta1.ReplicaSetList>;
        public getResource(groupVersionKind: "extensions/v1beta1/Scale", name: string): pulumi.Output<extensions.v1beta1.Scale>;
        public getResource(groupVersionKind: "extensions/v1beta1/Scale", namespace: string, name: string): pulumi.Output<extensions.v1beta1.Scale>;
        public getResource(groupVersionKind: "v1/APIGroup", name: string): pulumi.Output<meta.v1.APIGroup>;
        public getResource(groupVersionKind: "v1/APIGroup", namespace: string, name: string): pulumi.Output<meta.v1.APIGroup>;
        public getResource(groupVersionKind: "v1/APIGroupList", name: string): pulumi.Output<meta.v1.APIGroupList>;
        public getResource(groupVersionKind: "v1/APIGroupList", namespace: string, name: string): pulumi.Output<meta.v1.APIGroupList>;
        public getResource(groupVersionKind: "v1/APIResourceList", name: string): pulumi.Output<meta.v1.APIResourceList>;
        public getResource(groupVersionKind: "v1/APIResourceList", namespace: string, name: string): pulumi.Output<meta.v1.APIResourceList>;
        public getResource(groupVersionKind: "v1/APIVersions", name: string): pulumi.Output<meta.v1.APIVersions>;
        public getResource(groupVersionKind: "v1/APIVersions", namespace: string, name: string): pulumi.Output<meta.v1.APIVersions>;
        public getResource(groupVersionKind: "v1/DeleteOptions", name: string): pulumi.Output<meta.v1.DeleteOptions>;
        public getResource(groupVersionKind: "v1/DeleteOptions", namespace: string, name: string): pulumi.Output<meta.v1.DeleteOptions>;
        public getResource(groupVersionKind: "meta/v1/OwnerReference", name: string): pulumi.Output<meta.v1.OwnerReference>;
        public getResource(groupVersionKind: "meta/v1/OwnerReference", namespace: string, name: string): pulumi.Output<meta.v1.OwnerReference>;
        public getResource(groupVersionKind: "v1/Status", name: string): pulumi.Output<meta.v1.Status>;
        public getResource(groupVersionKind: "v1/Status", namespace: string, name: string): pulumi.Output<meta.v1.Status>;
        public getResource(groupVersionKind: "networking.k8s.io/v1/NetworkPolicy", name: string): pulumi.Output<networking.v1.NetworkPolicy>;
        public getResource(groupVersionKind: "networking.k8s.io/v1/NetworkPolicy", namespace: string, name: string): pulumi.Output<networking.v1.NetworkPolicy>;
        public getResource(groupVersionKind: "networking.k8s.io/v1/NetworkPolicyList", name: string): pulumi.Output<networking.v1.NetworkPolicyList>;
        public getResource(groupVersionKind: "networking.k8s.io/v1/NetworkPolicyList", namespace: string, name: string): pulumi.Output<networking.v1.NetworkPolicyList>;
        public getResource(groupVersionKind: "policy/v1beta1/Eviction", name: string): pulumi.Output<policy.v1beta1.Eviction>;
        public getResource(groupVersionKind: "policy/v1beta1/Eviction", namespace: string, name: string): pulumi.Output<policy.v1beta1.Eviction>;
        public getResource(groupVersionKind: "policy/v1beta1/PodDisruptionBudget", name: string): pulumi.Output<policy.v1beta1.PodDisruptionBudget>;
        public getResource(groupVersionKind: "policy/v1beta1/PodDisruptionBudget", namespace: string, name: string): pulumi.Output<policy.v1beta1.PodDisruptionBudget>;
        public getResource(groupVersionKind: "policy/v1beta1/PodDisruptionBudgetList", name: string): pulumi.Output<policy.v1beta1.PodDisruptionBudgetList>;
        public getResource(groupVersionKind: "policy/v1beta1/PodDisruptionBudgetList", namespace: string, name: string): pulumi.Output<policy.v1beta1.PodDisruptionBudgetList>;
        public getResource(groupVersionKind: "policy/v1beta1/PodSecurityPolicy", name: string): pulumi.Output<policy.v1beta1.PodSecurityPolicy>;
        public getResource(groupVersionKind: "policy/v1beta1/PodSecurityPolicy", namespace: string, name: string): pulumi.Output<policy.v1beta1.PodSecurityPolicy>;
        public getResource(groupVersionKind: "policy/v1beta1/PodSecurityPolicyList", name: string): pulumi.Output<policy.v1beta1.PodSecurityPolicyList>;
        public getResource(groupVersionKind: "policy/v1beta1/PodSecurityPolicyList", namespace: string, name: string): pulumi.Output<policy.v1beta1.PodSecurityPolicyList>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRole", name: string): pulumi.Output<rbac.v1.ClusterRole>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRole", namespace: string, name: string): pulumi.Output<rbac.v1.ClusterRole>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleBinding", name: string): pulumi.Output<rbac.v1.ClusterRoleBinding>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleBinding", namespace: string, name: string): pulumi.Output<rbac.v1.ClusterRoleBinding>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleBindingList", name: string): pulumi.Output<rbac.v1.ClusterRoleBindingList>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleBindingList", namespace: string, name: string): pulumi.Output<rbac.v1.ClusterRoleBindingList>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleList", name: string): pulumi.Output<rbac.v1.ClusterRoleList>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleList", namespace: string, name: string): pulumi.Output<rbac.v1.ClusterRoleList>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1/Role", name: string): pulumi.Output<rbac.v1.Role>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1/Role", namespace: string, name: string): pulumi.Output<rbac.v1.Role>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleBinding", name: string): pulumi.Output<rbac.v1.RoleBinding>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleBinding", namespace: string, name: string): pulumi.Output<rbac.v1.RoleBinding>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleBindingList", name: string): pulumi.Output<rbac.v1.RoleBindingList>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleBindingList", namespace: string, name: string): pulumi.Output<rbac.v1.RoleBindingList>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleList", name: string): pulumi.Output<rbac.v1.RoleList>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleList", namespace: string, name: string): pulumi.Output<rbac.v1.RoleList>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRole", name: string): pulumi.Output<rbac.v1alpha1.ClusterRole>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRole", namespace: string, name: string): pulumi.Output<rbac.v1alpha1.ClusterRole>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleBinding", name: string): pulumi.Output<rbac.v1alpha1.ClusterRoleBinding>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleBinding", namespace: string, name: string): pulumi.Output<rbac.v1alpha1.ClusterRoleBinding>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleBindingList", name: string): pulumi.Output<rbac.v1alpha1.ClusterRoleBindingList>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleBindingList", namespace: string, name: string): pulumi.Output<rbac.v1alpha1.ClusterRoleBindingList>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleList", name: string): pulumi.Output<rbac.v1alpha1.ClusterRoleList>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleList", namespace: string, name: string): pulumi.Output<rbac.v1alpha1.ClusterRoleList>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/Role", name: string): pulumi.Output<rbac.v1alpha1.Role>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/Role", namespace: string, name: string): pulumi.Output<rbac.v1alpha1.Role>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleBinding", name: string): pulumi.Output<rbac.v1alpha1.RoleBinding>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleBinding", namespace: string, name: string): pulumi.Output<rbac.v1alpha1.RoleBinding>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleBindingList", name: string): pulumi.Output<rbac.v1alpha1.RoleBindingList>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleBindingList", namespace: string, name: string): pulumi.Output<rbac.v1alpha1.RoleBindingList>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleList", name: string): pulumi.Output<rbac.v1alpha1.RoleList>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleList", namespace: string, name: string): pulumi.Output<rbac.v1alpha1.RoleList>;
        public getResource(groupVersionKind: "rbac/v1alpha1/Subject", name: string): pulumi.Output<rbac.v1alpha1.Subject>;
        public getResource(groupVersionKind: "rbac/v1alpha1/Subject", namespace: string, name: string): pulumi.Output<rbac.v1alpha1.Subject>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRole", name: string): pulumi.Output<rbac.v1beta1.ClusterRole>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRole", namespace: string, name: string): pulumi.Output<rbac.v1beta1.ClusterRole>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleBinding", name: string): pulumi.Output<rbac.v1beta1.ClusterRoleBinding>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleBinding", namespace: string, name: string): pulumi.Output<rbac.v1beta1.ClusterRoleBinding>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleBindingList", name: string): pulumi.Output<rbac.v1beta1.ClusterRoleBindingList>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleBindingList", namespace: string, name: string): pulumi.Output<rbac.v1beta1.ClusterRoleBindingList>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleList", name: string): pulumi.Output<rbac.v1beta1.ClusterRoleList>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleList", namespace: string, name: string): pulumi.Output<rbac.v1beta1.ClusterRoleList>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/Role", name: string): pulumi.Output<rbac.v1beta1.Role>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/Role", namespace: string, name: string): pulumi.Output<rbac.v1beta1.Role>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleBinding", name: string): pulumi.Output<rbac.v1beta1.RoleBinding>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleBinding", namespace: string, name: string): pulumi.Output<rbac.v1beta1.RoleBinding>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleBindingList", name: string): pulumi.Output<rbac.v1beta1.RoleBindingList>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleBindingList", namespace: string, name: string): pulumi.Output<rbac.v1beta1.RoleBindingList>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleList", name: string): pulumi.Output<rbac.v1beta1.RoleList>;
        public getResource(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleList", namespace: string, name: string): pulumi.Output<rbac.v1beta1.RoleList>;
        public getResource(groupVersionKind: "scheduling.k8s.io/v1alpha1/PriorityClass", name: string): pulumi.Output<scheduling.v1alpha1.PriorityClass>;
        public getResource(groupVersionKind: "scheduling.k8s.io/v1alpha1/PriorityClass", namespace: string, name: string): pulumi.Output<scheduling.v1alpha1.PriorityClass>;
        public getResource(groupVersionKind: "scheduling.k8s.io/v1alpha1/PriorityClassList", name: string): pulumi.Output<scheduling.v1alpha1.PriorityClassList>;
        public getResource(groupVersionKind: "scheduling.k8s.io/v1alpha1/PriorityClassList", namespace: string, name: string): pulumi.Output<scheduling.v1alpha1.PriorityClassList>;
        public getResource(groupVersionKind: "scheduling.k8s.io/v1beta1/PriorityClass", name: string): pulumi.Output<scheduling.v1beta1.PriorityClass>;
        public getResource(groupVersionKind: "scheduling.k8s.io/v1beta1/PriorityClass", namespace: string, name: string): pulumi.Output<scheduling.v1beta1.PriorityClass>;
        public getResource(groupVersionKind: "scheduling.k8s.io/v1beta1/PriorityClassList", name: string): pulumi.Output<scheduling.v1beta1.PriorityClassList>;
        public getResource(groupVersionKind: "scheduling.k8s.io/v1beta1/PriorityClassList", namespace: string, name: string): pulumi.Output<scheduling.v1beta1.PriorityClassList>;
        public getResource(groupVersionKind: "settings.k8s.io/v1alpha1/PodPreset", name: string): pulumi.Output<settings.v1alpha1.PodPreset>;
        public getResource(groupVersionKind: "settings.k8s.io/v1alpha1/PodPreset", namespace: string, name: string): pulumi.Output<settings.v1alpha1.PodPreset>;
        public getResource(groupVersionKind: "settings.k8s.io/v1alpha1/PodPresetList", name: string): pulumi.Output<settings.v1alpha1.PodPresetList>;
        public getResource(groupVersionKind: "settings.k8s.io/v1alpha1/PodPresetList", namespace: string, name: string): pulumi.Output<settings.v1alpha1.PodPresetList>;
        public getResource(groupVersionKind: "storage.k8s.io/v1/StorageClass", name: string): pulumi.Output<storage.v1.StorageClass>;
        public getResource(groupVersionKind: "storage.k8s.io/v1/StorageClass", namespace: string, name: string): pulumi.Output<storage.v1.StorageClass>;
        public getResource(groupVersionKind: "storage.k8s.io/v1/StorageClassList", name: string): pulumi.Output<storage.v1.StorageClassList>;
        public getResource(groupVersionKind: "storage.k8s.io/v1/StorageClassList", namespace: string, name: string): pulumi.Output<storage.v1.StorageClassList>;
        public getResource(groupVersionKind: "storage.k8s.io/v1/VolumeAttachment", name: string): pulumi.Output<storage.v1.VolumeAttachment>;
        public getResource(groupVersionKind: "storage.k8s.io/v1/VolumeAttachment", namespace: string, name: string): pulumi.Output<storage.v1.VolumeAttachment>;
        public getResource(groupVersionKind: "storage.k8s.io/v1/VolumeAttachmentList", name: string): pulumi.Output<storage.v1.VolumeAttachmentList>;
        public getResource(groupVersionKind: "storage.k8s.io/v1/VolumeAttachmentList", namespace: string, name: string): pulumi.Output<storage.v1.VolumeAttachmentList>;
        public getResource(groupVersionKind: "storage.k8s.io/v1alpha1/VolumeAttachment", name: string): pulumi.Output<storage.v1alpha1.VolumeAttachment>;
        public getResource(groupVersionKind: "storage.k8s.io/v1alpha1/VolumeAttachment", namespace: string, name: string): pulumi.Output<storage.v1alpha1.VolumeAttachment>;
        public getResource(groupVersionKind: "storage.k8s.io/v1alpha1/VolumeAttachmentList", name: string): pulumi.Output<storage.v1alpha1.VolumeAttachmentList>;
        public getResource(groupVersionKind: "storage.k8s.io/v1alpha1/VolumeAttachmentList", namespace: string, name: string): pulumi.Output<storage.v1alpha1.VolumeAttachmentList>;
        public getResource(groupVersionKind: "storage.k8s.io/v1beta1/StorageClass", name: string): pulumi.Output<storage.v1beta1.StorageClass>;
        public getResource(groupVersionKind: "storage.k8s.io/v1beta1/StorageClass", namespace: string, name: string): pulumi.Output<storage.v1beta1.StorageClass>;
        public getResource(groupVersionKind: "storage.k8s.io/v1beta1/StorageClassList", name: string): pulumi.Output<storage.v1beta1.StorageClassList>;
        public getResource(groupVersionKind: "storage.k8s.io/v1beta1/StorageClassList", namespace: string, name: string): pulumi.Output<storage.v1beta1.StorageClassList>;
        public getResource(groupVersionKind: "storage.k8s.io/v1beta1/VolumeAttachment", name: string): pulumi.Output<storage.v1beta1.VolumeAttachment>;
        public getResource(groupVersionKind: "storage.k8s.io/v1beta1/VolumeAttachment", namespace: string, name: string): pulumi.Output<storage.v1beta1.VolumeAttachment>;
        public getResource(groupVersionKind: "storage.k8s.io/v1beta1/VolumeAttachmentList", name: string): pulumi.Output<storage.v1beta1.VolumeAttachmentList>;
        public getResource(groupVersionKind: "storage.k8s.io/v1beta1/VolumeAttachmentList", namespace: string, name: string): pulumi.Output<storage.v1beta1.VolumeAttachmentList>;
        public getResource(groupVersionKind: string, namespaceOrName: string, name?: string): pulumi.Output<pulumi.CustomResource> {
            return this.getResourceImpl(groupVersionKind, namespaceOrName, name);
        }

        /**
         * getResourceProperty returns a single property of a resource defined by a built-in Kubernetes group/version/kind and name.
         *
         * For example:
         *     getResourceProperty("v1/Service", "nginx", "spec")
         */
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1alpha1/InitializerConfiguration", name: string, property: "api_version"): pulumi.Output<"admissionregistration.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1alpha1/InitializerConfiguration", namespace: string, name: string, property: "api_version"): pulumi.Output<"admissionregistration.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1alpha1/InitializerConfiguration", name: string, property: "initializers"): pulumi.Output<outputApi.admissionregistration.v1alpha1.Initializer[]>;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1alpha1/InitializerConfiguration", namespace: string, name: string, property: "initializers"): pulumi.Output<outputApi.admissionregistration.v1alpha1.Initializer[]>;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1alpha1/InitializerConfiguration", name: string, property: "kind"): pulumi.Output<"InitializerConfiguration">;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1alpha1/InitializerConfiguration", namespace: string, name: string, property: "kind"): pulumi.Output<"InitializerConfiguration">;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1alpha1/InitializerConfiguration", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1alpha1/InitializerConfiguration", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1alpha1/InitializerConfigurationList", name: string, property: "api_version"): pulumi.Output<"admissionregistration.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1alpha1/InitializerConfigurationList", namespace: string, name: string, property: "api_version"): pulumi.Output<"admissionregistration.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1alpha1/InitializerConfigurationList", name: string, property: "items"): pulumi.Output<outputApi.admissionregistration.v1alpha1.InitializerConfiguration[]>;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1alpha1/InitializerConfigurationList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.admissionregistration.v1alpha1.InitializerConfiguration[]>;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1alpha1/InitializerConfigurationList", name: string, property: "kind"): pulumi.Output<"InitializerConfigurationList">;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1alpha1/InitializerConfigurationList", namespace: string, name: string, property: "kind"): pulumi.Output<"InitializerConfigurationList">;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1alpha1/InitializerConfigurationList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1alpha1/InitializerConfigurationList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/MutatingWebhookConfiguration", name: string, property: "api_version"): pulumi.Output<"admissionregistration.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/MutatingWebhookConfiguration", namespace: string, name: string, property: "api_version"): pulumi.Output<"admissionregistration.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/MutatingWebhookConfiguration", name: string, property: "kind"): pulumi.Output<"MutatingWebhookConfiguration">;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/MutatingWebhookConfiguration", namespace: string, name: string, property: "kind"): pulumi.Output<"MutatingWebhookConfiguration">;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/MutatingWebhookConfiguration", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/MutatingWebhookConfiguration", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/MutatingWebhookConfiguration", name: string, property: "webhooks"): pulumi.Output<outputApi.admissionregistration.v1beta1.Webhook[]>;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/MutatingWebhookConfiguration", namespace: string, name: string, property: "webhooks"): pulumi.Output<outputApi.admissionregistration.v1beta1.Webhook[]>;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/MutatingWebhookConfigurationList", name: string, property: "api_version"): pulumi.Output<"admissionregistration.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/MutatingWebhookConfigurationList", namespace: string, name: string, property: "api_version"): pulumi.Output<"admissionregistration.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/MutatingWebhookConfigurationList", name: string, property: "items"): pulumi.Output<outputApi.admissionregistration.v1beta1.MutatingWebhookConfiguration[]>;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/MutatingWebhookConfigurationList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.admissionregistration.v1beta1.MutatingWebhookConfiguration[]>;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/MutatingWebhookConfigurationList", name: string, property: "kind"): pulumi.Output<"MutatingWebhookConfigurationList">;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/MutatingWebhookConfigurationList", namespace: string, name: string, property: "kind"): pulumi.Output<"MutatingWebhookConfigurationList">;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/MutatingWebhookConfigurationList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/MutatingWebhookConfigurationList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/ValidatingWebhookConfiguration", name: string, property: "api_version"): pulumi.Output<"admissionregistration.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/ValidatingWebhookConfiguration", namespace: string, name: string, property: "api_version"): pulumi.Output<"admissionregistration.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/ValidatingWebhookConfiguration", name: string, property: "kind"): pulumi.Output<"ValidatingWebhookConfiguration">;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/ValidatingWebhookConfiguration", namespace: string, name: string, property: "kind"): pulumi.Output<"ValidatingWebhookConfiguration">;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/ValidatingWebhookConfiguration", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/ValidatingWebhookConfiguration", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/ValidatingWebhookConfiguration", name: string, property: "webhooks"): pulumi.Output<outputApi.admissionregistration.v1beta1.Webhook[]>;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/ValidatingWebhookConfiguration", namespace: string, name: string, property: "webhooks"): pulumi.Output<outputApi.admissionregistration.v1beta1.Webhook[]>;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/ValidatingWebhookConfigurationList", name: string, property: "api_version"): pulumi.Output<"admissionregistration.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/ValidatingWebhookConfigurationList", namespace: string, name: string, property: "api_version"): pulumi.Output<"admissionregistration.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/ValidatingWebhookConfigurationList", name: string, property: "items"): pulumi.Output<outputApi.admissionregistration.v1beta1.ValidatingWebhookConfiguration[]>;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/ValidatingWebhookConfigurationList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.admissionregistration.v1beta1.ValidatingWebhookConfiguration[]>;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/ValidatingWebhookConfigurationList", name: string, property: "kind"): pulumi.Output<"ValidatingWebhookConfigurationList">;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/ValidatingWebhookConfigurationList", namespace: string, name: string, property: "kind"): pulumi.Output<"ValidatingWebhookConfigurationList">;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/ValidatingWebhookConfigurationList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "admissionregistration.k8s.io/v1beta1/ValidatingWebhookConfigurationList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apiextensions.k8s.io/v1beta1/CustomResourceDefinition", name: string, property: "api_version"): pulumi.Output<"apiextensions.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "apiextensions.k8s.io/v1beta1/CustomResourceDefinition", namespace: string, name: string, property: "api_version"): pulumi.Output<"apiextensions.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "apiextensions.k8s.io/v1beta1/CustomResourceDefinition", name: string, property: "kind"): pulumi.Output<"CustomResourceDefinition">;
        public getResourceProperty(groupVersionKind: "apiextensions.k8s.io/v1beta1/CustomResourceDefinition", namespace: string, name: string, property: "kind"): pulumi.Output<"CustomResourceDefinition">;
        public getResourceProperty(groupVersionKind: "apiextensions.k8s.io/v1beta1/CustomResourceDefinition", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apiextensions.k8s.io/v1beta1/CustomResourceDefinition", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apiextensions.k8s.io/v1beta1/CustomResourceDefinition", name: string, property: "spec"): pulumi.Output<outputApi.apiextensions.v1beta1.CustomResourceDefinitionSpec>;
        public getResourceProperty(groupVersionKind: "apiextensions.k8s.io/v1beta1/CustomResourceDefinition", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.apiextensions.v1beta1.CustomResourceDefinitionSpec>;
        public getResourceProperty(groupVersionKind: "apiextensions.k8s.io/v1beta1/CustomResourceDefinition", name: string, property: "status"): pulumi.Output<outputApi.apiextensions.v1beta1.CustomResourceDefinitionStatus>;
        public getResourceProperty(groupVersionKind: "apiextensions.k8s.io/v1beta1/CustomResourceDefinition", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.apiextensions.v1beta1.CustomResourceDefinitionStatus>;
        public getResourceProperty(groupVersionKind: "apiextensions.k8s.io/v1beta1/CustomResourceDefinitionList", name: string, property: "api_version"): pulumi.Output<"apiextensions.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "apiextensions.k8s.io/v1beta1/CustomResourceDefinitionList", namespace: string, name: string, property: "api_version"): pulumi.Output<"apiextensions.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "apiextensions.k8s.io/v1beta1/CustomResourceDefinitionList", name: string, property: "items"): pulumi.Output<outputApi.apiextensions.v1beta1.CustomResourceDefinition[]>;
        public getResourceProperty(groupVersionKind: "apiextensions.k8s.io/v1beta1/CustomResourceDefinitionList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.apiextensions.v1beta1.CustomResourceDefinition[]>;
        public getResourceProperty(groupVersionKind: "apiextensions.k8s.io/v1beta1/CustomResourceDefinitionList", name: string, property: "kind"): pulumi.Output<"CustomResourceDefinitionList">;
        public getResourceProperty(groupVersionKind: "apiextensions.k8s.io/v1beta1/CustomResourceDefinitionList", namespace: string, name: string, property: "kind"): pulumi.Output<"CustomResourceDefinitionList">;
        public getResourceProperty(groupVersionKind: "apiextensions.k8s.io/v1beta1/CustomResourceDefinitionList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apiextensions.k8s.io/v1beta1/CustomResourceDefinitionList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1/APIService", name: string, property: "api_version"): pulumi.Output<"apiregistration.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1/APIService", namespace: string, name: string, property: "api_version"): pulumi.Output<"apiregistration.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1/APIService", name: string, property: "kind"): pulumi.Output<"APIService">;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1/APIService", namespace: string, name: string, property: "kind"): pulumi.Output<"APIService">;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1/APIService", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1/APIService", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1/APIService", name: string, property: "spec"): pulumi.Output<outputApi.apiregistration.v1.APIServiceSpec>;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1/APIService", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.apiregistration.v1.APIServiceSpec>;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1/APIService", name: string, property: "status"): pulumi.Output<outputApi.apiregistration.v1.APIServiceStatus>;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1/APIService", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.apiregistration.v1.APIServiceStatus>;
        public getResourceProperty(groupVersionKind: "apiregistration/v1/APIService", name: string, property: "api_version"): pulumi.Output<"apiregistration.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "apiregistration/v1/APIService", namespace: string, name: string, property: "api_version"): pulumi.Output<"apiregistration.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "apiregistration/v1/APIService", name: string, property: "kind"): pulumi.Output<"APIService">;
        public getResourceProperty(groupVersionKind: "apiregistration/v1/APIService", namespace: string, name: string, property: "kind"): pulumi.Output<"APIService">;
        public getResourceProperty(groupVersionKind: "apiregistration/v1/APIService", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apiregistration/v1/APIService", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apiregistration/v1/APIService", name: string, property: "spec"): pulumi.Output<outputApi.apiregistration.v1.APIServiceSpec>;
        public getResourceProperty(groupVersionKind: "apiregistration/v1/APIService", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.apiregistration.v1.APIServiceSpec>;
        public getResourceProperty(groupVersionKind: "apiregistration/v1/APIService", name: string, property: "status"): pulumi.Output<outputApi.apiregistration.v1.APIServiceStatus>;
        public getResourceProperty(groupVersionKind: "apiregistration/v1/APIService", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.apiregistration.v1.APIServiceStatus>;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1/APIServiceList", name: string, property: "api_version"): pulumi.Output<"apiregistration.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1/APIServiceList", namespace: string, name: string, property: "api_version"): pulumi.Output<"apiregistration.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1/APIServiceList", name: string, property: "items"): pulumi.Output<outputApi.apiregistration.v1.APIService[]>;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1/APIServiceList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.apiregistration.v1.APIService[]>;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1/APIServiceList", name: string, property: "kind"): pulumi.Output<"APIServiceList">;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1/APIServiceList", namespace: string, name: string, property: "kind"): pulumi.Output<"APIServiceList">;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1/APIServiceList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1/APIServiceList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apiregistration/v1/APIServiceList", name: string, property: "api_version"): pulumi.Output<"apiregistration.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "apiregistration/v1/APIServiceList", namespace: string, name: string, property: "api_version"): pulumi.Output<"apiregistration.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "apiregistration/v1/APIServiceList", name: string, property: "items"): pulumi.Output<outputApi.apiregistration.v1.APIService[]>;
        public getResourceProperty(groupVersionKind: "apiregistration/v1/APIServiceList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.apiregistration.v1.APIService[]>;
        public getResourceProperty(groupVersionKind: "apiregistration/v1/APIServiceList", name: string, property: "kind"): pulumi.Output<"APIServiceList">;
        public getResourceProperty(groupVersionKind: "apiregistration/v1/APIServiceList", namespace: string, name: string, property: "kind"): pulumi.Output<"APIServiceList">;
        public getResourceProperty(groupVersionKind: "apiregistration/v1/APIServiceList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apiregistration/v1/APIServiceList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1beta1/APIService", name: string, property: "api_version"): pulumi.Output<"apiregistration.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1beta1/APIService", namespace: string, name: string, property: "api_version"): pulumi.Output<"apiregistration.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1beta1/APIService", name: string, property: "kind"): pulumi.Output<"APIService">;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1beta1/APIService", namespace: string, name: string, property: "kind"): pulumi.Output<"APIService">;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1beta1/APIService", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1beta1/APIService", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1beta1/APIService", name: string, property: "spec"): pulumi.Output<outputApi.apiregistration.v1beta1.APIServiceSpec>;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1beta1/APIService", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.apiregistration.v1beta1.APIServiceSpec>;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1beta1/APIService", name: string, property: "status"): pulumi.Output<outputApi.apiregistration.v1beta1.APIServiceStatus>;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1beta1/APIService", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.apiregistration.v1beta1.APIServiceStatus>;
        public getResourceProperty(groupVersionKind: "apiregistration/v1beta1/APIService", name: string, property: "api_version"): pulumi.Output<"apiregistration.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "apiregistration/v1beta1/APIService", namespace: string, name: string, property: "api_version"): pulumi.Output<"apiregistration.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "apiregistration/v1beta1/APIService", name: string, property: "kind"): pulumi.Output<"APIService">;
        public getResourceProperty(groupVersionKind: "apiregistration/v1beta1/APIService", namespace: string, name: string, property: "kind"): pulumi.Output<"APIService">;
        public getResourceProperty(groupVersionKind: "apiregistration/v1beta1/APIService", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apiregistration/v1beta1/APIService", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apiregistration/v1beta1/APIService", name: string, property: "spec"): pulumi.Output<outputApi.apiregistration.v1beta1.APIServiceSpec>;
        public getResourceProperty(groupVersionKind: "apiregistration/v1beta1/APIService", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.apiregistration.v1beta1.APIServiceSpec>;
        public getResourceProperty(groupVersionKind: "apiregistration/v1beta1/APIService", name: string, property: "status"): pulumi.Output<outputApi.apiregistration.v1beta1.APIServiceStatus>;
        public getResourceProperty(groupVersionKind: "apiregistration/v1beta1/APIService", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.apiregistration.v1beta1.APIServiceStatus>;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1beta1/APIServiceList", name: string, property: "api_version"): pulumi.Output<"apiregistration.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1beta1/APIServiceList", namespace: string, name: string, property: "api_version"): pulumi.Output<"apiregistration.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1beta1/APIServiceList", name: string, property: "items"): pulumi.Output<outputApi.apiregistration.v1beta1.APIService[]>;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1beta1/APIServiceList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.apiregistration.v1beta1.APIService[]>;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1beta1/APIServiceList", name: string, property: "kind"): pulumi.Output<"APIServiceList">;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1beta1/APIServiceList", namespace: string, name: string, property: "kind"): pulumi.Output<"APIServiceList">;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1beta1/APIServiceList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apiregistration.k8s.io/v1beta1/APIServiceList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apiregistration/v1beta1/APIServiceList", name: string, property: "api_version"): pulumi.Output<"apiregistration.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "apiregistration/v1beta1/APIServiceList", namespace: string, name: string, property: "api_version"): pulumi.Output<"apiregistration.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "apiregistration/v1beta1/APIServiceList", name: string, property: "items"): pulumi.Output<outputApi.apiregistration.v1beta1.APIService[]>;
        public getResourceProperty(groupVersionKind: "apiregistration/v1beta1/APIServiceList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.apiregistration.v1beta1.APIService[]>;
        public getResourceProperty(groupVersionKind: "apiregistration/v1beta1/APIServiceList", name: string, property: "kind"): pulumi.Output<"APIServiceList">;
        public getResourceProperty(groupVersionKind: "apiregistration/v1beta1/APIServiceList", namespace: string, name: string, property: "kind"): pulumi.Output<"APIServiceList">;
        public getResourceProperty(groupVersionKind: "apiregistration/v1beta1/APIServiceList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apiregistration/v1beta1/APIServiceList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1/ControllerRevision", name: string, property: "api_version"): pulumi.Output<"apps/v1">;
        public getResourceProperty(groupVersionKind: "apps/v1/ControllerRevision", namespace: string, name: string, property: "api_version"): pulumi.Output<"apps/v1">;
        public getResourceProperty(groupVersionKind: "apps/v1/ControllerRevision", name: string, property: "data"): pulumi.Output<outputApi.pkg.runtime.RawExtension>;
        public getResourceProperty(groupVersionKind: "apps/v1/ControllerRevision", namespace: string, name: string, property: "data"): pulumi.Output<outputApi.pkg.runtime.RawExtension>;
        public getResourceProperty(groupVersionKind: "apps/v1/ControllerRevision", name: string, property: "kind"): pulumi.Output<"ControllerRevision">;
        public getResourceProperty(groupVersionKind: "apps/v1/ControllerRevision", namespace: string, name: string, property: "kind"): pulumi.Output<"ControllerRevision">;
        public getResourceProperty(groupVersionKind: "apps/v1/ControllerRevision", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1/ControllerRevision", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1/ControllerRevision", name: string, property: "revision"): pulumi.Output<number>;
        public getResourceProperty(groupVersionKind: "apps/v1/ControllerRevision", namespace: string, name: string, property: "revision"): pulumi.Output<number>;
        public getResourceProperty(groupVersionKind: "apps/v1/ControllerRevisionList", name: string, property: "api_version"): pulumi.Output<"apps/v1">;
        public getResourceProperty(groupVersionKind: "apps/v1/ControllerRevisionList", namespace: string, name: string, property: "api_version"): pulumi.Output<"apps/v1">;
        public getResourceProperty(groupVersionKind: "apps/v1/ControllerRevisionList", name: string, property: "items"): pulumi.Output<outputApi.apps.v1.ControllerRevision[]>;
        public getResourceProperty(groupVersionKind: "apps/v1/ControllerRevisionList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.apps.v1.ControllerRevision[]>;
        public getResourceProperty(groupVersionKind: "apps/v1/ControllerRevisionList", name: string, property: "kind"): pulumi.Output<"ControllerRevisionList">;
        public getResourceProperty(groupVersionKind: "apps/v1/ControllerRevisionList", namespace: string, name: string, property: "kind"): pulumi.Output<"ControllerRevisionList">;
        public getResourceProperty(groupVersionKind: "apps/v1/ControllerRevisionList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1/ControllerRevisionList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1/DaemonSet", name: string, property: "api_version"): pulumi.Output<"apps/v1">;
        public getResourceProperty(groupVersionKind: "apps/v1/DaemonSet", namespace: string, name: string, property: "api_version"): pulumi.Output<"apps/v1">;
        public getResourceProperty(groupVersionKind: "apps/v1/DaemonSet", name: string, property: "kind"): pulumi.Output<"DaemonSet">;
        public getResourceProperty(groupVersionKind: "apps/v1/DaemonSet", namespace: string, name: string, property: "kind"): pulumi.Output<"DaemonSet">;
        public getResourceProperty(groupVersionKind: "apps/v1/DaemonSet", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1/DaemonSet", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1/DaemonSet", name: string, property: "spec"): pulumi.Output<outputApi.apps.v1.DaemonSetSpec>;
        public getResourceProperty(groupVersionKind: "apps/v1/DaemonSet", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.apps.v1.DaemonSetSpec>;
        public getResourceProperty(groupVersionKind: "apps/v1/DaemonSet", name: string, property: "status"): pulumi.Output<outputApi.apps.v1.DaemonSetStatus>;
        public getResourceProperty(groupVersionKind: "apps/v1/DaemonSet", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.apps.v1.DaemonSetStatus>;
        public getResourceProperty(groupVersionKind: "apps/v1/DaemonSetList", name: string, property: "api_version"): pulumi.Output<"apps/v1">;
        public getResourceProperty(groupVersionKind: "apps/v1/DaemonSetList", namespace: string, name: string, property: "api_version"): pulumi.Output<"apps/v1">;
        public getResourceProperty(groupVersionKind: "apps/v1/DaemonSetList", name: string, property: "items"): pulumi.Output<outputApi.apps.v1.DaemonSet[]>;
        public getResourceProperty(groupVersionKind: "apps/v1/DaemonSetList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.apps.v1.DaemonSet[]>;
        public getResourceProperty(groupVersionKind: "apps/v1/DaemonSetList", name: string, property: "kind"): pulumi.Output<"DaemonSetList">;
        public getResourceProperty(groupVersionKind: "apps/v1/DaemonSetList", namespace: string, name: string, property: "kind"): pulumi.Output<"DaemonSetList">;
        public getResourceProperty(groupVersionKind: "apps/v1/DaemonSetList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1/DaemonSetList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1/Deployment", name: string, property: "api_version"): pulumi.Output<"apps/v1">;
        public getResourceProperty(groupVersionKind: "apps/v1/Deployment", namespace: string, name: string, property: "api_version"): pulumi.Output<"apps/v1">;
        public getResourceProperty(groupVersionKind: "apps/v1/Deployment", name: string, property: "kind"): pulumi.Output<"Deployment">;
        public getResourceProperty(groupVersionKind: "apps/v1/Deployment", namespace: string, name: string, property: "kind"): pulumi.Output<"Deployment">;
        public getResourceProperty(groupVersionKind: "apps/v1/Deployment", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1/Deployment", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1/Deployment", name: string, property: "spec"): pulumi.Output<outputApi.apps.v1.DeploymentSpec>;
        public getResourceProperty(groupVersionKind: "apps/v1/Deployment", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.apps.v1.DeploymentSpec>;
        public getResourceProperty(groupVersionKind: "apps/v1/Deployment", name: string, property: "status"): pulumi.Output<outputApi.apps.v1.DeploymentStatus>;
        public getResourceProperty(groupVersionKind: "apps/v1/Deployment", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.apps.v1.DeploymentStatus>;
        public getResourceProperty(groupVersionKind: "apps/v1/DeploymentList", name: string, property: "api_version"): pulumi.Output<"apps/v1">;
        public getResourceProperty(groupVersionKind: "apps/v1/DeploymentList", namespace: string, name: string, property: "api_version"): pulumi.Output<"apps/v1">;
        public getResourceProperty(groupVersionKind: "apps/v1/DeploymentList", name: string, property: "items"): pulumi.Output<outputApi.apps.v1.Deployment[]>;
        public getResourceProperty(groupVersionKind: "apps/v1/DeploymentList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.apps.v1.Deployment[]>;
        public getResourceProperty(groupVersionKind: "apps/v1/DeploymentList", name: string, property: "kind"): pulumi.Output<"DeploymentList">;
        public getResourceProperty(groupVersionKind: "apps/v1/DeploymentList", namespace: string, name: string, property: "kind"): pulumi.Output<"DeploymentList">;
        public getResourceProperty(groupVersionKind: "apps/v1/DeploymentList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1/DeploymentList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1/ReplicaSet", name: string, property: "api_version"): pulumi.Output<"apps/v1">;
        public getResourceProperty(groupVersionKind: "apps/v1/ReplicaSet", namespace: string, name: string, property: "api_version"): pulumi.Output<"apps/v1">;
        public getResourceProperty(groupVersionKind: "apps/v1/ReplicaSet", name: string, property: "kind"): pulumi.Output<"ReplicaSet">;
        public getResourceProperty(groupVersionKind: "apps/v1/ReplicaSet", namespace: string, name: string, property: "kind"): pulumi.Output<"ReplicaSet">;
        public getResourceProperty(groupVersionKind: "apps/v1/ReplicaSet", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1/ReplicaSet", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1/ReplicaSet", name: string, property: "spec"): pulumi.Output<outputApi.apps.v1.ReplicaSetSpec>;
        public getResourceProperty(groupVersionKind: "apps/v1/ReplicaSet", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.apps.v1.ReplicaSetSpec>;
        public getResourceProperty(groupVersionKind: "apps/v1/ReplicaSet", name: string, property: "status"): pulumi.Output<outputApi.apps.v1.ReplicaSetStatus>;
        public getResourceProperty(groupVersionKind: "apps/v1/ReplicaSet", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.apps.v1.ReplicaSetStatus>;
        public getResourceProperty(groupVersionKind: "apps/v1/ReplicaSetList", name: string, property: "api_version"): pulumi.Output<"apps/v1">;
        public getResourceProperty(groupVersionKind: "apps/v1/ReplicaSetList", namespace: string, name: string, property: "api_version"): pulumi.Output<"apps/v1">;
        public getResourceProperty(groupVersionKind: "apps/v1/ReplicaSetList", name: string, property: "items"): pulumi.Output<outputApi.apps.v1.ReplicaSet[]>;
        public getResourceProperty(groupVersionKind: "apps/v1/ReplicaSetList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.apps.v1.ReplicaSet[]>;
        public getResourceProperty(groupVersionKind: "apps/v1/ReplicaSetList", name: string, property: "kind"): pulumi.Output<"ReplicaSetList">;
        public getResourceProperty(groupVersionKind: "apps/v1/ReplicaSetList", namespace: string, name: string, property: "kind"): pulumi.Output<"ReplicaSetList">;
        public getResourceProperty(groupVersionKind: "apps/v1/ReplicaSetList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1/ReplicaSetList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1/StatefulSet", name: string, property: "api_version"): pulumi.Output<"apps/v1">;
        public getResourceProperty(groupVersionKind: "apps/v1/StatefulSet", namespace: string, name: string, property: "api_version"): pulumi.Output<"apps/v1">;
        public getResourceProperty(groupVersionKind: "apps/v1/StatefulSet", name: string, property: "kind"): pulumi.Output<"StatefulSet">;
        public getResourceProperty(groupVersionKind: "apps/v1/StatefulSet", namespace: string, name: string, property: "kind"): pulumi.Output<"StatefulSet">;
        public getResourceProperty(groupVersionKind: "apps/v1/StatefulSet", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1/StatefulSet", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1/StatefulSet", name: string, property: "spec"): pulumi.Output<outputApi.apps.v1.StatefulSetSpec>;
        public getResourceProperty(groupVersionKind: "apps/v1/StatefulSet", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.apps.v1.StatefulSetSpec>;
        public getResourceProperty(groupVersionKind: "apps/v1/StatefulSet", name: string, property: "status"): pulumi.Output<outputApi.apps.v1.StatefulSetStatus>;
        public getResourceProperty(groupVersionKind: "apps/v1/StatefulSet", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.apps.v1.StatefulSetStatus>;
        public getResourceProperty(groupVersionKind: "apps/v1/StatefulSetList", name: string, property: "api_version"): pulumi.Output<"apps/v1">;
        public getResourceProperty(groupVersionKind: "apps/v1/StatefulSetList", namespace: string, name: string, property: "api_version"): pulumi.Output<"apps/v1">;
        public getResourceProperty(groupVersionKind: "apps/v1/StatefulSetList", name: string, property: "items"): pulumi.Output<outputApi.apps.v1.StatefulSet[]>;
        public getResourceProperty(groupVersionKind: "apps/v1/StatefulSetList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.apps.v1.StatefulSet[]>;
        public getResourceProperty(groupVersionKind: "apps/v1/StatefulSetList", name: string, property: "kind"): pulumi.Output<"StatefulSetList">;
        public getResourceProperty(groupVersionKind: "apps/v1/StatefulSetList", namespace: string, name: string, property: "kind"): pulumi.Output<"StatefulSetList">;
        public getResourceProperty(groupVersionKind: "apps/v1/StatefulSetList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1/StatefulSetList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/ControllerRevision", name: string, property: "api_version"): pulumi.Output<"apps/v1beta1">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/ControllerRevision", namespace: string, name: string, property: "api_version"): pulumi.Output<"apps/v1beta1">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/ControllerRevision", name: string, property: "data"): pulumi.Output<outputApi.pkg.runtime.RawExtension>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/ControllerRevision", namespace: string, name: string, property: "data"): pulumi.Output<outputApi.pkg.runtime.RawExtension>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/ControllerRevision", name: string, property: "kind"): pulumi.Output<"ControllerRevision">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/ControllerRevision", namespace: string, name: string, property: "kind"): pulumi.Output<"ControllerRevision">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/ControllerRevision", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/ControllerRevision", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/ControllerRevision", name: string, property: "revision"): pulumi.Output<number>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/ControllerRevision", namespace: string, name: string, property: "revision"): pulumi.Output<number>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/ControllerRevisionList", name: string, property: "api_version"): pulumi.Output<"apps/v1beta1">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/ControllerRevisionList", namespace: string, name: string, property: "api_version"): pulumi.Output<"apps/v1beta1">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/ControllerRevisionList", name: string, property: "items"): pulumi.Output<outputApi.apps.v1beta1.ControllerRevision[]>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/ControllerRevisionList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.apps.v1beta1.ControllerRevision[]>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/ControllerRevisionList", name: string, property: "kind"): pulumi.Output<"ControllerRevisionList">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/ControllerRevisionList", namespace: string, name: string, property: "kind"): pulumi.Output<"ControllerRevisionList">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/ControllerRevisionList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/ControllerRevisionList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/Deployment", name: string, property: "api_version"): pulumi.Output<"apps/v1beta1">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/Deployment", namespace: string, name: string, property: "api_version"): pulumi.Output<"apps/v1beta1">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/Deployment", name: string, property: "kind"): pulumi.Output<"Deployment">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/Deployment", namespace: string, name: string, property: "kind"): pulumi.Output<"Deployment">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/Deployment", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/Deployment", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/Deployment", name: string, property: "spec"): pulumi.Output<outputApi.apps.v1beta1.DeploymentSpec>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/Deployment", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.apps.v1beta1.DeploymentSpec>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/Deployment", name: string, property: "status"): pulumi.Output<outputApi.apps.v1beta1.DeploymentStatus>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/Deployment", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.apps.v1beta1.DeploymentStatus>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/DeploymentList", name: string, property: "api_version"): pulumi.Output<"apps/v1beta1">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/DeploymentList", namespace: string, name: string, property: "api_version"): pulumi.Output<"apps/v1beta1">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/DeploymentList", name: string, property: "items"): pulumi.Output<outputApi.apps.v1beta1.Deployment[]>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/DeploymentList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.apps.v1beta1.Deployment[]>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/DeploymentList", name: string, property: "kind"): pulumi.Output<"DeploymentList">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/DeploymentList", namespace: string, name: string, property: "kind"): pulumi.Output<"DeploymentList">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/DeploymentList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/DeploymentList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/DeploymentRollback", name: string, property: "api_version"): pulumi.Output<"apps/v1beta1">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/DeploymentRollback", namespace: string, name: string, property: "api_version"): pulumi.Output<"apps/v1beta1">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/DeploymentRollback", name: string, property: "kind"): pulumi.Output<"DeploymentRollback">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/DeploymentRollback", namespace: string, name: string, property: "kind"): pulumi.Output<"DeploymentRollback">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/DeploymentRollback", name: string, property: "name"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/DeploymentRollback", namespace: string, name: string, property: "name"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/DeploymentRollback", name: string, property: "rollback_to"): pulumi.Output<outputApi.apps.v1beta1.RollbackConfig>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/DeploymentRollback", namespace: string, name: string, property: "rollback_to"): pulumi.Output<outputApi.apps.v1beta1.RollbackConfig>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/DeploymentRollback", name: string, property: "updated_annotations"): pulumi.Output<{[key: string]: pulumi.Output<string>}>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/DeploymentRollback", namespace: string, name: string, property: "updated_annotations"): pulumi.Output<{[key: string]: pulumi.Output<string>}>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/Scale", name: string, property: "api_version"): pulumi.Output<"apps/v1beta1">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/Scale", namespace: string, name: string, property: "api_version"): pulumi.Output<"apps/v1beta1">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/Scale", name: string, property: "kind"): pulumi.Output<"Scale">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/Scale", namespace: string, name: string, property: "kind"): pulumi.Output<"Scale">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/Scale", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/Scale", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/Scale", name: string, property: "spec"): pulumi.Output<outputApi.apps.v1beta1.ScaleSpec>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/Scale", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.apps.v1beta1.ScaleSpec>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/Scale", name: string, property: "status"): pulumi.Output<outputApi.apps.v1beta1.ScaleStatus>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/Scale", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.apps.v1beta1.ScaleStatus>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/StatefulSet", name: string, property: "api_version"): pulumi.Output<"apps/v1beta1">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/StatefulSet", namespace: string, name: string, property: "api_version"): pulumi.Output<"apps/v1beta1">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/StatefulSet", name: string, property: "kind"): pulumi.Output<"StatefulSet">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/StatefulSet", namespace: string, name: string, property: "kind"): pulumi.Output<"StatefulSet">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/StatefulSet", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/StatefulSet", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/StatefulSet", name: string, property: "spec"): pulumi.Output<outputApi.apps.v1beta1.StatefulSetSpec>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/StatefulSet", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.apps.v1beta1.StatefulSetSpec>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/StatefulSet", name: string, property: "status"): pulumi.Output<outputApi.apps.v1beta1.StatefulSetStatus>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/StatefulSet", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.apps.v1beta1.StatefulSetStatus>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/StatefulSetList", name: string, property: "api_version"): pulumi.Output<"apps/v1beta1">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/StatefulSetList", namespace: string, name: string, property: "api_version"): pulumi.Output<"apps/v1beta1">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/StatefulSetList", name: string, property: "items"): pulumi.Output<outputApi.apps.v1beta1.StatefulSet[]>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/StatefulSetList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.apps.v1beta1.StatefulSet[]>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/StatefulSetList", name: string, property: "kind"): pulumi.Output<"StatefulSetList">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/StatefulSetList", namespace: string, name: string, property: "kind"): pulumi.Output<"StatefulSetList">;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/StatefulSetList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta1/StatefulSetList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ControllerRevision", name: string, property: "api_version"): pulumi.Output<"apps/v1beta2">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ControllerRevision", namespace: string, name: string, property: "api_version"): pulumi.Output<"apps/v1beta2">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ControllerRevision", name: string, property: "data"): pulumi.Output<outputApi.pkg.runtime.RawExtension>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ControllerRevision", namespace: string, name: string, property: "data"): pulumi.Output<outputApi.pkg.runtime.RawExtension>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ControllerRevision", name: string, property: "kind"): pulumi.Output<"ControllerRevision">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ControllerRevision", namespace: string, name: string, property: "kind"): pulumi.Output<"ControllerRevision">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ControllerRevision", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ControllerRevision", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ControllerRevision", name: string, property: "revision"): pulumi.Output<number>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ControllerRevision", namespace: string, name: string, property: "revision"): pulumi.Output<number>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ControllerRevisionList", name: string, property: "api_version"): pulumi.Output<"apps/v1beta2">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ControllerRevisionList", namespace: string, name: string, property: "api_version"): pulumi.Output<"apps/v1beta2">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ControllerRevisionList", name: string, property: "items"): pulumi.Output<outputApi.apps.v1beta2.ControllerRevision[]>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ControllerRevisionList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.apps.v1beta2.ControllerRevision[]>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ControllerRevisionList", name: string, property: "kind"): pulumi.Output<"ControllerRevisionList">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ControllerRevisionList", namespace: string, name: string, property: "kind"): pulumi.Output<"ControllerRevisionList">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ControllerRevisionList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ControllerRevisionList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/DaemonSet", name: string, property: "api_version"): pulumi.Output<"apps/v1beta2">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/DaemonSet", namespace: string, name: string, property: "api_version"): pulumi.Output<"apps/v1beta2">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/DaemonSet", name: string, property: "kind"): pulumi.Output<"DaemonSet">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/DaemonSet", namespace: string, name: string, property: "kind"): pulumi.Output<"DaemonSet">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/DaemonSet", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/DaemonSet", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/DaemonSet", name: string, property: "spec"): pulumi.Output<outputApi.apps.v1beta2.DaemonSetSpec>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/DaemonSet", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.apps.v1beta2.DaemonSetSpec>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/DaemonSet", name: string, property: "status"): pulumi.Output<outputApi.apps.v1beta2.DaemonSetStatus>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/DaemonSet", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.apps.v1beta2.DaemonSetStatus>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/DaemonSetList", name: string, property: "api_version"): pulumi.Output<"apps/v1beta2">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/DaemonSetList", namespace: string, name: string, property: "api_version"): pulumi.Output<"apps/v1beta2">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/DaemonSetList", name: string, property: "items"): pulumi.Output<outputApi.apps.v1beta2.DaemonSet[]>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/DaemonSetList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.apps.v1beta2.DaemonSet[]>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/DaemonSetList", name: string, property: "kind"): pulumi.Output<"DaemonSetList">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/DaemonSetList", namespace: string, name: string, property: "kind"): pulumi.Output<"DaemonSetList">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/DaemonSetList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/DaemonSetList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/Deployment", name: string, property: "api_version"): pulumi.Output<"apps/v1beta2">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/Deployment", namespace: string, name: string, property: "api_version"): pulumi.Output<"apps/v1beta2">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/Deployment", name: string, property: "kind"): pulumi.Output<"Deployment">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/Deployment", namespace: string, name: string, property: "kind"): pulumi.Output<"Deployment">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/Deployment", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/Deployment", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/Deployment", name: string, property: "spec"): pulumi.Output<outputApi.apps.v1beta2.DeploymentSpec>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/Deployment", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.apps.v1beta2.DeploymentSpec>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/Deployment", name: string, property: "status"): pulumi.Output<outputApi.apps.v1beta2.DeploymentStatus>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/Deployment", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.apps.v1beta2.DeploymentStatus>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/DeploymentList", name: string, property: "api_version"): pulumi.Output<"apps/v1beta2">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/DeploymentList", namespace: string, name: string, property: "api_version"): pulumi.Output<"apps/v1beta2">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/DeploymentList", name: string, property: "items"): pulumi.Output<outputApi.apps.v1beta2.Deployment[]>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/DeploymentList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.apps.v1beta2.Deployment[]>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/DeploymentList", name: string, property: "kind"): pulumi.Output<"DeploymentList">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/DeploymentList", namespace: string, name: string, property: "kind"): pulumi.Output<"DeploymentList">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/DeploymentList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/DeploymentList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ReplicaSet", name: string, property: "api_version"): pulumi.Output<"apps/v1beta2">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ReplicaSet", namespace: string, name: string, property: "api_version"): pulumi.Output<"apps/v1beta2">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ReplicaSet", name: string, property: "kind"): pulumi.Output<"ReplicaSet">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ReplicaSet", namespace: string, name: string, property: "kind"): pulumi.Output<"ReplicaSet">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ReplicaSet", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ReplicaSet", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ReplicaSet", name: string, property: "spec"): pulumi.Output<outputApi.apps.v1beta2.ReplicaSetSpec>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ReplicaSet", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.apps.v1beta2.ReplicaSetSpec>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ReplicaSet", name: string, property: "status"): pulumi.Output<outputApi.apps.v1beta2.ReplicaSetStatus>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ReplicaSet", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.apps.v1beta2.ReplicaSetStatus>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ReplicaSetList", name: string, property: "api_version"): pulumi.Output<"apps/v1beta2">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ReplicaSetList", namespace: string, name: string, property: "api_version"): pulumi.Output<"apps/v1beta2">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ReplicaSetList", name: string, property: "items"): pulumi.Output<outputApi.apps.v1beta2.ReplicaSet[]>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ReplicaSetList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.apps.v1beta2.ReplicaSet[]>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ReplicaSetList", name: string, property: "kind"): pulumi.Output<"ReplicaSetList">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ReplicaSetList", namespace: string, name: string, property: "kind"): pulumi.Output<"ReplicaSetList">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ReplicaSetList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/ReplicaSetList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/Scale", name: string, property: "api_version"): pulumi.Output<"apps/v1beta2">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/Scale", namespace: string, name: string, property: "api_version"): pulumi.Output<"apps/v1beta2">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/Scale", name: string, property: "kind"): pulumi.Output<"Scale">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/Scale", namespace: string, name: string, property: "kind"): pulumi.Output<"Scale">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/Scale", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/Scale", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/Scale", name: string, property: "spec"): pulumi.Output<outputApi.apps.v1beta2.ScaleSpec>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/Scale", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.apps.v1beta2.ScaleSpec>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/Scale", name: string, property: "status"): pulumi.Output<outputApi.apps.v1beta2.ScaleStatus>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/Scale", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.apps.v1beta2.ScaleStatus>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/StatefulSet", name: string, property: "api_version"): pulumi.Output<"apps/v1beta2">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/StatefulSet", namespace: string, name: string, property: "api_version"): pulumi.Output<"apps/v1beta2">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/StatefulSet", name: string, property: "kind"): pulumi.Output<"StatefulSet">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/StatefulSet", namespace: string, name: string, property: "kind"): pulumi.Output<"StatefulSet">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/StatefulSet", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/StatefulSet", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/StatefulSet", name: string, property: "spec"): pulumi.Output<outputApi.apps.v1beta2.StatefulSetSpec>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/StatefulSet", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.apps.v1beta2.StatefulSetSpec>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/StatefulSet", name: string, property: "status"): pulumi.Output<outputApi.apps.v1beta2.StatefulSetStatus>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/StatefulSet", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.apps.v1beta2.StatefulSetStatus>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/StatefulSetList", name: string, property: "api_version"): pulumi.Output<"apps/v1beta2">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/StatefulSetList", namespace: string, name: string, property: "api_version"): pulumi.Output<"apps/v1beta2">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/StatefulSetList", name: string, property: "items"): pulumi.Output<outputApi.apps.v1beta2.StatefulSet[]>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/StatefulSetList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.apps.v1beta2.StatefulSet[]>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/StatefulSetList", name: string, property: "kind"): pulumi.Output<"StatefulSetList">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/StatefulSetList", namespace: string, name: string, property: "kind"): pulumi.Output<"StatefulSetList">;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/StatefulSetList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "apps/v1beta2/StatefulSetList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "auditregistration.k8s.io/v1alpha1/AuditSink", name: string, property: "api_version"): pulumi.Output<"auditregistration.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "auditregistration.k8s.io/v1alpha1/AuditSink", namespace: string, name: string, property: "api_version"): pulumi.Output<"auditregistration.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "auditregistration.k8s.io/v1alpha1/AuditSink", name: string, property: "kind"): pulumi.Output<"AuditSink">;
        public getResourceProperty(groupVersionKind: "auditregistration.k8s.io/v1alpha1/AuditSink", namespace: string, name: string, property: "kind"): pulumi.Output<"AuditSink">;
        public getResourceProperty(groupVersionKind: "auditregistration.k8s.io/v1alpha1/AuditSink", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "auditregistration.k8s.io/v1alpha1/AuditSink", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "auditregistration.k8s.io/v1alpha1/AuditSink", name: string, property: "spec"): pulumi.Output<outputApi.auditregistration.v1alpha1.AuditSinkSpec>;
        public getResourceProperty(groupVersionKind: "auditregistration.k8s.io/v1alpha1/AuditSink", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.auditregistration.v1alpha1.AuditSinkSpec>;
        public getResourceProperty(groupVersionKind: "auditregistration.k8s.io/v1alpha1/AuditSinkList", name: string, property: "api_version"): pulumi.Output<"auditregistration.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "auditregistration.k8s.io/v1alpha1/AuditSinkList", namespace: string, name: string, property: "api_version"): pulumi.Output<"auditregistration.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "auditregistration.k8s.io/v1alpha1/AuditSinkList", name: string, property: "items"): pulumi.Output<outputApi.auditregistration.v1alpha1.AuditSink[]>;
        public getResourceProperty(groupVersionKind: "auditregistration.k8s.io/v1alpha1/AuditSinkList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.auditregistration.v1alpha1.AuditSink[]>;
        public getResourceProperty(groupVersionKind: "auditregistration.k8s.io/v1alpha1/AuditSinkList", name: string, property: "kind"): pulumi.Output<"AuditSinkList">;
        public getResourceProperty(groupVersionKind: "auditregistration.k8s.io/v1alpha1/AuditSinkList", namespace: string, name: string, property: "kind"): pulumi.Output<"AuditSinkList">;
        public getResourceProperty(groupVersionKind: "auditregistration.k8s.io/v1alpha1/AuditSinkList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "auditregistration.k8s.io/v1alpha1/AuditSinkList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "authentication.k8s.io/v1/TokenReview", name: string, property: "api_version"): pulumi.Output<"authentication.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "authentication.k8s.io/v1/TokenReview", namespace: string, name: string, property: "api_version"): pulumi.Output<"authentication.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "authentication.k8s.io/v1/TokenReview", name: string, property: "kind"): pulumi.Output<"TokenReview">;
        public getResourceProperty(groupVersionKind: "authentication.k8s.io/v1/TokenReview", namespace: string, name: string, property: "kind"): pulumi.Output<"TokenReview">;
        public getResourceProperty(groupVersionKind: "authentication.k8s.io/v1/TokenReview", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "authentication.k8s.io/v1/TokenReview", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "authentication.k8s.io/v1/TokenReview", name: string, property: "spec"): pulumi.Output<outputApi.authentication.v1.TokenReviewSpec>;
        public getResourceProperty(groupVersionKind: "authentication.k8s.io/v1/TokenReview", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.authentication.v1.TokenReviewSpec>;
        public getResourceProperty(groupVersionKind: "authentication.k8s.io/v1/TokenReview", name: string, property: "status"): pulumi.Output<outputApi.authentication.v1.TokenReviewStatus>;
        public getResourceProperty(groupVersionKind: "authentication.k8s.io/v1/TokenReview", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.authentication.v1.TokenReviewStatus>;
        public getResourceProperty(groupVersionKind: "authentication.k8s.io/v1beta1/TokenReview", name: string, property: "api_version"): pulumi.Output<"authentication.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "authentication.k8s.io/v1beta1/TokenReview", namespace: string, name: string, property: "api_version"): pulumi.Output<"authentication.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "authentication.k8s.io/v1beta1/TokenReview", name: string, property: "kind"): pulumi.Output<"TokenReview">;
        public getResourceProperty(groupVersionKind: "authentication.k8s.io/v1beta1/TokenReview", namespace: string, name: string, property: "kind"): pulumi.Output<"TokenReview">;
        public getResourceProperty(groupVersionKind: "authentication.k8s.io/v1beta1/TokenReview", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "authentication.k8s.io/v1beta1/TokenReview", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "authentication.k8s.io/v1beta1/TokenReview", name: string, property: "spec"): pulumi.Output<outputApi.authentication.v1beta1.TokenReviewSpec>;
        public getResourceProperty(groupVersionKind: "authentication.k8s.io/v1beta1/TokenReview", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.authentication.v1beta1.TokenReviewSpec>;
        public getResourceProperty(groupVersionKind: "authentication.k8s.io/v1beta1/TokenReview", name: string, property: "status"): pulumi.Output<outputApi.authentication.v1beta1.TokenReviewStatus>;
        public getResourceProperty(groupVersionKind: "authentication.k8s.io/v1beta1/TokenReview", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.authentication.v1beta1.TokenReviewStatus>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/LocalSubjectAccessReview", name: string, property: "api_version"): pulumi.Output<"authorization.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/LocalSubjectAccessReview", namespace: string, name: string, property: "api_version"): pulumi.Output<"authorization.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/LocalSubjectAccessReview", name: string, property: "kind"): pulumi.Output<"LocalSubjectAccessReview">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/LocalSubjectAccessReview", namespace: string, name: string, property: "kind"): pulumi.Output<"LocalSubjectAccessReview">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/LocalSubjectAccessReview", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/LocalSubjectAccessReview", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/LocalSubjectAccessReview", name: string, property: "spec"): pulumi.Output<outputApi.authorization.v1.SubjectAccessReviewSpec>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/LocalSubjectAccessReview", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.authorization.v1.SubjectAccessReviewSpec>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/LocalSubjectAccessReview", name: string, property: "status"): pulumi.Output<outputApi.authorization.v1.SubjectAccessReviewStatus>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/LocalSubjectAccessReview", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.authorization.v1.SubjectAccessReviewStatus>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/SelfSubjectAccessReview", name: string, property: "api_version"): pulumi.Output<"authorization.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/SelfSubjectAccessReview", namespace: string, name: string, property: "api_version"): pulumi.Output<"authorization.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/SelfSubjectAccessReview", name: string, property: "kind"): pulumi.Output<"SelfSubjectAccessReview">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/SelfSubjectAccessReview", namespace: string, name: string, property: "kind"): pulumi.Output<"SelfSubjectAccessReview">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/SelfSubjectAccessReview", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/SelfSubjectAccessReview", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/SelfSubjectAccessReview", name: string, property: "spec"): pulumi.Output<outputApi.authorization.v1.SelfSubjectAccessReviewSpec>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/SelfSubjectAccessReview", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.authorization.v1.SelfSubjectAccessReviewSpec>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/SelfSubjectAccessReview", name: string, property: "status"): pulumi.Output<outputApi.authorization.v1.SubjectAccessReviewStatus>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/SelfSubjectAccessReview", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.authorization.v1.SubjectAccessReviewStatus>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/SelfSubjectRulesReview", name: string, property: "api_version"): pulumi.Output<"authorization.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/SelfSubjectRulesReview", namespace: string, name: string, property: "api_version"): pulumi.Output<"authorization.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/SelfSubjectRulesReview", name: string, property: "kind"): pulumi.Output<"SelfSubjectRulesReview">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/SelfSubjectRulesReview", namespace: string, name: string, property: "kind"): pulumi.Output<"SelfSubjectRulesReview">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/SelfSubjectRulesReview", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/SelfSubjectRulesReview", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/SelfSubjectRulesReview", name: string, property: "spec"): pulumi.Output<outputApi.authorization.v1.SelfSubjectRulesReviewSpec>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/SelfSubjectRulesReview", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.authorization.v1.SelfSubjectRulesReviewSpec>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/SelfSubjectRulesReview", name: string, property: "status"): pulumi.Output<outputApi.authorization.v1.SubjectRulesReviewStatus>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/SelfSubjectRulesReview", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.authorization.v1.SubjectRulesReviewStatus>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/SubjectAccessReview", name: string, property: "api_version"): pulumi.Output<"authorization.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/SubjectAccessReview", namespace: string, name: string, property: "api_version"): pulumi.Output<"authorization.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/SubjectAccessReview", name: string, property: "kind"): pulumi.Output<"SubjectAccessReview">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/SubjectAccessReview", namespace: string, name: string, property: "kind"): pulumi.Output<"SubjectAccessReview">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/SubjectAccessReview", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/SubjectAccessReview", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/SubjectAccessReview", name: string, property: "spec"): pulumi.Output<outputApi.authorization.v1.SubjectAccessReviewSpec>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/SubjectAccessReview", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.authorization.v1.SubjectAccessReviewSpec>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/SubjectAccessReview", name: string, property: "status"): pulumi.Output<outputApi.authorization.v1.SubjectAccessReviewStatus>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1/SubjectAccessReview", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.authorization.v1.SubjectAccessReviewStatus>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/LocalSubjectAccessReview", name: string, property: "api_version"): pulumi.Output<"authorization.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/LocalSubjectAccessReview", namespace: string, name: string, property: "api_version"): pulumi.Output<"authorization.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/LocalSubjectAccessReview", name: string, property: "kind"): pulumi.Output<"LocalSubjectAccessReview">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/LocalSubjectAccessReview", namespace: string, name: string, property: "kind"): pulumi.Output<"LocalSubjectAccessReview">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/LocalSubjectAccessReview", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/LocalSubjectAccessReview", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/LocalSubjectAccessReview", name: string, property: "spec"): pulumi.Output<outputApi.authorization.v1beta1.SubjectAccessReviewSpec>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/LocalSubjectAccessReview", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.authorization.v1beta1.SubjectAccessReviewSpec>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/LocalSubjectAccessReview", name: string, property: "status"): pulumi.Output<outputApi.authorization.v1beta1.SubjectAccessReviewStatus>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/LocalSubjectAccessReview", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.authorization.v1beta1.SubjectAccessReviewStatus>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/SelfSubjectAccessReview", name: string, property: "api_version"): pulumi.Output<"authorization.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/SelfSubjectAccessReview", namespace: string, name: string, property: "api_version"): pulumi.Output<"authorization.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/SelfSubjectAccessReview", name: string, property: "kind"): pulumi.Output<"SelfSubjectAccessReview">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/SelfSubjectAccessReview", namespace: string, name: string, property: "kind"): pulumi.Output<"SelfSubjectAccessReview">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/SelfSubjectAccessReview", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/SelfSubjectAccessReview", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/SelfSubjectAccessReview", name: string, property: "spec"): pulumi.Output<outputApi.authorization.v1beta1.SelfSubjectAccessReviewSpec>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/SelfSubjectAccessReview", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.authorization.v1beta1.SelfSubjectAccessReviewSpec>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/SelfSubjectAccessReview", name: string, property: "status"): pulumi.Output<outputApi.authorization.v1beta1.SubjectAccessReviewStatus>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/SelfSubjectAccessReview", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.authorization.v1beta1.SubjectAccessReviewStatus>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/SelfSubjectRulesReview", name: string, property: "api_version"): pulumi.Output<"authorization.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/SelfSubjectRulesReview", namespace: string, name: string, property: "api_version"): pulumi.Output<"authorization.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/SelfSubjectRulesReview", name: string, property: "kind"): pulumi.Output<"SelfSubjectRulesReview">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/SelfSubjectRulesReview", namespace: string, name: string, property: "kind"): pulumi.Output<"SelfSubjectRulesReview">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/SelfSubjectRulesReview", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/SelfSubjectRulesReview", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/SelfSubjectRulesReview", name: string, property: "spec"): pulumi.Output<outputApi.authorization.v1beta1.SelfSubjectRulesReviewSpec>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/SelfSubjectRulesReview", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.authorization.v1beta1.SelfSubjectRulesReviewSpec>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/SelfSubjectRulesReview", name: string, property: "status"): pulumi.Output<outputApi.authorization.v1beta1.SubjectRulesReviewStatus>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/SelfSubjectRulesReview", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.authorization.v1beta1.SubjectRulesReviewStatus>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/SubjectAccessReview", name: string, property: "api_version"): pulumi.Output<"authorization.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/SubjectAccessReview", namespace: string, name: string, property: "api_version"): pulumi.Output<"authorization.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/SubjectAccessReview", name: string, property: "kind"): pulumi.Output<"SubjectAccessReview">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/SubjectAccessReview", namespace: string, name: string, property: "kind"): pulumi.Output<"SubjectAccessReview">;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/SubjectAccessReview", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/SubjectAccessReview", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/SubjectAccessReview", name: string, property: "spec"): pulumi.Output<outputApi.authorization.v1beta1.SubjectAccessReviewSpec>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/SubjectAccessReview", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.authorization.v1beta1.SubjectAccessReviewSpec>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/SubjectAccessReview", name: string, property: "status"): pulumi.Output<outputApi.authorization.v1beta1.SubjectAccessReviewStatus>;
        public getResourceProperty(groupVersionKind: "authorization.k8s.io/v1beta1/SubjectAccessReview", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.authorization.v1beta1.SubjectAccessReviewStatus>;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/CrossVersionObjectReference", name: string, property: "api_version"): pulumi.Output<"autoscaling/v1">;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/CrossVersionObjectReference", namespace: string, name: string, property: "api_version"): pulumi.Output<"autoscaling/v1">;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/CrossVersionObjectReference", name: string, property: "kind"): pulumi.Output<"CrossVersionObjectReference">;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/CrossVersionObjectReference", namespace: string, name: string, property: "kind"): pulumi.Output<"CrossVersionObjectReference">;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/CrossVersionObjectReference", name: string, property: "name"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/CrossVersionObjectReference", namespace: string, name: string, property: "name"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/HorizontalPodAutoscaler", name: string, property: "api_version"): pulumi.Output<"autoscaling/v1">;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/HorizontalPodAutoscaler", namespace: string, name: string, property: "api_version"): pulumi.Output<"autoscaling/v1">;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/HorizontalPodAutoscaler", name: string, property: "kind"): pulumi.Output<"HorizontalPodAutoscaler">;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/HorizontalPodAutoscaler", namespace: string, name: string, property: "kind"): pulumi.Output<"HorizontalPodAutoscaler">;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/HorizontalPodAutoscaler", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/HorizontalPodAutoscaler", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/HorizontalPodAutoscaler", name: string, property: "spec"): pulumi.Output<outputApi.autoscaling.v1.HorizontalPodAutoscalerSpec>;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/HorizontalPodAutoscaler", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.autoscaling.v1.HorizontalPodAutoscalerSpec>;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/HorizontalPodAutoscaler", name: string, property: "status"): pulumi.Output<outputApi.autoscaling.v1.HorizontalPodAutoscalerStatus>;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/HorizontalPodAutoscaler", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.autoscaling.v1.HorizontalPodAutoscalerStatus>;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/HorizontalPodAutoscalerList", name: string, property: "api_version"): pulumi.Output<"autoscaling/v1">;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/HorizontalPodAutoscalerList", namespace: string, name: string, property: "api_version"): pulumi.Output<"autoscaling/v1">;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/HorizontalPodAutoscalerList", name: string, property: "items"): pulumi.Output<outputApi.autoscaling.v1.HorizontalPodAutoscaler[]>;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/HorizontalPodAutoscalerList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.autoscaling.v1.HorizontalPodAutoscaler[]>;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/HorizontalPodAutoscalerList", name: string, property: "kind"): pulumi.Output<"HorizontalPodAutoscalerList">;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/HorizontalPodAutoscalerList", namespace: string, name: string, property: "kind"): pulumi.Output<"HorizontalPodAutoscalerList">;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/HorizontalPodAutoscalerList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/HorizontalPodAutoscalerList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/Scale", name: string, property: "api_version"): pulumi.Output<"autoscaling/v1">;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/Scale", namespace: string, name: string, property: "api_version"): pulumi.Output<"autoscaling/v1">;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/Scale", name: string, property: "kind"): pulumi.Output<"Scale">;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/Scale", namespace: string, name: string, property: "kind"): pulumi.Output<"Scale">;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/Scale", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/Scale", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/Scale", name: string, property: "spec"): pulumi.Output<outputApi.autoscaling.v1.ScaleSpec>;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/Scale", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.autoscaling.v1.ScaleSpec>;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/Scale", name: string, property: "status"): pulumi.Output<outputApi.autoscaling.v1.ScaleStatus>;
        public getResourceProperty(groupVersionKind: "autoscaling/v1/Scale", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.autoscaling.v1.ScaleStatus>;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta1/CrossVersionObjectReference", name: string, property: "api_version"): pulumi.Output<"autoscaling/v2beta1">;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta1/CrossVersionObjectReference", namespace: string, name: string, property: "api_version"): pulumi.Output<"autoscaling/v2beta1">;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta1/CrossVersionObjectReference", name: string, property: "kind"): pulumi.Output<"CrossVersionObjectReference">;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta1/CrossVersionObjectReference", namespace: string, name: string, property: "kind"): pulumi.Output<"CrossVersionObjectReference">;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta1/CrossVersionObjectReference", name: string, property: "name"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta1/CrossVersionObjectReference", namespace: string, name: string, property: "name"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta1/HorizontalPodAutoscaler", name: string, property: "api_version"): pulumi.Output<"autoscaling/v2beta1">;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta1/HorizontalPodAutoscaler", namespace: string, name: string, property: "api_version"): pulumi.Output<"autoscaling/v2beta1">;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta1/HorizontalPodAutoscaler", name: string, property: "kind"): pulumi.Output<"HorizontalPodAutoscaler">;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta1/HorizontalPodAutoscaler", namespace: string, name: string, property: "kind"): pulumi.Output<"HorizontalPodAutoscaler">;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta1/HorizontalPodAutoscaler", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta1/HorizontalPodAutoscaler", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta1/HorizontalPodAutoscaler", name: string, property: "spec"): pulumi.Output<outputApi.autoscaling.v2beta1.HorizontalPodAutoscalerSpec>;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta1/HorizontalPodAutoscaler", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.autoscaling.v2beta1.HorizontalPodAutoscalerSpec>;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta1/HorizontalPodAutoscaler", name: string, property: "status"): pulumi.Output<outputApi.autoscaling.v2beta1.HorizontalPodAutoscalerStatus>;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta1/HorizontalPodAutoscaler", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.autoscaling.v2beta1.HorizontalPodAutoscalerStatus>;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta1/HorizontalPodAutoscalerList", name: string, property: "api_version"): pulumi.Output<"autoscaling/v2beta1">;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta1/HorizontalPodAutoscalerList", namespace: string, name: string, property: "api_version"): pulumi.Output<"autoscaling/v2beta1">;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta1/HorizontalPodAutoscalerList", name: string, property: "items"): pulumi.Output<outputApi.autoscaling.v2beta1.HorizontalPodAutoscaler[]>;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta1/HorizontalPodAutoscalerList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.autoscaling.v2beta1.HorizontalPodAutoscaler[]>;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta1/HorizontalPodAutoscalerList", name: string, property: "kind"): pulumi.Output<"HorizontalPodAutoscalerList">;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta1/HorizontalPodAutoscalerList", namespace: string, name: string, property: "kind"): pulumi.Output<"HorizontalPodAutoscalerList">;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta1/HorizontalPodAutoscalerList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta1/HorizontalPodAutoscalerList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta2/CrossVersionObjectReference", name: string, property: "api_version"): pulumi.Output<"autoscaling/v2beta2">;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta2/CrossVersionObjectReference", namespace: string, name: string, property: "api_version"): pulumi.Output<"autoscaling/v2beta2">;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta2/CrossVersionObjectReference", name: string, property: "kind"): pulumi.Output<"CrossVersionObjectReference">;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta2/CrossVersionObjectReference", namespace: string, name: string, property: "kind"): pulumi.Output<"CrossVersionObjectReference">;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta2/CrossVersionObjectReference", name: string, property: "name"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta2/CrossVersionObjectReference", namespace: string, name: string, property: "name"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta2/HorizontalPodAutoscaler", name: string, property: "api_version"): pulumi.Output<"autoscaling/v2beta2">;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta2/HorizontalPodAutoscaler", namespace: string, name: string, property: "api_version"): pulumi.Output<"autoscaling/v2beta2">;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta2/HorizontalPodAutoscaler", name: string, property: "kind"): pulumi.Output<"HorizontalPodAutoscaler">;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta2/HorizontalPodAutoscaler", namespace: string, name: string, property: "kind"): pulumi.Output<"HorizontalPodAutoscaler">;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta2/HorizontalPodAutoscaler", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta2/HorizontalPodAutoscaler", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta2/HorizontalPodAutoscaler", name: string, property: "spec"): pulumi.Output<outputApi.autoscaling.v2beta2.HorizontalPodAutoscalerSpec>;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta2/HorizontalPodAutoscaler", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.autoscaling.v2beta2.HorizontalPodAutoscalerSpec>;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta2/HorizontalPodAutoscaler", name: string, property: "status"): pulumi.Output<outputApi.autoscaling.v2beta2.HorizontalPodAutoscalerStatus>;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta2/HorizontalPodAutoscaler", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.autoscaling.v2beta2.HorizontalPodAutoscalerStatus>;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta2/HorizontalPodAutoscalerList", name: string, property: "api_version"): pulumi.Output<"autoscaling/v2beta2">;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta2/HorizontalPodAutoscalerList", namespace: string, name: string, property: "api_version"): pulumi.Output<"autoscaling/v2beta2">;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta2/HorizontalPodAutoscalerList", name: string, property: "items"): pulumi.Output<outputApi.autoscaling.v2beta2.HorizontalPodAutoscaler[]>;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta2/HorizontalPodAutoscalerList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.autoscaling.v2beta2.HorizontalPodAutoscaler[]>;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta2/HorizontalPodAutoscalerList", name: string, property: "kind"): pulumi.Output<"HorizontalPodAutoscalerList">;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta2/HorizontalPodAutoscalerList", namespace: string, name: string, property: "kind"): pulumi.Output<"HorizontalPodAutoscalerList">;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta2/HorizontalPodAutoscalerList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "autoscaling/v2beta2/HorizontalPodAutoscalerList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "batch/v1/Job", name: string, property: "api_version"): pulumi.Output<"batch/v1">;
        public getResourceProperty(groupVersionKind: "batch/v1/Job", namespace: string, name: string, property: "api_version"): pulumi.Output<"batch/v1">;
        public getResourceProperty(groupVersionKind: "batch/v1/Job", name: string, property: "kind"): pulumi.Output<"Job">;
        public getResourceProperty(groupVersionKind: "batch/v1/Job", namespace: string, name: string, property: "kind"): pulumi.Output<"Job">;
        public getResourceProperty(groupVersionKind: "batch/v1/Job", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "batch/v1/Job", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "batch/v1/Job", name: string, property: "spec"): pulumi.Output<outputApi.batch.v1.JobSpec>;
        public getResourceProperty(groupVersionKind: "batch/v1/Job", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.batch.v1.JobSpec>;
        public getResourceProperty(groupVersionKind: "batch/v1/Job", name: string, property: "status"): pulumi.Output<outputApi.batch.v1.JobStatus>;
        public getResourceProperty(groupVersionKind: "batch/v1/Job", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.batch.v1.JobStatus>;
        public getResourceProperty(groupVersionKind: "batch/v1/JobList", name: string, property: "api_version"): pulumi.Output<"batch/v1">;
        public getResourceProperty(groupVersionKind: "batch/v1/JobList", namespace: string, name: string, property: "api_version"): pulumi.Output<"batch/v1">;
        public getResourceProperty(groupVersionKind: "batch/v1/JobList", name: string, property: "items"): pulumi.Output<outputApi.batch.v1.Job[]>;
        public getResourceProperty(groupVersionKind: "batch/v1/JobList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.batch.v1.Job[]>;
        public getResourceProperty(groupVersionKind: "batch/v1/JobList", name: string, property: "kind"): pulumi.Output<"JobList">;
        public getResourceProperty(groupVersionKind: "batch/v1/JobList", namespace: string, name: string, property: "kind"): pulumi.Output<"JobList">;
        public getResourceProperty(groupVersionKind: "batch/v1/JobList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "batch/v1/JobList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "batch/v1beta1/CronJob", name: string, property: "api_version"): pulumi.Output<"batch/v1beta1">;
        public getResourceProperty(groupVersionKind: "batch/v1beta1/CronJob", namespace: string, name: string, property: "api_version"): pulumi.Output<"batch/v1beta1">;
        public getResourceProperty(groupVersionKind: "batch/v1beta1/CronJob", name: string, property: "kind"): pulumi.Output<"CronJob">;
        public getResourceProperty(groupVersionKind: "batch/v1beta1/CronJob", namespace: string, name: string, property: "kind"): pulumi.Output<"CronJob">;
        public getResourceProperty(groupVersionKind: "batch/v1beta1/CronJob", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "batch/v1beta1/CronJob", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "batch/v1beta1/CronJob", name: string, property: "spec"): pulumi.Output<outputApi.batch.v1beta1.CronJobSpec>;
        public getResourceProperty(groupVersionKind: "batch/v1beta1/CronJob", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.batch.v1beta1.CronJobSpec>;
        public getResourceProperty(groupVersionKind: "batch/v1beta1/CronJob", name: string, property: "status"): pulumi.Output<outputApi.batch.v1beta1.CronJobStatus>;
        public getResourceProperty(groupVersionKind: "batch/v1beta1/CronJob", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.batch.v1beta1.CronJobStatus>;
        public getResourceProperty(groupVersionKind: "batch/v1beta1/CronJobList", name: string, property: "api_version"): pulumi.Output<"batch/v1beta1">;
        public getResourceProperty(groupVersionKind: "batch/v1beta1/CronJobList", namespace: string, name: string, property: "api_version"): pulumi.Output<"batch/v1beta1">;
        public getResourceProperty(groupVersionKind: "batch/v1beta1/CronJobList", name: string, property: "items"): pulumi.Output<outputApi.batch.v1beta1.CronJob[]>;
        public getResourceProperty(groupVersionKind: "batch/v1beta1/CronJobList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.batch.v1beta1.CronJob[]>;
        public getResourceProperty(groupVersionKind: "batch/v1beta1/CronJobList", name: string, property: "kind"): pulumi.Output<"CronJobList">;
        public getResourceProperty(groupVersionKind: "batch/v1beta1/CronJobList", namespace: string, name: string, property: "kind"): pulumi.Output<"CronJobList">;
        public getResourceProperty(groupVersionKind: "batch/v1beta1/CronJobList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "batch/v1beta1/CronJobList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "batch/v2alpha1/CronJob", name: string, property: "api_version"): pulumi.Output<"batch/v2alpha1">;
        public getResourceProperty(groupVersionKind: "batch/v2alpha1/CronJob", namespace: string, name: string, property: "api_version"): pulumi.Output<"batch/v2alpha1">;
        public getResourceProperty(groupVersionKind: "batch/v2alpha1/CronJob", name: string, property: "kind"): pulumi.Output<"CronJob">;
        public getResourceProperty(groupVersionKind: "batch/v2alpha1/CronJob", namespace: string, name: string, property: "kind"): pulumi.Output<"CronJob">;
        public getResourceProperty(groupVersionKind: "batch/v2alpha1/CronJob", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "batch/v2alpha1/CronJob", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "batch/v2alpha1/CronJob", name: string, property: "spec"): pulumi.Output<outputApi.batch.v2alpha1.CronJobSpec>;
        public getResourceProperty(groupVersionKind: "batch/v2alpha1/CronJob", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.batch.v2alpha1.CronJobSpec>;
        public getResourceProperty(groupVersionKind: "batch/v2alpha1/CronJob", name: string, property: "status"): pulumi.Output<outputApi.batch.v2alpha1.CronJobStatus>;
        public getResourceProperty(groupVersionKind: "batch/v2alpha1/CronJob", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.batch.v2alpha1.CronJobStatus>;
        public getResourceProperty(groupVersionKind: "batch/v2alpha1/CronJobList", name: string, property: "api_version"): pulumi.Output<"batch/v2alpha1">;
        public getResourceProperty(groupVersionKind: "batch/v2alpha1/CronJobList", namespace: string, name: string, property: "api_version"): pulumi.Output<"batch/v2alpha1">;
        public getResourceProperty(groupVersionKind: "batch/v2alpha1/CronJobList", name: string, property: "items"): pulumi.Output<outputApi.batch.v2alpha1.CronJob[]>;
        public getResourceProperty(groupVersionKind: "batch/v2alpha1/CronJobList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.batch.v2alpha1.CronJob[]>;
        public getResourceProperty(groupVersionKind: "batch/v2alpha1/CronJobList", name: string, property: "kind"): pulumi.Output<"CronJobList">;
        public getResourceProperty(groupVersionKind: "batch/v2alpha1/CronJobList", namespace: string, name: string, property: "kind"): pulumi.Output<"CronJobList">;
        public getResourceProperty(groupVersionKind: "batch/v2alpha1/CronJobList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "batch/v2alpha1/CronJobList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "certificates.k8s.io/v1beta1/CertificateSigningRequest", name: string, property: "api_version"): pulumi.Output<"certificates.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "certificates.k8s.io/v1beta1/CertificateSigningRequest", namespace: string, name: string, property: "api_version"): pulumi.Output<"certificates.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "certificates.k8s.io/v1beta1/CertificateSigningRequest", name: string, property: "kind"): pulumi.Output<"CertificateSigningRequest">;
        public getResourceProperty(groupVersionKind: "certificates.k8s.io/v1beta1/CertificateSigningRequest", namespace: string, name: string, property: "kind"): pulumi.Output<"CertificateSigningRequest">;
        public getResourceProperty(groupVersionKind: "certificates.k8s.io/v1beta1/CertificateSigningRequest", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "certificates.k8s.io/v1beta1/CertificateSigningRequest", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "certificates.k8s.io/v1beta1/CertificateSigningRequest", name: string, property: "spec"): pulumi.Output<outputApi.certificates.v1beta1.CertificateSigningRequestSpec>;
        public getResourceProperty(groupVersionKind: "certificates.k8s.io/v1beta1/CertificateSigningRequest", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.certificates.v1beta1.CertificateSigningRequestSpec>;
        public getResourceProperty(groupVersionKind: "certificates.k8s.io/v1beta1/CertificateSigningRequest", name: string, property: "status"): pulumi.Output<outputApi.certificates.v1beta1.CertificateSigningRequestStatus>;
        public getResourceProperty(groupVersionKind: "certificates.k8s.io/v1beta1/CertificateSigningRequest", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.certificates.v1beta1.CertificateSigningRequestStatus>;
        public getResourceProperty(groupVersionKind: "certificates.k8s.io/v1beta1/CertificateSigningRequestList", name: string, property: "api_version"): pulumi.Output<"certificates.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "certificates.k8s.io/v1beta1/CertificateSigningRequestList", namespace: string, name: string, property: "api_version"): pulumi.Output<"certificates.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "certificates.k8s.io/v1beta1/CertificateSigningRequestList", name: string, property: "items"): pulumi.Output<outputApi.certificates.v1beta1.CertificateSigningRequest[]>;
        public getResourceProperty(groupVersionKind: "certificates.k8s.io/v1beta1/CertificateSigningRequestList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.certificates.v1beta1.CertificateSigningRequest[]>;
        public getResourceProperty(groupVersionKind: "certificates.k8s.io/v1beta1/CertificateSigningRequestList", name: string, property: "kind"): pulumi.Output<"CertificateSigningRequestList">;
        public getResourceProperty(groupVersionKind: "certificates.k8s.io/v1beta1/CertificateSigningRequestList", namespace: string, name: string, property: "kind"): pulumi.Output<"CertificateSigningRequestList">;
        public getResourceProperty(groupVersionKind: "certificates.k8s.io/v1beta1/CertificateSigningRequestList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "certificates.k8s.io/v1beta1/CertificateSigningRequestList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "coordination.k8s.io/v1beta1/Lease", name: string, property: "api_version"): pulumi.Output<"coordination.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "coordination.k8s.io/v1beta1/Lease", namespace: string, name: string, property: "api_version"): pulumi.Output<"coordination.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "coordination.k8s.io/v1beta1/Lease", name: string, property: "kind"): pulumi.Output<"Lease">;
        public getResourceProperty(groupVersionKind: "coordination.k8s.io/v1beta1/Lease", namespace: string, name: string, property: "kind"): pulumi.Output<"Lease">;
        public getResourceProperty(groupVersionKind: "coordination.k8s.io/v1beta1/Lease", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "coordination.k8s.io/v1beta1/Lease", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "coordination.k8s.io/v1beta1/Lease", name: string, property: "spec"): pulumi.Output<outputApi.coordination.v1beta1.LeaseSpec>;
        public getResourceProperty(groupVersionKind: "coordination.k8s.io/v1beta1/Lease", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.coordination.v1beta1.LeaseSpec>;
        public getResourceProperty(groupVersionKind: "coordination.k8s.io/v1beta1/LeaseList", name: string, property: "api_version"): pulumi.Output<"coordination.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "coordination.k8s.io/v1beta1/LeaseList", namespace: string, name: string, property: "api_version"): pulumi.Output<"coordination.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "coordination.k8s.io/v1beta1/LeaseList", name: string, property: "items"): pulumi.Output<outputApi.coordination.v1beta1.Lease[]>;
        public getResourceProperty(groupVersionKind: "coordination.k8s.io/v1beta1/LeaseList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.coordination.v1beta1.Lease[]>;
        public getResourceProperty(groupVersionKind: "coordination.k8s.io/v1beta1/LeaseList", name: string, property: "kind"): pulumi.Output<"LeaseList">;
        public getResourceProperty(groupVersionKind: "coordination.k8s.io/v1beta1/LeaseList", namespace: string, name: string, property: "kind"): pulumi.Output<"LeaseList">;
        public getResourceProperty(groupVersionKind: "coordination.k8s.io/v1beta1/LeaseList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "coordination.k8s.io/v1beta1/LeaseList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/Binding", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/Binding", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/Binding", name: string, property: "kind"): pulumi.Output<"Binding">;
        public getResourceProperty(groupVersionKind: "v1/Binding", namespace: string, name: string, property: "kind"): pulumi.Output<"Binding">;
        public getResourceProperty(groupVersionKind: "v1/Binding", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/Binding", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/Binding", name: string, property: "target"): pulumi.Output<outputApi.core.v1.ObjectReference>;
        public getResourceProperty(groupVersionKind: "v1/Binding", namespace: string, name: string, property: "target"): pulumi.Output<outputApi.core.v1.ObjectReference>;
        public getResourceProperty(groupVersionKind: "v1/ComponentStatus", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/ComponentStatus", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/ComponentStatus", name: string, property: "conditions"): pulumi.Output<outputApi.core.v1.ComponentCondition[]>;
        public getResourceProperty(groupVersionKind: "v1/ComponentStatus", namespace: string, name: string, property: "conditions"): pulumi.Output<outputApi.core.v1.ComponentCondition[]>;
        public getResourceProperty(groupVersionKind: "v1/ComponentStatus", name: string, property: "kind"): pulumi.Output<"ComponentStatus">;
        public getResourceProperty(groupVersionKind: "v1/ComponentStatus", namespace: string, name: string, property: "kind"): pulumi.Output<"ComponentStatus">;
        public getResourceProperty(groupVersionKind: "v1/ComponentStatus", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/ComponentStatus", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/ComponentStatusList", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/ComponentStatusList", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/ComponentStatusList", name: string, property: "items"): pulumi.Output<outputApi.core.v1.ComponentStatus[]>;
        public getResourceProperty(groupVersionKind: "v1/ComponentStatusList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.core.v1.ComponentStatus[]>;
        public getResourceProperty(groupVersionKind: "v1/ComponentStatusList", name: string, property: "kind"): pulumi.Output<"ComponentStatusList">;
        public getResourceProperty(groupVersionKind: "v1/ComponentStatusList", namespace: string, name: string, property: "kind"): pulumi.Output<"ComponentStatusList">;
        public getResourceProperty(groupVersionKind: "v1/ComponentStatusList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/ComponentStatusList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/ConfigMap", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/ConfigMap", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/ConfigMap", name: string, property: "binary_data"): pulumi.Output<object>;
        public getResourceProperty(groupVersionKind: "v1/ConfigMap", namespace: string, name: string, property: "binary_data"): pulumi.Output<object>;
        public getResourceProperty(groupVersionKind: "v1/ConfigMap", name: string, property: "data"): pulumi.Output<{[key: string]: pulumi.Output<string>}>;
        public getResourceProperty(groupVersionKind: "v1/ConfigMap", namespace: string, name: string, property: "data"): pulumi.Output<{[key: string]: pulumi.Output<string>}>;
        public getResourceProperty(groupVersionKind: "v1/ConfigMap", name: string, property: "kind"): pulumi.Output<"ConfigMap">;
        public getResourceProperty(groupVersionKind: "v1/ConfigMap", namespace: string, name: string, property: "kind"): pulumi.Output<"ConfigMap">;
        public getResourceProperty(groupVersionKind: "v1/ConfigMap", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/ConfigMap", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/ConfigMapList", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/ConfigMapList", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/ConfigMapList", name: string, property: "items"): pulumi.Output<outputApi.core.v1.ConfigMap[]>;
        public getResourceProperty(groupVersionKind: "v1/ConfigMapList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.core.v1.ConfigMap[]>;
        public getResourceProperty(groupVersionKind: "v1/ConfigMapList", name: string, property: "kind"): pulumi.Output<"ConfigMapList">;
        public getResourceProperty(groupVersionKind: "v1/ConfigMapList", namespace: string, name: string, property: "kind"): pulumi.Output<"ConfigMapList">;
        public getResourceProperty(groupVersionKind: "v1/ConfigMapList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/ConfigMapList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/Endpoints", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/Endpoints", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/Endpoints", name: string, property: "kind"): pulumi.Output<"Endpoints">;
        public getResourceProperty(groupVersionKind: "v1/Endpoints", namespace: string, name: string, property: "kind"): pulumi.Output<"Endpoints">;
        public getResourceProperty(groupVersionKind: "v1/Endpoints", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/Endpoints", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/Endpoints", name: string, property: "subsets"): pulumi.Output<outputApi.core.v1.EndpointSubset[]>;
        public getResourceProperty(groupVersionKind: "v1/Endpoints", namespace: string, name: string, property: "subsets"): pulumi.Output<outputApi.core.v1.EndpointSubset[]>;
        public getResourceProperty(groupVersionKind: "v1/EndpointsList", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/EndpointsList", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/EndpointsList", name: string, property: "items"): pulumi.Output<outputApi.core.v1.Endpoints[]>;
        public getResourceProperty(groupVersionKind: "v1/EndpointsList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.core.v1.Endpoints[]>;
        public getResourceProperty(groupVersionKind: "v1/EndpointsList", name: string, property: "kind"): pulumi.Output<"EndpointsList">;
        public getResourceProperty(groupVersionKind: "v1/EndpointsList", namespace: string, name: string, property: "kind"): pulumi.Output<"EndpointsList">;
        public getResourceProperty(groupVersionKind: "v1/EndpointsList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/EndpointsList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/Event", name: string, property: "action"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/Event", namespace: string, name: string, property: "action"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/Event", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/Event", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/Event", name: string, property: "count"): pulumi.Output<number>;
        public getResourceProperty(groupVersionKind: "v1/Event", namespace: string, name: string, property: "count"): pulumi.Output<number>;
        public getResourceProperty(groupVersionKind: "v1/Event", name: string, property: "event_time"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/Event", namespace: string, name: string, property: "event_time"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/Event", name: string, property: "first_timestamp"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/Event", namespace: string, name: string, property: "first_timestamp"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/Event", name: string, property: "involved_object"): pulumi.Output<outputApi.core.v1.ObjectReference>;
        public getResourceProperty(groupVersionKind: "v1/Event", namespace: string, name: string, property: "involved_object"): pulumi.Output<outputApi.core.v1.ObjectReference>;
        public getResourceProperty(groupVersionKind: "v1/Event", name: string, property: "kind"): pulumi.Output<"Event">;
        public getResourceProperty(groupVersionKind: "v1/Event", namespace: string, name: string, property: "kind"): pulumi.Output<"Event">;
        public getResourceProperty(groupVersionKind: "v1/Event", name: string, property: "last_timestamp"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/Event", namespace: string, name: string, property: "last_timestamp"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/Event", name: string, property: "message"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/Event", namespace: string, name: string, property: "message"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/Event", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/Event", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/Event", name: string, property: "reason"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/Event", namespace: string, name: string, property: "reason"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/Event", name: string, property: "related"): pulumi.Output<outputApi.core.v1.ObjectReference>;
        public getResourceProperty(groupVersionKind: "v1/Event", namespace: string, name: string, property: "related"): pulumi.Output<outputApi.core.v1.ObjectReference>;
        public getResourceProperty(groupVersionKind: "v1/Event", name: string, property: "reporting_component"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/Event", namespace: string, name: string, property: "reporting_component"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/Event", name: string, property: "reporting_instance"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/Event", namespace: string, name: string, property: "reporting_instance"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/Event", name: string, property: "series"): pulumi.Output<outputApi.core.v1.EventSeries>;
        public getResourceProperty(groupVersionKind: "v1/Event", namespace: string, name: string, property: "series"): pulumi.Output<outputApi.core.v1.EventSeries>;
        public getResourceProperty(groupVersionKind: "v1/Event", name: string, property: "source"): pulumi.Output<outputApi.core.v1.EventSource>;
        public getResourceProperty(groupVersionKind: "v1/Event", namespace: string, name: string, property: "source"): pulumi.Output<outputApi.core.v1.EventSource>;
        public getResourceProperty(groupVersionKind: "v1/Event", name: string, property: "type"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/Event", namespace: string, name: string, property: "type"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/EventList", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/EventList", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/EventList", name: string, property: "items"): pulumi.Output<outputApi.core.v1.Event[]>;
        public getResourceProperty(groupVersionKind: "v1/EventList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.core.v1.Event[]>;
        public getResourceProperty(groupVersionKind: "v1/EventList", name: string, property: "kind"): pulumi.Output<"EventList">;
        public getResourceProperty(groupVersionKind: "v1/EventList", namespace: string, name: string, property: "kind"): pulumi.Output<"EventList">;
        public getResourceProperty(groupVersionKind: "v1/EventList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/EventList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/LimitRange", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/LimitRange", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/LimitRange", name: string, property: "kind"): pulumi.Output<"LimitRange">;
        public getResourceProperty(groupVersionKind: "v1/LimitRange", namespace: string, name: string, property: "kind"): pulumi.Output<"LimitRange">;
        public getResourceProperty(groupVersionKind: "v1/LimitRange", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/LimitRange", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/LimitRange", name: string, property: "spec"): pulumi.Output<outputApi.core.v1.LimitRangeSpec>;
        public getResourceProperty(groupVersionKind: "v1/LimitRange", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.core.v1.LimitRangeSpec>;
        public getResourceProperty(groupVersionKind: "v1/LimitRangeList", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/LimitRangeList", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/LimitRangeList", name: string, property: "items"): pulumi.Output<outputApi.core.v1.LimitRange[]>;
        public getResourceProperty(groupVersionKind: "v1/LimitRangeList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.core.v1.LimitRange[]>;
        public getResourceProperty(groupVersionKind: "v1/LimitRangeList", name: string, property: "kind"): pulumi.Output<"LimitRangeList">;
        public getResourceProperty(groupVersionKind: "v1/LimitRangeList", namespace: string, name: string, property: "kind"): pulumi.Output<"LimitRangeList">;
        public getResourceProperty(groupVersionKind: "v1/LimitRangeList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/LimitRangeList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/Namespace", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/Namespace", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/Namespace", name: string, property: "kind"): pulumi.Output<"Namespace">;
        public getResourceProperty(groupVersionKind: "v1/Namespace", namespace: string, name: string, property: "kind"): pulumi.Output<"Namespace">;
        public getResourceProperty(groupVersionKind: "v1/Namespace", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/Namespace", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/Namespace", name: string, property: "spec"): pulumi.Output<outputApi.core.v1.NamespaceSpec>;
        public getResourceProperty(groupVersionKind: "v1/Namespace", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.core.v1.NamespaceSpec>;
        public getResourceProperty(groupVersionKind: "v1/Namespace", name: string, property: "status"): pulumi.Output<outputApi.core.v1.NamespaceStatus>;
        public getResourceProperty(groupVersionKind: "v1/Namespace", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.core.v1.NamespaceStatus>;
        public getResourceProperty(groupVersionKind: "v1/NamespaceList", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/NamespaceList", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/NamespaceList", name: string, property: "items"): pulumi.Output<outputApi.core.v1.Namespace[]>;
        public getResourceProperty(groupVersionKind: "v1/NamespaceList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.core.v1.Namespace[]>;
        public getResourceProperty(groupVersionKind: "v1/NamespaceList", name: string, property: "kind"): pulumi.Output<"NamespaceList">;
        public getResourceProperty(groupVersionKind: "v1/NamespaceList", namespace: string, name: string, property: "kind"): pulumi.Output<"NamespaceList">;
        public getResourceProperty(groupVersionKind: "v1/NamespaceList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/NamespaceList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/Node", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/Node", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/Node", name: string, property: "kind"): pulumi.Output<"Node">;
        public getResourceProperty(groupVersionKind: "v1/Node", namespace: string, name: string, property: "kind"): pulumi.Output<"Node">;
        public getResourceProperty(groupVersionKind: "v1/Node", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/Node", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/Node", name: string, property: "spec"): pulumi.Output<outputApi.core.v1.NodeSpec>;
        public getResourceProperty(groupVersionKind: "v1/Node", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.core.v1.NodeSpec>;
        public getResourceProperty(groupVersionKind: "v1/Node", name: string, property: "status"): pulumi.Output<outputApi.core.v1.NodeStatus>;
        public getResourceProperty(groupVersionKind: "v1/Node", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.core.v1.NodeStatus>;
        public getResourceProperty(groupVersionKind: "v1/NodeList", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/NodeList", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/NodeList", name: string, property: "items"): pulumi.Output<outputApi.core.v1.Node[]>;
        public getResourceProperty(groupVersionKind: "v1/NodeList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.core.v1.Node[]>;
        public getResourceProperty(groupVersionKind: "v1/NodeList", name: string, property: "kind"): pulumi.Output<"NodeList">;
        public getResourceProperty(groupVersionKind: "v1/NodeList", namespace: string, name: string, property: "kind"): pulumi.Output<"NodeList">;
        public getResourceProperty(groupVersionKind: "v1/NodeList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/NodeList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "core/v1/ObjectReference", name: string, property: "api_version"): pulumi.Output<"core/v1">;
        public getResourceProperty(groupVersionKind: "core/v1/ObjectReference", namespace: string, name: string, property: "api_version"): pulumi.Output<"core/v1">;
        public getResourceProperty(groupVersionKind: "core/v1/ObjectReference", name: string, property: "field_path"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "core/v1/ObjectReference", namespace: string, name: string, property: "field_path"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "core/v1/ObjectReference", name: string, property: "kind"): pulumi.Output<"ObjectReference">;
        public getResourceProperty(groupVersionKind: "core/v1/ObjectReference", namespace: string, name: string, property: "kind"): pulumi.Output<"ObjectReference">;
        public getResourceProperty(groupVersionKind: "core/v1/ObjectReference", name: string, property: "name"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "core/v1/ObjectReference", namespace: string, name: string, property: "name"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "core/v1/ObjectReference", name: string, property: "namespace"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "core/v1/ObjectReference", namespace: string, name: string, property: "namespace"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "core/v1/ObjectReference", name: string, property: "resource_version"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "core/v1/ObjectReference", namespace: string, name: string, property: "resource_version"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "core/v1/ObjectReference", name: string, property: "uid"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "core/v1/ObjectReference", namespace: string, name: string, property: "uid"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolume", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolume", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolume", name: string, property: "kind"): pulumi.Output<"PersistentVolume">;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolume", namespace: string, name: string, property: "kind"): pulumi.Output<"PersistentVolume">;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolume", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolume", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolume", name: string, property: "spec"): pulumi.Output<outputApi.core.v1.PersistentVolumeSpec>;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolume", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.core.v1.PersistentVolumeSpec>;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolume", name: string, property: "status"): pulumi.Output<outputApi.core.v1.PersistentVolumeStatus>;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolume", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.core.v1.PersistentVolumeStatus>;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolumeClaim", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolumeClaim", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolumeClaim", name: string, property: "kind"): pulumi.Output<"PersistentVolumeClaim">;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolumeClaim", namespace: string, name: string, property: "kind"): pulumi.Output<"PersistentVolumeClaim">;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolumeClaim", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolumeClaim", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolumeClaim", name: string, property: "spec"): pulumi.Output<outputApi.core.v1.PersistentVolumeClaimSpec>;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolumeClaim", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.core.v1.PersistentVolumeClaimSpec>;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolumeClaim", name: string, property: "status"): pulumi.Output<outputApi.core.v1.PersistentVolumeClaimStatus>;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolumeClaim", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.core.v1.PersistentVolumeClaimStatus>;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolumeClaimList", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolumeClaimList", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolumeClaimList", name: string, property: "items"): pulumi.Output<outputApi.core.v1.PersistentVolumeClaim[]>;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolumeClaimList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.core.v1.PersistentVolumeClaim[]>;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolumeClaimList", name: string, property: "kind"): pulumi.Output<"PersistentVolumeClaimList">;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolumeClaimList", namespace: string, name: string, property: "kind"): pulumi.Output<"PersistentVolumeClaimList">;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolumeClaimList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolumeClaimList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolumeList", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolumeList", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolumeList", name: string, property: "items"): pulumi.Output<outputApi.core.v1.PersistentVolume[]>;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolumeList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.core.v1.PersistentVolume[]>;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolumeList", name: string, property: "kind"): pulumi.Output<"PersistentVolumeList">;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolumeList", namespace: string, name: string, property: "kind"): pulumi.Output<"PersistentVolumeList">;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolumeList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/PersistentVolumeList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/Pod", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/Pod", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/Pod", name: string, property: "kind"): pulumi.Output<"Pod">;
        public getResourceProperty(groupVersionKind: "v1/Pod", namespace: string, name: string, property: "kind"): pulumi.Output<"Pod">;
        public getResourceProperty(groupVersionKind: "v1/Pod", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/Pod", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/Pod", name: string, property: "spec"): pulumi.Output<outputApi.core.v1.PodSpec>;
        public getResourceProperty(groupVersionKind: "v1/Pod", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.core.v1.PodSpec>;
        public getResourceProperty(groupVersionKind: "v1/Pod", name: string, property: "status"): pulumi.Output<outputApi.core.v1.PodStatus>;
        public getResourceProperty(groupVersionKind: "v1/Pod", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.core.v1.PodStatus>;
        public getResourceProperty(groupVersionKind: "v1/PodList", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/PodList", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/PodList", name: string, property: "items"): pulumi.Output<outputApi.core.v1.Pod[]>;
        public getResourceProperty(groupVersionKind: "v1/PodList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.core.v1.Pod[]>;
        public getResourceProperty(groupVersionKind: "v1/PodList", name: string, property: "kind"): pulumi.Output<"PodList">;
        public getResourceProperty(groupVersionKind: "v1/PodList", namespace: string, name: string, property: "kind"): pulumi.Output<"PodList">;
        public getResourceProperty(groupVersionKind: "v1/PodList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/PodList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/PodTemplate", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/PodTemplate", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/PodTemplate", name: string, property: "kind"): pulumi.Output<"PodTemplate">;
        public getResourceProperty(groupVersionKind: "v1/PodTemplate", namespace: string, name: string, property: "kind"): pulumi.Output<"PodTemplate">;
        public getResourceProperty(groupVersionKind: "v1/PodTemplate", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/PodTemplate", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/PodTemplate", name: string, property: "template"): pulumi.Output<outputApi.core.v1.PodTemplateSpec>;
        public getResourceProperty(groupVersionKind: "v1/PodTemplate", namespace: string, name: string, property: "template"): pulumi.Output<outputApi.core.v1.PodTemplateSpec>;
        public getResourceProperty(groupVersionKind: "v1/PodTemplateList", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/PodTemplateList", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/PodTemplateList", name: string, property: "items"): pulumi.Output<outputApi.core.v1.PodTemplate[]>;
        public getResourceProperty(groupVersionKind: "v1/PodTemplateList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.core.v1.PodTemplate[]>;
        public getResourceProperty(groupVersionKind: "v1/PodTemplateList", name: string, property: "kind"): pulumi.Output<"PodTemplateList">;
        public getResourceProperty(groupVersionKind: "v1/PodTemplateList", namespace: string, name: string, property: "kind"): pulumi.Output<"PodTemplateList">;
        public getResourceProperty(groupVersionKind: "v1/PodTemplateList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/PodTemplateList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/ReplicationController", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/ReplicationController", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/ReplicationController", name: string, property: "kind"): pulumi.Output<"ReplicationController">;
        public getResourceProperty(groupVersionKind: "v1/ReplicationController", namespace: string, name: string, property: "kind"): pulumi.Output<"ReplicationController">;
        public getResourceProperty(groupVersionKind: "v1/ReplicationController", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/ReplicationController", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/ReplicationController", name: string, property: "spec"): pulumi.Output<outputApi.core.v1.ReplicationControllerSpec>;
        public getResourceProperty(groupVersionKind: "v1/ReplicationController", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.core.v1.ReplicationControllerSpec>;
        public getResourceProperty(groupVersionKind: "v1/ReplicationController", name: string, property: "status"): pulumi.Output<outputApi.core.v1.ReplicationControllerStatus>;
        public getResourceProperty(groupVersionKind: "v1/ReplicationController", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.core.v1.ReplicationControllerStatus>;
        public getResourceProperty(groupVersionKind: "v1/ReplicationControllerList", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/ReplicationControllerList", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/ReplicationControllerList", name: string, property: "items"): pulumi.Output<outputApi.core.v1.ReplicationController[]>;
        public getResourceProperty(groupVersionKind: "v1/ReplicationControllerList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.core.v1.ReplicationController[]>;
        public getResourceProperty(groupVersionKind: "v1/ReplicationControllerList", name: string, property: "kind"): pulumi.Output<"ReplicationControllerList">;
        public getResourceProperty(groupVersionKind: "v1/ReplicationControllerList", namespace: string, name: string, property: "kind"): pulumi.Output<"ReplicationControllerList">;
        public getResourceProperty(groupVersionKind: "v1/ReplicationControllerList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/ReplicationControllerList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/ResourceQuota", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/ResourceQuota", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/ResourceQuota", name: string, property: "kind"): pulumi.Output<"ResourceQuota">;
        public getResourceProperty(groupVersionKind: "v1/ResourceQuota", namespace: string, name: string, property: "kind"): pulumi.Output<"ResourceQuota">;
        public getResourceProperty(groupVersionKind: "v1/ResourceQuota", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/ResourceQuota", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/ResourceQuota", name: string, property: "spec"): pulumi.Output<outputApi.core.v1.ResourceQuotaSpec>;
        public getResourceProperty(groupVersionKind: "v1/ResourceQuota", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.core.v1.ResourceQuotaSpec>;
        public getResourceProperty(groupVersionKind: "v1/ResourceQuota", name: string, property: "status"): pulumi.Output<outputApi.core.v1.ResourceQuotaStatus>;
        public getResourceProperty(groupVersionKind: "v1/ResourceQuota", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.core.v1.ResourceQuotaStatus>;
        public getResourceProperty(groupVersionKind: "v1/ResourceQuotaList", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/ResourceQuotaList", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/ResourceQuotaList", name: string, property: "items"): pulumi.Output<outputApi.core.v1.ResourceQuota[]>;
        public getResourceProperty(groupVersionKind: "v1/ResourceQuotaList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.core.v1.ResourceQuota[]>;
        public getResourceProperty(groupVersionKind: "v1/ResourceQuotaList", name: string, property: "kind"): pulumi.Output<"ResourceQuotaList">;
        public getResourceProperty(groupVersionKind: "v1/ResourceQuotaList", namespace: string, name: string, property: "kind"): pulumi.Output<"ResourceQuotaList">;
        public getResourceProperty(groupVersionKind: "v1/ResourceQuotaList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/ResourceQuotaList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/Secret", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/Secret", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/Secret", name: string, property: "data"): pulumi.Output<object>;
        public getResourceProperty(groupVersionKind: "v1/Secret", namespace: string, name: string, property: "data"): pulumi.Output<object>;
        public getResourceProperty(groupVersionKind: "v1/Secret", name: string, property: "kind"): pulumi.Output<"Secret">;
        public getResourceProperty(groupVersionKind: "v1/Secret", namespace: string, name: string, property: "kind"): pulumi.Output<"Secret">;
        public getResourceProperty(groupVersionKind: "v1/Secret", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/Secret", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/Secret", name: string, property: "string_data"): pulumi.Output<{[key: string]: pulumi.Output<string>}>;
        public getResourceProperty(groupVersionKind: "v1/Secret", namespace: string, name: string, property: "string_data"): pulumi.Output<{[key: string]: pulumi.Output<string>}>;
        public getResourceProperty(groupVersionKind: "v1/Secret", name: string, property: "type"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/Secret", namespace: string, name: string, property: "type"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/SecretList", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/SecretList", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/SecretList", name: string, property: "items"): pulumi.Output<outputApi.core.v1.Secret[]>;
        public getResourceProperty(groupVersionKind: "v1/SecretList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.core.v1.Secret[]>;
        public getResourceProperty(groupVersionKind: "v1/SecretList", name: string, property: "kind"): pulumi.Output<"SecretList">;
        public getResourceProperty(groupVersionKind: "v1/SecretList", namespace: string, name: string, property: "kind"): pulumi.Output<"SecretList">;
        public getResourceProperty(groupVersionKind: "v1/SecretList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/SecretList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/Service", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/Service", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/Service", name: string, property: "kind"): pulumi.Output<"Service">;
        public getResourceProperty(groupVersionKind: "v1/Service", namespace: string, name: string, property: "kind"): pulumi.Output<"Service">;
        public getResourceProperty(groupVersionKind: "v1/Service", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/Service", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/Service", name: string, property: "spec"): pulumi.Output<outputApi.core.v1.ServiceSpec>;
        public getResourceProperty(groupVersionKind: "v1/Service", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.core.v1.ServiceSpec>;
        public getResourceProperty(groupVersionKind: "v1/Service", name: string, property: "status"): pulumi.Output<outputApi.core.v1.ServiceStatus>;
        public getResourceProperty(groupVersionKind: "v1/Service", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.core.v1.ServiceStatus>;
        public getResourceProperty(groupVersionKind: "v1/ServiceAccount", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/ServiceAccount", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/ServiceAccount", name: string, property: "automount_service_account_token"): pulumi.Output<boolean>;
        public getResourceProperty(groupVersionKind: "v1/ServiceAccount", namespace: string, name: string, property: "automount_service_account_token"): pulumi.Output<boolean>;
        public getResourceProperty(groupVersionKind: "v1/ServiceAccount", name: string, property: "image_pull_secrets"): pulumi.Output<outputApi.core.v1.LocalObjectReference[]>;
        public getResourceProperty(groupVersionKind: "v1/ServiceAccount", namespace: string, name: string, property: "image_pull_secrets"): pulumi.Output<outputApi.core.v1.LocalObjectReference[]>;
        public getResourceProperty(groupVersionKind: "v1/ServiceAccount", name: string, property: "kind"): pulumi.Output<"ServiceAccount">;
        public getResourceProperty(groupVersionKind: "v1/ServiceAccount", namespace: string, name: string, property: "kind"): pulumi.Output<"ServiceAccount">;
        public getResourceProperty(groupVersionKind: "v1/ServiceAccount", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/ServiceAccount", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "v1/ServiceAccount", name: string, property: "secrets"): pulumi.Output<outputApi.core.v1.ObjectReference[]>;
        public getResourceProperty(groupVersionKind: "v1/ServiceAccount", namespace: string, name: string, property: "secrets"): pulumi.Output<outputApi.core.v1.ObjectReference[]>;
        public getResourceProperty(groupVersionKind: "v1/ServiceAccountList", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/ServiceAccountList", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/ServiceAccountList", name: string, property: "items"): pulumi.Output<outputApi.core.v1.ServiceAccount[]>;
        public getResourceProperty(groupVersionKind: "v1/ServiceAccountList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.core.v1.ServiceAccount[]>;
        public getResourceProperty(groupVersionKind: "v1/ServiceAccountList", name: string, property: "kind"): pulumi.Output<"ServiceAccountList">;
        public getResourceProperty(groupVersionKind: "v1/ServiceAccountList", namespace: string, name: string, property: "kind"): pulumi.Output<"ServiceAccountList">;
        public getResourceProperty(groupVersionKind: "v1/ServiceAccountList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/ServiceAccountList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/ServiceList", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/ServiceList", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/ServiceList", name: string, property: "items"): pulumi.Output<outputApi.core.v1.Service[]>;
        public getResourceProperty(groupVersionKind: "v1/ServiceList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.core.v1.Service[]>;
        public getResourceProperty(groupVersionKind: "v1/ServiceList", name: string, property: "kind"): pulumi.Output<"ServiceList">;
        public getResourceProperty(groupVersionKind: "v1/ServiceList", namespace: string, name: string, property: "kind"): pulumi.Output<"ServiceList">;
        public getResourceProperty(groupVersionKind: "v1/ServiceList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/ServiceList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", name: string, property: "action"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", namespace: string, name: string, property: "action"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", name: string, property: "api_version"): pulumi.Output<"events.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", namespace: string, name: string, property: "api_version"): pulumi.Output<"events.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", name: string, property: "deprecated_count"): pulumi.Output<number>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", namespace: string, name: string, property: "deprecated_count"): pulumi.Output<number>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", name: string, property: "deprecated_first_timestamp"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", namespace: string, name: string, property: "deprecated_first_timestamp"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", name: string, property: "deprecated_last_timestamp"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", namespace: string, name: string, property: "deprecated_last_timestamp"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", name: string, property: "deprecated_source"): pulumi.Output<outputApi.core.v1.EventSource>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", namespace: string, name: string, property: "deprecated_source"): pulumi.Output<outputApi.core.v1.EventSource>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", name: string, property: "event_time"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", namespace: string, name: string, property: "event_time"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", name: string, property: "kind"): pulumi.Output<"Event">;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", namespace: string, name: string, property: "kind"): pulumi.Output<"Event">;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", name: string, property: "note"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", namespace: string, name: string, property: "note"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", name: string, property: "reason"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", namespace: string, name: string, property: "reason"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", name: string, property: "regarding"): pulumi.Output<outputApi.core.v1.ObjectReference>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", namespace: string, name: string, property: "regarding"): pulumi.Output<outputApi.core.v1.ObjectReference>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", name: string, property: "related"): pulumi.Output<outputApi.core.v1.ObjectReference>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", namespace: string, name: string, property: "related"): pulumi.Output<outputApi.core.v1.ObjectReference>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", name: string, property: "reporting_controller"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", namespace: string, name: string, property: "reporting_controller"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", name: string, property: "reporting_instance"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", namespace: string, name: string, property: "reporting_instance"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", name: string, property: "series"): pulumi.Output<outputApi.events.v1beta1.EventSeries>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", namespace: string, name: string, property: "series"): pulumi.Output<outputApi.events.v1beta1.EventSeries>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", name: string, property: "type"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/Event", namespace: string, name: string, property: "type"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/EventList", name: string, property: "api_version"): pulumi.Output<"events.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/EventList", namespace: string, name: string, property: "api_version"): pulumi.Output<"events.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/EventList", name: string, property: "items"): pulumi.Output<outputApi.events.v1beta1.Event[]>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/EventList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.events.v1beta1.Event[]>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/EventList", name: string, property: "kind"): pulumi.Output<"EventList">;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/EventList", namespace: string, name: string, property: "kind"): pulumi.Output<"EventList">;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/EventList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "events.k8s.io/v1beta1/EventList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DaemonSet", name: string, property: "api_version"): pulumi.Output<"extensions/v1beta1">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DaemonSet", namespace: string, name: string, property: "api_version"): pulumi.Output<"extensions/v1beta1">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DaemonSet", name: string, property: "kind"): pulumi.Output<"DaemonSet">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DaemonSet", namespace: string, name: string, property: "kind"): pulumi.Output<"DaemonSet">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DaemonSet", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DaemonSet", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DaemonSet", name: string, property: "spec"): pulumi.Output<outputApi.extensions.v1beta1.DaemonSetSpec>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DaemonSet", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.extensions.v1beta1.DaemonSetSpec>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DaemonSet", name: string, property: "status"): pulumi.Output<outputApi.extensions.v1beta1.DaemonSetStatus>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DaemonSet", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.extensions.v1beta1.DaemonSetStatus>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DaemonSetList", name: string, property: "api_version"): pulumi.Output<"extensions/v1beta1">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DaemonSetList", namespace: string, name: string, property: "api_version"): pulumi.Output<"extensions/v1beta1">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DaemonSetList", name: string, property: "items"): pulumi.Output<outputApi.extensions.v1beta1.DaemonSet[]>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DaemonSetList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.extensions.v1beta1.DaemonSet[]>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DaemonSetList", name: string, property: "kind"): pulumi.Output<"DaemonSetList">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DaemonSetList", namespace: string, name: string, property: "kind"): pulumi.Output<"DaemonSetList">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DaemonSetList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DaemonSetList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/Deployment", name: string, property: "api_version"): pulumi.Output<"extensions/v1beta1">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/Deployment", namespace: string, name: string, property: "api_version"): pulumi.Output<"extensions/v1beta1">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/Deployment", name: string, property: "kind"): pulumi.Output<"Deployment">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/Deployment", namespace: string, name: string, property: "kind"): pulumi.Output<"Deployment">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/Deployment", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/Deployment", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/Deployment", name: string, property: "spec"): pulumi.Output<outputApi.extensions.v1beta1.DeploymentSpec>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/Deployment", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.extensions.v1beta1.DeploymentSpec>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/Deployment", name: string, property: "status"): pulumi.Output<outputApi.extensions.v1beta1.DeploymentStatus>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/Deployment", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.extensions.v1beta1.DeploymentStatus>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DeploymentList", name: string, property: "api_version"): pulumi.Output<"extensions/v1beta1">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DeploymentList", namespace: string, name: string, property: "api_version"): pulumi.Output<"extensions/v1beta1">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DeploymentList", name: string, property: "items"): pulumi.Output<outputApi.extensions.v1beta1.Deployment[]>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DeploymentList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.extensions.v1beta1.Deployment[]>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DeploymentList", name: string, property: "kind"): pulumi.Output<"DeploymentList">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DeploymentList", namespace: string, name: string, property: "kind"): pulumi.Output<"DeploymentList">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DeploymentList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DeploymentList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DeploymentRollback", name: string, property: "api_version"): pulumi.Output<"extensions/v1beta1">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DeploymentRollback", namespace: string, name: string, property: "api_version"): pulumi.Output<"extensions/v1beta1">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DeploymentRollback", name: string, property: "kind"): pulumi.Output<"DeploymentRollback">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DeploymentRollback", namespace: string, name: string, property: "kind"): pulumi.Output<"DeploymentRollback">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DeploymentRollback", name: string, property: "name"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DeploymentRollback", namespace: string, name: string, property: "name"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DeploymentRollback", name: string, property: "rollback_to"): pulumi.Output<outputApi.extensions.v1beta1.RollbackConfig>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DeploymentRollback", namespace: string, name: string, property: "rollback_to"): pulumi.Output<outputApi.extensions.v1beta1.RollbackConfig>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DeploymentRollback", name: string, property: "updated_annotations"): pulumi.Output<{[key: string]: pulumi.Output<string>}>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/DeploymentRollback", namespace: string, name: string, property: "updated_annotations"): pulumi.Output<{[key: string]: pulumi.Output<string>}>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/Ingress", name: string, property: "api_version"): pulumi.Output<"extensions/v1beta1">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/Ingress", namespace: string, name: string, property: "api_version"): pulumi.Output<"extensions/v1beta1">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/Ingress", name: string, property: "kind"): pulumi.Output<"Ingress">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/Ingress", namespace: string, name: string, property: "kind"): pulumi.Output<"Ingress">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/Ingress", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/Ingress", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/Ingress", name: string, property: "spec"): pulumi.Output<outputApi.extensions.v1beta1.IngressSpec>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/Ingress", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.extensions.v1beta1.IngressSpec>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/Ingress", name: string, property: "status"): pulumi.Output<outputApi.extensions.v1beta1.IngressStatus>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/Ingress", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.extensions.v1beta1.IngressStatus>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/IngressList", name: string, property: "api_version"): pulumi.Output<"extensions/v1beta1">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/IngressList", namespace: string, name: string, property: "api_version"): pulumi.Output<"extensions/v1beta1">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/IngressList", name: string, property: "items"): pulumi.Output<outputApi.extensions.v1beta1.Ingress[]>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/IngressList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.extensions.v1beta1.Ingress[]>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/IngressList", name: string, property: "kind"): pulumi.Output<"IngressList">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/IngressList", namespace: string, name: string, property: "kind"): pulumi.Output<"IngressList">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/IngressList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/IngressList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/NetworkPolicy", name: string, property: "api_version"): pulumi.Output<"extensions/v1beta1">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/NetworkPolicy", namespace: string, name: string, property: "api_version"): pulumi.Output<"extensions/v1beta1">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/NetworkPolicy", name: string, property: "kind"): pulumi.Output<"NetworkPolicy">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/NetworkPolicy", namespace: string, name: string, property: "kind"): pulumi.Output<"NetworkPolicy">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/NetworkPolicy", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/NetworkPolicy", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/NetworkPolicy", name: string, property: "spec"): pulumi.Output<outputApi.extensions.v1beta1.NetworkPolicySpec>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/NetworkPolicy", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.extensions.v1beta1.NetworkPolicySpec>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/NetworkPolicyList", name: string, property: "api_version"): pulumi.Output<"extensions/v1beta1">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/NetworkPolicyList", namespace: string, name: string, property: "api_version"): pulumi.Output<"extensions/v1beta1">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/NetworkPolicyList", name: string, property: "items"): pulumi.Output<outputApi.extensions.v1beta1.NetworkPolicy[]>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/NetworkPolicyList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.extensions.v1beta1.NetworkPolicy[]>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/NetworkPolicyList", name: string, property: "kind"): pulumi.Output<"NetworkPolicyList">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/NetworkPolicyList", namespace: string, name: string, property: "kind"): pulumi.Output<"NetworkPolicyList">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/NetworkPolicyList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/NetworkPolicyList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/PodSecurityPolicy", name: string, property: "api_version"): pulumi.Output<"extensions/v1beta1">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/PodSecurityPolicy", namespace: string, name: string, property: "api_version"): pulumi.Output<"extensions/v1beta1">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/PodSecurityPolicy", name: string, property: "kind"): pulumi.Output<"PodSecurityPolicy">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/PodSecurityPolicy", namespace: string, name: string, property: "kind"): pulumi.Output<"PodSecurityPolicy">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/PodSecurityPolicy", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/PodSecurityPolicy", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/PodSecurityPolicy", name: string, property: "spec"): pulumi.Output<outputApi.extensions.v1beta1.PodSecurityPolicySpec>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/PodSecurityPolicy", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.extensions.v1beta1.PodSecurityPolicySpec>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/PodSecurityPolicyList", name: string, property: "api_version"): pulumi.Output<"extensions/v1beta1">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/PodSecurityPolicyList", namespace: string, name: string, property: "api_version"): pulumi.Output<"extensions/v1beta1">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/PodSecurityPolicyList", name: string, property: "items"): pulumi.Output<outputApi.extensions.v1beta1.PodSecurityPolicy[]>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/PodSecurityPolicyList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.extensions.v1beta1.PodSecurityPolicy[]>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/PodSecurityPolicyList", name: string, property: "kind"): pulumi.Output<"PodSecurityPolicyList">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/PodSecurityPolicyList", namespace: string, name: string, property: "kind"): pulumi.Output<"PodSecurityPolicyList">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/PodSecurityPolicyList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/PodSecurityPolicyList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/ReplicaSet", name: string, property: "api_version"): pulumi.Output<"extensions/v1beta1">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/ReplicaSet", namespace: string, name: string, property: "api_version"): pulumi.Output<"extensions/v1beta1">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/ReplicaSet", name: string, property: "kind"): pulumi.Output<"ReplicaSet">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/ReplicaSet", namespace: string, name: string, property: "kind"): pulumi.Output<"ReplicaSet">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/ReplicaSet", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/ReplicaSet", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/ReplicaSet", name: string, property: "spec"): pulumi.Output<outputApi.extensions.v1beta1.ReplicaSetSpec>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/ReplicaSet", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.extensions.v1beta1.ReplicaSetSpec>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/ReplicaSet", name: string, property: "status"): pulumi.Output<outputApi.extensions.v1beta1.ReplicaSetStatus>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/ReplicaSet", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.extensions.v1beta1.ReplicaSetStatus>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/ReplicaSetList", name: string, property: "api_version"): pulumi.Output<"extensions/v1beta1">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/ReplicaSetList", namespace: string, name: string, property: "api_version"): pulumi.Output<"extensions/v1beta1">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/ReplicaSetList", name: string, property: "items"): pulumi.Output<outputApi.extensions.v1beta1.ReplicaSet[]>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/ReplicaSetList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.extensions.v1beta1.ReplicaSet[]>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/ReplicaSetList", name: string, property: "kind"): pulumi.Output<"ReplicaSetList">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/ReplicaSetList", namespace: string, name: string, property: "kind"): pulumi.Output<"ReplicaSetList">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/ReplicaSetList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/ReplicaSetList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/Scale", name: string, property: "api_version"): pulumi.Output<"extensions/v1beta1">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/Scale", namespace: string, name: string, property: "api_version"): pulumi.Output<"extensions/v1beta1">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/Scale", name: string, property: "kind"): pulumi.Output<"Scale">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/Scale", namespace: string, name: string, property: "kind"): pulumi.Output<"Scale">;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/Scale", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/Scale", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/Scale", name: string, property: "spec"): pulumi.Output<outputApi.extensions.v1beta1.ScaleSpec>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/Scale", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.extensions.v1beta1.ScaleSpec>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/Scale", name: string, property: "status"): pulumi.Output<outputApi.extensions.v1beta1.ScaleStatus>;
        public getResourceProperty(groupVersionKind: "extensions/v1beta1/Scale", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.extensions.v1beta1.ScaleStatus>;
        public getResourceProperty(groupVersionKind: "v1/APIGroup", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/APIGroup", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/APIGroup", name: string, property: "kind"): pulumi.Output<"APIGroup">;
        public getResourceProperty(groupVersionKind: "v1/APIGroup", namespace: string, name: string, property: "kind"): pulumi.Output<"APIGroup">;
        public getResourceProperty(groupVersionKind: "v1/APIGroup", name: string, property: "name"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/APIGroup", namespace: string, name: string, property: "name"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/APIGroup", name: string, property: "preferred_version"): pulumi.Output<outputApi.meta.v1.GroupVersionForDiscovery>;
        public getResourceProperty(groupVersionKind: "v1/APIGroup", namespace: string, name: string, property: "preferred_version"): pulumi.Output<outputApi.meta.v1.GroupVersionForDiscovery>;
        public getResourceProperty(groupVersionKind: "v1/APIGroup", name: string, property: "server_address_by_client_cid_rs"): pulumi.Output<outputApi.meta.v1.ServerAddressByClientCIDR[]>;
        public getResourceProperty(groupVersionKind: "v1/APIGroup", namespace: string, name: string, property: "server_address_by_client_cid_rs"): pulumi.Output<outputApi.meta.v1.ServerAddressByClientCIDR[]>;
        public getResourceProperty(groupVersionKind: "v1/APIGroup", name: string, property: "versions"): pulumi.Output<outputApi.meta.v1.GroupVersionForDiscovery[]>;
        public getResourceProperty(groupVersionKind: "v1/APIGroup", namespace: string, name: string, property: "versions"): pulumi.Output<outputApi.meta.v1.GroupVersionForDiscovery[]>;
        public getResourceProperty(groupVersionKind: "v1/APIGroupList", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/APIGroupList", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/APIGroupList", name: string, property: "groups"): pulumi.Output<outputApi.meta.v1.APIGroup[]>;
        public getResourceProperty(groupVersionKind: "v1/APIGroupList", namespace: string, name: string, property: "groups"): pulumi.Output<outputApi.meta.v1.APIGroup[]>;
        public getResourceProperty(groupVersionKind: "v1/APIGroupList", name: string, property: "kind"): pulumi.Output<"APIGroupList">;
        public getResourceProperty(groupVersionKind: "v1/APIGroupList", namespace: string, name: string, property: "kind"): pulumi.Output<"APIGroupList">;
        public getResourceProperty(groupVersionKind: "v1/APIResourceList", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/APIResourceList", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/APIResourceList", name: string, property: "group_version"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/APIResourceList", namespace: string, name: string, property: "group_version"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/APIResourceList", name: string, property: "kind"): pulumi.Output<"APIResourceList">;
        public getResourceProperty(groupVersionKind: "v1/APIResourceList", namespace: string, name: string, property: "kind"): pulumi.Output<"APIResourceList">;
        public getResourceProperty(groupVersionKind: "v1/APIResourceList", name: string, property: "resources"): pulumi.Output<outputApi.meta.v1.APIResource[]>;
        public getResourceProperty(groupVersionKind: "v1/APIResourceList", namespace: string, name: string, property: "resources"): pulumi.Output<outputApi.meta.v1.APIResource[]>;
        public getResourceProperty(groupVersionKind: "v1/APIVersions", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/APIVersions", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/APIVersions", name: string, property: "kind"): pulumi.Output<"APIVersions">;
        public getResourceProperty(groupVersionKind: "v1/APIVersions", namespace: string, name: string, property: "kind"): pulumi.Output<"APIVersions">;
        public getResourceProperty(groupVersionKind: "v1/APIVersions", name: string, property: "server_address_by_client_cid_rs"): pulumi.Output<outputApi.meta.v1.ServerAddressByClientCIDR[]>;
        public getResourceProperty(groupVersionKind: "v1/APIVersions", namespace: string, name: string, property: "server_address_by_client_cid_rs"): pulumi.Output<outputApi.meta.v1.ServerAddressByClientCIDR[]>;
        public getResourceProperty(groupVersionKind: "v1/APIVersions", name: string, property: "versions"): pulumi.Output<string[]>;
        public getResourceProperty(groupVersionKind: "v1/APIVersions", namespace: string, name: string, property: "versions"): pulumi.Output<string[]>;
        public getResourceProperty(groupVersionKind: "v1/DeleteOptions", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/DeleteOptions", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/DeleteOptions", name: string, property: "dry_run"): pulumi.Output<string[]>;
        public getResourceProperty(groupVersionKind: "v1/DeleteOptions", namespace: string, name: string, property: "dry_run"): pulumi.Output<string[]>;
        public getResourceProperty(groupVersionKind: "v1/DeleteOptions", name: string, property: "grace_period_seconds"): pulumi.Output<number>;
        public getResourceProperty(groupVersionKind: "v1/DeleteOptions", namespace: string, name: string, property: "grace_period_seconds"): pulumi.Output<number>;
        public getResourceProperty(groupVersionKind: "v1/DeleteOptions", name: string, property: "kind"): pulumi.Output<"DeleteOptions">;
        public getResourceProperty(groupVersionKind: "v1/DeleteOptions", namespace: string, name: string, property: "kind"): pulumi.Output<"DeleteOptions">;
        public getResourceProperty(groupVersionKind: "v1/DeleteOptions", name: string, property: "orphan_dependents"): pulumi.Output<boolean>;
        public getResourceProperty(groupVersionKind: "v1/DeleteOptions", namespace: string, name: string, property: "orphan_dependents"): pulumi.Output<boolean>;
        public getResourceProperty(groupVersionKind: "v1/DeleteOptions", name: string, property: "preconditions"): pulumi.Output<outputApi.meta.v1.Preconditions>;
        public getResourceProperty(groupVersionKind: "v1/DeleteOptions", namespace: string, name: string, property: "preconditions"): pulumi.Output<outputApi.meta.v1.Preconditions>;
        public getResourceProperty(groupVersionKind: "v1/DeleteOptions", name: string, property: "propagation_policy"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/DeleteOptions", namespace: string, name: string, property: "propagation_policy"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "meta/v1/OwnerReference", name: string, property: "api_version"): pulumi.Output<"meta/v1">;
        public getResourceProperty(groupVersionKind: "meta/v1/OwnerReference", namespace: string, name: string, property: "api_version"): pulumi.Output<"meta/v1">;
        public getResourceProperty(groupVersionKind: "meta/v1/OwnerReference", name: string, property: "block_owner_deletion"): pulumi.Output<boolean>;
        public getResourceProperty(groupVersionKind: "meta/v1/OwnerReference", namespace: string, name: string, property: "block_owner_deletion"): pulumi.Output<boolean>;
        public getResourceProperty(groupVersionKind: "meta/v1/OwnerReference", name: string, property: "controller"): pulumi.Output<boolean>;
        public getResourceProperty(groupVersionKind: "meta/v1/OwnerReference", namespace: string, name: string, property: "controller"): pulumi.Output<boolean>;
        public getResourceProperty(groupVersionKind: "meta/v1/OwnerReference", name: string, property: "kind"): pulumi.Output<"OwnerReference">;
        public getResourceProperty(groupVersionKind: "meta/v1/OwnerReference", namespace: string, name: string, property: "kind"): pulumi.Output<"OwnerReference">;
        public getResourceProperty(groupVersionKind: "meta/v1/OwnerReference", name: string, property: "name"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "meta/v1/OwnerReference", namespace: string, name: string, property: "name"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "meta/v1/OwnerReference", name: string, property: "uid"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "meta/v1/OwnerReference", namespace: string, name: string, property: "uid"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/Status", name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/Status", namespace: string, name: string, property: "api_version"): pulumi.Output<"v1">;
        public getResourceProperty(groupVersionKind: "v1/Status", name: string, property: "code"): pulumi.Output<number>;
        public getResourceProperty(groupVersionKind: "v1/Status", namespace: string, name: string, property: "code"): pulumi.Output<number>;
        public getResourceProperty(groupVersionKind: "v1/Status", name: string, property: "details"): pulumi.Output<outputApi.meta.v1.StatusDetails>;
        public getResourceProperty(groupVersionKind: "v1/Status", namespace: string, name: string, property: "details"): pulumi.Output<outputApi.meta.v1.StatusDetails>;
        public getResourceProperty(groupVersionKind: "v1/Status", name: string, property: "kind"): pulumi.Output<"Status">;
        public getResourceProperty(groupVersionKind: "v1/Status", namespace: string, name: string, property: "kind"): pulumi.Output<"Status">;
        public getResourceProperty(groupVersionKind: "v1/Status", name: string, property: "message"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/Status", namespace: string, name: string, property: "message"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/Status", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/Status", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "v1/Status", name: string, property: "reason"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/Status", namespace: string, name: string, property: "reason"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/Status", name: string, property: "status"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "v1/Status", namespace: string, name: string, property: "status"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "networking.k8s.io/v1/NetworkPolicy", name: string, property: "api_version"): pulumi.Output<"networking.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "networking.k8s.io/v1/NetworkPolicy", namespace: string, name: string, property: "api_version"): pulumi.Output<"networking.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "networking.k8s.io/v1/NetworkPolicy", name: string, property: "kind"): pulumi.Output<"NetworkPolicy">;
        public getResourceProperty(groupVersionKind: "networking.k8s.io/v1/NetworkPolicy", namespace: string, name: string, property: "kind"): pulumi.Output<"NetworkPolicy">;
        public getResourceProperty(groupVersionKind: "networking.k8s.io/v1/NetworkPolicy", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "networking.k8s.io/v1/NetworkPolicy", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "networking.k8s.io/v1/NetworkPolicy", name: string, property: "spec"): pulumi.Output<outputApi.networking.v1.NetworkPolicySpec>;
        public getResourceProperty(groupVersionKind: "networking.k8s.io/v1/NetworkPolicy", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.networking.v1.NetworkPolicySpec>;
        public getResourceProperty(groupVersionKind: "networking.k8s.io/v1/NetworkPolicyList", name: string, property: "api_version"): pulumi.Output<"networking.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "networking.k8s.io/v1/NetworkPolicyList", namespace: string, name: string, property: "api_version"): pulumi.Output<"networking.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "networking.k8s.io/v1/NetworkPolicyList", name: string, property: "items"): pulumi.Output<outputApi.networking.v1.NetworkPolicy[]>;
        public getResourceProperty(groupVersionKind: "networking.k8s.io/v1/NetworkPolicyList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.networking.v1.NetworkPolicy[]>;
        public getResourceProperty(groupVersionKind: "networking.k8s.io/v1/NetworkPolicyList", name: string, property: "kind"): pulumi.Output<"NetworkPolicyList">;
        public getResourceProperty(groupVersionKind: "networking.k8s.io/v1/NetworkPolicyList", namespace: string, name: string, property: "kind"): pulumi.Output<"NetworkPolicyList">;
        public getResourceProperty(groupVersionKind: "networking.k8s.io/v1/NetworkPolicyList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "networking.k8s.io/v1/NetworkPolicyList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/Eviction", name: string, property: "api_version"): pulumi.Output<"policy/v1beta1">;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/Eviction", namespace: string, name: string, property: "api_version"): pulumi.Output<"policy/v1beta1">;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/Eviction", name: string, property: "delete_options"): pulumi.Output<outputApi.meta.v1.DeleteOptions>;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/Eviction", namespace: string, name: string, property: "delete_options"): pulumi.Output<outputApi.meta.v1.DeleteOptions>;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/Eviction", name: string, property: "kind"): pulumi.Output<"Eviction">;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/Eviction", namespace: string, name: string, property: "kind"): pulumi.Output<"Eviction">;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/Eviction", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/Eviction", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodDisruptionBudget", name: string, property: "api_version"): pulumi.Output<"policy/v1beta1">;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodDisruptionBudget", namespace: string, name: string, property: "api_version"): pulumi.Output<"policy/v1beta1">;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodDisruptionBudget", name: string, property: "kind"): pulumi.Output<"PodDisruptionBudget">;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodDisruptionBudget", namespace: string, name: string, property: "kind"): pulumi.Output<"PodDisruptionBudget">;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodDisruptionBudget", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodDisruptionBudget", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodDisruptionBudget", name: string, property: "spec"): pulumi.Output<outputApi.policy.v1beta1.PodDisruptionBudgetSpec>;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodDisruptionBudget", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.policy.v1beta1.PodDisruptionBudgetSpec>;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodDisruptionBudget", name: string, property: "status"): pulumi.Output<outputApi.policy.v1beta1.PodDisruptionBudgetStatus>;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodDisruptionBudget", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.policy.v1beta1.PodDisruptionBudgetStatus>;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodDisruptionBudgetList", name: string, property: "api_version"): pulumi.Output<"policy/v1beta1">;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodDisruptionBudgetList", namespace: string, name: string, property: "api_version"): pulumi.Output<"policy/v1beta1">;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodDisruptionBudgetList", name: string, property: "items"): pulumi.Output<outputApi.policy.v1beta1.PodDisruptionBudget[]>;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodDisruptionBudgetList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.policy.v1beta1.PodDisruptionBudget[]>;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodDisruptionBudgetList", name: string, property: "kind"): pulumi.Output<"PodDisruptionBudgetList">;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodDisruptionBudgetList", namespace: string, name: string, property: "kind"): pulumi.Output<"PodDisruptionBudgetList">;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodDisruptionBudgetList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodDisruptionBudgetList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodSecurityPolicy", name: string, property: "api_version"): pulumi.Output<"policy/v1beta1">;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodSecurityPolicy", namespace: string, name: string, property: "api_version"): pulumi.Output<"policy/v1beta1">;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodSecurityPolicy", name: string, property: "kind"): pulumi.Output<"PodSecurityPolicy">;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodSecurityPolicy", namespace: string, name: string, property: "kind"): pulumi.Output<"PodSecurityPolicy">;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodSecurityPolicy", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodSecurityPolicy", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodSecurityPolicy", name: string, property: "spec"): pulumi.Output<outputApi.policy.v1beta1.PodSecurityPolicySpec>;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodSecurityPolicy", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.policy.v1beta1.PodSecurityPolicySpec>;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodSecurityPolicyList", name: string, property: "api_version"): pulumi.Output<"policy/v1beta1">;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodSecurityPolicyList", namespace: string, name: string, property: "api_version"): pulumi.Output<"policy/v1beta1">;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodSecurityPolicyList", name: string, property: "items"): pulumi.Output<outputApi.policy.v1beta1.PodSecurityPolicy[]>;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodSecurityPolicyList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.policy.v1beta1.PodSecurityPolicy[]>;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodSecurityPolicyList", name: string, property: "kind"): pulumi.Output<"PodSecurityPolicyList">;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodSecurityPolicyList", namespace: string, name: string, property: "kind"): pulumi.Output<"PodSecurityPolicyList">;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodSecurityPolicyList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "policy/v1beta1/PodSecurityPolicyList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRole", name: string, property: "aggregation_rule"): pulumi.Output<outputApi.rbac.v1.AggregationRule>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRole", namespace: string, name: string, property: "aggregation_rule"): pulumi.Output<outputApi.rbac.v1.AggregationRule>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRole", name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRole", namespace: string, name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRole", name: string, property: "kind"): pulumi.Output<"ClusterRole">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRole", namespace: string, name: string, property: "kind"): pulumi.Output<"ClusterRole">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRole", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRole", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRole", name: string, property: "rules"): pulumi.Output<outputApi.rbac.v1.PolicyRule[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRole", namespace: string, name: string, property: "rules"): pulumi.Output<outputApi.rbac.v1.PolicyRule[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleBinding", name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleBinding", namespace: string, name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleBinding", name: string, property: "kind"): pulumi.Output<"ClusterRoleBinding">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleBinding", namespace: string, name: string, property: "kind"): pulumi.Output<"ClusterRoleBinding">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleBinding", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleBinding", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleBinding", name: string, property: "role_ref"): pulumi.Output<outputApi.rbac.v1.RoleRef>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleBinding", namespace: string, name: string, property: "role_ref"): pulumi.Output<outputApi.rbac.v1.RoleRef>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleBinding", name: string, property: "subjects"): pulumi.Output<outputApi.rbac.v1.Subject[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleBinding", namespace: string, name: string, property: "subjects"): pulumi.Output<outputApi.rbac.v1.Subject[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleBindingList", name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleBindingList", namespace: string, name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleBindingList", name: string, property: "items"): pulumi.Output<outputApi.rbac.v1.ClusterRoleBinding[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleBindingList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.rbac.v1.ClusterRoleBinding[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleBindingList", name: string, property: "kind"): pulumi.Output<"ClusterRoleBindingList">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleBindingList", namespace: string, name: string, property: "kind"): pulumi.Output<"ClusterRoleBindingList">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleBindingList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleBindingList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleList", name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleList", namespace: string, name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleList", name: string, property: "items"): pulumi.Output<outputApi.rbac.v1.ClusterRole[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.rbac.v1.ClusterRole[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleList", name: string, property: "kind"): pulumi.Output<"ClusterRoleList">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleList", namespace: string, name: string, property: "kind"): pulumi.Output<"ClusterRoleList">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/ClusterRoleList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/Role", name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/Role", namespace: string, name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/Role", name: string, property: "kind"): pulumi.Output<"Role">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/Role", namespace: string, name: string, property: "kind"): pulumi.Output<"Role">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/Role", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/Role", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/Role", name: string, property: "rules"): pulumi.Output<outputApi.rbac.v1.PolicyRule[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/Role", namespace: string, name: string, property: "rules"): pulumi.Output<outputApi.rbac.v1.PolicyRule[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleBinding", name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleBinding", namespace: string, name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleBinding", name: string, property: "kind"): pulumi.Output<"RoleBinding">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleBinding", namespace: string, name: string, property: "kind"): pulumi.Output<"RoleBinding">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleBinding", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleBinding", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleBinding", name: string, property: "role_ref"): pulumi.Output<outputApi.rbac.v1.RoleRef>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleBinding", namespace: string, name: string, property: "role_ref"): pulumi.Output<outputApi.rbac.v1.RoleRef>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleBinding", name: string, property: "subjects"): pulumi.Output<outputApi.rbac.v1.Subject[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleBinding", namespace: string, name: string, property: "subjects"): pulumi.Output<outputApi.rbac.v1.Subject[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleBindingList", name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleBindingList", namespace: string, name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleBindingList", name: string, property: "items"): pulumi.Output<outputApi.rbac.v1.RoleBinding[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleBindingList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.rbac.v1.RoleBinding[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleBindingList", name: string, property: "kind"): pulumi.Output<"RoleBindingList">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleBindingList", namespace: string, name: string, property: "kind"): pulumi.Output<"RoleBindingList">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleBindingList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleBindingList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleList", name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleList", namespace: string, name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleList", name: string, property: "items"): pulumi.Output<outputApi.rbac.v1.Role[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.rbac.v1.Role[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleList", name: string, property: "kind"): pulumi.Output<"RoleList">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleList", namespace: string, name: string, property: "kind"): pulumi.Output<"RoleList">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1/RoleList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRole", name: string, property: "aggregation_rule"): pulumi.Output<outputApi.rbac.v1alpha1.AggregationRule>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRole", namespace: string, name: string, property: "aggregation_rule"): pulumi.Output<outputApi.rbac.v1alpha1.AggregationRule>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRole", name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRole", namespace: string, name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRole", name: string, property: "kind"): pulumi.Output<"ClusterRole">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRole", namespace: string, name: string, property: "kind"): pulumi.Output<"ClusterRole">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRole", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRole", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRole", name: string, property: "rules"): pulumi.Output<outputApi.rbac.v1alpha1.PolicyRule[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRole", namespace: string, name: string, property: "rules"): pulumi.Output<outputApi.rbac.v1alpha1.PolicyRule[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleBinding", name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleBinding", namespace: string, name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleBinding", name: string, property: "kind"): pulumi.Output<"ClusterRoleBinding">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleBinding", namespace: string, name: string, property: "kind"): pulumi.Output<"ClusterRoleBinding">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleBinding", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleBinding", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleBinding", name: string, property: "role_ref"): pulumi.Output<outputApi.rbac.v1alpha1.RoleRef>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleBinding", namespace: string, name: string, property: "role_ref"): pulumi.Output<outputApi.rbac.v1alpha1.RoleRef>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleBinding", name: string, property: "subjects"): pulumi.Output<outputApi.rbac.v1alpha1.Subject[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleBinding", namespace: string, name: string, property: "subjects"): pulumi.Output<outputApi.rbac.v1alpha1.Subject[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleBindingList", name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleBindingList", namespace: string, name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleBindingList", name: string, property: "items"): pulumi.Output<outputApi.rbac.v1alpha1.ClusterRoleBinding[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleBindingList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.rbac.v1alpha1.ClusterRoleBinding[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleBindingList", name: string, property: "kind"): pulumi.Output<"ClusterRoleBindingList">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleBindingList", namespace: string, name: string, property: "kind"): pulumi.Output<"ClusterRoleBindingList">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleBindingList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleBindingList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleList", name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleList", namespace: string, name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleList", name: string, property: "items"): pulumi.Output<outputApi.rbac.v1alpha1.ClusterRole[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.rbac.v1alpha1.ClusterRole[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleList", name: string, property: "kind"): pulumi.Output<"ClusterRoleList">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleList", namespace: string, name: string, property: "kind"): pulumi.Output<"ClusterRoleList">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/ClusterRoleList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/Role", name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/Role", namespace: string, name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/Role", name: string, property: "kind"): pulumi.Output<"Role">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/Role", namespace: string, name: string, property: "kind"): pulumi.Output<"Role">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/Role", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/Role", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/Role", name: string, property: "rules"): pulumi.Output<outputApi.rbac.v1alpha1.PolicyRule[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/Role", namespace: string, name: string, property: "rules"): pulumi.Output<outputApi.rbac.v1alpha1.PolicyRule[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleBinding", name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleBinding", namespace: string, name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleBinding", name: string, property: "kind"): pulumi.Output<"RoleBinding">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleBinding", namespace: string, name: string, property: "kind"): pulumi.Output<"RoleBinding">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleBinding", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleBinding", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleBinding", name: string, property: "role_ref"): pulumi.Output<outputApi.rbac.v1alpha1.RoleRef>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleBinding", namespace: string, name: string, property: "role_ref"): pulumi.Output<outputApi.rbac.v1alpha1.RoleRef>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleBinding", name: string, property: "subjects"): pulumi.Output<outputApi.rbac.v1alpha1.Subject[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleBinding", namespace: string, name: string, property: "subjects"): pulumi.Output<outputApi.rbac.v1alpha1.Subject[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleBindingList", name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleBindingList", namespace: string, name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleBindingList", name: string, property: "items"): pulumi.Output<outputApi.rbac.v1alpha1.RoleBinding[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleBindingList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.rbac.v1alpha1.RoleBinding[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleBindingList", name: string, property: "kind"): pulumi.Output<"RoleBindingList">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleBindingList", namespace: string, name: string, property: "kind"): pulumi.Output<"RoleBindingList">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleBindingList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleBindingList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleList", name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleList", namespace: string, name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleList", name: string, property: "items"): pulumi.Output<outputApi.rbac.v1alpha1.Role[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.rbac.v1alpha1.Role[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleList", name: string, property: "kind"): pulumi.Output<"RoleList">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleList", namespace: string, name: string, property: "kind"): pulumi.Output<"RoleList">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1alpha1/RoleList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "rbac/v1alpha1/Subject", name: string, property: "api_version"): pulumi.Output<"rbac/v1alpha1">;
        public getResourceProperty(groupVersionKind: "rbac/v1alpha1/Subject", namespace: string, name: string, property: "api_version"): pulumi.Output<"rbac/v1alpha1">;
        public getResourceProperty(groupVersionKind: "rbac/v1alpha1/Subject", name: string, property: "kind"): pulumi.Output<"Subject">;
        public getResourceProperty(groupVersionKind: "rbac/v1alpha1/Subject", namespace: string, name: string, property: "kind"): pulumi.Output<"Subject">;
        public getResourceProperty(groupVersionKind: "rbac/v1alpha1/Subject", name: string, property: "name"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "rbac/v1alpha1/Subject", namespace: string, name: string, property: "name"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "rbac/v1alpha1/Subject", name: string, property: "namespace"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "rbac/v1alpha1/Subject", namespace: string, name: string, property: "namespace"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRole", name: string, property: "aggregation_rule"): pulumi.Output<outputApi.rbac.v1beta1.AggregationRule>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRole", namespace: string, name: string, property: "aggregation_rule"): pulumi.Output<outputApi.rbac.v1beta1.AggregationRule>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRole", name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRole", namespace: string, name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRole", name: string, property: "kind"): pulumi.Output<"ClusterRole">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRole", namespace: string, name: string, property: "kind"): pulumi.Output<"ClusterRole">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRole", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRole", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRole", name: string, property: "rules"): pulumi.Output<outputApi.rbac.v1beta1.PolicyRule[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRole", namespace: string, name: string, property: "rules"): pulumi.Output<outputApi.rbac.v1beta1.PolicyRule[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleBinding", name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleBinding", namespace: string, name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleBinding", name: string, property: "kind"): pulumi.Output<"ClusterRoleBinding">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleBinding", namespace: string, name: string, property: "kind"): pulumi.Output<"ClusterRoleBinding">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleBinding", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleBinding", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleBinding", name: string, property: "role_ref"): pulumi.Output<outputApi.rbac.v1beta1.RoleRef>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleBinding", namespace: string, name: string, property: "role_ref"): pulumi.Output<outputApi.rbac.v1beta1.RoleRef>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleBinding", name: string, property: "subjects"): pulumi.Output<outputApi.rbac.v1beta1.Subject[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleBinding", namespace: string, name: string, property: "subjects"): pulumi.Output<outputApi.rbac.v1beta1.Subject[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleBindingList", name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleBindingList", namespace: string, name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleBindingList", name: string, property: "items"): pulumi.Output<outputApi.rbac.v1beta1.ClusterRoleBinding[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleBindingList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.rbac.v1beta1.ClusterRoleBinding[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleBindingList", name: string, property: "kind"): pulumi.Output<"ClusterRoleBindingList">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleBindingList", namespace: string, name: string, property: "kind"): pulumi.Output<"ClusterRoleBindingList">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleBindingList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleBindingList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleList", name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleList", namespace: string, name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleList", name: string, property: "items"): pulumi.Output<outputApi.rbac.v1beta1.ClusterRole[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.rbac.v1beta1.ClusterRole[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleList", name: string, property: "kind"): pulumi.Output<"ClusterRoleList">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleList", namespace: string, name: string, property: "kind"): pulumi.Output<"ClusterRoleList">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/ClusterRoleList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/Role", name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/Role", namespace: string, name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/Role", name: string, property: "kind"): pulumi.Output<"Role">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/Role", namespace: string, name: string, property: "kind"): pulumi.Output<"Role">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/Role", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/Role", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/Role", name: string, property: "rules"): pulumi.Output<outputApi.rbac.v1beta1.PolicyRule[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/Role", namespace: string, name: string, property: "rules"): pulumi.Output<outputApi.rbac.v1beta1.PolicyRule[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleBinding", name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleBinding", namespace: string, name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleBinding", name: string, property: "kind"): pulumi.Output<"RoleBinding">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleBinding", namespace: string, name: string, property: "kind"): pulumi.Output<"RoleBinding">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleBinding", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleBinding", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleBinding", name: string, property: "role_ref"): pulumi.Output<outputApi.rbac.v1beta1.RoleRef>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleBinding", namespace: string, name: string, property: "role_ref"): pulumi.Output<outputApi.rbac.v1beta1.RoleRef>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleBinding", name: string, property: "subjects"): pulumi.Output<outputApi.rbac.v1beta1.Subject[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleBinding", namespace: string, name: string, property: "subjects"): pulumi.Output<outputApi.rbac.v1beta1.Subject[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleBindingList", name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleBindingList", namespace: string, name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleBindingList", name: string, property: "items"): pulumi.Output<outputApi.rbac.v1beta1.RoleBinding[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleBindingList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.rbac.v1beta1.RoleBinding[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleBindingList", name: string, property: "kind"): pulumi.Output<"RoleBindingList">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleBindingList", namespace: string, name: string, property: "kind"): pulumi.Output<"RoleBindingList">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleBindingList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleBindingList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleList", name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleList", namespace: string, name: string, property: "api_version"): pulumi.Output<"rbac.authorization.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleList", name: string, property: "items"): pulumi.Output<outputApi.rbac.v1beta1.Role[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.rbac.v1beta1.Role[]>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleList", name: string, property: "kind"): pulumi.Output<"RoleList">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleList", namespace: string, name: string, property: "kind"): pulumi.Output<"RoleList">;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "rbac.authorization.k8s.io/v1beta1/RoleList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1alpha1/PriorityClass", name: string, property: "api_version"): pulumi.Output<"scheduling.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1alpha1/PriorityClass", namespace: string, name: string, property: "api_version"): pulumi.Output<"scheduling.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1alpha1/PriorityClass", name: string, property: "description"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1alpha1/PriorityClass", namespace: string, name: string, property: "description"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1alpha1/PriorityClass", name: string, property: "global_default"): pulumi.Output<boolean>;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1alpha1/PriorityClass", namespace: string, name: string, property: "global_default"): pulumi.Output<boolean>;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1alpha1/PriorityClass", name: string, property: "kind"): pulumi.Output<"PriorityClass">;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1alpha1/PriorityClass", namespace: string, name: string, property: "kind"): pulumi.Output<"PriorityClass">;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1alpha1/PriorityClass", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1alpha1/PriorityClass", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1alpha1/PriorityClass", name: string, property: "value"): pulumi.Output<number>;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1alpha1/PriorityClass", namespace: string, name: string, property: "value"): pulumi.Output<number>;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1alpha1/PriorityClassList", name: string, property: "api_version"): pulumi.Output<"scheduling.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1alpha1/PriorityClassList", namespace: string, name: string, property: "api_version"): pulumi.Output<"scheduling.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1alpha1/PriorityClassList", name: string, property: "items"): pulumi.Output<outputApi.scheduling.v1alpha1.PriorityClass[]>;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1alpha1/PriorityClassList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.scheduling.v1alpha1.PriorityClass[]>;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1alpha1/PriorityClassList", name: string, property: "kind"): pulumi.Output<"PriorityClassList">;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1alpha1/PriorityClassList", namespace: string, name: string, property: "kind"): pulumi.Output<"PriorityClassList">;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1alpha1/PriorityClassList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1alpha1/PriorityClassList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1beta1/PriorityClass", name: string, property: "api_version"): pulumi.Output<"scheduling.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1beta1/PriorityClass", namespace: string, name: string, property: "api_version"): pulumi.Output<"scheduling.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1beta1/PriorityClass", name: string, property: "description"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1beta1/PriorityClass", namespace: string, name: string, property: "description"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1beta1/PriorityClass", name: string, property: "global_default"): pulumi.Output<boolean>;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1beta1/PriorityClass", namespace: string, name: string, property: "global_default"): pulumi.Output<boolean>;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1beta1/PriorityClass", name: string, property: "kind"): pulumi.Output<"PriorityClass">;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1beta1/PriorityClass", namespace: string, name: string, property: "kind"): pulumi.Output<"PriorityClass">;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1beta1/PriorityClass", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1beta1/PriorityClass", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1beta1/PriorityClass", name: string, property: "value"): pulumi.Output<number>;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1beta1/PriorityClass", namespace: string, name: string, property: "value"): pulumi.Output<number>;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1beta1/PriorityClassList", name: string, property: "api_version"): pulumi.Output<"scheduling.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1beta1/PriorityClassList", namespace: string, name: string, property: "api_version"): pulumi.Output<"scheduling.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1beta1/PriorityClassList", name: string, property: "items"): pulumi.Output<outputApi.scheduling.v1beta1.PriorityClass[]>;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1beta1/PriorityClassList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.scheduling.v1beta1.PriorityClass[]>;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1beta1/PriorityClassList", name: string, property: "kind"): pulumi.Output<"PriorityClassList">;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1beta1/PriorityClassList", namespace: string, name: string, property: "kind"): pulumi.Output<"PriorityClassList">;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1beta1/PriorityClassList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "scheduling.k8s.io/v1beta1/PriorityClassList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "settings.k8s.io/v1alpha1/PodPreset", name: string, property: "api_version"): pulumi.Output<"settings.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "settings.k8s.io/v1alpha1/PodPreset", namespace: string, name: string, property: "api_version"): pulumi.Output<"settings.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "settings.k8s.io/v1alpha1/PodPreset", name: string, property: "kind"): pulumi.Output<"PodPreset">;
        public getResourceProperty(groupVersionKind: "settings.k8s.io/v1alpha1/PodPreset", namespace: string, name: string, property: "kind"): pulumi.Output<"PodPreset">;
        public getResourceProperty(groupVersionKind: "settings.k8s.io/v1alpha1/PodPreset", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "settings.k8s.io/v1alpha1/PodPreset", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "settings.k8s.io/v1alpha1/PodPreset", name: string, property: "spec"): pulumi.Output<outputApi.settings.v1alpha1.PodPresetSpec>;
        public getResourceProperty(groupVersionKind: "settings.k8s.io/v1alpha1/PodPreset", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.settings.v1alpha1.PodPresetSpec>;
        public getResourceProperty(groupVersionKind: "settings.k8s.io/v1alpha1/PodPresetList", name: string, property: "api_version"): pulumi.Output<"settings.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "settings.k8s.io/v1alpha1/PodPresetList", namespace: string, name: string, property: "api_version"): pulumi.Output<"settings.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "settings.k8s.io/v1alpha1/PodPresetList", name: string, property: "items"): pulumi.Output<outputApi.settings.v1alpha1.PodPreset[]>;
        public getResourceProperty(groupVersionKind: "settings.k8s.io/v1alpha1/PodPresetList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.settings.v1alpha1.PodPreset[]>;
        public getResourceProperty(groupVersionKind: "settings.k8s.io/v1alpha1/PodPresetList", name: string, property: "kind"): pulumi.Output<"PodPresetList">;
        public getResourceProperty(groupVersionKind: "settings.k8s.io/v1alpha1/PodPresetList", namespace: string, name: string, property: "kind"): pulumi.Output<"PodPresetList">;
        public getResourceProperty(groupVersionKind: "settings.k8s.io/v1alpha1/PodPresetList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "settings.k8s.io/v1alpha1/PodPresetList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/StorageClass", name: string, property: "allow_volume_expansion"): pulumi.Output<boolean>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/StorageClass", namespace: string, name: string, property: "allow_volume_expansion"): pulumi.Output<boolean>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/StorageClass", name: string, property: "allowed_topologies"): pulumi.Output<outputApi.core.v1.TopologySelectorTerm[]>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/StorageClass", namespace: string, name: string, property: "allowed_topologies"): pulumi.Output<outputApi.core.v1.TopologySelectorTerm[]>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/StorageClass", name: string, property: "api_version"): pulumi.Output<"storage.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/StorageClass", namespace: string, name: string, property: "api_version"): pulumi.Output<"storage.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/StorageClass", name: string, property: "kind"): pulumi.Output<"StorageClass">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/StorageClass", namespace: string, name: string, property: "kind"): pulumi.Output<"StorageClass">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/StorageClass", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/StorageClass", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/StorageClass", name: string, property: "mount_options"): pulumi.Output<string[]>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/StorageClass", namespace: string, name: string, property: "mount_options"): pulumi.Output<string[]>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/StorageClass", name: string, property: "parameters"): pulumi.Output<{[key: string]: pulumi.Output<string>}>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/StorageClass", namespace: string, name: string, property: "parameters"): pulumi.Output<{[key: string]: pulumi.Output<string>}>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/StorageClass", name: string, property: "provisioner"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/StorageClass", namespace: string, name: string, property: "provisioner"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/StorageClass", name: string, property: "reclaim_policy"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/StorageClass", namespace: string, name: string, property: "reclaim_policy"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/StorageClass", name: string, property: "volume_binding_mode"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/StorageClass", namespace: string, name: string, property: "volume_binding_mode"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/StorageClassList", name: string, property: "api_version"): pulumi.Output<"storage.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/StorageClassList", namespace: string, name: string, property: "api_version"): pulumi.Output<"storage.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/StorageClassList", name: string, property: "items"): pulumi.Output<outputApi.storage.v1.StorageClass[]>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/StorageClassList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.storage.v1.StorageClass[]>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/StorageClassList", name: string, property: "kind"): pulumi.Output<"StorageClassList">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/StorageClassList", namespace: string, name: string, property: "kind"): pulumi.Output<"StorageClassList">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/StorageClassList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/StorageClassList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/VolumeAttachment", name: string, property: "api_version"): pulumi.Output<"storage.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/VolumeAttachment", namespace: string, name: string, property: "api_version"): pulumi.Output<"storage.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/VolumeAttachment", name: string, property: "kind"): pulumi.Output<"VolumeAttachment">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/VolumeAttachment", namespace: string, name: string, property: "kind"): pulumi.Output<"VolumeAttachment">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/VolumeAttachment", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/VolumeAttachment", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/VolumeAttachment", name: string, property: "spec"): pulumi.Output<outputApi.storage.v1.VolumeAttachmentSpec>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/VolumeAttachment", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.storage.v1.VolumeAttachmentSpec>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/VolumeAttachment", name: string, property: "status"): pulumi.Output<outputApi.storage.v1.VolumeAttachmentStatus>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/VolumeAttachment", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.storage.v1.VolumeAttachmentStatus>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/VolumeAttachmentList", name: string, property: "api_version"): pulumi.Output<"storage.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/VolumeAttachmentList", namespace: string, name: string, property: "api_version"): pulumi.Output<"storage.k8s.io/v1">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/VolumeAttachmentList", name: string, property: "items"): pulumi.Output<outputApi.storage.v1.VolumeAttachment[]>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/VolumeAttachmentList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.storage.v1.VolumeAttachment[]>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/VolumeAttachmentList", name: string, property: "kind"): pulumi.Output<"VolumeAttachmentList">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/VolumeAttachmentList", namespace: string, name: string, property: "kind"): pulumi.Output<"VolumeAttachmentList">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/VolumeAttachmentList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1/VolumeAttachmentList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1alpha1/VolumeAttachment", name: string, property: "api_version"): pulumi.Output<"storage.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1alpha1/VolumeAttachment", namespace: string, name: string, property: "api_version"): pulumi.Output<"storage.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1alpha1/VolumeAttachment", name: string, property: "kind"): pulumi.Output<"VolumeAttachment">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1alpha1/VolumeAttachment", namespace: string, name: string, property: "kind"): pulumi.Output<"VolumeAttachment">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1alpha1/VolumeAttachment", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1alpha1/VolumeAttachment", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1alpha1/VolumeAttachment", name: string, property: "spec"): pulumi.Output<outputApi.storage.v1alpha1.VolumeAttachmentSpec>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1alpha1/VolumeAttachment", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.storage.v1alpha1.VolumeAttachmentSpec>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1alpha1/VolumeAttachment", name: string, property: "status"): pulumi.Output<outputApi.storage.v1alpha1.VolumeAttachmentStatus>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1alpha1/VolumeAttachment", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.storage.v1alpha1.VolumeAttachmentStatus>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1alpha1/VolumeAttachmentList", name: string, property: "api_version"): pulumi.Output<"storage.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1alpha1/VolumeAttachmentList", namespace: string, name: string, property: "api_version"): pulumi.Output<"storage.k8s.io/v1alpha1">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1alpha1/VolumeAttachmentList", name: string, property: "items"): pulumi.Output<outputApi.storage.v1alpha1.VolumeAttachment[]>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1alpha1/VolumeAttachmentList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.storage.v1alpha1.VolumeAttachment[]>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1alpha1/VolumeAttachmentList", name: string, property: "kind"): pulumi.Output<"VolumeAttachmentList">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1alpha1/VolumeAttachmentList", namespace: string, name: string, property: "kind"): pulumi.Output<"VolumeAttachmentList">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1alpha1/VolumeAttachmentList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1alpha1/VolumeAttachmentList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/StorageClass", name: string, property: "allow_volume_expansion"): pulumi.Output<boolean>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/StorageClass", namespace: string, name: string, property: "allow_volume_expansion"): pulumi.Output<boolean>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/StorageClass", name: string, property: "allowed_topologies"): pulumi.Output<outputApi.core.v1.TopologySelectorTerm[]>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/StorageClass", namespace: string, name: string, property: "allowed_topologies"): pulumi.Output<outputApi.core.v1.TopologySelectorTerm[]>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/StorageClass", name: string, property: "api_version"): pulumi.Output<"storage.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/StorageClass", namespace: string, name: string, property: "api_version"): pulumi.Output<"storage.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/StorageClass", name: string, property: "kind"): pulumi.Output<"StorageClass">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/StorageClass", namespace: string, name: string, property: "kind"): pulumi.Output<"StorageClass">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/StorageClass", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/StorageClass", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/StorageClass", name: string, property: "mount_options"): pulumi.Output<string[]>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/StorageClass", namespace: string, name: string, property: "mount_options"): pulumi.Output<string[]>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/StorageClass", name: string, property: "parameters"): pulumi.Output<{[key: string]: pulumi.Output<string>}>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/StorageClass", namespace: string, name: string, property: "parameters"): pulumi.Output<{[key: string]: pulumi.Output<string>}>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/StorageClass", name: string, property: "provisioner"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/StorageClass", namespace: string, name: string, property: "provisioner"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/StorageClass", name: string, property: "reclaim_policy"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/StorageClass", namespace: string, name: string, property: "reclaim_policy"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/StorageClass", name: string, property: "volume_binding_mode"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/StorageClass", namespace: string, name: string, property: "volume_binding_mode"): pulumi.Output<string>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/StorageClassList", name: string, property: "api_version"): pulumi.Output<"storage.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/StorageClassList", namespace: string, name: string, property: "api_version"): pulumi.Output<"storage.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/StorageClassList", name: string, property: "items"): pulumi.Output<outputApi.storage.v1beta1.StorageClass[]>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/StorageClassList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.storage.v1beta1.StorageClass[]>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/StorageClassList", name: string, property: "kind"): pulumi.Output<"StorageClassList">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/StorageClassList", namespace: string, name: string, property: "kind"): pulumi.Output<"StorageClassList">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/StorageClassList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/StorageClassList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/VolumeAttachment", name: string, property: "api_version"): pulumi.Output<"storage.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/VolumeAttachment", namespace: string, name: string, property: "api_version"): pulumi.Output<"storage.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/VolumeAttachment", name: string, property: "kind"): pulumi.Output<"VolumeAttachment">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/VolumeAttachment", namespace: string, name: string, property: "kind"): pulumi.Output<"VolumeAttachment">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/VolumeAttachment", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/VolumeAttachment", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ObjectMeta>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/VolumeAttachment", name: string, property: "spec"): pulumi.Output<outputApi.storage.v1beta1.VolumeAttachmentSpec>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/VolumeAttachment", namespace: string, name: string, property: "spec"): pulumi.Output<outputApi.storage.v1beta1.VolumeAttachmentSpec>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/VolumeAttachment", name: string, property: "status"): pulumi.Output<outputApi.storage.v1beta1.VolumeAttachmentStatus>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/VolumeAttachment", namespace: string, name: string, property: "status"): pulumi.Output<outputApi.storage.v1beta1.VolumeAttachmentStatus>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/VolumeAttachmentList", name: string, property: "api_version"): pulumi.Output<"storage.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/VolumeAttachmentList", namespace: string, name: string, property: "api_version"): pulumi.Output<"storage.k8s.io/v1beta1">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/VolumeAttachmentList", name: string, property: "items"): pulumi.Output<outputApi.storage.v1beta1.VolumeAttachment[]>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/VolumeAttachmentList", namespace: string, name: string, property: "items"): pulumi.Output<outputApi.storage.v1beta1.VolumeAttachment[]>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/VolumeAttachmentList", name: string, property: "kind"): pulumi.Output<"VolumeAttachmentList">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/VolumeAttachmentList", namespace: string, name: string, property: "kind"): pulumi.Output<"VolumeAttachmentList">;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/VolumeAttachmentList", name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: "storage.k8s.io/v1beta1/VolumeAttachmentList", namespace: string, name: string, property: "metadata"): pulumi.Output<outputApi.meta.v1.ListMeta>;
        public getResourceProperty(groupVersionKind: string, namespaceOrName: string, nameOrProperty: string, property?: string): pulumi.Output<any> {
            const name = property !== undefined ? nameOrProperty : undefined;
            return this.getResourceImpl(groupVersionKind, namespaceOrName, name)
                .apply(r => (<any>r)[property || nameOrProperty]);
        }

        /**
         * getCustomResource returns a resource defined by a CRD with the given group/version/kind and name.
         *
         * For example:
         *     getCustomResource("monitoring.coreos.com/v1/ServiceMonitor", "kube-prometheus-exporter-kubernetes")
         */
        public getCustomResource<T extends pulumi.CustomResource>(groupVersionKind: string, namespace: string): pulumi.Output<T>;
        public getCustomResource<T extends pulumi.CustomResource>(groupVersionKind: string, namespace: string, name: string): pulumi.Output<T>;
        public getCustomResource(groupVersionKind: string, namespaceOrName: string, name?: string): pulumi.Output<pulumi.CustomResource> {
            return this.getResourceImpl(groupVersionKind, namespaceOrName, name);
        }

        private getResourceImpl(groupVersionKind: string, namespaceOrName: string, name?: string): pulumi.Output<pulumi.CustomResource> {
            // `id` will either be `${name}` or `${namespace}/${name}`.
            let id = namespaceOrName;
            if (name !== undefined) {
                id = `${namespaceOrName}/${name}`;
            }

            return this.resources.apply(resources => resources[`${groupVersionKind}::${id}`]);
        }
    }

    /**
     * ConfigGroup creates a set of Kubernetes resources from Kubernetes YAML text. The YAML text
     * may be supplied using any of the following `ConfigGroupOpts`:
     *
     *   1. Using a filename or a list of filenames:
     *        a. `{files: "foo.yaml"}`
     *        b. `{files: ["foo.yaml", "bar.yaml"]}`
     *   2. Using a file pattern or a list of file patterns:
     *        a. `{files: "*.yaml"}`
     *        b. `{files: ["foo/*.yaml", "bar/*.yaml"]}`
     *   3. Using a literal string containing YAML, or a list of such strings:
     *        a. `{yaml: "(LITERAL YAML HERE)"}`
     *        b. `{yaml: ["(LITERAL YAML HERE)", "(MORE YAML)"]}`
     *   4. Any combination of files, patterns, or YAML strings:
     *        a. `{files: "foo.yaml", yaml: "(LITERAL YAML HERE)"}`
     */
    export class ConfigGroup extends CollectionComponentResource {
        constructor(name: string, config: ConfigGroupOpts, opts?: pulumi.ComponentResourceOptions) {
            super("kubernetes:yaml:ConfigGroup", name, config, opts);
            this.resources = parse(config, {parent: this});
        }
    }

    /**
     * ConfigFile creates a set of Kubernetes resources from Kubernetes YAML file. If `config.name`
     * is not specified, `ConfigFile` assumes the argument `name` is the filename.
     */
    export class ConfigFile extends CollectionComponentResource {
        constructor(name: string, config?: ConfigFileOpts, opts?: pulumi.ComponentResourceOptions) {
            super("kubernetes:yaml:ConfigFile", name, config, opts);
            const fileId = config && config.file || name
            let text: Promise<string>;
            if (fileId.startsWith("http://") || fileId.startsWith("https://")) {
                text = got(fileId).then(r => r.body)
            } else {
                text = Promise.resolve(fs.readFileSync(fileId).toString());
            }

            this.resources = pulumi.output(text).apply(t => parseYamlDocument({
                objs: jsyaml.safeLoadAll(t),
                transformations: config && config.transformations || []
            }, {parent: this}));
        }
    }

    function parseYamlDocument(
        config: ConfigOpts, opts?: pulumi.CustomResourceOptions,
    ):  {[key: string]: pulumi.CustomResource} {
        let resources: {[key: string]: pulumi.CustomResource} = {};

        for (const obj of config.objs) {
            const fileObjects = parseYamlObject(obj, config.transformations, opts);
            for (const fileObject of fileObjects) {
                resources[fileObject.name] = fileObject.resource;
            }
        }

        return resources;
    }

    function parseYamlObject(
        obj: any, transformations?: ((o: any) => void)[], opts?: pulumi.CustomResourceOptions,
    ): {name: string, resource: pulumi.CustomResource}[] {
        if (obj == null || Object.keys(obj).length == 0) {
            return [];
        }

        // Allow users to change API objects before any validation.
        for (const t of transformations || []) {
            t(obj);
        }

        if (!("kind" in obj && "apiVersion" in obj)) {
            throw new Error(`Kubernetes resources require a kind and apiVersion: ${JSON.stringify(obj)}`)
        }

        const kind = obj["kind"];
        const apiVersion = obj["apiVersion"];

        // Recursively traverse built-in Kubernetes list types into a single set of "naked" resource
        // definitions that we can register with the Pulumi engine.
        //
        // Kubernetes does not instantiate list types like `v1.List`. When the API server receives
        // a list, it will recursively traverse it and perform the necessary operations on the
        // each "instantiable" resource it finds. For example, `kubectl apply` on a
        // `v1.ConfigMapList` will cause the API server to traverse the list, and `apply` each
        // `v1.ConfigMap` it finds.
        //
        // Since Kubernetes does not instantiate list types directly, Pulumi also traverses lists
        // for resource definitions that can be managed by Kubernetes, and registers those with the
        // engine instead.
        if (
               (apiVersion == "v1" && kind == "List")
            || (apiVersion == "admissionregistration.k8s.io/v1alpha1" && kind == "InitializerConfigurationList")
            || (apiVersion == "admissionregistration.k8s.io/v1beta1" && kind == "MutatingWebhookConfigurationList")
            || (apiVersion == "admissionregistration.k8s.io/v1beta1" && kind == "ValidatingWebhookConfigurationList")
            || (apiVersion == "apiextensions.k8s.io/v1beta1" && kind == "CustomResourceDefinitionList")
            || (apiVersion == "apiregistration.k8s.io/v1" && kind == "APIServiceList")
            || (apiVersion == "apiregistration/v1" && kind == "APIServiceList")
            || (apiVersion == "apiregistration.k8s.io/v1beta1" && kind == "APIServiceList")
            || (apiVersion == "apiregistration/v1beta1" && kind == "APIServiceList")
            || (apiVersion == "apps/v1" && kind == "ControllerRevisionList")
            || (apiVersion == "apps/v1" && kind == "DaemonSetList")
            || (apiVersion == "apps/v1" && kind == "DeploymentList")
            || (apiVersion == "apps/v1" && kind == "ReplicaSetList")
            || (apiVersion == "apps/v1" && kind == "StatefulSetList")
            || (apiVersion == "apps/v1beta1" && kind == "ControllerRevisionList")
            || (apiVersion == "apps/v1beta1" && kind == "DeploymentList")
            || (apiVersion == "apps/v1beta1" && kind == "StatefulSetList")
            || (apiVersion == "apps/v1beta2" && kind == "ControllerRevisionList")
            || (apiVersion == "apps/v1beta2" && kind == "DaemonSetList")
            || (apiVersion == "apps/v1beta2" && kind == "DeploymentList")
            || (apiVersion == "apps/v1beta2" && kind == "ReplicaSetList")
            || (apiVersion == "apps/v1beta2" && kind == "StatefulSetList")
            || (apiVersion == "auditregistration.k8s.io/v1alpha1" && kind == "AuditSinkList")
            || (apiVersion == "autoscaling/v1" && kind == "HorizontalPodAutoscalerList")
            || (apiVersion == "autoscaling/v2beta1" && kind == "HorizontalPodAutoscalerList")
            || (apiVersion == "autoscaling/v2beta2" && kind == "HorizontalPodAutoscalerList")
            || (apiVersion == "batch/v1" && kind == "JobList")
            || (apiVersion == "batch/v1beta1" && kind == "CronJobList")
            || (apiVersion == "batch/v2alpha1" && kind == "CronJobList")
            || (apiVersion == "certificates.k8s.io/v1beta1" && kind == "CertificateSigningRequestList")
            || (apiVersion == "coordination.k8s.io/v1beta1" && kind == "LeaseList")
            || (apiVersion == "v1" && kind == "ComponentStatusList")
            || (apiVersion == "v1" && kind == "ConfigMapList")
            || (apiVersion == "v1" && kind == "EndpointsList")
            || (apiVersion == "v1" && kind == "EventList")
            || (apiVersion == "v1" && kind == "LimitRangeList")
            || (apiVersion == "v1" && kind == "NamespaceList")
            || (apiVersion == "v1" && kind == "NodeList")
            || (apiVersion == "v1" && kind == "PersistentVolumeClaimList")
            || (apiVersion == "v1" && kind == "PersistentVolumeList")
            || (apiVersion == "v1" && kind == "PodList")
            || (apiVersion == "v1" && kind == "PodTemplateList")
            || (apiVersion == "v1" && kind == "ReplicationControllerList")
            || (apiVersion == "v1" && kind == "ResourceQuotaList")
            || (apiVersion == "v1" && kind == "SecretList")
            || (apiVersion == "v1" && kind == "ServiceAccountList")
            || (apiVersion == "v1" && kind == "ServiceList")
            || (apiVersion == "events.k8s.io/v1beta1" && kind == "EventList")
            || (apiVersion == "extensions/v1beta1" && kind == "DaemonSetList")
            || (apiVersion == "extensions/v1beta1" && kind == "DeploymentList")
            || (apiVersion == "extensions/v1beta1" && kind == "IngressList")
            || (apiVersion == "extensions/v1beta1" && kind == "NetworkPolicyList")
            || (apiVersion == "extensions/v1beta1" && kind == "PodSecurityPolicyList")
            || (apiVersion == "extensions/v1beta1" && kind == "ReplicaSetList")
            || (apiVersion == "networking.k8s.io/v1" && kind == "NetworkPolicyList")
            || (apiVersion == "policy/v1beta1" && kind == "PodDisruptionBudgetList")
            || (apiVersion == "policy/v1beta1" && kind == "PodSecurityPolicyList")
            || (apiVersion == "rbac.authorization.k8s.io/v1" && kind == "ClusterRoleBindingList")
            || (apiVersion == "rbac.authorization.k8s.io/v1" && kind == "ClusterRoleList")
            || (apiVersion == "rbac.authorization.k8s.io/v1" && kind == "RoleBindingList")
            || (apiVersion == "rbac.authorization.k8s.io/v1" && kind == "RoleList")
            || (apiVersion == "rbac.authorization.k8s.io/v1alpha1" && kind == "ClusterRoleBindingList")
            || (apiVersion == "rbac.authorization.k8s.io/v1alpha1" && kind == "ClusterRoleList")
            || (apiVersion == "rbac.authorization.k8s.io/v1alpha1" && kind == "RoleBindingList")
            || (apiVersion == "rbac.authorization.k8s.io/v1alpha1" && kind == "RoleList")
            || (apiVersion == "rbac.authorization.k8s.io/v1beta1" && kind == "ClusterRoleBindingList")
            || (apiVersion == "rbac.authorization.k8s.io/v1beta1" && kind == "ClusterRoleList")
            || (apiVersion == "rbac.authorization.k8s.io/v1beta1" && kind == "RoleBindingList")
            || (apiVersion == "rbac.authorization.k8s.io/v1beta1" && kind == "RoleList")
            || (apiVersion == "scheduling.k8s.io/v1alpha1" && kind == "PriorityClassList")
            || (apiVersion == "scheduling.k8s.io/v1beta1" && kind == "PriorityClassList")
            || (apiVersion == "settings.k8s.io/v1alpha1" && kind == "PodPresetList")
            || (apiVersion == "storage.k8s.io/v1" && kind == "StorageClassList")
            || (apiVersion == "storage.k8s.io/v1" && kind == "VolumeAttachmentList")
            || (apiVersion == "storage.k8s.io/v1alpha1" && kind == "VolumeAttachmentList")
            || (apiVersion == "storage.k8s.io/v1beta1" && kind == "StorageClassList")
            || (apiVersion == "storage.k8s.io/v1beta1" && kind == "VolumeAttachmentList")
        ) {
            const objs = [];
            const items = obj["items"] || [];
            for (const item of items) {
                objs.push(...parseYamlObject(item, transformations, opts));
            }
            return objs;
        }

        if (!("metadata" in obj) || !("name" in obj["metadata"])) {
            throw new Error(`YAML object does not have a .metadata.name: ${obj.apiVersion}/${obj.kind} ${JSON.stringify(obj.metadata)}`)
        }

        const meta = obj["metadata"];
        let id: string = meta["name"];
        const namespace = meta["namespace"] || undefined;
        if (namespace !== undefined) {
            id = `${namespace}/${id}`;
        }
        switch (`${apiVersion}/${kind}`) {
            case "admissionregistration.k8s.io/v1alpha1/InitializerConfiguration":
                return [{
                    name: `admissionregistration.k8s.io/v1alpha1/InitializerConfiguration::${id}`,
                    resource: new admissionregistration.v1alpha1.InitializerConfiguration(id, obj, opts),
                }];
            case "admissionregistration.k8s.io/v1alpha1/InitializerConfigurationList":
                return [{
                    name: `admissionregistration.k8s.io/v1alpha1/InitializerConfigurationList::${id}`,
                    resource: new admissionregistration.v1alpha1.InitializerConfigurationList(id, obj, opts),
                }];
            case "admissionregistration.k8s.io/v1beta1/MutatingWebhookConfiguration":
                return [{
                    name: `admissionregistration.k8s.io/v1beta1/MutatingWebhookConfiguration::${id}`,
                    resource: new admissionregistration.v1beta1.MutatingWebhookConfiguration(id, obj, opts),
                }];
            case "admissionregistration.k8s.io/v1beta1/MutatingWebhookConfigurationList":
                return [{
                    name: `admissionregistration.k8s.io/v1beta1/MutatingWebhookConfigurationList::${id}`,
                    resource: new admissionregistration.v1beta1.MutatingWebhookConfigurationList(id, obj, opts),
                }];
            case "admissionregistration.k8s.io/v1beta1/ValidatingWebhookConfiguration":
                return [{
                    name: `admissionregistration.k8s.io/v1beta1/ValidatingWebhookConfiguration::${id}`,
                    resource: new admissionregistration.v1beta1.ValidatingWebhookConfiguration(id, obj, opts),
                }];
            case "admissionregistration.k8s.io/v1beta1/ValidatingWebhookConfigurationList":
                return [{
                    name: `admissionregistration.k8s.io/v1beta1/ValidatingWebhookConfigurationList::${id}`,
                    resource: new admissionregistration.v1beta1.ValidatingWebhookConfigurationList(id, obj, opts),
                }];
            case "apiextensions.k8s.io/v1beta1/CustomResourceDefinition":
                return [{
                    name: `apiextensions.k8s.io/v1beta1/CustomResourceDefinition::${id}`,
                    resource: new apiextensions.v1beta1.CustomResourceDefinition(id, obj, opts),
                }];
            case "apiextensions.k8s.io/v1beta1/CustomResourceDefinitionList":
                return [{
                    name: `apiextensions.k8s.io/v1beta1/CustomResourceDefinitionList::${id}`,
                    resource: new apiextensions.v1beta1.CustomResourceDefinitionList(id, obj, opts),
                }];
            case "apiregistration.k8s.io/v1/APIService":
                return [{
                    name: `apiregistration.k8s.io/v1/APIService::${id}`,
                    resource: new apiregistration.v1.APIService(id, obj, opts),
                }];
            case "apiregistration/v1/APIService":
                return [{
                    name: `apiregistration/v1/APIService::${id}`,
                    resource: new apiregistration.v1.APIService(id, obj, opts),
                }];
            case "apiregistration.k8s.io/v1/APIServiceList":
                return [{
                    name: `apiregistration.k8s.io/v1/APIServiceList::${id}`,
                    resource: new apiregistration.v1.APIServiceList(id, obj, opts),
                }];
            case "apiregistration/v1/APIServiceList":
                return [{
                    name: `apiregistration/v1/APIServiceList::${id}`,
                    resource: new apiregistration.v1.APIServiceList(id, obj, opts),
                }];
            case "apiregistration.k8s.io/v1beta1/APIService":
                return [{
                    name: `apiregistration.k8s.io/v1beta1/APIService::${id}`,
                    resource: new apiregistration.v1beta1.APIService(id, obj, opts),
                }];
            case "apiregistration/v1beta1/APIService":
                return [{
                    name: `apiregistration/v1beta1/APIService::${id}`,
                    resource: new apiregistration.v1beta1.APIService(id, obj, opts),
                }];
            case "apiregistration.k8s.io/v1beta1/APIServiceList":
                return [{
                    name: `apiregistration.k8s.io/v1beta1/APIServiceList::${id}`,
                    resource: new apiregistration.v1beta1.APIServiceList(id, obj, opts),
                }];
            case "apiregistration/v1beta1/APIServiceList":
                return [{
                    name: `apiregistration/v1beta1/APIServiceList::${id}`,
                    resource: new apiregistration.v1beta1.APIServiceList(id, obj, opts),
                }];
            case "apps/v1/ControllerRevision":
                return [{
                    name: `apps/v1/ControllerRevision::${id}`,
                    resource: new apps.v1.ControllerRevision(id, obj, opts),
                }];
            case "apps/v1/ControllerRevisionList":
                return [{
                    name: `apps/v1/ControllerRevisionList::${id}`,
                    resource: new apps.v1.ControllerRevisionList(id, obj, opts),
                }];
            case "apps/v1/DaemonSet":
                return [{
                    name: `apps/v1/DaemonSet::${id}`,
                    resource: new apps.v1.DaemonSet(id, obj, opts),
                }];
            case "apps/v1/DaemonSetList":
                return [{
                    name: `apps/v1/DaemonSetList::${id}`,
                    resource: new apps.v1.DaemonSetList(id, obj, opts),
                }];
            case "apps/v1/Deployment":
                return [{
                    name: `apps/v1/Deployment::${id}`,
                    resource: new apps.v1.Deployment(id, obj, opts),
                }];
            case "apps/v1/DeploymentList":
                return [{
                    name: `apps/v1/DeploymentList::${id}`,
                    resource: new apps.v1.DeploymentList(id, obj, opts),
                }];
            case "apps/v1/ReplicaSet":
                return [{
                    name: `apps/v1/ReplicaSet::${id}`,
                    resource: new apps.v1.ReplicaSet(id, obj, opts),
                }];
            case "apps/v1/ReplicaSetList":
                return [{
                    name: `apps/v1/ReplicaSetList::${id}`,
                    resource: new apps.v1.ReplicaSetList(id, obj, opts),
                }];
            case "apps/v1/StatefulSet":
                return [{
                    name: `apps/v1/StatefulSet::${id}`,
                    resource: new apps.v1.StatefulSet(id, obj, opts),
                }];
            case "apps/v1/StatefulSetList":
                return [{
                    name: `apps/v1/StatefulSetList::${id}`,
                    resource: new apps.v1.StatefulSetList(id, obj, opts),
                }];
            case "apps/v1beta1/ControllerRevision":
                return [{
                    name: `apps/v1beta1/ControllerRevision::${id}`,
                    resource: new apps.v1beta1.ControllerRevision(id, obj, opts),
                }];
            case "apps/v1beta1/ControllerRevisionList":
                return [{
                    name: `apps/v1beta1/ControllerRevisionList::${id}`,
                    resource: new apps.v1beta1.ControllerRevisionList(id, obj, opts),
                }];
            case "apps/v1beta1/Deployment":
                return [{
                    name: `apps/v1beta1/Deployment::${id}`,
                    resource: new apps.v1beta1.Deployment(id, obj, opts),
                }];
            case "apps/v1beta1/DeploymentList":
                return [{
                    name: `apps/v1beta1/DeploymentList::${id}`,
                    resource: new apps.v1beta1.DeploymentList(id, obj, opts),
                }];
            case "apps/v1beta1/DeploymentRollback":
                return [{
                    name: `apps/v1beta1/DeploymentRollback::${id}`,
                    resource: new apps.v1beta1.DeploymentRollback(id, obj, opts),
                }];
            case "apps/v1beta1/Scale":
                return [{
                    name: `apps/v1beta1/Scale::${id}`,
                    resource: new apps.v1beta1.Scale(id, obj, opts),
                }];
            case "apps/v1beta1/StatefulSet":
                return [{
                    name: `apps/v1beta1/StatefulSet::${id}`,
                    resource: new apps.v1beta1.StatefulSet(id, obj, opts),
                }];
            case "apps/v1beta1/StatefulSetList":
                return [{
                    name: `apps/v1beta1/StatefulSetList::${id}`,
                    resource: new apps.v1beta1.StatefulSetList(id, obj, opts),
                }];
            case "apps/v1beta2/ControllerRevision":
                return [{
                    name: `apps/v1beta2/ControllerRevision::${id}`,
                    resource: new apps.v1beta2.ControllerRevision(id, obj, opts),
                }];
            case "apps/v1beta2/ControllerRevisionList":
                return [{
                    name: `apps/v1beta2/ControllerRevisionList::${id}`,
                    resource: new apps.v1beta2.ControllerRevisionList(id, obj, opts),
                }];
            case "apps/v1beta2/DaemonSet":
                return [{
                    name: `apps/v1beta2/DaemonSet::${id}`,
                    resource: new apps.v1beta2.DaemonSet(id, obj, opts),
                }];
            case "apps/v1beta2/DaemonSetList":
                return [{
                    name: `apps/v1beta2/DaemonSetList::${id}`,
                    resource: new apps.v1beta2.DaemonSetList(id, obj, opts),
                }];
            case "apps/v1beta2/Deployment":
                return [{
                    name: `apps/v1beta2/Deployment::${id}`,
                    resource: new apps.v1beta2.Deployment(id, obj, opts),
                }];
            case "apps/v1beta2/DeploymentList":
                return [{
                    name: `apps/v1beta2/DeploymentList::${id}`,
                    resource: new apps.v1beta2.DeploymentList(id, obj, opts),
                }];
            case "apps/v1beta2/ReplicaSet":
                return [{
                    name: `apps/v1beta2/ReplicaSet::${id}`,
                    resource: new apps.v1beta2.ReplicaSet(id, obj, opts),
                }];
            case "apps/v1beta2/ReplicaSetList":
                return [{
                    name: `apps/v1beta2/ReplicaSetList::${id}`,
                    resource: new apps.v1beta2.ReplicaSetList(id, obj, opts),
                }];
            case "apps/v1beta2/Scale":
                return [{
                    name: `apps/v1beta2/Scale::${id}`,
                    resource: new apps.v1beta2.Scale(id, obj, opts),
                }];
            case "apps/v1beta2/StatefulSet":
                return [{
                    name: `apps/v1beta2/StatefulSet::${id}`,
                    resource: new apps.v1beta2.StatefulSet(id, obj, opts),
                }];
            case "apps/v1beta2/StatefulSetList":
                return [{
                    name: `apps/v1beta2/StatefulSetList::${id}`,
                    resource: new apps.v1beta2.StatefulSetList(id, obj, opts),
                }];
            case "auditregistration.k8s.io/v1alpha1/AuditSink":
                return [{
                    name: `auditregistration.k8s.io/v1alpha1/AuditSink::${id}`,
                    resource: new auditregistration.v1alpha1.AuditSink(id, obj, opts),
                }];
            case "auditregistration.k8s.io/v1alpha1/AuditSinkList":
                return [{
                    name: `auditregistration.k8s.io/v1alpha1/AuditSinkList::${id}`,
                    resource: new auditregistration.v1alpha1.AuditSinkList(id, obj, opts),
                }];
            case "authentication.k8s.io/v1/TokenReview":
                return [{
                    name: `authentication.k8s.io/v1/TokenReview::${id}`,
                    resource: new authentication.v1.TokenReview(id, obj, opts),
                }];
            case "authentication.k8s.io/v1beta1/TokenReview":
                return [{
                    name: `authentication.k8s.io/v1beta1/TokenReview::${id}`,
                    resource: new authentication.v1beta1.TokenReview(id, obj, opts),
                }];
            case "authorization.k8s.io/v1/LocalSubjectAccessReview":
                return [{
                    name: `authorization.k8s.io/v1/LocalSubjectAccessReview::${id}`,
                    resource: new authorization.v1.LocalSubjectAccessReview(id, obj, opts),
                }];
            case "authorization.k8s.io/v1/SelfSubjectAccessReview":
                return [{
                    name: `authorization.k8s.io/v1/SelfSubjectAccessReview::${id}`,
                    resource: new authorization.v1.SelfSubjectAccessReview(id, obj, opts),
                }];
            case "authorization.k8s.io/v1/SelfSubjectRulesReview":
                return [{
                    name: `authorization.k8s.io/v1/SelfSubjectRulesReview::${id}`,
                    resource: new authorization.v1.SelfSubjectRulesReview(id, obj, opts),
                }];
            case "authorization.k8s.io/v1/SubjectAccessReview":
                return [{
                    name: `authorization.k8s.io/v1/SubjectAccessReview::${id}`,
                    resource: new authorization.v1.SubjectAccessReview(id, obj, opts),
                }];
            case "authorization.k8s.io/v1beta1/LocalSubjectAccessReview":
                return [{
                    name: `authorization.k8s.io/v1beta1/LocalSubjectAccessReview::${id}`,
                    resource: new authorization.v1beta1.LocalSubjectAccessReview(id, obj, opts),
                }];
            case "authorization.k8s.io/v1beta1/SelfSubjectAccessReview":
                return [{
                    name: `authorization.k8s.io/v1beta1/SelfSubjectAccessReview::${id}`,
                    resource: new authorization.v1beta1.SelfSubjectAccessReview(id, obj, opts),
                }];
            case "authorization.k8s.io/v1beta1/SelfSubjectRulesReview":
                return [{
                    name: `authorization.k8s.io/v1beta1/SelfSubjectRulesReview::${id}`,
                    resource: new authorization.v1beta1.SelfSubjectRulesReview(id, obj, opts),
                }];
            case "authorization.k8s.io/v1beta1/SubjectAccessReview":
                return [{
                    name: `authorization.k8s.io/v1beta1/SubjectAccessReview::${id}`,
                    resource: new authorization.v1beta1.SubjectAccessReview(id, obj, opts),
                }];
            case "autoscaling/v1/CrossVersionObjectReference":
                return [{
                    name: `autoscaling/v1/CrossVersionObjectReference::${id}`,
                    resource: new autoscaling.v1.CrossVersionObjectReference(id, obj, opts),
                }];
            case "autoscaling/v1/HorizontalPodAutoscaler":
                return [{
                    name: `autoscaling/v1/HorizontalPodAutoscaler::${id}`,
                    resource: new autoscaling.v1.HorizontalPodAutoscaler(id, obj, opts),
                }];
            case "autoscaling/v1/HorizontalPodAutoscalerList":
                return [{
                    name: `autoscaling/v1/HorizontalPodAutoscalerList::${id}`,
                    resource: new autoscaling.v1.HorizontalPodAutoscalerList(id, obj, opts),
                }];
            case "autoscaling/v1/Scale":
                return [{
                    name: `autoscaling/v1/Scale::${id}`,
                    resource: new autoscaling.v1.Scale(id, obj, opts),
                }];
            case "autoscaling/v2beta1/CrossVersionObjectReference":
                return [{
                    name: `autoscaling/v2beta1/CrossVersionObjectReference::${id}`,
                    resource: new autoscaling.v2beta1.CrossVersionObjectReference(id, obj, opts),
                }];
            case "autoscaling/v2beta1/HorizontalPodAutoscaler":
                return [{
                    name: `autoscaling/v2beta1/HorizontalPodAutoscaler::${id}`,
                    resource: new autoscaling.v2beta1.HorizontalPodAutoscaler(id, obj, opts),
                }];
            case "autoscaling/v2beta1/HorizontalPodAutoscalerList":
                return [{
                    name: `autoscaling/v2beta1/HorizontalPodAutoscalerList::${id}`,
                    resource: new autoscaling.v2beta1.HorizontalPodAutoscalerList(id, obj, opts),
                }];
            case "autoscaling/v2beta2/CrossVersionObjectReference":
                return [{
                    name: `autoscaling/v2beta2/CrossVersionObjectReference::${id}`,
                    resource: new autoscaling.v2beta2.CrossVersionObjectReference(id, obj, opts),
                }];
            case "autoscaling/v2beta2/HorizontalPodAutoscaler":
                return [{
                    name: `autoscaling/v2beta2/HorizontalPodAutoscaler::${id}`,
                    resource: new autoscaling.v2beta2.HorizontalPodAutoscaler(id, obj, opts),
                }];
            case "autoscaling/v2beta2/HorizontalPodAutoscalerList":
                return [{
                    name: `autoscaling/v2beta2/HorizontalPodAutoscalerList::${id}`,
                    resource: new autoscaling.v2beta2.HorizontalPodAutoscalerList(id, obj, opts),
                }];
            case "batch/v1/Job":
                return [{
                    name: `batch/v1/Job::${id}`,
                    resource: new batch.v1.Job(id, obj, opts),
                }];
            case "batch/v1/JobList":
                return [{
                    name: `batch/v1/JobList::${id}`,
                    resource: new batch.v1.JobList(id, obj, opts),
                }];
            case "batch/v1beta1/CronJob":
                return [{
                    name: `batch/v1beta1/CronJob::${id}`,
                    resource: new batch.v1beta1.CronJob(id, obj, opts),
                }];
            case "batch/v1beta1/CronJobList":
                return [{
                    name: `batch/v1beta1/CronJobList::${id}`,
                    resource: new batch.v1beta1.CronJobList(id, obj, opts),
                }];
            case "batch/v2alpha1/CronJob":
                return [{
                    name: `batch/v2alpha1/CronJob::${id}`,
                    resource: new batch.v2alpha1.CronJob(id, obj, opts),
                }];
            case "batch/v2alpha1/CronJobList":
                return [{
                    name: `batch/v2alpha1/CronJobList::${id}`,
                    resource: new batch.v2alpha1.CronJobList(id, obj, opts),
                }];
            case "certificates.k8s.io/v1beta1/CertificateSigningRequest":
                return [{
                    name: `certificates.k8s.io/v1beta1/CertificateSigningRequest::${id}`,
                    resource: new certificates.v1beta1.CertificateSigningRequest(id, obj, opts),
                }];
            case "certificates.k8s.io/v1beta1/CertificateSigningRequestList":
                return [{
                    name: `certificates.k8s.io/v1beta1/CertificateSigningRequestList::${id}`,
                    resource: new certificates.v1beta1.CertificateSigningRequestList(id, obj, opts),
                }];
            case "coordination.k8s.io/v1beta1/Lease":
                return [{
                    name: `coordination.k8s.io/v1beta1/Lease::${id}`,
                    resource: new coordination.v1beta1.Lease(id, obj, opts),
                }];
            case "coordination.k8s.io/v1beta1/LeaseList":
                return [{
                    name: `coordination.k8s.io/v1beta1/LeaseList::${id}`,
                    resource: new coordination.v1beta1.LeaseList(id, obj, opts),
                }];
            case "v1/Binding":
                return [{
                    name: `v1/Binding::${id}`,
                    resource: new core.v1.Binding(id, obj, opts),
                }];
            case "v1/ComponentStatus":
                return [{
                    name: `v1/ComponentStatus::${id}`,
                    resource: new core.v1.ComponentStatus(id, obj, opts),
                }];
            case "v1/ComponentStatusList":
                return [{
                    name: `v1/ComponentStatusList::${id}`,
                    resource: new core.v1.ComponentStatusList(id, obj, opts),
                }];
            case "v1/ConfigMap":
                return [{
                    name: `v1/ConfigMap::${id}`,
                    resource: new core.v1.ConfigMap(id, obj, opts),
                }];
            case "v1/ConfigMapList":
                return [{
                    name: `v1/ConfigMapList::${id}`,
                    resource: new core.v1.ConfigMapList(id, obj, opts),
                }];
            case "v1/Endpoints":
                return [{
                    name: `v1/Endpoints::${id}`,
                    resource: new core.v1.Endpoints(id, obj, opts),
                }];
            case "v1/EndpointsList":
                return [{
                    name: `v1/EndpointsList::${id}`,
                    resource: new core.v1.EndpointsList(id, obj, opts),
                }];
            case "v1/Event":
                return [{
                    name: `v1/Event::${id}`,
                    resource: new core.v1.Event(id, obj, opts),
                }];
            case "v1/EventList":
                return [{
                    name: `v1/EventList::${id}`,
                    resource: new core.v1.EventList(id, obj, opts),
                }];
            case "v1/LimitRange":
                return [{
                    name: `v1/LimitRange::${id}`,
                    resource: new core.v1.LimitRange(id, obj, opts),
                }];
            case "v1/LimitRangeList":
                return [{
                    name: `v1/LimitRangeList::${id}`,
                    resource: new core.v1.LimitRangeList(id, obj, opts),
                }];
            case "v1/Namespace":
                return [{
                    name: `v1/Namespace::${id}`,
                    resource: new core.v1.Namespace(id, obj, opts),
                }];
            case "v1/NamespaceList":
                return [{
                    name: `v1/NamespaceList::${id}`,
                    resource: new core.v1.NamespaceList(id, obj, opts),
                }];
            case "v1/Node":
                return [{
                    name: `v1/Node::${id}`,
                    resource: new core.v1.Node(id, obj, opts),
                }];
            case "v1/NodeList":
                return [{
                    name: `v1/NodeList::${id}`,
                    resource: new core.v1.NodeList(id, obj, opts),
                }];
            case "core/v1/ObjectReference":
                return [{
                    name: `core/v1/ObjectReference::${id}`,
                    resource: new core.v1.ObjectReference(id, obj, opts),
                }];
            case "v1/PersistentVolume":
                return [{
                    name: `v1/PersistentVolume::${id}`,
                    resource: new core.v1.PersistentVolume(id, obj, opts),
                }];
            case "v1/PersistentVolumeClaim":
                return [{
                    name: `v1/PersistentVolumeClaim::${id}`,
                    resource: new core.v1.PersistentVolumeClaim(id, obj, opts),
                }];
            case "v1/PersistentVolumeClaimList":
                return [{
                    name: `v1/PersistentVolumeClaimList::${id}`,
                    resource: new core.v1.PersistentVolumeClaimList(id, obj, opts),
                }];
            case "v1/PersistentVolumeList":
                return [{
                    name: `v1/PersistentVolumeList::${id}`,
                    resource: new core.v1.PersistentVolumeList(id, obj, opts),
                }];
            case "v1/Pod":
                return [{
                    name: `v1/Pod::${id}`,
                    resource: new core.v1.Pod(id, obj, opts),
                }];
            case "v1/PodList":
                return [{
                    name: `v1/PodList::${id}`,
                    resource: new core.v1.PodList(id, obj, opts),
                }];
            case "v1/PodTemplate":
                return [{
                    name: `v1/PodTemplate::${id}`,
                    resource: new core.v1.PodTemplate(id, obj, opts),
                }];
            case "v1/PodTemplateList":
                return [{
                    name: `v1/PodTemplateList::${id}`,
                    resource: new core.v1.PodTemplateList(id, obj, opts),
                }];
            case "v1/ReplicationController":
                return [{
                    name: `v1/ReplicationController::${id}`,
                    resource: new core.v1.ReplicationController(id, obj, opts),
                }];
            case "v1/ReplicationControllerList":
                return [{
                    name: `v1/ReplicationControllerList::${id}`,
                    resource: new core.v1.ReplicationControllerList(id, obj, opts),
                }];
            case "v1/ResourceQuota":
                return [{
                    name: `v1/ResourceQuota::${id}`,
                    resource: new core.v1.ResourceQuota(id, obj, opts),
                }];
            case "v1/ResourceQuotaList":
                return [{
                    name: `v1/ResourceQuotaList::${id}`,
                    resource: new core.v1.ResourceQuotaList(id, obj, opts),
                }];
            case "v1/Secret":
                return [{
                    name: `v1/Secret::${id}`,
                    resource: new core.v1.Secret(id, obj, opts),
                }];
            case "v1/SecretList":
                return [{
                    name: `v1/SecretList::${id}`,
                    resource: new core.v1.SecretList(id, obj, opts),
                }];
            case "v1/Service":
                return [{
                    name: `v1/Service::${id}`,
                    resource: new core.v1.Service(id, obj, opts),
                }];
            case "v1/ServiceAccount":
                return [{
                    name: `v1/ServiceAccount::${id}`,
                    resource: new core.v1.ServiceAccount(id, obj, opts),
                }];
            case "v1/ServiceAccountList":
                return [{
                    name: `v1/ServiceAccountList::${id}`,
                    resource: new core.v1.ServiceAccountList(id, obj, opts),
                }];
            case "v1/ServiceList":
                return [{
                    name: `v1/ServiceList::${id}`,
                    resource: new core.v1.ServiceList(id, obj, opts),
                }];
            case "events.k8s.io/v1beta1/Event":
                return [{
                    name: `events.k8s.io/v1beta1/Event::${id}`,
                    resource: new events.v1beta1.Event(id, obj, opts),
                }];
            case "events.k8s.io/v1beta1/EventList":
                return [{
                    name: `events.k8s.io/v1beta1/EventList::${id}`,
                    resource: new events.v1beta1.EventList(id, obj, opts),
                }];
            case "extensions/v1beta1/DaemonSet":
                return [{
                    name: `extensions/v1beta1/DaemonSet::${id}`,
                    resource: new extensions.v1beta1.DaemonSet(id, obj, opts),
                }];
            case "extensions/v1beta1/DaemonSetList":
                return [{
                    name: `extensions/v1beta1/DaemonSetList::${id}`,
                    resource: new extensions.v1beta1.DaemonSetList(id, obj, opts),
                }];
            case "extensions/v1beta1/Deployment":
                return [{
                    name: `extensions/v1beta1/Deployment::${id}`,
                    resource: new extensions.v1beta1.Deployment(id, obj, opts),
                }];
            case "extensions/v1beta1/DeploymentList":
                return [{
                    name: `extensions/v1beta1/DeploymentList::${id}`,
                    resource: new extensions.v1beta1.DeploymentList(id, obj, opts),
                }];
            case "extensions/v1beta1/DeploymentRollback":
                return [{
                    name: `extensions/v1beta1/DeploymentRollback::${id}`,
                    resource: new extensions.v1beta1.DeploymentRollback(id, obj, opts),
                }];
            case "extensions/v1beta1/Ingress":
                return [{
                    name: `extensions/v1beta1/Ingress::${id}`,
                    resource: new extensions.v1beta1.Ingress(id, obj, opts),
                }];
            case "extensions/v1beta1/IngressList":
                return [{
                    name: `extensions/v1beta1/IngressList::${id}`,
                    resource: new extensions.v1beta1.IngressList(id, obj, opts),
                }];
            case "extensions/v1beta1/NetworkPolicy":
                return [{
                    name: `extensions/v1beta1/NetworkPolicy::${id}`,
                    resource: new extensions.v1beta1.NetworkPolicy(id, obj, opts),
                }];
            case "extensions/v1beta1/NetworkPolicyList":
                return [{
                    name: `extensions/v1beta1/NetworkPolicyList::${id}`,
                    resource: new extensions.v1beta1.NetworkPolicyList(id, obj, opts),
                }];
            case "extensions/v1beta1/PodSecurityPolicy":
                return [{
                    name: `extensions/v1beta1/PodSecurityPolicy::${id}`,
                    resource: new extensions.v1beta1.PodSecurityPolicy(id, obj, opts),
                }];
            case "extensions/v1beta1/PodSecurityPolicyList":
                return [{
                    name: `extensions/v1beta1/PodSecurityPolicyList::${id}`,
                    resource: new extensions.v1beta1.PodSecurityPolicyList(id, obj, opts),
                }];
            case "extensions/v1beta1/ReplicaSet":
                return [{
                    name: `extensions/v1beta1/ReplicaSet::${id}`,
                    resource: new extensions.v1beta1.ReplicaSet(id, obj, opts),
                }];
            case "extensions/v1beta1/ReplicaSetList":
                return [{
                    name: `extensions/v1beta1/ReplicaSetList::${id}`,
                    resource: new extensions.v1beta1.ReplicaSetList(id, obj, opts),
                }];
            case "extensions/v1beta1/Scale":
                return [{
                    name: `extensions/v1beta1/Scale::${id}`,
                    resource: new extensions.v1beta1.Scale(id, obj, opts),
                }];
            case "v1/APIGroup":
                return [{
                    name: `v1/APIGroup::${id}`,
                    resource: new meta.v1.APIGroup(id, obj, opts),
                }];
            case "v1/APIGroupList":
                return [{
                    name: `v1/APIGroupList::${id}`,
                    resource: new meta.v1.APIGroupList(id, obj, opts),
                }];
            case "v1/APIResourceList":
                return [{
                    name: `v1/APIResourceList::${id}`,
                    resource: new meta.v1.APIResourceList(id, obj, opts),
                }];
            case "v1/APIVersions":
                return [{
                    name: `v1/APIVersions::${id}`,
                    resource: new meta.v1.APIVersions(id, obj, opts),
                }];
            case "v1/DeleteOptions":
                return [{
                    name: `v1/DeleteOptions::${id}`,
                    resource: new meta.v1.DeleteOptions(id, obj, opts),
                }];
            case "meta/v1/OwnerReference":
                return [{
                    name: `meta/v1/OwnerReference::${id}`,
                    resource: new meta.v1.OwnerReference(id, obj, opts),
                }];
            case "v1/Status":
                return [{
                    name: `v1/Status::${id}`,
                    resource: new meta.v1.Status(id, obj, opts),
                }];
            case "networking.k8s.io/v1/NetworkPolicy":
                return [{
                    name: `networking.k8s.io/v1/NetworkPolicy::${id}`,
                    resource: new networking.v1.NetworkPolicy(id, obj, opts),
                }];
            case "networking.k8s.io/v1/NetworkPolicyList":
                return [{
                    name: `networking.k8s.io/v1/NetworkPolicyList::${id}`,
                    resource: new networking.v1.NetworkPolicyList(id, obj, opts),
                }];
            case "policy/v1beta1/Eviction":
                return [{
                    name: `policy/v1beta1/Eviction::${id}`,
                    resource: new policy.v1beta1.Eviction(id, obj, opts),
                }];
            case "policy/v1beta1/PodDisruptionBudget":
                return [{
                    name: `policy/v1beta1/PodDisruptionBudget::${id}`,
                    resource: new policy.v1beta1.PodDisruptionBudget(id, obj, opts),
                }];
            case "policy/v1beta1/PodDisruptionBudgetList":
                return [{
                    name: `policy/v1beta1/PodDisruptionBudgetList::${id}`,
                    resource: new policy.v1beta1.PodDisruptionBudgetList(id, obj, opts),
                }];
            case "policy/v1beta1/PodSecurityPolicy":
                return [{
                    name: `policy/v1beta1/PodSecurityPolicy::${id}`,
                    resource: new policy.v1beta1.PodSecurityPolicy(id, obj, opts),
                }];
            case "policy/v1beta1/PodSecurityPolicyList":
                return [{
                    name: `policy/v1beta1/PodSecurityPolicyList::${id}`,
                    resource: new policy.v1beta1.PodSecurityPolicyList(id, obj, opts),
                }];
            case "rbac.authorization.k8s.io/v1/ClusterRole":
                return [{
                    name: `rbac.authorization.k8s.io/v1/ClusterRole::${id}`,
                    resource: new rbac.v1.ClusterRole(id, obj, opts),
                }];
            case "rbac.authorization.k8s.io/v1/ClusterRoleBinding":
                return [{
                    name: `rbac.authorization.k8s.io/v1/ClusterRoleBinding::${id}`,
                    resource: new rbac.v1.ClusterRoleBinding(id, obj, opts),
                }];
            case "rbac.authorization.k8s.io/v1/ClusterRoleBindingList":
                return [{
                    name: `rbac.authorization.k8s.io/v1/ClusterRoleBindingList::${id}`,
                    resource: new rbac.v1.ClusterRoleBindingList(id, obj, opts),
                }];
            case "rbac.authorization.k8s.io/v1/ClusterRoleList":
                return [{
                    name: `rbac.authorization.k8s.io/v1/ClusterRoleList::${id}`,
                    resource: new rbac.v1.ClusterRoleList(id, obj, opts),
                }];
            case "rbac.authorization.k8s.io/v1/Role":
                return [{
                    name: `rbac.authorization.k8s.io/v1/Role::${id}`,
                    resource: new rbac.v1.Role(id, obj, opts),
                }];
            case "rbac.authorization.k8s.io/v1/RoleBinding":
                return [{
                    name: `rbac.authorization.k8s.io/v1/RoleBinding::${id}`,
                    resource: new rbac.v1.RoleBinding(id, obj, opts),
                }];
            case "rbac.authorization.k8s.io/v1/RoleBindingList":
                return [{
                    name: `rbac.authorization.k8s.io/v1/RoleBindingList::${id}`,
                    resource: new rbac.v1.RoleBindingList(id, obj, opts),
                }];
            case "rbac.authorization.k8s.io/v1/RoleList":
                return [{
                    name: `rbac.authorization.k8s.io/v1/RoleList::${id}`,
                    resource: new rbac.v1.RoleList(id, obj, opts),
                }];
            case "rbac.authorization.k8s.io/v1alpha1/ClusterRole":
                return [{
                    name: `rbac.authorization.k8s.io/v1alpha1/ClusterRole::${id}`,
                    resource: new rbac.v1alpha1.ClusterRole(id, obj, opts),
                }];
            case "rbac.authorization.k8s.io/v1alpha1/ClusterRoleBinding":
                return [{
                    name: `rbac.authorization.k8s.io/v1alpha1/ClusterRoleBinding::${id}`,
                    resource: new rbac.v1alpha1.ClusterRoleBinding(id, obj, opts),
                }];
            case "rbac.authorization.k8s.io/v1alpha1/ClusterRoleBindingList":
                return [{
                    name: `rbac.authorization.k8s.io/v1alpha1/ClusterRoleBindingList::${id}`,
                    resource: new rbac.v1alpha1.ClusterRoleBindingList(id, obj, opts),
                }];
            case "rbac.authorization.k8s.io/v1alpha1/ClusterRoleList":
                return [{
                    name: `rbac.authorization.k8s.io/v1alpha1/ClusterRoleList::${id}`,
                    resource: new rbac.v1alpha1.ClusterRoleList(id, obj, opts),
                }];
            case "rbac.authorization.k8s.io/v1alpha1/Role":
                return [{
                    name: `rbac.authorization.k8s.io/v1alpha1/Role::${id}`,
                    resource: new rbac.v1alpha1.Role(id, obj, opts),
                }];
            case "rbac.authorization.k8s.io/v1alpha1/RoleBinding":
                return [{
                    name: `rbac.authorization.k8s.io/v1alpha1/RoleBinding::${id}`,
                    resource: new rbac.v1alpha1.RoleBinding(id, obj, opts),
                }];
            case "rbac.authorization.k8s.io/v1alpha1/RoleBindingList":
                return [{
                    name: `rbac.authorization.k8s.io/v1alpha1/RoleBindingList::${id}`,
                    resource: new rbac.v1alpha1.RoleBindingList(id, obj, opts),
                }];
            case "rbac.authorization.k8s.io/v1alpha1/RoleList":
                return [{
                    name: `rbac.authorization.k8s.io/v1alpha1/RoleList::${id}`,
                    resource: new rbac.v1alpha1.RoleList(id, obj, opts),
                }];
            case "rbac/v1alpha1/Subject":
                return [{
                    name: `rbac/v1alpha1/Subject::${id}`,
                    resource: new rbac.v1alpha1.Subject(id, obj, opts),
                }];
            case "rbac.authorization.k8s.io/v1beta1/ClusterRole":
                return [{
                    name: `rbac.authorization.k8s.io/v1beta1/ClusterRole::${id}`,
                    resource: new rbac.v1beta1.ClusterRole(id, obj, opts),
                }];
            case "rbac.authorization.k8s.io/v1beta1/ClusterRoleBinding":
                return [{
                    name: `rbac.authorization.k8s.io/v1beta1/ClusterRoleBinding::${id}`,
                    resource: new rbac.v1beta1.ClusterRoleBinding(id, obj, opts),
                }];
            case "rbac.authorization.k8s.io/v1beta1/ClusterRoleBindingList":
                return [{
                    name: `rbac.authorization.k8s.io/v1beta1/ClusterRoleBindingList::${id}`,
                    resource: new rbac.v1beta1.ClusterRoleBindingList(id, obj, opts),
                }];
            case "rbac.authorization.k8s.io/v1beta1/ClusterRoleList":
                return [{
                    name: `rbac.authorization.k8s.io/v1beta1/ClusterRoleList::${id}`,
                    resource: new rbac.v1beta1.ClusterRoleList(id, obj, opts),
                }];
            case "rbac.authorization.k8s.io/v1beta1/Role":
                return [{
                    name: `rbac.authorization.k8s.io/v1beta1/Role::${id}`,
                    resource: new rbac.v1beta1.Role(id, obj, opts),
                }];
            case "rbac.authorization.k8s.io/v1beta1/RoleBinding":
                return [{
                    name: `rbac.authorization.k8s.io/v1beta1/RoleBinding::${id}`,
                    resource: new rbac.v1beta1.RoleBinding(id, obj, opts),
                }];
            case "rbac.authorization.k8s.io/v1beta1/RoleBindingList":
                return [{
                    name: `rbac.authorization.k8s.io/v1beta1/RoleBindingList::${id}`,
                    resource: new rbac.v1beta1.RoleBindingList(id, obj, opts),
                }];
            case "rbac.authorization.k8s.io/v1beta1/RoleList":
                return [{
                    name: `rbac.authorization.k8s.io/v1beta1/RoleList::${id}`,
                    resource: new rbac.v1beta1.RoleList(id, obj, opts),
                }];
            case "scheduling.k8s.io/v1alpha1/PriorityClass":
                return [{
                    name: `scheduling.k8s.io/v1alpha1/PriorityClass::${id}`,
                    resource: new scheduling.v1alpha1.PriorityClass(id, obj, opts),
                }];
            case "scheduling.k8s.io/v1alpha1/PriorityClassList":
                return [{
                    name: `scheduling.k8s.io/v1alpha1/PriorityClassList::${id}`,
                    resource: new scheduling.v1alpha1.PriorityClassList(id, obj, opts),
                }];
            case "scheduling.k8s.io/v1beta1/PriorityClass":
                return [{
                    name: `scheduling.k8s.io/v1beta1/PriorityClass::${id}`,
                    resource: new scheduling.v1beta1.PriorityClass(id, obj, opts),
                }];
            case "scheduling.k8s.io/v1beta1/PriorityClassList":
                return [{
                    name: `scheduling.k8s.io/v1beta1/PriorityClassList::${id}`,
                    resource: new scheduling.v1beta1.PriorityClassList(id, obj, opts),
                }];
            case "settings.k8s.io/v1alpha1/PodPreset":
                return [{
                    name: `settings.k8s.io/v1alpha1/PodPreset::${id}`,
                    resource: new settings.v1alpha1.PodPreset(id, obj, opts),
                }];
            case "settings.k8s.io/v1alpha1/PodPresetList":
                return [{
                    name: `settings.k8s.io/v1alpha1/PodPresetList::${id}`,
                    resource: new settings.v1alpha1.PodPresetList(id, obj, opts),
                }];
            case "storage.k8s.io/v1/StorageClass":
                return [{
                    name: `storage.k8s.io/v1/StorageClass::${id}`,
                    resource: new storage.v1.StorageClass(id, obj, opts),
                }];
            case "storage.k8s.io/v1/StorageClassList":
                return [{
                    name: `storage.k8s.io/v1/StorageClassList::${id}`,
                    resource: new storage.v1.StorageClassList(id, obj, opts),
                }];
            case "storage.k8s.io/v1/VolumeAttachment":
                return [{
                    name: `storage.k8s.io/v1/VolumeAttachment::${id}`,
                    resource: new storage.v1.VolumeAttachment(id, obj, opts),
                }];
            case "storage.k8s.io/v1/VolumeAttachmentList":
                return [{
                    name: `storage.k8s.io/v1/VolumeAttachmentList::${id}`,
                    resource: new storage.v1.VolumeAttachmentList(id, obj, opts),
                }];
            case "storage.k8s.io/v1alpha1/VolumeAttachment":
                return [{
                    name: `storage.k8s.io/v1alpha1/VolumeAttachment::${id}`,
                    resource: new storage.v1alpha1.VolumeAttachment(id, obj, opts),
                }];
            case "storage.k8s.io/v1alpha1/VolumeAttachmentList":
                return [{
                    name: `storage.k8s.io/v1alpha1/VolumeAttachmentList::${id}`,
                    resource: new storage.v1alpha1.VolumeAttachmentList(id, obj, opts),
                }];
            case "storage.k8s.io/v1beta1/StorageClass":
                return [{
                    name: `storage.k8s.io/v1beta1/StorageClass::${id}`,
                    resource: new storage.v1beta1.StorageClass(id, obj, opts),
                }];
            case "storage.k8s.io/v1beta1/StorageClassList":
                return [{
                    name: `storage.k8s.io/v1beta1/StorageClassList::${id}`,
                    resource: new storage.v1beta1.StorageClassList(id, obj, opts),
                }];
            case "storage.k8s.io/v1beta1/VolumeAttachment":
                return [{
                    name: `storage.k8s.io/v1beta1/VolumeAttachment::${id}`,
                    resource: new storage.v1beta1.VolumeAttachment(id, obj, opts),
                }];
            case "storage.k8s.io/v1beta1/VolumeAttachmentList":
                return [{
                    name: `storage.k8s.io/v1beta1/VolumeAttachmentList::${id}`,
                    resource: new storage.v1beta1.VolumeAttachmentList(id, obj, opts),
                }];
            default:
                return [{
                    name: `${apiVersion}/${kind}::${id}`,
                    resource: new apiextensions.CustomResource(id, obj, opts),
                }];
        }
    }
}

export namespace apiextensions {
    /**
     * CustomResourceArgs represents a resource definiton we'd use to create an instance of a
     * Kubernetes CustomResourceDefinition (CRD). For example, the CoreOS Prometheus operator
     * exposes a CRD `monitoring.coreos.com/ServiceMonitor`; to create a `ServiceMonitor`, we'd
     * pass a `CustomResourceArgs` containing the `ServiceMonitor` definition to
     * `apiextensions.CustomResource`.
     *
     * NOTE: This type is fairly loose, since other than `apiVersion` and `kind`, there are no
     * fields required across all CRDs.
     */
    export interface CustomResourceArgs {
        /**
         * APIVersion defines the versioned schema of this representation of an object. Servers should
         * convert recognized schemas to the latest internal value, and may reject unrecognized
         * values. More info:
         * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
         */
        apiVersion: pulumi.Input<string>;

        /**
         * Kind is a string value representing the REST resource this object represents. Servers may
         * infer this from the endpoint the client submits requests to. Cannot be updated. In
         * CamelCase. More info:
         * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
         */
        kind: pulumi.Input<string>;

        /**
         * Standard object metadata; More info:
         * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.
         */
        metadata?: pulumi.Input<inputApi.meta.v1.ObjectMeta>;
        [othersFields: string]: pulumi.Input<any>;
    }

    /**
     * CustomResourceGetOptions uniquely identifies a Kubernetes CustomResource, primarily for use
     * in supplied to `apiextensions.CustomResource#get`.
     */
    export interface CustomResourceGetOptions extends pulumi.CustomResourceOptions {
        /**
         * apiVersion is the API version of the apiExtensions.CustomResource we wish to select,
         * as specified by the CustomResourceDefinition that defines it on the API server.
         */
        apiVersion: pulumi.Input<string>;

        /**
         * kind is the kind of the apiextensions.CustomResource we wish to select, as specified by
         * the CustomResourceDefinition that defines it on the API server.
         */
        kind: pulumi.Input<string>

        /**
         * An ID for the Kubernetes resource to retrive. Takes the form <namespace>/<name> or
         * <name>.
         */
        id: pulumi.Input<pulumi.ID>;
    }

    /**
     * CustomResource represents an instance of a CustomResourceDefinition (CRD). For example, the
     * CoreOS Prometheus operator exposes a CRD `monitoring.coreos.com/ServiceMonitor`; to
     * instantiate this as a Pulumi resource, one could call `new CustomResource`, passing the
     * `ServiceMonitor` resource definition as an argument.
     */
    export class CustomResource extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<string>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<string>;

      /**
       * Standard object metadata; More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Get the state of an existing `CustomResource`, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, opts: CustomResourceGetOptions): CustomResource {
          // NOTE: `selectOpts` will be type `pulumi.CustomResource`. If we add a field that does
          // not satisfy that interface, it will cause a compilation error in `...selectOpts` in
          // the constructor call below.
          const {apiVersion, kind, id, ...selectOpts} = opts;
          return new CustomResource(name, {apiVersion: apiVersion, kind: kind}, { ...selectOpts, id: id });
      }

      public getInputs(): CustomResourceArgs { return this.__inputs; }
      private readonly __inputs: CustomResourceArgs;

      /**
      * Create a CustomResource resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args: CustomResourceArgs, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          for (const key of Object.keys(args)) {
              inputs[key] = (args as any)[key];
          }
          super(`kubernetes:${args.apiVersion}:${args.kind}`, name, inputs, opts);
          this.__inputs = args;
      }
    }
}

/**
 * The provider type for the kubernetes package.
 */
export class Provider extends pulumi.ProviderResource {
    /**
     * Create a Provider resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ProviderArgs, opts?: pulumi.ResourceOptions) {
        let inputs: pulumi.Inputs = {
            "cluster": args ? args.cluster : undefined,
            "context": args ? args.context : undefined,
            "kubeconfig": args ? args.kubeconfig : undefined,
            "namespace": args ? args.namespace : undefined,
        };
        super("kubernetes", name, inputs, opts);
    }
}

/**
 * The set of arguments for constructing a Provider.
 */
export interface ProviderArgs {
    /**
     * If present, the name of the kubeconfig cluster to use.
     */
    readonly cluster?: pulumi.Input<string>;
    /**
     * If present, the name of the kubeconfig context to use.
     */
    readonly context?: pulumi.Input<string>;
    /**
     * The contents of a kubeconfig file. If this is set, this config will be used instead of $KUBECONFIG.
     */
    readonly kubeconfig?: pulumi.Input<string>;
    /**
     * If present, the namespace scope to use.
     */
    readonly namespace?: pulumi.Input<string>;
}

export namespace admissionregistration {
  export namespace v1alpha1 {
    /**
     * InitializerConfiguration describes the configuration of initializers.
     */
    export class InitializerConfiguration extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"admissionregistration.k8s.io/v1alpha1">;

      /**
       * Initializers is a list of resources and their default initializers Order-sensitive. When
       * merging multiple InitializerConfigurations, we sort the initializers from different
       * InitializerConfigurations by the name of the InitializerConfigurations; the order of the
       * initializers from the same InitializerConfiguration is preserved.
       */
      public readonly initializers: pulumi.Output<outputApi.admissionregistration.v1alpha1.Initializer[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"InitializerConfiguration">;

      /**
       * Standard object metadata; More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;


      /**
       * Get the state of an existing `InitializerConfiguration` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): InitializerConfiguration {
          return new InitializerConfiguration(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.admissionregistration.v1alpha1.InitializerConfiguration { return this.__inputs; }
      private readonly __inputs: inputApi.admissionregistration.v1alpha1.InitializerConfiguration;

      /**
      * Create a admissionregistration.v1alpha1.InitializerConfiguration resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.admissionregistration.v1alpha1.InitializerConfiguration, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "admissionregistration.k8s.io/v1alpha1";
          inputs["initializers"] = args && args.initializers || undefined;
          inputs["kind"] = "InitializerConfiguration";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:admissionregistration.k8s.io/v1alpha1:InitializerConfiguration", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * InitializerConfigurationList is a list of InitializerConfiguration.
     */
    export class InitializerConfigurationList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"admissionregistration.k8s.io/v1alpha1">;

      /**
       * List of InitializerConfiguration.
       */
      public readonly items: pulumi.Output<outputApi.admissionregistration.v1alpha1.InitializerConfiguration[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"InitializerConfigurationList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `InitializerConfigurationList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): InitializerConfigurationList {
          return new InitializerConfigurationList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.admissionregistration.v1alpha1.InitializerConfigurationList { return this.__inputs; }
      private readonly __inputs: inputApi.admissionregistration.v1alpha1.InitializerConfigurationList;

      /**
      * Create a admissionregistration.v1alpha1.InitializerConfigurationList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.admissionregistration.v1alpha1.InitializerConfigurationList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "admissionregistration.k8s.io/v1alpha1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "InitializerConfigurationList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:admissionregistration.k8s.io/v1alpha1:InitializerConfigurationList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

  export namespace v1beta1 {
    /**
     * MutatingWebhookConfiguration describes the configuration of and admission webhook that accept
     * or reject and may change the object.
     */
    export class MutatingWebhookConfiguration extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"admissionregistration.k8s.io/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"MutatingWebhookConfiguration">;

      /**
       * Standard object metadata; More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Webhooks is a list of webhooks and the affected resources and operations.
       */
      public readonly webhooks: pulumi.Output<outputApi.admissionregistration.v1beta1.Webhook[]>;


      /**
       * Get the state of an existing `MutatingWebhookConfiguration` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): MutatingWebhookConfiguration {
          return new MutatingWebhookConfiguration(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.admissionregistration.v1beta1.MutatingWebhookConfiguration { return this.__inputs; }
      private readonly __inputs: inputApi.admissionregistration.v1beta1.MutatingWebhookConfiguration;

      /**
      * Create a admissionregistration.v1beta1.MutatingWebhookConfiguration resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.admissionregistration.v1beta1.MutatingWebhookConfiguration, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "admissionregistration.k8s.io/v1beta1";
          inputs["kind"] = "MutatingWebhookConfiguration";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["webhooks"] = args && args.webhooks || undefined;
          super("kubernetes:admissionregistration.k8s.io/v1beta1:MutatingWebhookConfiguration", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * MutatingWebhookConfigurationList is a list of MutatingWebhookConfiguration.
     */
    export class MutatingWebhookConfigurationList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"admissionregistration.k8s.io/v1beta1">;

      /**
       * List of MutatingWebhookConfiguration.
       */
      public readonly items: pulumi.Output<outputApi.admissionregistration.v1beta1.MutatingWebhookConfiguration[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"MutatingWebhookConfigurationList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `MutatingWebhookConfigurationList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): MutatingWebhookConfigurationList {
          return new MutatingWebhookConfigurationList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.admissionregistration.v1beta1.MutatingWebhookConfigurationList { return this.__inputs; }
      private readonly __inputs: inputApi.admissionregistration.v1beta1.MutatingWebhookConfigurationList;

      /**
      * Create a admissionregistration.v1beta1.MutatingWebhookConfigurationList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.admissionregistration.v1beta1.MutatingWebhookConfigurationList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "admissionregistration.k8s.io/v1beta1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "MutatingWebhookConfigurationList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:admissionregistration.k8s.io/v1beta1:MutatingWebhookConfigurationList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * ValidatingWebhookConfiguration describes the configuration of and admission webhook that
     * accept or reject and object without changing it.
     */
    export class ValidatingWebhookConfiguration extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"admissionregistration.k8s.io/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ValidatingWebhookConfiguration">;

      /**
       * Standard object metadata; More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Webhooks is a list of webhooks and the affected resources and operations.
       */
      public readonly webhooks: pulumi.Output<outputApi.admissionregistration.v1beta1.Webhook[]>;


      /**
       * Get the state of an existing `ValidatingWebhookConfiguration` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ValidatingWebhookConfiguration {
          return new ValidatingWebhookConfiguration(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.admissionregistration.v1beta1.ValidatingWebhookConfiguration { return this.__inputs; }
      private readonly __inputs: inputApi.admissionregistration.v1beta1.ValidatingWebhookConfiguration;

      /**
      * Create a admissionregistration.v1beta1.ValidatingWebhookConfiguration resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.admissionregistration.v1beta1.ValidatingWebhookConfiguration, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "admissionregistration.k8s.io/v1beta1";
          inputs["kind"] = "ValidatingWebhookConfiguration";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["webhooks"] = args && args.webhooks || undefined;
          super("kubernetes:admissionregistration.k8s.io/v1beta1:ValidatingWebhookConfiguration", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * ValidatingWebhookConfigurationList is a list of ValidatingWebhookConfiguration.
     */
    export class ValidatingWebhookConfigurationList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"admissionregistration.k8s.io/v1beta1">;

      /**
       * List of ValidatingWebhookConfiguration.
       */
      public readonly items: pulumi.Output<outputApi.admissionregistration.v1beta1.ValidatingWebhookConfiguration[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ValidatingWebhookConfigurationList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `ValidatingWebhookConfigurationList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ValidatingWebhookConfigurationList {
          return new ValidatingWebhookConfigurationList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.admissionregistration.v1beta1.ValidatingWebhookConfigurationList { return this.__inputs; }
      private readonly __inputs: inputApi.admissionregistration.v1beta1.ValidatingWebhookConfigurationList;

      /**
      * Create a admissionregistration.v1beta1.ValidatingWebhookConfigurationList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.admissionregistration.v1beta1.ValidatingWebhookConfigurationList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "admissionregistration.k8s.io/v1beta1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "ValidatingWebhookConfigurationList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:admissionregistration.k8s.io/v1beta1:ValidatingWebhookConfigurationList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

}

export namespace apiextensions {
  export namespace v1beta1 {
    /**
     * CustomResourceDefinition represents a resource that should be exposed on the API server.  Its
     * name MUST be in the format <.spec.name>.<.spec.group>.
     */
    export class CustomResourceDefinition extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apiextensions.k8s.io/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"CustomResourceDefinition">;

      
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Spec describes how the user wants the resources to appear
       */
      public readonly spec: pulumi.Output<outputApi.apiextensions.v1beta1.CustomResourceDefinitionSpec>;

      /**
       * Status indicates the actual state of the CustomResourceDefinition
       */
      public readonly status: pulumi.Output<outputApi.apiextensions.v1beta1.CustomResourceDefinitionStatus>;


      /**
       * Get the state of an existing `CustomResourceDefinition` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CustomResourceDefinition {
          return new CustomResourceDefinition(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apiextensions.v1beta1.CustomResourceDefinition { return this.__inputs; }
      private readonly __inputs: inputApi.apiextensions.v1beta1.CustomResourceDefinition;

      /**
      * Create a apiextensions.v1beta1.CustomResourceDefinition resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apiextensions.v1beta1.CustomResourceDefinition, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apiextensions.k8s.io/v1beta1";
          inputs["kind"] = "CustomResourceDefinition";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:apiextensions.k8s.io/v1beta1:CustomResourceDefinition", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * CustomResourceDefinitionList is a list of CustomResourceDefinition objects.
     */
    export class CustomResourceDefinitionList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apiextensions.k8s.io/v1beta1">;

      /**
       * Items individual CustomResourceDefinitions
       */
      public readonly items: pulumi.Output<outputApi.apiextensions.v1beta1.CustomResourceDefinition[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"CustomResourceDefinitionList">;

      
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `CustomResourceDefinitionList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CustomResourceDefinitionList {
          return new CustomResourceDefinitionList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apiextensions.v1beta1.CustomResourceDefinitionList { return this.__inputs; }
      private readonly __inputs: inputApi.apiextensions.v1beta1.CustomResourceDefinitionList;

      /**
      * Create a apiextensions.v1beta1.CustomResourceDefinitionList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apiextensions.v1beta1.CustomResourceDefinitionList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apiextensions.k8s.io/v1beta1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "CustomResourceDefinitionList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:apiextensions.k8s.io/v1beta1:CustomResourceDefinitionList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

}

export namespace apiregistration {
  export namespace v1 {
    /**
     * APIService represents a server for a particular GroupVersion. Name must be "version.group".
     */
    export class APIService extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apiregistration.k8s.io/v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"APIService">;

      
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Spec contains information for locating and communicating with a server
       */
      public readonly spec: pulumi.Output<outputApi.apiregistration.v1.APIServiceSpec>;

      /**
       * Status contains derived information about an API server
       */
      public readonly status: pulumi.Output<outputApi.apiregistration.v1.APIServiceStatus>;


      /**
       * Get the state of an existing `APIService` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): APIService {
          return new APIService(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apiregistration.v1.APIService { return this.__inputs; }
      private readonly __inputs: inputApi.apiregistration.v1.APIService;

      /**
      * Create a apiregistration.v1.APIService resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apiregistration.v1.APIService, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apiregistration.k8s.io/v1";
          inputs["kind"] = "APIService";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:apiregistration/v1:APIService", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * APIServiceList is a list of APIService objects.
     */
    export class APIServiceList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apiregistration.k8s.io/v1">;

      
      public readonly items: pulumi.Output<outputApi.apiregistration.v1.APIService[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"APIServiceList">;

      
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `APIServiceList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): APIServiceList {
          return new APIServiceList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apiregistration.v1.APIServiceList { return this.__inputs; }
      private readonly __inputs: inputApi.apiregistration.v1.APIServiceList;

      /**
      * Create a apiregistration.v1.APIServiceList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apiregistration.v1.APIServiceList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apiregistration.k8s.io/v1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "APIServiceList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:apiregistration/v1:APIServiceList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

  export namespace v1beta1 {
    /**
     * APIService represents a server for a particular GroupVersion. Name must be "version.group".
     */
    export class APIService extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apiregistration.k8s.io/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"APIService">;

      
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Spec contains information for locating and communicating with a server
       */
      public readonly spec: pulumi.Output<outputApi.apiregistration.v1beta1.APIServiceSpec>;

      /**
       * Status contains derived information about an API server
       */
      public readonly status: pulumi.Output<outputApi.apiregistration.v1beta1.APIServiceStatus>;


      /**
       * Get the state of an existing `APIService` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): APIService {
          return new APIService(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apiregistration.v1beta1.APIService { return this.__inputs; }
      private readonly __inputs: inputApi.apiregistration.v1beta1.APIService;

      /**
      * Create a apiregistration.v1beta1.APIService resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apiregistration.v1beta1.APIService, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apiregistration.k8s.io/v1beta1";
          inputs["kind"] = "APIService";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:apiregistration/v1beta1:APIService", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * APIServiceList is a list of APIService objects.
     */
    export class APIServiceList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apiregistration.k8s.io/v1beta1">;

      
      public readonly items: pulumi.Output<outputApi.apiregistration.v1beta1.APIService[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"APIServiceList">;

      
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `APIServiceList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): APIServiceList {
          return new APIServiceList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apiregistration.v1beta1.APIServiceList { return this.__inputs; }
      private readonly __inputs: inputApi.apiregistration.v1beta1.APIServiceList;

      /**
      * Create a apiregistration.v1beta1.APIServiceList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apiregistration.v1beta1.APIServiceList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apiregistration.k8s.io/v1beta1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "APIServiceList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:apiregistration/v1beta1:APIServiceList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

}

export namespace apps {
  export namespace v1 {
    /**
     * ControllerRevision implements an immutable snapshot of state data. Clients are responsible
     * for serializing and deserializing the objects that contain their internal state. Once a
     * ControllerRevision has been successfully created, it can not be updated. The API Server will
     * fail validation of all requests that attempt to mutate the Data field. ControllerRevisions
     * may, however, be deleted. Note that, due to its use by both the DaemonSet and StatefulSet
     * controllers for update and rollback, this object is beta. However, it may be subject to name
     * and representation changes in future releases, and clients should not depend on its
     * stability. It is primarily for internal use by controllers.
     */
    export class ControllerRevision extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apps/v1">;

      /**
       * Data is the serialized representation of the state.
       */
      public readonly data: pulumi.Output<outputApi.pkg.runtime.RawExtension>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ControllerRevision">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Revision indicates the revision of the state represented by Data.
       */
      public readonly revision: pulumi.Output<number>;


      /**
       * Get the state of an existing `ControllerRevision` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ControllerRevision {
          return new ControllerRevision(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apps.v1.ControllerRevision { return this.__inputs; }
      private readonly __inputs: inputApi.apps.v1.ControllerRevision;

      /**
      * Create a apps.v1.ControllerRevision resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apps.v1.ControllerRevision, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apps/v1";
          inputs["data"] = args && args.data || undefined;
          inputs["kind"] = "ControllerRevision";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["revision"] = args && args.revision || undefined;
          super("kubernetes:apps/v1:ControllerRevision", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * ControllerRevisionList is a resource containing a list of ControllerRevision objects.
     */
    export class ControllerRevisionList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apps/v1">;

      /**
       * Items is the list of ControllerRevisions
       */
      public readonly items: pulumi.Output<outputApi.apps.v1.ControllerRevision[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ControllerRevisionList">;

      /**
       * More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `ControllerRevisionList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ControllerRevisionList {
          return new ControllerRevisionList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apps.v1.ControllerRevisionList { return this.__inputs; }
      private readonly __inputs: inputApi.apps.v1.ControllerRevisionList;

      /**
      * Create a apps.v1.ControllerRevisionList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apps.v1.ControllerRevisionList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apps/v1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "ControllerRevisionList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:apps/v1:ControllerRevisionList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * DaemonSet represents the configuration of a daemon set.
     */
    export class DaemonSet extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apps/v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"DaemonSet">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * The desired behavior of this daemon set. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly spec: pulumi.Output<outputApi.apps.v1.DaemonSetSpec>;

      /**
       * The current status of this daemon set. This data may be out of date by some window of time.
       * Populated by the system. Read-only. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly status: pulumi.Output<outputApi.apps.v1.DaemonSetStatus>;


      /**
       * Get the state of an existing `DaemonSet` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DaemonSet {
          return new DaemonSet(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apps.v1.DaemonSet { return this.__inputs; }
      private readonly __inputs: inputApi.apps.v1.DaemonSet;

      /**
      * Create a apps.v1.DaemonSet resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apps.v1.DaemonSet, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apps/v1";
          inputs["kind"] = "DaemonSet";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:apps/v1:DaemonSet", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * DaemonSetList is a collection of daemon sets.
     */
    export class DaemonSetList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apps/v1">;

      /**
       * A list of daemon sets.
       */
      public readonly items: pulumi.Output<outputApi.apps.v1.DaemonSet[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"DaemonSetList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `DaemonSetList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DaemonSetList {
          return new DaemonSetList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apps.v1.DaemonSetList { return this.__inputs; }
      private readonly __inputs: inputApi.apps.v1.DaemonSetList;

      /**
      * Create a apps.v1.DaemonSetList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apps.v1.DaemonSetList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apps/v1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "DaemonSetList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:apps/v1:DaemonSetList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * Deployment enables declarative updates for Pods and ReplicaSets.
     */
    export class Deployment extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apps/v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"Deployment">;

      /**
       * Standard object metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Specification of the desired behavior of the Deployment.
       */
      public readonly spec: pulumi.Output<outputApi.apps.v1.DeploymentSpec>;

      /**
       * Most recently observed status of the Deployment.
       */
      public readonly status: pulumi.Output<outputApi.apps.v1.DeploymentStatus>;


      /**
       * Get the state of an existing `Deployment` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Deployment {
          return new Deployment(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apps.v1.Deployment { return this.__inputs; }
      private readonly __inputs: inputApi.apps.v1.Deployment;

      /**
      * Create a apps.v1.Deployment resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apps.v1.Deployment, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apps/v1";
          inputs["kind"] = "Deployment";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:apps/v1:Deployment", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * DeploymentList is a list of Deployments.
     */
    export class DeploymentList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apps/v1">;

      /**
       * Items is the list of Deployments.
       */
      public readonly items: pulumi.Output<outputApi.apps.v1.Deployment[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"DeploymentList">;

      /**
       * Standard list metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `DeploymentList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DeploymentList {
          return new DeploymentList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apps.v1.DeploymentList { return this.__inputs; }
      private readonly __inputs: inputApi.apps.v1.DeploymentList;

      /**
      * Create a apps.v1.DeploymentList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apps.v1.DeploymentList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apps/v1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "DeploymentList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:apps/v1:DeploymentList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * ReplicaSet ensures that a specified number of pod replicas are running at any given time.
     */
    export class ReplicaSet extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apps/v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ReplicaSet">;

      /**
       * If the Labels of a ReplicaSet are empty, they are defaulted to be the same as the Pod(s)
       * that the ReplicaSet manages. Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Spec defines the specification of the desired behavior of the ReplicaSet. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly spec: pulumi.Output<outputApi.apps.v1.ReplicaSetSpec>;

      /**
       * Status is the most recently observed status of the ReplicaSet. This data may be out of date
       * by some window of time. Populated by the system. Read-only. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly status: pulumi.Output<outputApi.apps.v1.ReplicaSetStatus>;


      /**
       * Get the state of an existing `ReplicaSet` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ReplicaSet {
          return new ReplicaSet(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apps.v1.ReplicaSet { return this.__inputs; }
      private readonly __inputs: inputApi.apps.v1.ReplicaSet;

      /**
      * Create a apps.v1.ReplicaSet resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apps.v1.ReplicaSet, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apps/v1";
          inputs["kind"] = "ReplicaSet";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:apps/v1:ReplicaSet", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * ReplicaSetList is a collection of ReplicaSets.
     */
    export class ReplicaSetList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apps/v1">;

      /**
       * List of ReplicaSets. More info:
       * https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller
       */
      public readonly items: pulumi.Output<outputApi.apps.v1.ReplicaSet[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ReplicaSetList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `ReplicaSetList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ReplicaSetList {
          return new ReplicaSetList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apps.v1.ReplicaSetList { return this.__inputs; }
      private readonly __inputs: inputApi.apps.v1.ReplicaSetList;

      /**
      * Create a apps.v1.ReplicaSetList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apps.v1.ReplicaSetList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apps/v1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "ReplicaSetList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:apps/v1:ReplicaSetList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * StatefulSet represents a set of pods with consistent identities. Identities are defined as:
     *  - Network: A single stable DNS and hostname.
     *  - Storage: As many VolumeClaims as requested.
     * The StatefulSet guarantees that a given network identity will always map to the same storage
     * identity.
     */
    export class StatefulSet extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apps/v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"StatefulSet">;

      
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Spec defines the desired identities of pods in this set.
       */
      public readonly spec: pulumi.Output<outputApi.apps.v1.StatefulSetSpec>;

      /**
       * Status is the current status of Pods in this StatefulSet. This data may be out of date by
       * some window of time.
       */
      public readonly status: pulumi.Output<outputApi.apps.v1.StatefulSetStatus>;


      /**
       * Get the state of an existing `StatefulSet` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): StatefulSet {
          return new StatefulSet(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apps.v1.StatefulSet { return this.__inputs; }
      private readonly __inputs: inputApi.apps.v1.StatefulSet;

      /**
      * Create a apps.v1.StatefulSet resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apps.v1.StatefulSet, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apps/v1";
          inputs["kind"] = "StatefulSet";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:apps/v1:StatefulSet", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * StatefulSetList is a collection of StatefulSets.
     */
    export class StatefulSetList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apps/v1">;

      
      public readonly items: pulumi.Output<outputApi.apps.v1.StatefulSet[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"StatefulSetList">;

      
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `StatefulSetList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): StatefulSetList {
          return new StatefulSetList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apps.v1.StatefulSetList { return this.__inputs; }
      private readonly __inputs: inputApi.apps.v1.StatefulSetList;

      /**
      * Create a apps.v1.StatefulSetList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apps.v1.StatefulSetList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apps/v1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "StatefulSetList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:apps/v1:StatefulSetList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

  export namespace v1beta1 {
    /**
     * DEPRECATED - This group version of ControllerRevision is deprecated by
     * apps/v1beta2/ControllerRevision. See the release notes for more information.
     * ControllerRevision implements an immutable snapshot of state data. Clients are responsible
     * for serializing and deserializing the objects that contain their internal state. Once a
     * ControllerRevision has been successfully created, it can not be updated. The API Server will
     * fail validation of all requests that attempt to mutate the Data field. ControllerRevisions
     * may, however, be deleted. Note that, due to its use by both the DaemonSet and StatefulSet
     * controllers for update and rollback, this object is beta. However, it may be subject to name
     * and representation changes in future releases, and clients should not depend on its
     * stability. It is primarily for internal use by controllers.
     */
    export class ControllerRevision extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apps/v1beta1">;

      /**
       * Data is the serialized representation of the state.
       */
      public readonly data: pulumi.Output<outputApi.pkg.runtime.RawExtension>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ControllerRevision">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Revision indicates the revision of the state represented by Data.
       */
      public readonly revision: pulumi.Output<number>;


      /**
       * Get the state of an existing `ControllerRevision` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ControllerRevision {
          return new ControllerRevision(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apps.v1beta1.ControllerRevision { return this.__inputs; }
      private readonly __inputs: inputApi.apps.v1beta1.ControllerRevision;

      /**
      * Create a apps.v1beta1.ControllerRevision resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apps.v1beta1.ControllerRevision, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apps/v1beta1";
          inputs["data"] = args && args.data || undefined;
          inputs["kind"] = "ControllerRevision";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["revision"] = args && args.revision || undefined;
          super("kubernetes:apps/v1beta1:ControllerRevision", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * ControllerRevisionList is a resource containing a list of ControllerRevision objects.
     */
    export class ControllerRevisionList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apps/v1beta1">;

      /**
       * Items is the list of ControllerRevisions
       */
      public readonly items: pulumi.Output<outputApi.apps.v1beta1.ControllerRevision[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ControllerRevisionList">;

      /**
       * More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `ControllerRevisionList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ControllerRevisionList {
          return new ControllerRevisionList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apps.v1beta1.ControllerRevisionList { return this.__inputs; }
      private readonly __inputs: inputApi.apps.v1beta1.ControllerRevisionList;

      /**
      * Create a apps.v1beta1.ControllerRevisionList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apps.v1beta1.ControllerRevisionList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apps/v1beta1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "ControllerRevisionList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:apps/v1beta1:ControllerRevisionList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * DEPRECATED - This group version of Deployment is deprecated by apps/v1beta2/Deployment. See
     * the release notes for more information. Deployment enables declarative updates for Pods and
     * ReplicaSets.
     */
    export class Deployment extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apps/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"Deployment">;

      /**
       * Standard object metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Specification of the desired behavior of the Deployment.
       */
      public readonly spec: pulumi.Output<outputApi.apps.v1beta1.DeploymentSpec>;

      /**
       * Most recently observed status of the Deployment.
       */
      public readonly status: pulumi.Output<outputApi.apps.v1beta1.DeploymentStatus>;


      /**
       * Get the state of an existing `Deployment` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Deployment {
          return new Deployment(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apps.v1beta1.Deployment { return this.__inputs; }
      private readonly __inputs: inputApi.apps.v1beta1.Deployment;

      /**
      * Create a apps.v1beta1.Deployment resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apps.v1beta1.Deployment, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apps/v1beta1";
          inputs["kind"] = "Deployment";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:apps/v1beta1:Deployment", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * DeploymentList is a list of Deployments.
     */
    export class DeploymentList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apps/v1beta1">;

      /**
       * Items is the list of Deployments.
       */
      public readonly items: pulumi.Output<outputApi.apps.v1beta1.Deployment[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"DeploymentList">;

      /**
       * Standard list metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `DeploymentList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DeploymentList {
          return new DeploymentList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apps.v1beta1.DeploymentList { return this.__inputs; }
      private readonly __inputs: inputApi.apps.v1beta1.DeploymentList;

      /**
      * Create a apps.v1beta1.DeploymentList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apps.v1beta1.DeploymentList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apps/v1beta1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "DeploymentList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:apps/v1beta1:DeploymentList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * DEPRECATED. DeploymentRollback stores the information required to rollback a deployment.
     */
    export class DeploymentRollback extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apps/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"DeploymentRollback">;

      /**
       * Required: This must match the Name of a deployment.
       */
      public readonly name: pulumi.Output<string>;

      /**
       * The config of this deployment rollback.
       */
      public readonly rollbackTo: pulumi.Output<outputApi.apps.v1beta1.RollbackConfig>;

      /**
       * The annotations to be updated to a deployment
       */
      public readonly updatedAnnotations: pulumi.Output<{[key: string]: pulumi.Output<string>}>;


      /**
       * Get the state of an existing `DeploymentRollback` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DeploymentRollback {
          return new DeploymentRollback(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apps.v1beta1.DeploymentRollback { return this.__inputs; }
      private readonly __inputs: inputApi.apps.v1beta1.DeploymentRollback;

      /**
      * Create a apps.v1beta1.DeploymentRollback resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apps.v1beta1.DeploymentRollback, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apps/v1beta1";
          inputs["kind"] = "DeploymentRollback";
          inputs["name"] = args && args.name || undefined;
          inputs["rollbackTo"] = args && args.rollbackTo || undefined;
          inputs["updatedAnnotations"] = args && args.updatedAnnotations || undefined;
          super("kubernetes:apps/v1beta1:DeploymentRollback", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * Scale represents a scaling request for a resource.
     */
    export class Scale extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apps/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"Scale">;

      /**
       * Standard object metadata; More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * defines the behavior of the scale. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.
       */
      public readonly spec: pulumi.Output<outputApi.apps.v1beta1.ScaleSpec>;

      /**
       * current status of the scale. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.
       * Read-only.
       */
      public readonly status: pulumi.Output<outputApi.apps.v1beta1.ScaleStatus>;


      /**
       * Get the state of an existing `Scale` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Scale {
          return new Scale(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apps.v1beta1.Scale { return this.__inputs; }
      private readonly __inputs: inputApi.apps.v1beta1.Scale;

      /**
      * Create a apps.v1beta1.Scale resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apps.v1beta1.Scale, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apps/v1beta1";
          inputs["kind"] = "Scale";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:apps/v1beta1:Scale", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * DEPRECATED - This group version of StatefulSet is deprecated by apps/v1beta2/StatefulSet. See
     * the release notes for more information. StatefulSet represents a set of pods with consistent
     * identities. Identities are defined as:
     *  - Network: A single stable DNS and hostname.
     *  - Storage: As many VolumeClaims as requested.
     * The StatefulSet guarantees that a given network identity will always map to the same storage
     * identity.
     */
    export class StatefulSet extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apps/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"StatefulSet">;

      
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Spec defines the desired identities of pods in this set.
       */
      public readonly spec: pulumi.Output<outputApi.apps.v1beta1.StatefulSetSpec>;

      /**
       * Status is the current status of Pods in this StatefulSet. This data may be out of date by
       * some window of time.
       */
      public readonly status: pulumi.Output<outputApi.apps.v1beta1.StatefulSetStatus>;


      /**
       * Get the state of an existing `StatefulSet` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): StatefulSet {
          return new StatefulSet(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apps.v1beta1.StatefulSet { return this.__inputs; }
      private readonly __inputs: inputApi.apps.v1beta1.StatefulSet;

      /**
      * Create a apps.v1beta1.StatefulSet resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apps.v1beta1.StatefulSet, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apps/v1beta1";
          inputs["kind"] = "StatefulSet";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:apps/v1beta1:StatefulSet", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * StatefulSetList is a collection of StatefulSets.
     */
    export class StatefulSetList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apps/v1beta1">;

      
      public readonly items: pulumi.Output<outputApi.apps.v1beta1.StatefulSet[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"StatefulSetList">;

      
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `StatefulSetList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): StatefulSetList {
          return new StatefulSetList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apps.v1beta1.StatefulSetList { return this.__inputs; }
      private readonly __inputs: inputApi.apps.v1beta1.StatefulSetList;

      /**
      * Create a apps.v1beta1.StatefulSetList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apps.v1beta1.StatefulSetList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apps/v1beta1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "StatefulSetList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:apps/v1beta1:StatefulSetList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

  export namespace v1beta2 {
    /**
     * DEPRECATED - This group version of ControllerRevision is deprecated by
     * apps/v1/ControllerRevision. See the release notes for more information. ControllerRevision
     * implements an immutable snapshot of state data. Clients are responsible for serializing and
     * deserializing the objects that contain their internal state. Once a ControllerRevision has
     * been successfully created, it can not be updated. The API Server will fail validation of all
     * requests that attempt to mutate the Data field. ControllerRevisions may, however, be deleted.
     * Note that, due to its use by both the DaemonSet and StatefulSet controllers for update and
     * rollback, this object is beta. However, it may be subject to name and representation changes
     * in future releases, and clients should not depend on its stability. It is primarily for
     * internal use by controllers.
     */
    export class ControllerRevision extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apps/v1beta2">;

      /**
       * Data is the serialized representation of the state.
       */
      public readonly data: pulumi.Output<outputApi.pkg.runtime.RawExtension>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ControllerRevision">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Revision indicates the revision of the state represented by Data.
       */
      public readonly revision: pulumi.Output<number>;


      /**
       * Get the state of an existing `ControllerRevision` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ControllerRevision {
          return new ControllerRevision(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apps.v1beta2.ControllerRevision { return this.__inputs; }
      private readonly __inputs: inputApi.apps.v1beta2.ControllerRevision;

      /**
      * Create a apps.v1beta2.ControllerRevision resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apps.v1beta2.ControllerRevision, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apps/v1beta2";
          inputs["data"] = args && args.data || undefined;
          inputs["kind"] = "ControllerRevision";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["revision"] = args && args.revision || undefined;
          super("kubernetes:apps/v1beta2:ControllerRevision", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * ControllerRevisionList is a resource containing a list of ControllerRevision objects.
     */
    export class ControllerRevisionList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apps/v1beta2">;

      /**
       * Items is the list of ControllerRevisions
       */
      public readonly items: pulumi.Output<outputApi.apps.v1beta2.ControllerRevision[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ControllerRevisionList">;

      /**
       * More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `ControllerRevisionList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ControllerRevisionList {
          return new ControllerRevisionList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apps.v1beta2.ControllerRevisionList { return this.__inputs; }
      private readonly __inputs: inputApi.apps.v1beta2.ControllerRevisionList;

      /**
      * Create a apps.v1beta2.ControllerRevisionList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apps.v1beta2.ControllerRevisionList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apps/v1beta2";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "ControllerRevisionList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:apps/v1beta2:ControllerRevisionList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * DEPRECATED - This group version of DaemonSet is deprecated by apps/v1/DaemonSet. See the
     * release notes for more information. DaemonSet represents the configuration of a daemon set.
     */
    export class DaemonSet extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apps/v1beta2">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"DaemonSet">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * The desired behavior of this daemon set. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly spec: pulumi.Output<outputApi.apps.v1beta2.DaemonSetSpec>;

      /**
       * The current status of this daemon set. This data may be out of date by some window of time.
       * Populated by the system. Read-only. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly status: pulumi.Output<outputApi.apps.v1beta2.DaemonSetStatus>;


      /**
       * Get the state of an existing `DaemonSet` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DaemonSet {
          return new DaemonSet(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apps.v1beta2.DaemonSet { return this.__inputs; }
      private readonly __inputs: inputApi.apps.v1beta2.DaemonSet;

      /**
      * Create a apps.v1beta2.DaemonSet resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apps.v1beta2.DaemonSet, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apps/v1beta2";
          inputs["kind"] = "DaemonSet";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:apps/v1beta2:DaemonSet", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * DaemonSetList is a collection of daemon sets.
     */
    export class DaemonSetList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apps/v1beta2">;

      /**
       * A list of daemon sets.
       */
      public readonly items: pulumi.Output<outputApi.apps.v1beta2.DaemonSet[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"DaemonSetList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `DaemonSetList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DaemonSetList {
          return new DaemonSetList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apps.v1beta2.DaemonSetList { return this.__inputs; }
      private readonly __inputs: inputApi.apps.v1beta2.DaemonSetList;

      /**
      * Create a apps.v1beta2.DaemonSetList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apps.v1beta2.DaemonSetList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apps/v1beta2";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "DaemonSetList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:apps/v1beta2:DaemonSetList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * DEPRECATED - This group version of Deployment is deprecated by apps/v1/Deployment. See the
     * release notes for more information. Deployment enables declarative updates for Pods and
     * ReplicaSets.
     */
    export class Deployment extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apps/v1beta2">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"Deployment">;

      /**
       * Standard object metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Specification of the desired behavior of the Deployment.
       */
      public readonly spec: pulumi.Output<outputApi.apps.v1beta2.DeploymentSpec>;

      /**
       * Most recently observed status of the Deployment.
       */
      public readonly status: pulumi.Output<outputApi.apps.v1beta2.DeploymentStatus>;


      /**
       * Get the state of an existing `Deployment` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Deployment {
          return new Deployment(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apps.v1beta2.Deployment { return this.__inputs; }
      private readonly __inputs: inputApi.apps.v1beta2.Deployment;

      /**
      * Create a apps.v1beta2.Deployment resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apps.v1beta2.Deployment, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apps/v1beta2";
          inputs["kind"] = "Deployment";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:apps/v1beta2:Deployment", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * DeploymentList is a list of Deployments.
     */
    export class DeploymentList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apps/v1beta2">;

      /**
       * Items is the list of Deployments.
       */
      public readonly items: pulumi.Output<outputApi.apps.v1beta2.Deployment[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"DeploymentList">;

      /**
       * Standard list metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `DeploymentList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DeploymentList {
          return new DeploymentList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apps.v1beta2.DeploymentList { return this.__inputs; }
      private readonly __inputs: inputApi.apps.v1beta2.DeploymentList;

      /**
      * Create a apps.v1beta2.DeploymentList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apps.v1beta2.DeploymentList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apps/v1beta2";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "DeploymentList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:apps/v1beta2:DeploymentList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * DEPRECATED - This group version of ReplicaSet is deprecated by apps/v1/ReplicaSet. See the
     * release notes for more information. ReplicaSet ensures that a specified number of pod
     * replicas are running at any given time.
     */
    export class ReplicaSet extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apps/v1beta2">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ReplicaSet">;

      /**
       * If the Labels of a ReplicaSet are empty, they are defaulted to be the same as the Pod(s)
       * that the ReplicaSet manages. Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Spec defines the specification of the desired behavior of the ReplicaSet. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly spec: pulumi.Output<outputApi.apps.v1beta2.ReplicaSetSpec>;

      /**
       * Status is the most recently observed status of the ReplicaSet. This data may be out of date
       * by some window of time. Populated by the system. Read-only. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly status: pulumi.Output<outputApi.apps.v1beta2.ReplicaSetStatus>;


      /**
       * Get the state of an existing `ReplicaSet` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ReplicaSet {
          return new ReplicaSet(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apps.v1beta2.ReplicaSet { return this.__inputs; }
      private readonly __inputs: inputApi.apps.v1beta2.ReplicaSet;

      /**
      * Create a apps.v1beta2.ReplicaSet resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apps.v1beta2.ReplicaSet, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apps/v1beta2";
          inputs["kind"] = "ReplicaSet";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:apps/v1beta2:ReplicaSet", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * ReplicaSetList is a collection of ReplicaSets.
     */
    export class ReplicaSetList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apps/v1beta2">;

      /**
       * List of ReplicaSets. More info:
       * https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller
       */
      public readonly items: pulumi.Output<outputApi.apps.v1beta2.ReplicaSet[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ReplicaSetList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `ReplicaSetList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ReplicaSetList {
          return new ReplicaSetList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apps.v1beta2.ReplicaSetList { return this.__inputs; }
      private readonly __inputs: inputApi.apps.v1beta2.ReplicaSetList;

      /**
      * Create a apps.v1beta2.ReplicaSetList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apps.v1beta2.ReplicaSetList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apps/v1beta2";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "ReplicaSetList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:apps/v1beta2:ReplicaSetList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * Scale represents a scaling request for a resource.
     */
    export class Scale extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apps/v1beta2">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"Scale">;

      /**
       * Standard object metadata; More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * defines the behavior of the scale. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.
       */
      public readonly spec: pulumi.Output<outputApi.apps.v1beta2.ScaleSpec>;

      /**
       * current status of the scale. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.
       * Read-only.
       */
      public readonly status: pulumi.Output<outputApi.apps.v1beta2.ScaleStatus>;


      /**
       * Get the state of an existing `Scale` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Scale {
          return new Scale(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apps.v1beta2.Scale { return this.__inputs; }
      private readonly __inputs: inputApi.apps.v1beta2.Scale;

      /**
      * Create a apps.v1beta2.Scale resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apps.v1beta2.Scale, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apps/v1beta2";
          inputs["kind"] = "Scale";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:apps/v1beta2:Scale", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * DEPRECATED - This group version of StatefulSet is deprecated by apps/v1/StatefulSet. See the
     * release notes for more information. StatefulSet represents a set of pods with consistent
     * identities. Identities are defined as:
     *  - Network: A single stable DNS and hostname.
     *  - Storage: As many VolumeClaims as requested.
     * The StatefulSet guarantees that a given network identity will always map to the same storage
     * identity.
     */
    export class StatefulSet extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apps/v1beta2">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"StatefulSet">;

      
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Spec defines the desired identities of pods in this set.
       */
      public readonly spec: pulumi.Output<outputApi.apps.v1beta2.StatefulSetSpec>;

      /**
       * Status is the current status of Pods in this StatefulSet. This data may be out of date by
       * some window of time.
       */
      public readonly status: pulumi.Output<outputApi.apps.v1beta2.StatefulSetStatus>;


      /**
       * Get the state of an existing `StatefulSet` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): StatefulSet {
          return new StatefulSet(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apps.v1beta2.StatefulSet { return this.__inputs; }
      private readonly __inputs: inputApi.apps.v1beta2.StatefulSet;

      /**
      * Create a apps.v1beta2.StatefulSet resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apps.v1beta2.StatefulSet, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apps/v1beta2";
          inputs["kind"] = "StatefulSet";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:apps/v1beta2:StatefulSet", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * StatefulSetList is a collection of StatefulSets.
     */
    export class StatefulSetList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"apps/v1beta2">;

      
      public readonly items: pulumi.Output<outputApi.apps.v1beta2.StatefulSet[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"StatefulSetList">;

      
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `StatefulSetList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): StatefulSetList {
          return new StatefulSetList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.apps.v1beta2.StatefulSetList { return this.__inputs; }
      private readonly __inputs: inputApi.apps.v1beta2.StatefulSetList;

      /**
      * Create a apps.v1beta2.StatefulSetList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.apps.v1beta2.StatefulSetList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "apps/v1beta2";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "StatefulSetList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:apps/v1beta2:StatefulSetList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

}

export namespace auditregistration {
  export namespace v1alpha1 {
    /**
     * AuditSink represents a cluster level audit sink
     */
    export class AuditSink extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"auditregistration.k8s.io/v1alpha1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"AuditSink">;

      
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Spec defines the audit configuration spec
       */
      public readonly spec: pulumi.Output<outputApi.auditregistration.v1alpha1.AuditSinkSpec>;


      /**
       * Get the state of an existing `AuditSink` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AuditSink {
          return new AuditSink(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.auditregistration.v1alpha1.AuditSink { return this.__inputs; }
      private readonly __inputs: inputApi.auditregistration.v1alpha1.AuditSink;

      /**
      * Create a auditregistration.v1alpha1.AuditSink resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.auditregistration.v1alpha1.AuditSink, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "auditregistration.k8s.io/v1alpha1";
          inputs["kind"] = "AuditSink";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          super("kubernetes:auditregistration.k8s.io/v1alpha1:AuditSink", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * AuditSinkList is a list of AuditSink items.
     */
    export class AuditSinkList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"auditregistration.k8s.io/v1alpha1">;

      /**
       * List of audit configurations.
       */
      public readonly items: pulumi.Output<outputApi.auditregistration.v1alpha1.AuditSink[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"AuditSinkList">;

      
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `AuditSinkList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): AuditSinkList {
          return new AuditSinkList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.auditregistration.v1alpha1.AuditSinkList { return this.__inputs; }
      private readonly __inputs: inputApi.auditregistration.v1alpha1.AuditSinkList;

      /**
      * Create a auditregistration.v1alpha1.AuditSinkList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.auditregistration.v1alpha1.AuditSinkList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "auditregistration.k8s.io/v1alpha1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "AuditSinkList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:auditregistration.k8s.io/v1alpha1:AuditSinkList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

}

export namespace authentication {
  export namespace v1 {
    /**
     * TokenReview attempts to authenticate a token to a known user. Note: TokenReview requests may
     * be cached by the webhook token authenticator plugin in the kube-apiserver.
     */
    export class TokenReview extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"authentication.k8s.io/v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"TokenReview">;

      
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Spec holds information about the request being evaluated
       */
      public readonly spec: pulumi.Output<outputApi.authentication.v1.TokenReviewSpec>;

      /**
       * Status is filled in by the server and indicates whether the request can be authenticated.
       */
      public readonly status: pulumi.Output<outputApi.authentication.v1.TokenReviewStatus>;


      /**
       * Get the state of an existing `TokenReview` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): TokenReview {
          return new TokenReview(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.authentication.v1.TokenReview { return this.__inputs; }
      private readonly __inputs: inputApi.authentication.v1.TokenReview;

      /**
      * Create a authentication.v1.TokenReview resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.authentication.v1.TokenReview, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "authentication.k8s.io/v1";
          inputs["kind"] = "TokenReview";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:authentication.k8s.io/v1:TokenReview", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

  export namespace v1beta1 {
    /**
     * TokenReview attempts to authenticate a token to a known user. Note: TokenReview requests may
     * be cached by the webhook token authenticator plugin in the kube-apiserver.
     */
    export class TokenReview extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"authentication.k8s.io/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"TokenReview">;

      
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Spec holds information about the request being evaluated
       */
      public readonly spec: pulumi.Output<outputApi.authentication.v1beta1.TokenReviewSpec>;

      /**
       * Status is filled in by the server and indicates whether the request can be authenticated.
       */
      public readonly status: pulumi.Output<outputApi.authentication.v1beta1.TokenReviewStatus>;


      /**
       * Get the state of an existing `TokenReview` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): TokenReview {
          return new TokenReview(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.authentication.v1beta1.TokenReview { return this.__inputs; }
      private readonly __inputs: inputApi.authentication.v1beta1.TokenReview;

      /**
      * Create a authentication.v1beta1.TokenReview resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.authentication.v1beta1.TokenReview, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "authentication.k8s.io/v1beta1";
          inputs["kind"] = "TokenReview";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:authentication.k8s.io/v1beta1:TokenReview", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

}

export namespace authorization {
  export namespace v1 {
    /**
     * LocalSubjectAccessReview checks whether or not a user or group can perform an action in a
     * given namespace. Having a namespace scoped resource makes it much easier to grant namespace
     * scoped policy that includes permissions checking.
     */
    export class LocalSubjectAccessReview extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"authorization.k8s.io/v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"LocalSubjectAccessReview">;

      
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Spec holds information about the request being evaluated.  spec.namespace must be equal to
       * the namespace you made the request against.  If empty, it is defaulted.
       */
      public readonly spec: pulumi.Output<outputApi.authorization.v1.SubjectAccessReviewSpec>;

      /**
       * Status is filled in by the server and indicates whether the request is allowed or not
       */
      public readonly status: pulumi.Output<outputApi.authorization.v1.SubjectAccessReviewStatus>;


      /**
       * Get the state of an existing `LocalSubjectAccessReview` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): LocalSubjectAccessReview {
          return new LocalSubjectAccessReview(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.authorization.v1.LocalSubjectAccessReview { return this.__inputs; }
      private readonly __inputs: inputApi.authorization.v1.LocalSubjectAccessReview;

      /**
      * Create a authorization.v1.LocalSubjectAccessReview resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.authorization.v1.LocalSubjectAccessReview, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "authorization.k8s.io/v1";
          inputs["kind"] = "LocalSubjectAccessReview";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:authorization.k8s.io/v1:LocalSubjectAccessReview", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * SelfSubjectAccessReview checks whether or the current user can perform an action.  Not
     * filling in a spec.namespace means "in all namespaces".  Self is a special case, because users
     * should always be able to check whether they can perform an action
     */
    export class SelfSubjectAccessReview extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"authorization.k8s.io/v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"SelfSubjectAccessReview">;

      
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Spec holds information about the request being evaluated.  user and groups must be empty
       */
      public readonly spec: pulumi.Output<outputApi.authorization.v1.SelfSubjectAccessReviewSpec>;

      /**
       * Status is filled in by the server and indicates whether the request is allowed or not
       */
      public readonly status: pulumi.Output<outputApi.authorization.v1.SubjectAccessReviewStatus>;


      /**
       * Get the state of an existing `SelfSubjectAccessReview` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SelfSubjectAccessReview {
          return new SelfSubjectAccessReview(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.authorization.v1.SelfSubjectAccessReview { return this.__inputs; }
      private readonly __inputs: inputApi.authorization.v1.SelfSubjectAccessReview;

      /**
      * Create a authorization.v1.SelfSubjectAccessReview resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.authorization.v1.SelfSubjectAccessReview, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "authorization.k8s.io/v1";
          inputs["kind"] = "SelfSubjectAccessReview";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:authorization.k8s.io/v1:SelfSubjectAccessReview", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * SelfSubjectRulesReview enumerates the set of actions the current user can perform within a
     * namespace. The returned list of actions may be incomplete depending on the server's
     * authorization mode, and any errors experienced during the evaluation. SelfSubjectRulesReview
     * should be used by UIs to show/hide actions, or to quickly let an end user reason about their
     * permissions. It should NOT Be used by external systems to drive authorization decisions as
     * this raises confused deputy, cache lifetime/revocation, and correctness concerns.
     * SubjectAccessReview, and LocalAccessReview are the correct way to defer authorization
     * decisions to the API server.
     */
    export class SelfSubjectRulesReview extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"authorization.k8s.io/v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"SelfSubjectRulesReview">;

      
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Spec holds information about the request being evaluated.
       */
      public readonly spec: pulumi.Output<outputApi.authorization.v1.SelfSubjectRulesReviewSpec>;

      /**
       * Status is filled in by the server and indicates the set of actions a user can perform.
       */
      public readonly status: pulumi.Output<outputApi.authorization.v1.SubjectRulesReviewStatus>;


      /**
       * Get the state of an existing `SelfSubjectRulesReview` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SelfSubjectRulesReview {
          return new SelfSubjectRulesReview(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.authorization.v1.SelfSubjectRulesReview { return this.__inputs; }
      private readonly __inputs: inputApi.authorization.v1.SelfSubjectRulesReview;

      /**
      * Create a authorization.v1.SelfSubjectRulesReview resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.authorization.v1.SelfSubjectRulesReview, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "authorization.k8s.io/v1";
          inputs["kind"] = "SelfSubjectRulesReview";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:authorization.k8s.io/v1:SelfSubjectRulesReview", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * SubjectAccessReview checks whether or not a user or group can perform an action.
     */
    export class SubjectAccessReview extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"authorization.k8s.io/v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"SubjectAccessReview">;

      
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Spec holds information about the request being evaluated
       */
      public readonly spec: pulumi.Output<outputApi.authorization.v1.SubjectAccessReviewSpec>;

      /**
       * Status is filled in by the server and indicates whether the request is allowed or not
       */
      public readonly status: pulumi.Output<outputApi.authorization.v1.SubjectAccessReviewStatus>;


      /**
       * Get the state of an existing `SubjectAccessReview` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SubjectAccessReview {
          return new SubjectAccessReview(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.authorization.v1.SubjectAccessReview { return this.__inputs; }
      private readonly __inputs: inputApi.authorization.v1.SubjectAccessReview;

      /**
      * Create a authorization.v1.SubjectAccessReview resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.authorization.v1.SubjectAccessReview, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "authorization.k8s.io/v1";
          inputs["kind"] = "SubjectAccessReview";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:authorization.k8s.io/v1:SubjectAccessReview", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

  export namespace v1beta1 {
    /**
     * LocalSubjectAccessReview checks whether or not a user or group can perform an action in a
     * given namespace. Having a namespace scoped resource makes it much easier to grant namespace
     * scoped policy that includes permissions checking.
     */
    export class LocalSubjectAccessReview extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"authorization.k8s.io/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"LocalSubjectAccessReview">;

      
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Spec holds information about the request being evaluated.  spec.namespace must be equal to
       * the namespace you made the request against.  If empty, it is defaulted.
       */
      public readonly spec: pulumi.Output<outputApi.authorization.v1beta1.SubjectAccessReviewSpec>;

      /**
       * Status is filled in by the server and indicates whether the request is allowed or not
       */
      public readonly status: pulumi.Output<outputApi.authorization.v1beta1.SubjectAccessReviewStatus>;


      /**
       * Get the state of an existing `LocalSubjectAccessReview` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): LocalSubjectAccessReview {
          return new LocalSubjectAccessReview(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.authorization.v1beta1.LocalSubjectAccessReview { return this.__inputs; }
      private readonly __inputs: inputApi.authorization.v1beta1.LocalSubjectAccessReview;

      /**
      * Create a authorization.v1beta1.LocalSubjectAccessReview resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.authorization.v1beta1.LocalSubjectAccessReview, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "authorization.k8s.io/v1beta1";
          inputs["kind"] = "LocalSubjectAccessReview";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:authorization.k8s.io/v1beta1:LocalSubjectAccessReview", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * SelfSubjectAccessReview checks whether or the current user can perform an action.  Not
     * filling in a spec.namespace means "in all namespaces".  Self is a special case, because users
     * should always be able to check whether they can perform an action
     */
    export class SelfSubjectAccessReview extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"authorization.k8s.io/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"SelfSubjectAccessReview">;

      
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Spec holds information about the request being evaluated.  user and groups must be empty
       */
      public readonly spec: pulumi.Output<outputApi.authorization.v1beta1.SelfSubjectAccessReviewSpec>;

      /**
       * Status is filled in by the server and indicates whether the request is allowed or not
       */
      public readonly status: pulumi.Output<outputApi.authorization.v1beta1.SubjectAccessReviewStatus>;


      /**
       * Get the state of an existing `SelfSubjectAccessReview` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SelfSubjectAccessReview {
          return new SelfSubjectAccessReview(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.authorization.v1beta1.SelfSubjectAccessReview { return this.__inputs; }
      private readonly __inputs: inputApi.authorization.v1beta1.SelfSubjectAccessReview;

      /**
      * Create a authorization.v1beta1.SelfSubjectAccessReview resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.authorization.v1beta1.SelfSubjectAccessReview, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "authorization.k8s.io/v1beta1";
          inputs["kind"] = "SelfSubjectAccessReview";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:authorization.k8s.io/v1beta1:SelfSubjectAccessReview", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * SelfSubjectRulesReview enumerates the set of actions the current user can perform within a
     * namespace. The returned list of actions may be incomplete depending on the server's
     * authorization mode, and any errors experienced during the evaluation. SelfSubjectRulesReview
     * should be used by UIs to show/hide actions, or to quickly let an end user reason about their
     * permissions. It should NOT Be used by external systems to drive authorization decisions as
     * this raises confused deputy, cache lifetime/revocation, and correctness concerns.
     * SubjectAccessReview, and LocalAccessReview are the correct way to defer authorization
     * decisions to the API server.
     */
    export class SelfSubjectRulesReview extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"authorization.k8s.io/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"SelfSubjectRulesReview">;

      
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Spec holds information about the request being evaluated.
       */
      public readonly spec: pulumi.Output<outputApi.authorization.v1beta1.SelfSubjectRulesReviewSpec>;

      /**
       * Status is filled in by the server and indicates the set of actions a user can perform.
       */
      public readonly status: pulumi.Output<outputApi.authorization.v1beta1.SubjectRulesReviewStatus>;


      /**
       * Get the state of an existing `SelfSubjectRulesReview` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SelfSubjectRulesReview {
          return new SelfSubjectRulesReview(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.authorization.v1beta1.SelfSubjectRulesReview { return this.__inputs; }
      private readonly __inputs: inputApi.authorization.v1beta1.SelfSubjectRulesReview;

      /**
      * Create a authorization.v1beta1.SelfSubjectRulesReview resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.authorization.v1beta1.SelfSubjectRulesReview, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "authorization.k8s.io/v1beta1";
          inputs["kind"] = "SelfSubjectRulesReview";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:authorization.k8s.io/v1beta1:SelfSubjectRulesReview", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * SubjectAccessReview checks whether or not a user or group can perform an action.
     */
    export class SubjectAccessReview extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"authorization.k8s.io/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"SubjectAccessReview">;

      
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Spec holds information about the request being evaluated
       */
      public readonly spec: pulumi.Output<outputApi.authorization.v1beta1.SubjectAccessReviewSpec>;

      /**
       * Status is filled in by the server and indicates whether the request is allowed or not
       */
      public readonly status: pulumi.Output<outputApi.authorization.v1beta1.SubjectAccessReviewStatus>;


      /**
       * Get the state of an existing `SubjectAccessReview` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SubjectAccessReview {
          return new SubjectAccessReview(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.authorization.v1beta1.SubjectAccessReview { return this.__inputs; }
      private readonly __inputs: inputApi.authorization.v1beta1.SubjectAccessReview;

      /**
      * Create a authorization.v1beta1.SubjectAccessReview resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.authorization.v1beta1.SubjectAccessReview, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "authorization.k8s.io/v1beta1";
          inputs["kind"] = "SubjectAccessReview";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:authorization.k8s.io/v1beta1:SubjectAccessReview", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

}

export namespace autoscaling {
  export namespace v1 {
    /**
     * CrossVersionObjectReference contains enough information to let you identify the referred
     * resource.
     */
    export class CrossVersionObjectReference extends pulumi.CustomResource {
      /**
       * API version of the referent
       */
      public readonly apiVersion: pulumi.Output<"autoscaling/v1">;

      /**
       * Kind of the referent; More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
       */
      public readonly kind: pulumi.Output<"CrossVersionObjectReference">;

      /**
       * Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names
       */
      public readonly name: pulumi.Output<string>;


      /**
       * Get the state of an existing `CrossVersionObjectReference` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CrossVersionObjectReference {
          return new CrossVersionObjectReference(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.autoscaling.v1.CrossVersionObjectReference { return this.__inputs; }
      private readonly __inputs: inputApi.autoscaling.v1.CrossVersionObjectReference;

      /**
      * Create a autoscaling.v1.CrossVersionObjectReference resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.autoscaling.v1.CrossVersionObjectReference, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "autoscaling/v1";
          inputs["kind"] = "CrossVersionObjectReference";
          inputs["name"] = args && args.name || undefined;
          super("kubernetes:autoscaling/v1:CrossVersionObjectReference", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * configuration of a horizontal pod autoscaler.
     */
    export class HorizontalPodAutoscaler extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"autoscaling/v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"HorizontalPodAutoscaler">;

      /**
       * Standard object metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * behaviour of autoscaler. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.
       */
      public readonly spec: pulumi.Output<outputApi.autoscaling.v1.HorizontalPodAutoscalerSpec>;

      /**
       * current information about the autoscaler.
       */
      public readonly status: pulumi.Output<outputApi.autoscaling.v1.HorizontalPodAutoscalerStatus>;


      /**
       * Get the state of an existing `HorizontalPodAutoscaler` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): HorizontalPodAutoscaler {
          return new HorizontalPodAutoscaler(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.autoscaling.v1.HorizontalPodAutoscaler { return this.__inputs; }
      private readonly __inputs: inputApi.autoscaling.v1.HorizontalPodAutoscaler;

      /**
      * Create a autoscaling.v1.HorizontalPodAutoscaler resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.autoscaling.v1.HorizontalPodAutoscaler, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "autoscaling/v1";
          inputs["kind"] = "HorizontalPodAutoscaler";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:autoscaling/v1:HorizontalPodAutoscaler", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * list of horizontal pod autoscaler objects.
     */
    export class HorizontalPodAutoscalerList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"autoscaling/v1">;

      /**
       * list of horizontal pod autoscaler objects.
       */
      public readonly items: pulumi.Output<outputApi.autoscaling.v1.HorizontalPodAutoscaler[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"HorizontalPodAutoscalerList">;

      /**
       * Standard list metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `HorizontalPodAutoscalerList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): HorizontalPodAutoscalerList {
          return new HorizontalPodAutoscalerList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.autoscaling.v1.HorizontalPodAutoscalerList { return this.__inputs; }
      private readonly __inputs: inputApi.autoscaling.v1.HorizontalPodAutoscalerList;

      /**
      * Create a autoscaling.v1.HorizontalPodAutoscalerList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.autoscaling.v1.HorizontalPodAutoscalerList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "autoscaling/v1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "HorizontalPodAutoscalerList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:autoscaling/v1:HorizontalPodAutoscalerList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * Scale represents a scaling request for a resource.
     */
    export class Scale extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"autoscaling/v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"Scale">;

      /**
       * Standard object metadata; More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * defines the behavior of the scale. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.
       */
      public readonly spec: pulumi.Output<outputApi.autoscaling.v1.ScaleSpec>;

      /**
       * current status of the scale. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.
       * Read-only.
       */
      public readonly status: pulumi.Output<outputApi.autoscaling.v1.ScaleStatus>;


      /**
       * Get the state of an existing `Scale` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Scale {
          return new Scale(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.autoscaling.v1.Scale { return this.__inputs; }
      private readonly __inputs: inputApi.autoscaling.v1.Scale;

      /**
      * Create a autoscaling.v1.Scale resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.autoscaling.v1.Scale, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "autoscaling/v1";
          inputs["kind"] = "Scale";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:autoscaling/v1:Scale", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

  export namespace v2beta1 {
    /**
     * CrossVersionObjectReference contains enough information to let you identify the referred
     * resource.
     */
    export class CrossVersionObjectReference extends pulumi.CustomResource {
      /**
       * API version of the referent
       */
      public readonly apiVersion: pulumi.Output<"autoscaling/v2beta1">;

      /**
       * Kind of the referent; More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
       */
      public readonly kind: pulumi.Output<"CrossVersionObjectReference">;

      /**
       * Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names
       */
      public readonly name: pulumi.Output<string>;


      /**
       * Get the state of an existing `CrossVersionObjectReference` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CrossVersionObjectReference {
          return new CrossVersionObjectReference(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.autoscaling.v2beta1.CrossVersionObjectReference { return this.__inputs; }
      private readonly __inputs: inputApi.autoscaling.v2beta1.CrossVersionObjectReference;

      /**
      * Create a autoscaling.v2beta1.CrossVersionObjectReference resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.autoscaling.v2beta1.CrossVersionObjectReference, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "autoscaling/v2beta1";
          inputs["kind"] = "CrossVersionObjectReference";
          inputs["name"] = args && args.name || undefined;
          super("kubernetes:autoscaling/v2beta1:CrossVersionObjectReference", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * HorizontalPodAutoscaler is the configuration for a horizontal pod autoscaler, which
     * automatically manages the replica count of any resource implementing the scale subresource
     * based on the metrics specified.
     */
    export class HorizontalPodAutoscaler extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"autoscaling/v2beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"HorizontalPodAutoscaler">;

      /**
       * metadata is the standard object metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * spec is the specification for the behaviour of the autoscaler. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.
       */
      public readonly spec: pulumi.Output<outputApi.autoscaling.v2beta1.HorizontalPodAutoscalerSpec>;

      /**
       * status is the current information about the autoscaler.
       */
      public readonly status: pulumi.Output<outputApi.autoscaling.v2beta1.HorizontalPodAutoscalerStatus>;


      /**
       * Get the state of an existing `HorizontalPodAutoscaler` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): HorizontalPodAutoscaler {
          return new HorizontalPodAutoscaler(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.autoscaling.v2beta1.HorizontalPodAutoscaler { return this.__inputs; }
      private readonly __inputs: inputApi.autoscaling.v2beta1.HorizontalPodAutoscaler;

      /**
      * Create a autoscaling.v2beta1.HorizontalPodAutoscaler resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.autoscaling.v2beta1.HorizontalPodAutoscaler, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "autoscaling/v2beta1";
          inputs["kind"] = "HorizontalPodAutoscaler";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:autoscaling/v2beta1:HorizontalPodAutoscaler", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * HorizontalPodAutoscaler is a list of horizontal pod autoscaler objects.
     */
    export class HorizontalPodAutoscalerList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"autoscaling/v2beta1">;

      /**
       * items is the list of horizontal pod autoscaler objects.
       */
      public readonly items: pulumi.Output<outputApi.autoscaling.v2beta1.HorizontalPodAutoscaler[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"HorizontalPodAutoscalerList">;

      /**
       * metadata is the standard list metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `HorizontalPodAutoscalerList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): HorizontalPodAutoscalerList {
          return new HorizontalPodAutoscalerList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.autoscaling.v2beta1.HorizontalPodAutoscalerList { return this.__inputs; }
      private readonly __inputs: inputApi.autoscaling.v2beta1.HorizontalPodAutoscalerList;

      /**
      * Create a autoscaling.v2beta1.HorizontalPodAutoscalerList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.autoscaling.v2beta1.HorizontalPodAutoscalerList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "autoscaling/v2beta1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "HorizontalPodAutoscalerList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:autoscaling/v2beta1:HorizontalPodAutoscalerList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

  export namespace v2beta2 {
    /**
     * CrossVersionObjectReference contains enough information to let you identify the referred
     * resource.
     */
    export class CrossVersionObjectReference extends pulumi.CustomResource {
      /**
       * API version of the referent
       */
      public readonly apiVersion: pulumi.Output<"autoscaling/v2beta2">;

      /**
       * Kind of the referent; More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
       */
      public readonly kind: pulumi.Output<"CrossVersionObjectReference">;

      /**
       * Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names
       */
      public readonly name: pulumi.Output<string>;


      /**
       * Get the state of an existing `CrossVersionObjectReference` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CrossVersionObjectReference {
          return new CrossVersionObjectReference(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.autoscaling.v2beta2.CrossVersionObjectReference { return this.__inputs; }
      private readonly __inputs: inputApi.autoscaling.v2beta2.CrossVersionObjectReference;

      /**
      * Create a autoscaling.v2beta2.CrossVersionObjectReference resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.autoscaling.v2beta2.CrossVersionObjectReference, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "autoscaling/v2beta2";
          inputs["kind"] = "CrossVersionObjectReference";
          inputs["name"] = args && args.name || undefined;
          super("kubernetes:autoscaling/v2beta2:CrossVersionObjectReference", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * HorizontalPodAutoscaler is the configuration for a horizontal pod autoscaler, which
     * automatically manages the replica count of any resource implementing the scale subresource
     * based on the metrics specified.
     */
    export class HorizontalPodAutoscaler extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"autoscaling/v2beta2">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"HorizontalPodAutoscaler">;

      /**
       * metadata is the standard object metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * spec is the specification for the behaviour of the autoscaler. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.
       */
      public readonly spec: pulumi.Output<outputApi.autoscaling.v2beta2.HorizontalPodAutoscalerSpec>;

      /**
       * status is the current information about the autoscaler.
       */
      public readonly status: pulumi.Output<outputApi.autoscaling.v2beta2.HorizontalPodAutoscalerStatus>;


      /**
       * Get the state of an existing `HorizontalPodAutoscaler` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): HorizontalPodAutoscaler {
          return new HorizontalPodAutoscaler(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.autoscaling.v2beta2.HorizontalPodAutoscaler { return this.__inputs; }
      private readonly __inputs: inputApi.autoscaling.v2beta2.HorizontalPodAutoscaler;

      /**
      * Create a autoscaling.v2beta2.HorizontalPodAutoscaler resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.autoscaling.v2beta2.HorizontalPodAutoscaler, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "autoscaling/v2beta2";
          inputs["kind"] = "HorizontalPodAutoscaler";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:autoscaling/v2beta2:HorizontalPodAutoscaler", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * HorizontalPodAutoscalerList is a list of horizontal pod autoscaler objects.
     */
    export class HorizontalPodAutoscalerList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"autoscaling/v2beta2">;

      /**
       * items is the list of horizontal pod autoscaler objects.
       */
      public readonly items: pulumi.Output<outputApi.autoscaling.v2beta2.HorizontalPodAutoscaler[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"HorizontalPodAutoscalerList">;

      /**
       * metadata is the standard list metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `HorizontalPodAutoscalerList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): HorizontalPodAutoscalerList {
          return new HorizontalPodAutoscalerList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.autoscaling.v2beta2.HorizontalPodAutoscalerList { return this.__inputs; }
      private readonly __inputs: inputApi.autoscaling.v2beta2.HorizontalPodAutoscalerList;

      /**
      * Create a autoscaling.v2beta2.HorizontalPodAutoscalerList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.autoscaling.v2beta2.HorizontalPodAutoscalerList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "autoscaling/v2beta2";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "HorizontalPodAutoscalerList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:autoscaling/v2beta2:HorizontalPodAutoscalerList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

}

export namespace batch {
  export namespace v1 {
    /**
     * Job represents the configuration of a single job.
     */
    export class Job extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"batch/v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"Job">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Specification of the desired behavior of a job. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly spec: pulumi.Output<outputApi.batch.v1.JobSpec>;

      /**
       * Current status of a job. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly status: pulumi.Output<outputApi.batch.v1.JobStatus>;


      /**
       * Get the state of an existing `Job` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Job {
          return new Job(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.batch.v1.Job { return this.__inputs; }
      private readonly __inputs: inputApi.batch.v1.Job;

      /**
      * Create a batch.v1.Job resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.batch.v1.Job, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "batch/v1";
          inputs["kind"] = "Job";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:batch/v1:Job", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * JobList is a collection of jobs.
     */
    export class JobList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"batch/v1">;

      /**
       * items is the list of Jobs.
       */
      public readonly items: pulumi.Output<outputApi.batch.v1.Job[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"JobList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `JobList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): JobList {
          return new JobList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.batch.v1.JobList { return this.__inputs; }
      private readonly __inputs: inputApi.batch.v1.JobList;

      /**
      * Create a batch.v1.JobList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.batch.v1.JobList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "batch/v1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "JobList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:batch/v1:JobList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

  export namespace v1beta1 {
    /**
     * CronJob represents the configuration of a single cron job.
     */
    export class CronJob extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"batch/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"CronJob">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Specification of the desired behavior of a cron job, including the schedule. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly spec: pulumi.Output<outputApi.batch.v1beta1.CronJobSpec>;

      /**
       * Current status of a cron job. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly status: pulumi.Output<outputApi.batch.v1beta1.CronJobStatus>;


      /**
       * Get the state of an existing `CronJob` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CronJob {
          return new CronJob(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.batch.v1beta1.CronJob { return this.__inputs; }
      private readonly __inputs: inputApi.batch.v1beta1.CronJob;

      /**
      * Create a batch.v1beta1.CronJob resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.batch.v1beta1.CronJob, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "batch/v1beta1";
          inputs["kind"] = "CronJob";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:batch/v1beta1:CronJob", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * CronJobList is a collection of cron jobs.
     */
    export class CronJobList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"batch/v1beta1">;

      /**
       * items is the list of CronJobs.
       */
      public readonly items: pulumi.Output<outputApi.batch.v1beta1.CronJob[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"CronJobList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `CronJobList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CronJobList {
          return new CronJobList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.batch.v1beta1.CronJobList { return this.__inputs; }
      private readonly __inputs: inputApi.batch.v1beta1.CronJobList;

      /**
      * Create a batch.v1beta1.CronJobList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.batch.v1beta1.CronJobList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "batch/v1beta1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "CronJobList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:batch/v1beta1:CronJobList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

  export namespace v2alpha1 {
    /**
     * CronJob represents the configuration of a single cron job.
     */
    export class CronJob extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"batch/v2alpha1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"CronJob">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Specification of the desired behavior of a cron job, including the schedule. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly spec: pulumi.Output<outputApi.batch.v2alpha1.CronJobSpec>;

      /**
       * Current status of a cron job. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly status: pulumi.Output<outputApi.batch.v2alpha1.CronJobStatus>;


      /**
       * Get the state of an existing `CronJob` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CronJob {
          return new CronJob(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.batch.v2alpha1.CronJob { return this.__inputs; }
      private readonly __inputs: inputApi.batch.v2alpha1.CronJob;

      /**
      * Create a batch.v2alpha1.CronJob resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.batch.v2alpha1.CronJob, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "batch/v2alpha1";
          inputs["kind"] = "CronJob";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:batch/v2alpha1:CronJob", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * CronJobList is a collection of cron jobs.
     */
    export class CronJobList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"batch/v2alpha1">;

      /**
       * items is the list of CronJobs.
       */
      public readonly items: pulumi.Output<outputApi.batch.v2alpha1.CronJob[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"CronJobList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `CronJobList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CronJobList {
          return new CronJobList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.batch.v2alpha1.CronJobList { return this.__inputs; }
      private readonly __inputs: inputApi.batch.v2alpha1.CronJobList;

      /**
      * Create a batch.v2alpha1.CronJobList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.batch.v2alpha1.CronJobList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "batch/v2alpha1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "CronJobList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:batch/v2alpha1:CronJobList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

}

export namespace certificates {
  export namespace v1beta1 {
    /**
     * Describes a certificate signing request
     */
    export class CertificateSigningRequest extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"certificates.k8s.io/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"CertificateSigningRequest">;

      
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * The certificate request itself and any additional information.
       */
      public readonly spec: pulumi.Output<outputApi.certificates.v1beta1.CertificateSigningRequestSpec>;

      /**
       * Derived information about the request.
       */
      public readonly status: pulumi.Output<outputApi.certificates.v1beta1.CertificateSigningRequestStatus>;


      /**
       * Get the state of an existing `CertificateSigningRequest` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CertificateSigningRequest {
          return new CertificateSigningRequest(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.certificates.v1beta1.CertificateSigningRequest { return this.__inputs; }
      private readonly __inputs: inputApi.certificates.v1beta1.CertificateSigningRequest;

      /**
      * Create a certificates.v1beta1.CertificateSigningRequest resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.certificates.v1beta1.CertificateSigningRequest, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "certificates.k8s.io/v1beta1";
          inputs["kind"] = "CertificateSigningRequest";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:certificates.k8s.io/v1beta1:CertificateSigningRequest", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    
    export class CertificateSigningRequestList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"certificates.k8s.io/v1beta1">;

      
      public readonly items: pulumi.Output<outputApi.certificates.v1beta1.CertificateSigningRequest[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"CertificateSigningRequestList">;

      
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `CertificateSigningRequestList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): CertificateSigningRequestList {
          return new CertificateSigningRequestList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.certificates.v1beta1.CertificateSigningRequestList { return this.__inputs; }
      private readonly __inputs: inputApi.certificates.v1beta1.CertificateSigningRequestList;

      /**
      * Create a certificates.v1beta1.CertificateSigningRequestList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.certificates.v1beta1.CertificateSigningRequestList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "certificates.k8s.io/v1beta1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "CertificateSigningRequestList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:certificates.k8s.io/v1beta1:CertificateSigningRequestList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

}

export namespace coordination {
  export namespace v1beta1 {
    /**
     * Lease defines a lease concept.
     */
    export class Lease extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"coordination.k8s.io/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"Lease">;

      /**
       * More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Specification of the Lease. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly spec: pulumi.Output<outputApi.coordination.v1beta1.LeaseSpec>;


      /**
       * Get the state of an existing `Lease` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Lease {
          return new Lease(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.coordination.v1beta1.Lease { return this.__inputs; }
      private readonly __inputs: inputApi.coordination.v1beta1.Lease;

      /**
      * Create a coordination.v1beta1.Lease resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.coordination.v1beta1.Lease, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "coordination.k8s.io/v1beta1";
          inputs["kind"] = "Lease";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          super("kubernetes:coordination.k8s.io/v1beta1:Lease", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * LeaseList is a list of Lease objects.
     */
    export class LeaseList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"coordination.k8s.io/v1beta1">;

      /**
       * Items is a list of schema objects.
       */
      public readonly items: pulumi.Output<outputApi.coordination.v1beta1.Lease[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"LeaseList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `LeaseList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): LeaseList {
          return new LeaseList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.coordination.v1beta1.LeaseList { return this.__inputs; }
      private readonly __inputs: inputApi.coordination.v1beta1.LeaseList;

      /**
      * Create a coordination.v1beta1.LeaseList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.coordination.v1beta1.LeaseList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "coordination.k8s.io/v1beta1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "LeaseList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:coordination.k8s.io/v1beta1:LeaseList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

}

export namespace core {
  export namespace v1 {
    /**
     * Binding ties one object to another; for example, a pod is bound to a node by a scheduler.
     * Deprecated in 1.7, please use the bindings subresource of pods instead.
     */
    export class Binding extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"Binding">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * The target object that you want to bind to the standard object.
       */
      public readonly target: pulumi.Output<outputApi.core.v1.ObjectReference>;


      /**
       * Get the state of an existing `Binding` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Binding {
          return new Binding(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.Binding { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.Binding;

      /**
      * Create a core.v1.Binding resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.Binding, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["kind"] = "Binding";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["target"] = args && args.target || undefined;
          super("kubernetes:core/v1:Binding", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * ComponentStatus (and ComponentStatusList) holds the cluster validation info.
     */
    export class ComponentStatus extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * List of component conditions observed
       */
      public readonly conditions: pulumi.Output<outputApi.core.v1.ComponentCondition[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ComponentStatus">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;


      /**
       * Get the state of an existing `ComponentStatus` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ComponentStatus {
          return new ComponentStatus(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.ComponentStatus { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.ComponentStatus;

      /**
      * Create a core.v1.ComponentStatus resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.ComponentStatus, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["conditions"] = args && args.conditions || undefined;
          inputs["kind"] = "ComponentStatus";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:core/v1:ComponentStatus", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * Status of all the conditions for the component as a list of ComponentStatus objects.
     */
    export class ComponentStatusList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * List of ComponentStatus objects.
       */
      public readonly items: pulumi.Output<outputApi.core.v1.ComponentStatus[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ComponentStatusList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `ComponentStatusList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ComponentStatusList {
          return new ComponentStatusList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.ComponentStatusList { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.ComponentStatusList;

      /**
      * Create a core.v1.ComponentStatusList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.ComponentStatusList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "ComponentStatusList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:core/v1:ComponentStatusList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * ConfigMap holds configuration data for pods to consume.
     */
    export class ConfigMap extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * BinaryData contains the binary data. Each key must consist of alphanumeric characters, '-',
       * '_' or '.'. BinaryData can contain byte sequences that are not in the UTF-8 range. The keys
       * stored in BinaryData must not overlap with the ones in the Data field, this is enforced
       * during validation process. Using this field will require 1.10+ apiserver and kubelet.
       */
      public readonly binaryData: pulumi.Output<object>;

      /**
       * Data contains the configuration data. Each key must consist of alphanumeric characters,
       * '-', '_' or '.'. Values with non-UTF-8 byte sequences must use the BinaryData field. The
       * keys stored in Data must not overlap with the keys in the BinaryData field, this is
       * enforced during validation process.
       */
      public readonly data: pulumi.Output<{[key: string]: pulumi.Output<string>}>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ConfigMap">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;


      /**
       * Get the state of an existing `ConfigMap` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ConfigMap {
          return new ConfigMap(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.ConfigMap { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.ConfigMap;

      /**
      * Create a core.v1.ConfigMap resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.ConfigMap, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["binaryData"] = args && args.binaryData || undefined;
          inputs["data"] = args && args.data || undefined;
          inputs["kind"] = "ConfigMap";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:core/v1:ConfigMap", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * ConfigMapList is a resource containing a list of ConfigMap objects.
     */
    export class ConfigMapList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * Items is the list of ConfigMaps.
       */
      public readonly items: pulumi.Output<outputApi.core.v1.ConfigMap[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ConfigMapList">;

      /**
       * More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `ConfigMapList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ConfigMapList {
          return new ConfigMapList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.ConfigMapList { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.ConfigMapList;

      /**
      * Create a core.v1.ConfigMapList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.ConfigMapList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "ConfigMapList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:core/v1:ConfigMapList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * Endpoints is a collection of endpoints that implement the actual service. Example:
     *   Name: "mysvc",
     *   Subsets: [
     *     {
     *       Addresses: [{"ip": "10.10.1.1"}, {"ip": "10.10.2.2"}],
     *       Ports: [{"name": "a", "port": 8675}, {"name": "b", "port": 309}]
     *     },
     *     {
     *       Addresses: [{"ip": "10.10.3.3"}],
     *       Ports: [{"name": "a", "port": 93}, {"name": "b", "port": 76}]
     *     },
     *  ]
     */
    export class Endpoints extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"Endpoints">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * The set of all endpoints is the union of all subsets. Addresses are placed into subsets
       * according to the IPs they share. A single address with multiple ports, some of which are
       * ready and some of which are not (because they come from different containers) will result
       * in the address being displayed in different subsets for the different ports. No address
       * will appear in both Addresses and NotReadyAddresses in the same subset. Sets of addresses
       * and ports that comprise a service.
       */
      public readonly subsets: pulumi.Output<outputApi.core.v1.EndpointSubset[]>;


      /**
       * Get the state of an existing `Endpoints` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Endpoints {
          return new Endpoints(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.Endpoints { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.Endpoints;

      /**
      * Create a core.v1.Endpoints resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.Endpoints, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["kind"] = "Endpoints";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["subsets"] = args && args.subsets || undefined;
          super("kubernetes:core/v1:Endpoints", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * EndpointsList is a list of endpoints.
     */
    export class EndpointsList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * List of endpoints.
       */
      public readonly items: pulumi.Output<outputApi.core.v1.Endpoints[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"EndpointsList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `EndpointsList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): EndpointsList {
          return new EndpointsList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.EndpointsList { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.EndpointsList;

      /**
      * Create a core.v1.EndpointsList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.EndpointsList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "EndpointsList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:core/v1:EndpointsList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * Event is a report of an event somewhere in the cluster.
     */
    export class Event extends pulumi.CustomResource {
      /**
       * What action was taken/failed regarding to the Regarding object.
       */
      public readonly action: pulumi.Output<string>;

      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * The number of times this event has occurred.
       */
      public readonly count: pulumi.Output<number>;

      /**
       * Time when this Event was first observed.
       */
      public readonly eventTime: pulumi.Output<string>;

      /**
       * The time at which the event was first recorded. (Time of server receipt is in TypeMeta.)
       */
      public readonly firstTimestamp: pulumi.Output<string>;

      /**
       * The object that this event is about.
       */
      public readonly involvedObject: pulumi.Output<outputApi.core.v1.ObjectReference>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"Event">;

      /**
       * The time at which the most recent occurrence of this event was recorded.
       */
      public readonly lastTimestamp: pulumi.Output<string>;

      /**
       * A human-readable description of the status of this operation.
       */
      public readonly message: pulumi.Output<string>;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * This should be a short, machine understandable string that gives the reason for the
       * transition into the object's current status.
       */
      public readonly reason: pulumi.Output<string>;

      /**
       * Optional secondary object for more complex actions.
       */
      public readonly related: pulumi.Output<outputApi.core.v1.ObjectReference>;

      /**
       * Name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`.
       */
      public readonly reportingComponent: pulumi.Output<string>;

      /**
       * ID of the controller instance, e.g. `kubelet-xyzf`.
       */
      public readonly reportingInstance: pulumi.Output<string>;

      /**
       * Data about the Event series this event represents or nil if it's a singleton Event.
       */
      public readonly series: pulumi.Output<outputApi.core.v1.EventSeries>;

      /**
       * The component reporting this event. Should be a short machine understandable string.
       */
      public readonly source: pulumi.Output<outputApi.core.v1.EventSource>;

      /**
       * Type of this event (Normal, Warning), new types could be added in the future
       */
      public readonly type: pulumi.Output<string>;


      /**
       * Get the state of an existing `Event` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Event {
          return new Event(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.Event { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.Event;

      /**
      * Create a core.v1.Event resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.Event, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["action"] = args && args.action || undefined;
          inputs["apiVersion"] = "v1";
          inputs["count"] = args && args.count || undefined;
          inputs["eventTime"] = args && args.eventTime || undefined;
          inputs["firstTimestamp"] = args && args.firstTimestamp || undefined;
          inputs["involvedObject"] = args && args.involvedObject || undefined;
          inputs["kind"] = "Event";
          inputs["lastTimestamp"] = args && args.lastTimestamp || undefined;
          inputs["message"] = args && args.message || undefined;
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["reason"] = args && args.reason || undefined;
          inputs["related"] = args && args.related || undefined;
          inputs["reportingComponent"] = args && args.reportingComponent || undefined;
          inputs["reportingInstance"] = args && args.reportingInstance || undefined;
          inputs["series"] = args && args.series || undefined;
          inputs["source"] = args && args.source || undefined;
          inputs["type"] = args && args.type || undefined;
          super("kubernetes:core/v1:Event", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * EventList is a list of events.
     */
    export class EventList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * List of events
       */
      public readonly items: pulumi.Output<outputApi.core.v1.Event[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"EventList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `EventList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): EventList {
          return new EventList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.EventList { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.EventList;

      /**
      * Create a core.v1.EventList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.EventList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "EventList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:core/v1:EventList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * LimitRange sets resource usage limits for each kind of resource in a Namespace.
     */
    export class LimitRange extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"LimitRange">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Spec defines the limits enforced. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly spec: pulumi.Output<outputApi.core.v1.LimitRangeSpec>;


      /**
       * Get the state of an existing `LimitRange` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): LimitRange {
          return new LimitRange(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.LimitRange { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.LimitRange;

      /**
      * Create a core.v1.LimitRange resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.LimitRange, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["kind"] = "LimitRange";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          super("kubernetes:core/v1:LimitRange", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * LimitRangeList is a list of LimitRange items.
     */
    export class LimitRangeList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * Items is a list of LimitRange objects. More info:
       * https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
       */
      public readonly items: pulumi.Output<outputApi.core.v1.LimitRange[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"LimitRangeList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `LimitRangeList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): LimitRangeList {
          return new LimitRangeList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.LimitRangeList { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.LimitRangeList;

      /**
      * Create a core.v1.LimitRangeList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.LimitRangeList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "LimitRangeList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:core/v1:LimitRangeList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * Namespace provides a scope for Names. Use of multiple namespaces is optional.
     */
    export class Namespace extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"Namespace">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Spec defines the behavior of the Namespace. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly spec: pulumi.Output<outputApi.core.v1.NamespaceSpec>;

      /**
       * Status describes the current status of a Namespace. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly status: pulumi.Output<outputApi.core.v1.NamespaceStatus>;


      /**
       * Get the state of an existing `Namespace` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Namespace {
          return new Namespace(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.Namespace { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.Namespace;

      /**
      * Create a core.v1.Namespace resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.Namespace, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["kind"] = "Namespace";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:core/v1:Namespace", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * NamespaceList is a list of Namespaces.
     */
    export class NamespaceList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * Items is the list of Namespace objects in the list. More info:
       * https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
       */
      public readonly items: pulumi.Output<outputApi.core.v1.Namespace[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"NamespaceList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `NamespaceList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): NamespaceList {
          return new NamespaceList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.NamespaceList { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.NamespaceList;

      /**
      * Create a core.v1.NamespaceList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.NamespaceList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "NamespaceList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:core/v1:NamespaceList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * Node is a worker node in Kubernetes. Each node will have a unique identifier in the cache
     * (i.e. in etcd).
     */
    export class Node extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"Node">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Spec defines the behavior of a node.
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly spec: pulumi.Output<outputApi.core.v1.NodeSpec>;

      /**
       * Most recently observed status of the node. Populated by the system. Read-only. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly status: pulumi.Output<outputApi.core.v1.NodeStatus>;


      /**
       * Get the state of an existing `Node` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Node {
          return new Node(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.Node { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.Node;

      /**
      * Create a core.v1.Node resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.Node, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["kind"] = "Node";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:core/v1:Node", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * NodeList is the whole list of all Nodes which have been registered with master.
     */
    export class NodeList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * List of nodes
       */
      public readonly items: pulumi.Output<outputApi.core.v1.Node[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"NodeList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `NodeList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): NodeList {
          return new NodeList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.NodeList { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.NodeList;

      /**
      * Create a core.v1.NodeList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.NodeList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "NodeList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:core/v1:NodeList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * ObjectReference contains enough information to let you inspect or modify the referred object.
     */
    export class ObjectReference extends pulumi.CustomResource {
      /**
       * API version of the referent.
       */
      public readonly apiVersion: pulumi.Output<"core/v1">;

      /**
       * If referring to a piece of an object instead of an entire object, this string should
       * contain a valid JSON/Go field access statement, such as
       * desiredState.manifest.containers[2]. For example, if the object reference is to a container
       * within a pod, this would take on a value like: "spec.containers{name}" (where "name" refers
       * to the name of the container that triggered the event) or if no container name is specified
       * "spec.containers[2]" (container with index 2 in this pod). This syntax is chosen only to
       * have some well-defined way of referencing a part of an object.
       */
      public readonly fieldPath: pulumi.Output<string>;

      /**
       * Kind of the referent. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ObjectReference">;

      /**
       * Name of the referent. More info:
       * https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
       */
      public readonly name: pulumi.Output<string>;

      /**
       * Namespace of the referent. More info:
       * https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
       */
      public readonly namespace: pulumi.Output<string>;

      /**
       * Specific resourceVersion to which this reference is made, if any. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
       */
      public readonly resourceVersion: pulumi.Output<string>;

      /**
       * UID of the referent. More info:
       * https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
       */
      public readonly uid: pulumi.Output<string>;


      /**
       * Get the state of an existing `ObjectReference` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ObjectReference {
          return new ObjectReference(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.ObjectReference { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.ObjectReference;

      /**
      * Create a core.v1.ObjectReference resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.ObjectReference, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "core/v1";
          inputs["fieldPath"] = args && args.fieldPath || undefined;
          inputs["kind"] = "ObjectReference";
          inputs["name"] = args && args.name || undefined;
          inputs["namespace"] = args && args.namespace || undefined;
          inputs["resourceVersion"] = args && args.resourceVersion || undefined;
          inputs["uid"] = args && args.uid || undefined;
          super("kubernetes:core/v1:ObjectReference", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * PersistentVolume (PV) is a storage resource provisioned by an administrator. It is analogous
     * to a node. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes
     */
    export class PersistentVolume extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"PersistentVolume">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Spec defines a specification of a persistent volume owned by the cluster. Provisioned by an
       * administrator. More info:
       * https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistent-volumes
       */
      public readonly spec: pulumi.Output<outputApi.core.v1.PersistentVolumeSpec>;

      /**
       * Status represents the current information/status for the persistent volume. Populated by
       * the system. Read-only. More info:
       * https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistent-volumes
       */
      public readonly status: pulumi.Output<outputApi.core.v1.PersistentVolumeStatus>;


      /**
       * Get the state of an existing `PersistentVolume` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PersistentVolume {
          return new PersistentVolume(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.PersistentVolume { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.PersistentVolume;

      /**
      * Create a core.v1.PersistentVolume resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.PersistentVolume, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["kind"] = "PersistentVolume";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:core/v1:PersistentVolume", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * PersistentVolumeClaim is a user's request for and claim to a persistent volume
     */
    export class PersistentVolumeClaim extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"PersistentVolumeClaim">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Spec defines the desired characteristics of a volume requested by a pod author. More info:
       * https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
       */
      public readonly spec: pulumi.Output<outputApi.core.v1.PersistentVolumeClaimSpec>;

      /**
       * Status represents the current information/status of a persistent volume claim. Read-only.
       * More info:
       * https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
       */
      public readonly status: pulumi.Output<outputApi.core.v1.PersistentVolumeClaimStatus>;


      /**
       * Get the state of an existing `PersistentVolumeClaim` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PersistentVolumeClaim {
          return new PersistentVolumeClaim(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.PersistentVolumeClaim { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.PersistentVolumeClaim;

      /**
      * Create a core.v1.PersistentVolumeClaim resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.PersistentVolumeClaim, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["kind"] = "PersistentVolumeClaim";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:core/v1:PersistentVolumeClaim", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * PersistentVolumeClaimList is a list of PersistentVolumeClaim items.
     */
    export class PersistentVolumeClaimList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * A list of persistent volume claims. More info:
       * https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
       */
      public readonly items: pulumi.Output<outputApi.core.v1.PersistentVolumeClaim[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"PersistentVolumeClaimList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `PersistentVolumeClaimList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PersistentVolumeClaimList {
          return new PersistentVolumeClaimList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.PersistentVolumeClaimList { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.PersistentVolumeClaimList;

      /**
      * Create a core.v1.PersistentVolumeClaimList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.PersistentVolumeClaimList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "PersistentVolumeClaimList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:core/v1:PersistentVolumeClaimList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * PersistentVolumeList is a list of PersistentVolume items.
     */
    export class PersistentVolumeList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * List of persistent volumes. More info:
       * https://kubernetes.io/docs/concepts/storage/persistent-volumes
       */
      public readonly items: pulumi.Output<outputApi.core.v1.PersistentVolume[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"PersistentVolumeList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `PersistentVolumeList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PersistentVolumeList {
          return new PersistentVolumeList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.PersistentVolumeList { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.PersistentVolumeList;

      /**
      * Create a core.v1.PersistentVolumeList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.PersistentVolumeList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "PersistentVolumeList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:core/v1:PersistentVolumeList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * Pod is a collection of containers that can run on a host. This resource is created by clients
     * and scheduled onto hosts.
     */
    export class Pod extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"Pod">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Specification of the desired behavior of the pod. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly spec: pulumi.Output<outputApi.core.v1.PodSpec>;

      /**
       * Most recently observed status of the pod. This data may not be up to date. Populated by the
       * system. Read-only. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly status: pulumi.Output<outputApi.core.v1.PodStatus>;


      /**
       * Get the state of an existing `Pod` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Pod {
          return new Pod(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.Pod { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.Pod;

      /**
      * Create a core.v1.Pod resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.Pod, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["kind"] = "Pod";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:core/v1:Pod", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * PodList is a list of Pods.
     */
    export class PodList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * List of pods. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md
       */
      public readonly items: pulumi.Output<outputApi.core.v1.Pod[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"PodList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `PodList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PodList {
          return new PodList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.PodList { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.PodList;

      /**
      * Create a core.v1.PodList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.PodList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "PodList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:core/v1:PodList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * PodTemplate describes a template for creating copies of a predefined pod.
     */
    export class PodTemplate extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"PodTemplate">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Template defines the pods that will be created from this pod template.
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly template: pulumi.Output<outputApi.core.v1.PodTemplateSpec>;


      /**
       * Get the state of an existing `PodTemplate` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PodTemplate {
          return new PodTemplate(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.PodTemplate { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.PodTemplate;

      /**
      * Create a core.v1.PodTemplate resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.PodTemplate, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["kind"] = "PodTemplate";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["template"] = args && args.template || undefined;
          super("kubernetes:core/v1:PodTemplate", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * PodTemplateList is a list of PodTemplates.
     */
    export class PodTemplateList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * List of pod templates
       */
      public readonly items: pulumi.Output<outputApi.core.v1.PodTemplate[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"PodTemplateList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `PodTemplateList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PodTemplateList {
          return new PodTemplateList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.PodTemplateList { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.PodTemplateList;

      /**
      * Create a core.v1.PodTemplateList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.PodTemplateList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "PodTemplateList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:core/v1:PodTemplateList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * ReplicationController represents the configuration of a replication controller.
     */
    export class ReplicationController extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ReplicationController">;

      /**
       * If the Labels of a ReplicationController are empty, they are defaulted to be the same as
       * the Pod(s) that the replication controller manages. Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Spec defines the specification of the desired behavior of the replication controller. More
       * info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly spec: pulumi.Output<outputApi.core.v1.ReplicationControllerSpec>;

      /**
       * Status is the most recently observed status of the replication controller. This data may be
       * out of date by some window of time. Populated by the system. Read-only. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly status: pulumi.Output<outputApi.core.v1.ReplicationControllerStatus>;


      /**
       * Get the state of an existing `ReplicationController` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ReplicationController {
          return new ReplicationController(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.ReplicationController { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.ReplicationController;

      /**
      * Create a core.v1.ReplicationController resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.ReplicationController, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["kind"] = "ReplicationController";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:core/v1:ReplicationController", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * ReplicationControllerList is a collection of replication controllers.
     */
    export class ReplicationControllerList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * List of replication controllers. More info:
       * https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller
       */
      public readonly items: pulumi.Output<outputApi.core.v1.ReplicationController[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ReplicationControllerList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `ReplicationControllerList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ReplicationControllerList {
          return new ReplicationControllerList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.ReplicationControllerList { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.ReplicationControllerList;

      /**
      * Create a core.v1.ReplicationControllerList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.ReplicationControllerList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "ReplicationControllerList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:core/v1:ReplicationControllerList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * ResourceQuota sets aggregate quota restrictions enforced per namespace
     */
    export class ResourceQuota extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ResourceQuota">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Spec defines the desired quota.
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly spec: pulumi.Output<outputApi.core.v1.ResourceQuotaSpec>;

      /**
       * Status defines the actual enforced quota and its current usage.
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly status: pulumi.Output<outputApi.core.v1.ResourceQuotaStatus>;


      /**
       * Get the state of an existing `ResourceQuota` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ResourceQuota {
          return new ResourceQuota(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.ResourceQuota { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.ResourceQuota;

      /**
      * Create a core.v1.ResourceQuota resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.ResourceQuota, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["kind"] = "ResourceQuota";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:core/v1:ResourceQuota", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * ResourceQuotaList is a list of ResourceQuota items.
     */
    export class ResourceQuotaList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * Items is a list of ResourceQuota objects. More info:
       * https://kubernetes.io/docs/concepts/policy/resource-quotas/
       */
      public readonly items: pulumi.Output<outputApi.core.v1.ResourceQuota[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ResourceQuotaList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `ResourceQuotaList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ResourceQuotaList {
          return new ResourceQuotaList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.ResourceQuotaList { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.ResourceQuotaList;

      /**
      * Create a core.v1.ResourceQuotaList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.ResourceQuotaList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "ResourceQuotaList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:core/v1:ResourceQuotaList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * Secret holds secret data of a certain type. The total bytes of the values in the Data field
     * must be less than MaxSecretSize bytes.
     */
    export class Secret extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * Data contains the secret data. Each key must consist of alphanumeric characters, '-', '_'
       * or '.'. The serialized form of the secret data is a base64 encoded string, representing the
       * arbitrary (possibly non-string) data value here. Described in
       * https://tools.ietf.org/html/rfc4648#section-4
       */
      public readonly data: pulumi.Output<object>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"Secret">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * stringData allows specifying non-binary secret data in string form. It is provided as a
       * write-only convenience method. All keys and values are merged into the data field on write,
       * overwriting any existing values. It is never output when reading from the API.
       */
      public readonly stringData: pulumi.Output<{[key: string]: pulumi.Output<string>}>;

      /**
       * Used to facilitate programmatic handling of secret data.
       */
      public readonly type: pulumi.Output<string>;


      /**
       * Get the state of an existing `Secret` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Secret {
          return new Secret(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.Secret { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.Secret;

      /**
      * Create a core.v1.Secret resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.Secret, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["data"] = args && args.data || undefined;
          inputs["kind"] = "Secret";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["stringData"] = args && args.stringData || undefined;
          inputs["type"] = args && args.type || undefined;
          super("kubernetes:core/v1:Secret", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * SecretList is a list of Secret.
     */
    export class SecretList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * Items is a list of secret objects. More info:
       * https://kubernetes.io/docs/concepts/configuration/secret
       */
      public readonly items: pulumi.Output<outputApi.core.v1.Secret[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"SecretList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `SecretList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): SecretList {
          return new SecretList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.SecretList { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.SecretList;

      /**
      * Create a core.v1.SecretList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.SecretList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "SecretList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:core/v1:SecretList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * Service is a named abstraction of software service (for example, mysql) consisting of local
     * port (for example 3306) that the proxy listens on, and the selector that determines which
     * pods will answer requests sent through the proxy.
     */
    export class Service extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"Service">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Spec defines the behavior of a service.
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly spec: pulumi.Output<outputApi.core.v1.ServiceSpec>;

      /**
       * Most recently observed status of the service. Populated by the system. Read-only. More
       * info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly status: pulumi.Output<outputApi.core.v1.ServiceStatus>;


      /**
       * Get the state of an existing `Service` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Service {
          return new Service(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.Service { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.Service;

      /**
      * Create a core.v1.Service resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.Service, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["kind"] = "Service";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:core/v1:Service", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * ServiceAccount binds together: * a name, understood by users, and perhaps by peripheral
     * systems, for an identity * a principal that can be authenticated and authorized * a set of
     * secrets
     */
    export class ServiceAccount extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * AutomountServiceAccountToken indicates whether pods running as this service account should
       * have an API token automatically mounted. Can be overridden at the pod level.
       */
      public readonly automountServiceAccountToken: pulumi.Output<boolean>;

      /**
       * ImagePullSecrets is a list of references to secrets in the same namespace to use for
       * pulling any images in pods that reference this ServiceAccount. ImagePullSecrets are
       * distinct from Secrets because Secrets can be mounted in the pod, but ImagePullSecrets are
       * only accessed by the kubelet. More info:
       * https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod
       */
      public readonly imagePullSecrets: pulumi.Output<outputApi.core.v1.LocalObjectReference[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ServiceAccount">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Secrets is the list of secrets allowed to be used by pods running using this
       * ServiceAccount. More info: https://kubernetes.io/docs/concepts/configuration/secret
       */
      public readonly secrets: pulumi.Output<outputApi.core.v1.ObjectReference[]>;


      /**
       * Get the state of an existing `ServiceAccount` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ServiceAccount {
          return new ServiceAccount(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.ServiceAccount { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.ServiceAccount;

      /**
      * Create a core.v1.ServiceAccount resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.ServiceAccount, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["automountServiceAccountToken"] = args && args.automountServiceAccountToken || undefined;
          inputs["imagePullSecrets"] = args && args.imagePullSecrets || undefined;
          inputs["kind"] = "ServiceAccount";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["secrets"] = args && args.secrets || undefined;
          super("kubernetes:core/v1:ServiceAccount", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * ServiceAccountList is a list of ServiceAccount objects
     */
    export class ServiceAccountList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * List of ServiceAccounts. More info:
       * https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
       */
      public readonly items: pulumi.Output<outputApi.core.v1.ServiceAccount[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ServiceAccountList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `ServiceAccountList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ServiceAccountList {
          return new ServiceAccountList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.ServiceAccountList { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.ServiceAccountList;

      /**
      * Create a core.v1.ServiceAccountList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.ServiceAccountList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "ServiceAccountList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:core/v1:ServiceAccountList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * ServiceList holds a list of services.
     */
    export class ServiceList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * List of services
       */
      public readonly items: pulumi.Output<outputApi.core.v1.Service[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ServiceList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `ServiceList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ServiceList {
          return new ServiceList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.core.v1.ServiceList { return this.__inputs; }
      private readonly __inputs: inputApi.core.v1.ServiceList;

      /**
      * Create a core.v1.ServiceList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.core.v1.ServiceList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "ServiceList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:core/v1:ServiceList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

}

export namespace events {
  export namespace v1beta1 {
    /**
     * Event is a report of an event somewhere in the cluster. It generally denotes some state
     * change in the system.
     */
    export class Event extends pulumi.CustomResource {
      /**
       * What action was taken/failed regarding to the regarding object.
       */
      public readonly action: pulumi.Output<string>;

      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"events.k8s.io/v1beta1">;

      /**
       * Deprecated field assuring backward compatibility with core.v1 Event type
       */
      public readonly deprecatedCount: pulumi.Output<number>;

      /**
       * Deprecated field assuring backward compatibility with core.v1 Event type
       */
      public readonly deprecatedFirstTimestamp: pulumi.Output<string>;

      /**
       * Deprecated field assuring backward compatibility with core.v1 Event type
       */
      public readonly deprecatedLastTimestamp: pulumi.Output<string>;

      /**
       * Deprecated field assuring backward compatibility with core.v1 Event type
       */
      public readonly deprecatedSource: pulumi.Output<outputApi.core.v1.EventSource>;

      /**
       * Required. Time when this Event was first observed.
       */
      public readonly eventTime: pulumi.Output<string>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"Event">;

      
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Optional. A human-readable description of the status of this operation. Maximal length of
       * the note is 1kB, but libraries should be prepared to handle values up to 64kB.
       */
      public readonly note: pulumi.Output<string>;

      /**
       * Why the action was taken.
       */
      public readonly reason: pulumi.Output<string>;

      /**
       * The object this Event is about. In most cases it's an Object reporting controller
       * implements. E.g. ReplicaSetController implements ReplicaSets and this event is emitted
       * because it acts on some changes in a ReplicaSet object.
       */
      public readonly regarding: pulumi.Output<outputApi.core.v1.ObjectReference>;

      /**
       * Optional secondary object for more complex actions. E.g. when regarding object triggers a
       * creation or deletion of related object.
       */
      public readonly related: pulumi.Output<outputApi.core.v1.ObjectReference>;

      /**
       * Name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`.
       */
      public readonly reportingController: pulumi.Output<string>;

      /**
       * ID of the controller instance, e.g. `kubelet-xyzf`.
       */
      public readonly reportingInstance: pulumi.Output<string>;

      /**
       * Data about the Event series this event represents or nil if it's a singleton Event.
       */
      public readonly series: pulumi.Output<outputApi.events.v1beta1.EventSeries>;

      /**
       * Type of this event (Normal, Warning), new types could be added in the future.
       */
      public readonly type: pulumi.Output<string>;


      /**
       * Get the state of an existing `Event` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Event {
          return new Event(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.events.v1beta1.Event { return this.__inputs; }
      private readonly __inputs: inputApi.events.v1beta1.Event;

      /**
      * Create a events.v1beta1.Event resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.events.v1beta1.Event, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["action"] = args && args.action || undefined;
          inputs["apiVersion"] = "events.k8s.io/v1beta1";
          inputs["deprecatedCount"] = args && args.deprecatedCount || undefined;
          inputs["deprecatedFirstTimestamp"] = args && args.deprecatedFirstTimestamp || undefined;
          inputs["deprecatedLastTimestamp"] = args && args.deprecatedLastTimestamp || undefined;
          inputs["deprecatedSource"] = args && args.deprecatedSource || undefined;
          inputs["eventTime"] = args && args.eventTime || undefined;
          inputs["kind"] = "Event";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["note"] = args && args.note || undefined;
          inputs["reason"] = args && args.reason || undefined;
          inputs["regarding"] = args && args.regarding || undefined;
          inputs["related"] = args && args.related || undefined;
          inputs["reportingController"] = args && args.reportingController || undefined;
          inputs["reportingInstance"] = args && args.reportingInstance || undefined;
          inputs["series"] = args && args.series || undefined;
          inputs["type"] = args && args.type || undefined;
          super("kubernetes:events.k8s.io/v1beta1:Event", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * EventList is a list of Event objects.
     */
    export class EventList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"events.k8s.io/v1beta1">;

      /**
       * Items is a list of schema objects.
       */
      public readonly items: pulumi.Output<outputApi.events.v1beta1.Event[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"EventList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `EventList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): EventList {
          return new EventList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.events.v1beta1.EventList { return this.__inputs; }
      private readonly __inputs: inputApi.events.v1beta1.EventList;

      /**
      * Create a events.v1beta1.EventList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.events.v1beta1.EventList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "events.k8s.io/v1beta1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "EventList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:events.k8s.io/v1beta1:EventList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

}

export namespace extensions {
  export namespace v1beta1 {
    /**
     * DEPRECATED - This group version of DaemonSet is deprecated by apps/v1beta2/DaemonSet. See the
     * release notes for more information. DaemonSet represents the configuration of a daemon set.
     */
    export class DaemonSet extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"extensions/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"DaemonSet">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * The desired behavior of this daemon set. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly spec: pulumi.Output<outputApi.extensions.v1beta1.DaemonSetSpec>;

      /**
       * The current status of this daemon set. This data may be out of date by some window of time.
       * Populated by the system. Read-only. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly status: pulumi.Output<outputApi.extensions.v1beta1.DaemonSetStatus>;


      /**
       * Get the state of an existing `DaemonSet` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DaemonSet {
          return new DaemonSet(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.extensions.v1beta1.DaemonSet { return this.__inputs; }
      private readonly __inputs: inputApi.extensions.v1beta1.DaemonSet;

      /**
      * Create a extensions.v1beta1.DaemonSet resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.extensions.v1beta1.DaemonSet, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "extensions/v1beta1";
          inputs["kind"] = "DaemonSet";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:extensions/v1beta1:DaemonSet", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * DaemonSetList is a collection of daemon sets.
     */
    export class DaemonSetList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"extensions/v1beta1">;

      /**
       * A list of daemon sets.
       */
      public readonly items: pulumi.Output<outputApi.extensions.v1beta1.DaemonSet[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"DaemonSetList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `DaemonSetList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DaemonSetList {
          return new DaemonSetList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.extensions.v1beta1.DaemonSetList { return this.__inputs; }
      private readonly __inputs: inputApi.extensions.v1beta1.DaemonSetList;

      /**
      * Create a extensions.v1beta1.DaemonSetList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.extensions.v1beta1.DaemonSetList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "extensions/v1beta1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "DaemonSetList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:extensions/v1beta1:DaemonSetList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * DEPRECATED - This group version of Deployment is deprecated by apps/v1beta2/Deployment. See
     * the release notes for more information. Deployment enables declarative updates for Pods and
     * ReplicaSets.
     */
    export class Deployment extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"extensions/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"Deployment">;

      /**
       * Standard object metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Specification of the desired behavior of the Deployment.
       */
      public readonly spec: pulumi.Output<outputApi.extensions.v1beta1.DeploymentSpec>;

      /**
       * Most recently observed status of the Deployment.
       */
      public readonly status: pulumi.Output<outputApi.extensions.v1beta1.DeploymentStatus>;


      /**
       * Get the state of an existing `Deployment` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Deployment {
          return new Deployment(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.extensions.v1beta1.Deployment { return this.__inputs; }
      private readonly __inputs: inputApi.extensions.v1beta1.Deployment;

      /**
      * Create a extensions.v1beta1.Deployment resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.extensions.v1beta1.Deployment, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "extensions/v1beta1";
          inputs["kind"] = "Deployment";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:extensions/v1beta1:Deployment", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * DeploymentList is a list of Deployments.
     */
    export class DeploymentList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"extensions/v1beta1">;

      /**
       * Items is the list of Deployments.
       */
      public readonly items: pulumi.Output<outputApi.extensions.v1beta1.Deployment[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"DeploymentList">;

      /**
       * Standard list metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `DeploymentList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DeploymentList {
          return new DeploymentList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.extensions.v1beta1.DeploymentList { return this.__inputs; }
      private readonly __inputs: inputApi.extensions.v1beta1.DeploymentList;

      /**
      * Create a extensions.v1beta1.DeploymentList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.extensions.v1beta1.DeploymentList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "extensions/v1beta1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "DeploymentList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:extensions/v1beta1:DeploymentList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * DEPRECATED. DeploymentRollback stores the information required to rollback a deployment.
     */
    export class DeploymentRollback extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"extensions/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"DeploymentRollback">;

      /**
       * Required: This must match the Name of a deployment.
       */
      public readonly name: pulumi.Output<string>;

      /**
       * The config of this deployment rollback.
       */
      public readonly rollbackTo: pulumi.Output<outputApi.extensions.v1beta1.RollbackConfig>;

      /**
       * The annotations to be updated to a deployment
       */
      public readonly updatedAnnotations: pulumi.Output<{[key: string]: pulumi.Output<string>}>;


      /**
       * Get the state of an existing `DeploymentRollback` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DeploymentRollback {
          return new DeploymentRollback(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.extensions.v1beta1.DeploymentRollback { return this.__inputs; }
      private readonly __inputs: inputApi.extensions.v1beta1.DeploymentRollback;

      /**
      * Create a extensions.v1beta1.DeploymentRollback resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.extensions.v1beta1.DeploymentRollback, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "extensions/v1beta1";
          inputs["kind"] = "DeploymentRollback";
          inputs["name"] = args && args.name || undefined;
          inputs["rollbackTo"] = args && args.rollbackTo || undefined;
          inputs["updatedAnnotations"] = args && args.updatedAnnotations || undefined;
          super("kubernetes:extensions/v1beta1:DeploymentRollback", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * Ingress is a collection of rules that allow inbound connections to reach the endpoints
     * defined by a backend. An Ingress can be configured to give services externally-reachable
     * urls, load balance traffic, terminate SSL, offer name based virtual hosting etc.
     */
    export class Ingress extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"extensions/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"Ingress">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Spec is the desired state of the Ingress. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly spec: pulumi.Output<outputApi.extensions.v1beta1.IngressSpec>;

      /**
       * Status is the current state of the Ingress. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly status: pulumi.Output<outputApi.extensions.v1beta1.IngressStatus>;


      /**
       * Get the state of an existing `Ingress` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Ingress {
          return new Ingress(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.extensions.v1beta1.Ingress { return this.__inputs; }
      private readonly __inputs: inputApi.extensions.v1beta1.Ingress;

      /**
      * Create a extensions.v1beta1.Ingress resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.extensions.v1beta1.Ingress, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "extensions/v1beta1";
          inputs["kind"] = "Ingress";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:extensions/v1beta1:Ingress", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * IngressList is a collection of Ingress.
     */
    export class IngressList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"extensions/v1beta1">;

      /**
       * Items is the list of Ingress.
       */
      public readonly items: pulumi.Output<outputApi.extensions.v1beta1.Ingress[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"IngressList">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `IngressList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): IngressList {
          return new IngressList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.extensions.v1beta1.IngressList { return this.__inputs; }
      private readonly __inputs: inputApi.extensions.v1beta1.IngressList;

      /**
      * Create a extensions.v1beta1.IngressList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.extensions.v1beta1.IngressList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "extensions/v1beta1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "IngressList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:extensions/v1beta1:IngressList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * DEPRECATED 1.9 - This group version of NetworkPolicy is deprecated by
     * networking/v1/NetworkPolicy. NetworkPolicy describes what network traffic is allowed for a
     * set of Pods
     */
    export class NetworkPolicy extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"extensions/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"NetworkPolicy">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Specification of the desired behavior for this NetworkPolicy.
       */
      public readonly spec: pulumi.Output<outputApi.extensions.v1beta1.NetworkPolicySpec>;


      /**
       * Get the state of an existing `NetworkPolicy` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): NetworkPolicy {
          return new NetworkPolicy(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.extensions.v1beta1.NetworkPolicy { return this.__inputs; }
      private readonly __inputs: inputApi.extensions.v1beta1.NetworkPolicy;

      /**
      * Create a extensions.v1beta1.NetworkPolicy resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.extensions.v1beta1.NetworkPolicy, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "extensions/v1beta1";
          inputs["kind"] = "NetworkPolicy";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          super("kubernetes:extensions/v1beta1:NetworkPolicy", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * DEPRECATED 1.9 - This group version of NetworkPolicyList is deprecated by
     * networking/v1/NetworkPolicyList. Network Policy List is a list of NetworkPolicy objects.
     */
    export class NetworkPolicyList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"extensions/v1beta1">;

      /**
       * Items is a list of schema objects.
       */
      public readonly items: pulumi.Output<outputApi.extensions.v1beta1.NetworkPolicy[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"NetworkPolicyList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `NetworkPolicyList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): NetworkPolicyList {
          return new NetworkPolicyList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.extensions.v1beta1.NetworkPolicyList { return this.__inputs; }
      private readonly __inputs: inputApi.extensions.v1beta1.NetworkPolicyList;

      /**
      * Create a extensions.v1beta1.NetworkPolicyList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.extensions.v1beta1.NetworkPolicyList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "extensions/v1beta1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "NetworkPolicyList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:extensions/v1beta1:NetworkPolicyList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * PodSecurityPolicy governs the ability to make requests that affect the Security Context that
     * will be applied to a pod and container. Deprecated: use PodSecurityPolicy from policy API
     * Group instead.
     */
    export class PodSecurityPolicy extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"extensions/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"PodSecurityPolicy">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * spec defines the policy enforced.
       */
      public readonly spec: pulumi.Output<outputApi.extensions.v1beta1.PodSecurityPolicySpec>;


      /**
       * Get the state of an existing `PodSecurityPolicy` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PodSecurityPolicy {
          return new PodSecurityPolicy(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.extensions.v1beta1.PodSecurityPolicy { return this.__inputs; }
      private readonly __inputs: inputApi.extensions.v1beta1.PodSecurityPolicy;

      /**
      * Create a extensions.v1beta1.PodSecurityPolicy resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.extensions.v1beta1.PodSecurityPolicy, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "extensions/v1beta1";
          inputs["kind"] = "PodSecurityPolicy";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          super("kubernetes:extensions/v1beta1:PodSecurityPolicy", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * PodSecurityPolicyList is a list of PodSecurityPolicy objects. Deprecated: use
     * PodSecurityPolicyList from policy API Group instead.
     */
    export class PodSecurityPolicyList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"extensions/v1beta1">;

      /**
       * items is a list of schema objects.
       */
      public readonly items: pulumi.Output<outputApi.extensions.v1beta1.PodSecurityPolicy[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"PodSecurityPolicyList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `PodSecurityPolicyList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PodSecurityPolicyList {
          return new PodSecurityPolicyList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.extensions.v1beta1.PodSecurityPolicyList { return this.__inputs; }
      private readonly __inputs: inputApi.extensions.v1beta1.PodSecurityPolicyList;

      /**
      * Create a extensions.v1beta1.PodSecurityPolicyList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.extensions.v1beta1.PodSecurityPolicyList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "extensions/v1beta1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "PodSecurityPolicyList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:extensions/v1beta1:PodSecurityPolicyList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * DEPRECATED - This group version of ReplicaSet is deprecated by apps/v1beta2/ReplicaSet. See
     * the release notes for more information. ReplicaSet ensures that a specified number of pod
     * replicas are running at any given time.
     */
    export class ReplicaSet extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"extensions/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ReplicaSet">;

      /**
       * If the Labels of a ReplicaSet are empty, they are defaulted to be the same as the Pod(s)
       * that the ReplicaSet manages. Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Spec defines the specification of the desired behavior of the ReplicaSet. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly spec: pulumi.Output<outputApi.extensions.v1beta1.ReplicaSetSpec>;

      /**
       * Status is the most recently observed status of the ReplicaSet. This data may be out of date
       * by some window of time. Populated by the system. Read-only. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly status: pulumi.Output<outputApi.extensions.v1beta1.ReplicaSetStatus>;


      /**
       * Get the state of an existing `ReplicaSet` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ReplicaSet {
          return new ReplicaSet(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.extensions.v1beta1.ReplicaSet { return this.__inputs; }
      private readonly __inputs: inputApi.extensions.v1beta1.ReplicaSet;

      /**
      * Create a extensions.v1beta1.ReplicaSet resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.extensions.v1beta1.ReplicaSet, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "extensions/v1beta1";
          inputs["kind"] = "ReplicaSet";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:extensions/v1beta1:ReplicaSet", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * ReplicaSetList is a collection of ReplicaSets.
     */
    export class ReplicaSetList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"extensions/v1beta1">;

      /**
       * List of ReplicaSets. More info:
       * https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller
       */
      public readonly items: pulumi.Output<outputApi.extensions.v1beta1.ReplicaSet[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ReplicaSetList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `ReplicaSetList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ReplicaSetList {
          return new ReplicaSetList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.extensions.v1beta1.ReplicaSetList { return this.__inputs; }
      private readonly __inputs: inputApi.extensions.v1beta1.ReplicaSetList;

      /**
      * Create a extensions.v1beta1.ReplicaSetList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.extensions.v1beta1.ReplicaSetList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "extensions/v1beta1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "ReplicaSetList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:extensions/v1beta1:ReplicaSetList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * represents a scaling request for a resource.
     */
    export class Scale extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"extensions/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"Scale">;

      /**
       * Standard object metadata; More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * defines the behavior of the scale. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.
       */
      public readonly spec: pulumi.Output<outputApi.extensions.v1beta1.ScaleSpec>;

      /**
       * current status of the scale. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.
       * Read-only.
       */
      public readonly status: pulumi.Output<outputApi.extensions.v1beta1.ScaleStatus>;


      /**
       * Get the state of an existing `Scale` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Scale {
          return new Scale(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.extensions.v1beta1.Scale { return this.__inputs; }
      private readonly __inputs: inputApi.extensions.v1beta1.Scale;

      /**
      * Create a extensions.v1beta1.Scale resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.extensions.v1beta1.Scale, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "extensions/v1beta1";
          inputs["kind"] = "Scale";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:extensions/v1beta1:Scale", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

}

export namespace meta {
  export namespace v1 {
    /**
     * APIGroup contains the name, the supported versions, and the preferred version of a group.
     */
    export class APIGroup extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"APIGroup">;

      /**
       * name is the name of the group.
       */
      public readonly name: pulumi.Output<string>;

      /**
       * preferredVersion is the version preferred by the API server, which probably is the storage
       * version.
       */
      public readonly preferredVersion: pulumi.Output<outputApi.meta.v1.GroupVersionForDiscovery>;

      /**
       * a map of client CIDR to server address that is serving this group. This is to help clients
       * reach servers in the most network-efficient way possible. Clients can use the appropriate
       * server address as per the CIDR that they match. In case of multiple matches, clients should
       * use the longest matching CIDR. The server returns only those CIDRs that it thinks that the
       * client can match. For example: the master will return an internal IP CIDR only, if the
       * client reaches the server using an internal IP. Server looks at X-Forwarded-For header or
       * X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.
       */
      public readonly serverAddressByClientCIDRs: pulumi.Output<outputApi.meta.v1.ServerAddressByClientCIDR[]>;

      /**
       * versions are the versions supported in this group.
       */
      public readonly versions: pulumi.Output<outputApi.meta.v1.GroupVersionForDiscovery[]>;


      /**
       * Get the state of an existing `APIGroup` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): APIGroup {
          return new APIGroup(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.meta.v1.APIGroup { return this.__inputs; }
      private readonly __inputs: inputApi.meta.v1.APIGroup;

      /**
      * Create a meta.v1.APIGroup resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.meta.v1.APIGroup, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["kind"] = "APIGroup";
          inputs["name"] = args && args.name || undefined;
          inputs["preferredVersion"] = args && args.preferredVersion || undefined;
          inputs["serverAddressByClientCIDRs"] = args && args.serverAddressByClientCIDRs || undefined;
          inputs["versions"] = args && args.versions || undefined;
          super("kubernetes:core/v1:APIGroup", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * APIGroupList is a list of APIGroup, to allow clients to discover the API at /apis.
     */
    export class APIGroupList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * groups is a list of APIGroup.
       */
      public readonly groups: pulumi.Output<outputApi.meta.v1.APIGroup[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"APIGroupList">;


      /**
       * Get the state of an existing `APIGroupList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): APIGroupList {
          return new APIGroupList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.meta.v1.APIGroupList { return this.__inputs; }
      private readonly __inputs: inputApi.meta.v1.APIGroupList;

      /**
      * Create a meta.v1.APIGroupList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.meta.v1.APIGroupList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["groups"] = args && args.groups || undefined;
          inputs["kind"] = "APIGroupList";
          super("kubernetes:core/v1:APIGroupList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * APIResourceList is a list of APIResource, it is used to expose the name of the resources
     * supported in a specific group and version, and if the resource is namespaced.
     */
    export class APIResourceList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * groupVersion is the group and version this APIResourceList is for.
       */
      public readonly groupVersion: pulumi.Output<string>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"APIResourceList">;

      /**
       * resources contains the name of the resources and if they are namespaced.
       */
      public readonly resources: pulumi.Output<outputApi.meta.v1.APIResource[]>;


      /**
       * Get the state of an existing `APIResourceList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): APIResourceList {
          return new APIResourceList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.meta.v1.APIResourceList { return this.__inputs; }
      private readonly __inputs: inputApi.meta.v1.APIResourceList;

      /**
      * Create a meta.v1.APIResourceList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.meta.v1.APIResourceList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["groupVersion"] = args && args.groupVersion || undefined;
          inputs["kind"] = "APIResourceList";
          inputs["resources"] = args && args.resources || undefined;
          super("kubernetes:core/v1:APIResourceList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * APIVersions lists the versions that are available, to allow clients to discover the API at
     * /api, which is the root path of the legacy v1 API.
     */
    export class APIVersions extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"APIVersions">;

      /**
       * a map of client CIDR to server address that is serving this group. This is to help clients
       * reach servers in the most network-efficient way possible. Clients can use the appropriate
       * server address as per the CIDR that they match. In case of multiple matches, clients should
       * use the longest matching CIDR. The server returns only those CIDRs that it thinks that the
       * client can match. For example: the master will return an internal IP CIDR only, if the
       * client reaches the server using an internal IP. Server looks at X-Forwarded-For header or
       * X-Real-Ip header or request.RemoteAddr (in that order) to get the client IP.
       */
      public readonly serverAddressByClientCIDRs: pulumi.Output<outputApi.meta.v1.ServerAddressByClientCIDR[]>;

      /**
       * versions are the api versions that are available.
       */
      public readonly versions: pulumi.Output<string[]>;


      /**
       * Get the state of an existing `APIVersions` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): APIVersions {
          return new APIVersions(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.meta.v1.APIVersions { return this.__inputs; }
      private readonly __inputs: inputApi.meta.v1.APIVersions;

      /**
      * Create a meta.v1.APIVersions resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.meta.v1.APIVersions, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["kind"] = "APIVersions";
          inputs["serverAddressByClientCIDRs"] = args && args.serverAddressByClientCIDRs || undefined;
          inputs["versions"] = args && args.versions || undefined;
          super("kubernetes:core/v1:APIVersions", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * DeleteOptions may be provided when deleting an API object.
     */
    export class DeleteOptions extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * When present, indicates that modifications should not be persisted. An invalid or
       * unrecognized dryRun directive will result in an error response and no further processing of
       * the request. Valid values are: - All: all dry run stages will be processed
       */
      public readonly dryRun: pulumi.Output<string[]>;

      /**
       * The duration in seconds before the object should be deleted. Value must be non-negative
       * integer. The value zero indicates delete immediately. If this value is nil, the default
       * grace period for the specified type will be used. Defaults to a per object value if not
       * specified. zero means delete immediately.
       */
      public readonly gracePeriodSeconds: pulumi.Output<number>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"DeleteOptions">;

      /**
       * Deprecated: please use the PropagationPolicy, this field will be deprecated in 1.7. Should
       * the dependent objects be orphaned. If true/false, the "orphan" finalizer will be added
       * to/removed from the object's finalizers list. Either this field or PropagationPolicy may be
       * set, but not both.
       */
      public readonly orphanDependents: pulumi.Output<boolean>;

      /**
       * Must be fulfilled before a deletion is carried out. If not possible, a 409 Conflict status
       * will be returned.
       */
      public readonly preconditions: pulumi.Output<outputApi.meta.v1.Preconditions>;

      /**
       * Whether and how garbage collection will be performed. Either this field or OrphanDependents
       * may be set, but not both. The default policy is decided by the existing finalizer set in
       * the metadata.finalizers and the resource-specific default policy. Acceptable values are:
       * 'Orphan' - orphan the dependents; 'Background' - allow the garbage collector to delete the
       * dependents in the background; 'Foreground' - a cascading policy that deletes all dependents
       * in the foreground.
       */
      public readonly propagationPolicy: pulumi.Output<string>;


      /**
       * Get the state of an existing `DeleteOptions` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): DeleteOptions {
          return new DeleteOptions(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.meta.v1.DeleteOptions { return this.__inputs; }
      private readonly __inputs: inputApi.meta.v1.DeleteOptions;

      /**
      * Create a meta.v1.DeleteOptions resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.meta.v1.DeleteOptions, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["dryRun"] = args && args.dryRun || undefined;
          inputs["gracePeriodSeconds"] = args && args.gracePeriodSeconds || undefined;
          inputs["kind"] = "DeleteOptions";
          inputs["orphanDependents"] = args && args.orphanDependents || undefined;
          inputs["preconditions"] = args && args.preconditions || undefined;
          inputs["propagationPolicy"] = args && args.propagationPolicy || undefined;
          super("kubernetes:core/v1:DeleteOptions", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * OwnerReference contains enough information to let you identify an owning object. An owning
     * object must be in the same namespace as the dependent, or be cluster-scoped, so there is no
     * namespace field.
     */
    export class OwnerReference extends pulumi.CustomResource {
      /**
       * API version of the referent.
       */
      public readonly apiVersion: pulumi.Output<"meta/v1">;

      /**
       * If true, AND if the owner has the "foregroundDeletion" finalizer, then the owner cannot be
       * deleted from the key-value store until this reference is removed. Defaults to false. To set
       * this field, a user needs "delete" permission of the owner, otherwise 422 (Unprocessable
       * Entity) will be returned.
       */
      public readonly blockOwnerDeletion: pulumi.Output<boolean>;

      /**
       * If true, this reference points to the managing controller.
       */
      public readonly controller: pulumi.Output<boolean>;

      /**
       * Kind of the referent. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"OwnerReference">;

      /**
       * Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names
       */
      public readonly name: pulumi.Output<string>;

      /**
       * UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
       */
      public readonly uid: pulumi.Output<string>;


      /**
       * Get the state of an existing `OwnerReference` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): OwnerReference {
          return new OwnerReference(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.meta.v1.OwnerReference { return this.__inputs; }
      private readonly __inputs: inputApi.meta.v1.OwnerReference;

      /**
      * Create a meta.v1.OwnerReference resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.meta.v1.OwnerReference, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "meta/v1";
          inputs["blockOwnerDeletion"] = args && args.blockOwnerDeletion || undefined;
          inputs["controller"] = args && args.controller || undefined;
          inputs["kind"] = "OwnerReference";
          inputs["name"] = args && args.name || undefined;
          inputs["uid"] = args && args.uid || undefined;
          super("kubernetes:meta/v1:OwnerReference", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * Status is a return value for calls that don't return other objects.
     */
    export class Status extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"v1">;

      /**
       * Suggested HTTP return code for this status, 0 if not set.
       */
      public readonly code: pulumi.Output<number>;

      /**
       * Extended data associated with the reason.  Each reason may define its own extended details.
       * This field is optional and the data returned is not guaranteed to conform to any schema
       * except that defined by the reason type.
       */
      public readonly details: pulumi.Output<outputApi.meta.v1.StatusDetails>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"Status">;

      /**
       * A human-readable description of the status of this operation.
       */
      public readonly message: pulumi.Output<string>;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;

      /**
       * A machine-readable description of why this operation is in the "Failure" status. If this
       * value is empty there is no information available. A Reason clarifies an HTTP status code
       * but does not override it.
       */
      public readonly reason: pulumi.Output<string>;

      /**
       * Status of the operation. One of: "Success" or "Failure". More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status
       */
      public readonly status: pulumi.Output<string>;


      /**
       * Get the state of an existing `Status` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Status {
          return new Status(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.meta.v1.Status { return this.__inputs; }
      private readonly __inputs: inputApi.meta.v1.Status;

      /**
      * Create a meta.v1.Status resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.meta.v1.Status, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "v1";
          inputs["code"] = args && args.code || undefined;
          inputs["details"] = args && args.details || undefined;
          inputs["kind"] = "Status";
          inputs["message"] = args && args.message || undefined;
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["reason"] = args && args.reason || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:core/v1:Status", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

}

export namespace networking {
  export namespace v1 {
    /**
     * NetworkPolicy describes what network traffic is allowed for a set of Pods
     */
    export class NetworkPolicy extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"networking.k8s.io/v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"NetworkPolicy">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Specification of the desired behavior for this NetworkPolicy.
       */
      public readonly spec: pulumi.Output<outputApi.networking.v1.NetworkPolicySpec>;


      /**
       * Get the state of an existing `NetworkPolicy` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): NetworkPolicy {
          return new NetworkPolicy(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.networking.v1.NetworkPolicy { return this.__inputs; }
      private readonly __inputs: inputApi.networking.v1.NetworkPolicy;

      /**
      * Create a networking.v1.NetworkPolicy resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.networking.v1.NetworkPolicy, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "networking.k8s.io/v1";
          inputs["kind"] = "NetworkPolicy";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          super("kubernetes:networking.k8s.io/v1:NetworkPolicy", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * NetworkPolicyList is a list of NetworkPolicy objects.
     */
    export class NetworkPolicyList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"networking.k8s.io/v1">;

      /**
       * Items is a list of schema objects.
       */
      public readonly items: pulumi.Output<outputApi.networking.v1.NetworkPolicy[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"NetworkPolicyList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `NetworkPolicyList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): NetworkPolicyList {
          return new NetworkPolicyList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.networking.v1.NetworkPolicyList { return this.__inputs; }
      private readonly __inputs: inputApi.networking.v1.NetworkPolicyList;

      /**
      * Create a networking.v1.NetworkPolicyList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.networking.v1.NetworkPolicyList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "networking.k8s.io/v1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "NetworkPolicyList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:networking.k8s.io/v1:NetworkPolicyList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

}

export namespace policy {
  export namespace v1beta1 {
    /**
     * Eviction evicts a pod from its node subject to certain policies and safety constraints. This
     * is a subresource of Pod.  A request to cause such an eviction is created by POSTing to
     * .../pods/<pod name>/evictions.
     */
    export class Eviction extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"policy/v1beta1">;

      /**
       * DeleteOptions may be provided
       */
      public readonly deleteOptions: pulumi.Output<outputApi.meta.v1.DeleteOptions>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"Eviction">;

      /**
       * ObjectMeta describes the pod that is being evicted.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;


      /**
       * Get the state of an existing `Eviction` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Eviction {
          return new Eviction(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.policy.v1beta1.Eviction { return this.__inputs; }
      private readonly __inputs: inputApi.policy.v1beta1.Eviction;

      /**
      * Create a policy.v1beta1.Eviction resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.policy.v1beta1.Eviction, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "policy/v1beta1";
          inputs["deleteOptions"] = args && args.deleteOptions || undefined;
          inputs["kind"] = "Eviction";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:policy/v1beta1:Eviction", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * PodDisruptionBudget is an object to define the max disruption that can be caused to a
     * collection of pods
     */
    export class PodDisruptionBudget extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"policy/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"PodDisruptionBudget">;

      
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Specification of the desired behavior of the PodDisruptionBudget.
       */
      public readonly spec: pulumi.Output<outputApi.policy.v1beta1.PodDisruptionBudgetSpec>;

      /**
       * Most recently observed status of the PodDisruptionBudget.
       */
      public readonly status: pulumi.Output<outputApi.policy.v1beta1.PodDisruptionBudgetStatus>;


      /**
       * Get the state of an existing `PodDisruptionBudget` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PodDisruptionBudget {
          return new PodDisruptionBudget(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.policy.v1beta1.PodDisruptionBudget { return this.__inputs; }
      private readonly __inputs: inputApi.policy.v1beta1.PodDisruptionBudget;

      /**
      * Create a policy.v1beta1.PodDisruptionBudget resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.policy.v1beta1.PodDisruptionBudget, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "policy/v1beta1";
          inputs["kind"] = "PodDisruptionBudget";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:policy/v1beta1:PodDisruptionBudget", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * PodDisruptionBudgetList is a collection of PodDisruptionBudgets.
     */
    export class PodDisruptionBudgetList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"policy/v1beta1">;

      
      public readonly items: pulumi.Output<outputApi.policy.v1beta1.PodDisruptionBudget[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"PodDisruptionBudgetList">;

      
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `PodDisruptionBudgetList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PodDisruptionBudgetList {
          return new PodDisruptionBudgetList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.policy.v1beta1.PodDisruptionBudgetList { return this.__inputs; }
      private readonly __inputs: inputApi.policy.v1beta1.PodDisruptionBudgetList;

      /**
      * Create a policy.v1beta1.PodDisruptionBudgetList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.policy.v1beta1.PodDisruptionBudgetList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "policy/v1beta1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "PodDisruptionBudgetList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:policy/v1beta1:PodDisruptionBudgetList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * PodSecurityPolicy governs the ability to make requests that affect the Security Context that
     * will be applied to a pod and container.
     */
    export class PodSecurityPolicy extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"policy/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"PodSecurityPolicy">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * spec defines the policy enforced.
       */
      public readonly spec: pulumi.Output<outputApi.policy.v1beta1.PodSecurityPolicySpec>;


      /**
       * Get the state of an existing `PodSecurityPolicy` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PodSecurityPolicy {
          return new PodSecurityPolicy(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.policy.v1beta1.PodSecurityPolicy { return this.__inputs; }
      private readonly __inputs: inputApi.policy.v1beta1.PodSecurityPolicy;

      /**
      * Create a policy.v1beta1.PodSecurityPolicy resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.policy.v1beta1.PodSecurityPolicy, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "policy/v1beta1";
          inputs["kind"] = "PodSecurityPolicy";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          super("kubernetes:policy/v1beta1:PodSecurityPolicy", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * PodSecurityPolicyList is a list of PodSecurityPolicy objects.
     */
    export class PodSecurityPolicyList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"policy/v1beta1">;

      /**
       * items is a list of schema objects.
       */
      public readonly items: pulumi.Output<outputApi.policy.v1beta1.PodSecurityPolicy[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"PodSecurityPolicyList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `PodSecurityPolicyList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PodSecurityPolicyList {
          return new PodSecurityPolicyList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.policy.v1beta1.PodSecurityPolicyList { return this.__inputs; }
      private readonly __inputs: inputApi.policy.v1beta1.PodSecurityPolicyList;

      /**
      * Create a policy.v1beta1.PodSecurityPolicyList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.policy.v1beta1.PodSecurityPolicyList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "policy/v1beta1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "PodSecurityPolicyList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:policy/v1beta1:PodSecurityPolicyList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

}

export namespace rbac {
  export namespace v1 {
    /**
     * ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a
     * unit by a RoleBinding or ClusterRoleBinding.
     */
    export class ClusterRole extends pulumi.CustomResource {
      /**
       * AggregationRule is an optional field that describes how to build the Rules for this
       * ClusterRole. If AggregationRule is set, then the Rules are controller managed and direct
       * changes to Rules will be stomped by the controller.
       */
      public readonly aggregationRule: pulumi.Output<outputApi.rbac.v1.AggregationRule>;

      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"rbac.authorization.k8s.io/v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ClusterRole">;

      /**
       * Standard object's metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Rules holds all the PolicyRules for this ClusterRole
       */
      public readonly rules: pulumi.Output<outputApi.rbac.v1.PolicyRule[]>;


      /**
       * Get the state of an existing `ClusterRole` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ClusterRole {
          return new ClusterRole(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.rbac.v1.ClusterRole { return this.__inputs; }
      private readonly __inputs: inputApi.rbac.v1.ClusterRole;

      /**
      * Create a rbac.v1.ClusterRole resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.rbac.v1.ClusterRole, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["aggregationRule"] = args && args.aggregationRule || undefined;
          inputs["apiVersion"] = "rbac.authorization.k8s.io/v1";
          inputs["kind"] = "ClusterRole";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["rules"] = args && args.rules || undefined;
          super("kubernetes:rbac.authorization.k8s.io/v1:ClusterRole", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a
     * ClusterRole in the global namespace, and adds who information via Subject.
     */
    export class ClusterRoleBinding extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"rbac.authorization.k8s.io/v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ClusterRoleBinding">;

      /**
       * Standard object's metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * RoleRef can only reference a ClusterRole in the global namespace. If the RoleRef cannot be
       * resolved, the Authorizer must return an error.
       */
      public readonly roleRef: pulumi.Output<outputApi.rbac.v1.RoleRef>;

      /**
       * Subjects holds references to the objects the role applies to.
       */
      public readonly subjects: pulumi.Output<outputApi.rbac.v1.Subject[]>;


      /**
       * Get the state of an existing `ClusterRoleBinding` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ClusterRoleBinding {
          return new ClusterRoleBinding(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.rbac.v1.ClusterRoleBinding { return this.__inputs; }
      private readonly __inputs: inputApi.rbac.v1.ClusterRoleBinding;

      /**
      * Create a rbac.v1.ClusterRoleBinding resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.rbac.v1.ClusterRoleBinding, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "rbac.authorization.k8s.io/v1";
          inputs["kind"] = "ClusterRoleBinding";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["roleRef"] = args && args.roleRef || undefined;
          inputs["subjects"] = args && args.subjects || undefined;
          super("kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBinding", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * ClusterRoleBindingList is a collection of ClusterRoleBindings
     */
    export class ClusterRoleBindingList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"rbac.authorization.k8s.io/v1">;

      /**
       * Items is a list of ClusterRoleBindings
       */
      public readonly items: pulumi.Output<outputApi.rbac.v1.ClusterRoleBinding[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ClusterRoleBindingList">;

      /**
       * Standard object's metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `ClusterRoleBindingList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ClusterRoleBindingList {
          return new ClusterRoleBindingList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.rbac.v1.ClusterRoleBindingList { return this.__inputs; }
      private readonly __inputs: inputApi.rbac.v1.ClusterRoleBindingList;

      /**
      * Create a rbac.v1.ClusterRoleBindingList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.rbac.v1.ClusterRoleBindingList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "rbac.authorization.k8s.io/v1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "ClusterRoleBindingList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleBindingList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * ClusterRoleList is a collection of ClusterRoles
     */
    export class ClusterRoleList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"rbac.authorization.k8s.io/v1">;

      /**
       * Items is a list of ClusterRoles
       */
      public readonly items: pulumi.Output<outputApi.rbac.v1.ClusterRole[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ClusterRoleList">;

      /**
       * Standard object's metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `ClusterRoleList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ClusterRoleList {
          return new ClusterRoleList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.rbac.v1.ClusterRoleList { return this.__inputs; }
      private readonly __inputs: inputApi.rbac.v1.ClusterRoleList;

      /**
      * Create a rbac.v1.ClusterRoleList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.rbac.v1.ClusterRoleList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "rbac.authorization.k8s.io/v1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "ClusterRoleList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:rbac.authorization.k8s.io/v1:ClusterRoleList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a
     * RoleBinding.
     */
    export class Role extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"rbac.authorization.k8s.io/v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"Role">;

      /**
       * Standard object's metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Rules holds all the PolicyRules for this Role
       */
      public readonly rules: pulumi.Output<outputApi.rbac.v1.PolicyRule[]>;


      /**
       * Get the state of an existing `Role` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Role {
          return new Role(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.rbac.v1.Role { return this.__inputs; }
      private readonly __inputs: inputApi.rbac.v1.Role;

      /**
      * Create a rbac.v1.Role resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.rbac.v1.Role, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "rbac.authorization.k8s.io/v1";
          inputs["kind"] = "Role";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["rules"] = args && args.rules || undefined;
          super("kubernetes:rbac.authorization.k8s.io/v1:Role", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * RoleBinding references a role, but does not contain it.  It can reference a Role in the same
     * namespace or a ClusterRole in the global namespace. It adds who information via Subjects and
     * namespace information by which namespace it exists in.  RoleBindings in a given namespace
     * only have effect in that namespace.
     */
    export class RoleBinding extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"rbac.authorization.k8s.io/v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"RoleBinding">;

      /**
       * Standard object's metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * RoleRef can reference a Role in the current namespace or a ClusterRole in the global
       * namespace. If the RoleRef cannot be resolved, the Authorizer must return an error.
       */
      public readonly roleRef: pulumi.Output<outputApi.rbac.v1.RoleRef>;

      /**
       * Subjects holds references to the objects the role applies to.
       */
      public readonly subjects: pulumi.Output<outputApi.rbac.v1.Subject[]>;


      /**
       * Get the state of an existing `RoleBinding` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RoleBinding {
          return new RoleBinding(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.rbac.v1.RoleBinding { return this.__inputs; }
      private readonly __inputs: inputApi.rbac.v1.RoleBinding;

      /**
      * Create a rbac.v1.RoleBinding resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.rbac.v1.RoleBinding, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "rbac.authorization.k8s.io/v1";
          inputs["kind"] = "RoleBinding";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["roleRef"] = args && args.roleRef || undefined;
          inputs["subjects"] = args && args.subjects || undefined;
          super("kubernetes:rbac.authorization.k8s.io/v1:RoleBinding", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * RoleBindingList is a collection of RoleBindings
     */
    export class RoleBindingList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"rbac.authorization.k8s.io/v1">;

      /**
       * Items is a list of RoleBindings
       */
      public readonly items: pulumi.Output<outputApi.rbac.v1.RoleBinding[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"RoleBindingList">;

      /**
       * Standard object's metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `RoleBindingList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RoleBindingList {
          return new RoleBindingList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.rbac.v1.RoleBindingList { return this.__inputs; }
      private readonly __inputs: inputApi.rbac.v1.RoleBindingList;

      /**
      * Create a rbac.v1.RoleBindingList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.rbac.v1.RoleBindingList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "rbac.authorization.k8s.io/v1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "RoleBindingList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:rbac.authorization.k8s.io/v1:RoleBindingList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * RoleList is a collection of Roles
     */
    export class RoleList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"rbac.authorization.k8s.io/v1">;

      /**
       * Items is a list of Roles
       */
      public readonly items: pulumi.Output<outputApi.rbac.v1.Role[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"RoleList">;

      /**
       * Standard object's metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `RoleList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RoleList {
          return new RoleList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.rbac.v1.RoleList { return this.__inputs; }
      private readonly __inputs: inputApi.rbac.v1.RoleList;

      /**
      * Create a rbac.v1.RoleList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.rbac.v1.RoleList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "rbac.authorization.k8s.io/v1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "RoleList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:rbac.authorization.k8s.io/v1:RoleList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

  export namespace v1alpha1 {
    /**
     * ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a
     * unit by a RoleBinding or ClusterRoleBinding.
     */
    export class ClusterRole extends pulumi.CustomResource {
      /**
       * AggregationRule is an optional field that describes how to build the Rules for this
       * ClusterRole. If AggregationRule is set, then the Rules are controller managed and direct
       * changes to Rules will be stomped by the controller.
       */
      public readonly aggregationRule: pulumi.Output<outputApi.rbac.v1alpha1.AggregationRule>;

      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"rbac.authorization.k8s.io/v1alpha1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ClusterRole">;

      /**
       * Standard object's metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Rules holds all the PolicyRules for this ClusterRole
       */
      public readonly rules: pulumi.Output<outputApi.rbac.v1alpha1.PolicyRule[]>;


      /**
       * Get the state of an existing `ClusterRole` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ClusterRole {
          return new ClusterRole(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.rbac.v1alpha1.ClusterRole { return this.__inputs; }
      private readonly __inputs: inputApi.rbac.v1alpha1.ClusterRole;

      /**
      * Create a rbac.v1alpha1.ClusterRole resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.rbac.v1alpha1.ClusterRole, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["aggregationRule"] = args && args.aggregationRule || undefined;
          inputs["apiVersion"] = "rbac.authorization.k8s.io/v1alpha1";
          inputs["kind"] = "ClusterRole";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["rules"] = args && args.rules || undefined;
          super("kubernetes:rbac.authorization.k8s.io/v1alpha1:ClusterRole", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a
     * ClusterRole in the global namespace, and adds who information via Subject.
     */
    export class ClusterRoleBinding extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"rbac.authorization.k8s.io/v1alpha1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ClusterRoleBinding">;

      /**
       * Standard object's metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * RoleRef can only reference a ClusterRole in the global namespace. If the RoleRef cannot be
       * resolved, the Authorizer must return an error.
       */
      public readonly roleRef: pulumi.Output<outputApi.rbac.v1alpha1.RoleRef>;

      /**
       * Subjects holds references to the objects the role applies to.
       */
      public readonly subjects: pulumi.Output<outputApi.rbac.v1alpha1.Subject[]>;


      /**
       * Get the state of an existing `ClusterRoleBinding` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ClusterRoleBinding {
          return new ClusterRoleBinding(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.rbac.v1alpha1.ClusterRoleBinding { return this.__inputs; }
      private readonly __inputs: inputApi.rbac.v1alpha1.ClusterRoleBinding;

      /**
      * Create a rbac.v1alpha1.ClusterRoleBinding resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.rbac.v1alpha1.ClusterRoleBinding, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "rbac.authorization.k8s.io/v1alpha1";
          inputs["kind"] = "ClusterRoleBinding";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["roleRef"] = args && args.roleRef || undefined;
          inputs["subjects"] = args && args.subjects || undefined;
          super("kubernetes:rbac.authorization.k8s.io/v1alpha1:ClusterRoleBinding", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * ClusterRoleBindingList is a collection of ClusterRoleBindings
     */
    export class ClusterRoleBindingList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"rbac.authorization.k8s.io/v1alpha1">;

      /**
       * Items is a list of ClusterRoleBindings
       */
      public readonly items: pulumi.Output<outputApi.rbac.v1alpha1.ClusterRoleBinding[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ClusterRoleBindingList">;

      /**
       * Standard object's metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `ClusterRoleBindingList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ClusterRoleBindingList {
          return new ClusterRoleBindingList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.rbac.v1alpha1.ClusterRoleBindingList { return this.__inputs; }
      private readonly __inputs: inputApi.rbac.v1alpha1.ClusterRoleBindingList;

      /**
      * Create a rbac.v1alpha1.ClusterRoleBindingList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.rbac.v1alpha1.ClusterRoleBindingList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "rbac.authorization.k8s.io/v1alpha1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "ClusterRoleBindingList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:rbac.authorization.k8s.io/v1alpha1:ClusterRoleBindingList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * ClusterRoleList is a collection of ClusterRoles
     */
    export class ClusterRoleList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"rbac.authorization.k8s.io/v1alpha1">;

      /**
       * Items is a list of ClusterRoles
       */
      public readonly items: pulumi.Output<outputApi.rbac.v1alpha1.ClusterRole[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ClusterRoleList">;

      /**
       * Standard object's metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `ClusterRoleList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ClusterRoleList {
          return new ClusterRoleList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.rbac.v1alpha1.ClusterRoleList { return this.__inputs; }
      private readonly __inputs: inputApi.rbac.v1alpha1.ClusterRoleList;

      /**
      * Create a rbac.v1alpha1.ClusterRoleList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.rbac.v1alpha1.ClusterRoleList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "rbac.authorization.k8s.io/v1alpha1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "ClusterRoleList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:rbac.authorization.k8s.io/v1alpha1:ClusterRoleList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a
     * RoleBinding.
     */
    export class Role extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"rbac.authorization.k8s.io/v1alpha1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"Role">;

      /**
       * Standard object's metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Rules holds all the PolicyRules for this Role
       */
      public readonly rules: pulumi.Output<outputApi.rbac.v1alpha1.PolicyRule[]>;


      /**
       * Get the state of an existing `Role` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Role {
          return new Role(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.rbac.v1alpha1.Role { return this.__inputs; }
      private readonly __inputs: inputApi.rbac.v1alpha1.Role;

      /**
      * Create a rbac.v1alpha1.Role resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.rbac.v1alpha1.Role, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "rbac.authorization.k8s.io/v1alpha1";
          inputs["kind"] = "Role";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["rules"] = args && args.rules || undefined;
          super("kubernetes:rbac.authorization.k8s.io/v1alpha1:Role", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * RoleBinding references a role, but does not contain it.  It can reference a Role in the same
     * namespace or a ClusterRole in the global namespace. It adds who information via Subjects and
     * namespace information by which namespace it exists in.  RoleBindings in a given namespace
     * only have effect in that namespace.
     */
    export class RoleBinding extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"rbac.authorization.k8s.io/v1alpha1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"RoleBinding">;

      /**
       * Standard object's metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * RoleRef can reference a Role in the current namespace or a ClusterRole in the global
       * namespace. If the RoleRef cannot be resolved, the Authorizer must return an error.
       */
      public readonly roleRef: pulumi.Output<outputApi.rbac.v1alpha1.RoleRef>;

      /**
       * Subjects holds references to the objects the role applies to.
       */
      public readonly subjects: pulumi.Output<outputApi.rbac.v1alpha1.Subject[]>;


      /**
       * Get the state of an existing `RoleBinding` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RoleBinding {
          return new RoleBinding(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.rbac.v1alpha1.RoleBinding { return this.__inputs; }
      private readonly __inputs: inputApi.rbac.v1alpha1.RoleBinding;

      /**
      * Create a rbac.v1alpha1.RoleBinding resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.rbac.v1alpha1.RoleBinding, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "rbac.authorization.k8s.io/v1alpha1";
          inputs["kind"] = "RoleBinding";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["roleRef"] = args && args.roleRef || undefined;
          inputs["subjects"] = args && args.subjects || undefined;
          super("kubernetes:rbac.authorization.k8s.io/v1alpha1:RoleBinding", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * RoleBindingList is a collection of RoleBindings
     */
    export class RoleBindingList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"rbac.authorization.k8s.io/v1alpha1">;

      /**
       * Items is a list of RoleBindings
       */
      public readonly items: pulumi.Output<outputApi.rbac.v1alpha1.RoleBinding[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"RoleBindingList">;

      /**
       * Standard object's metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `RoleBindingList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RoleBindingList {
          return new RoleBindingList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.rbac.v1alpha1.RoleBindingList { return this.__inputs; }
      private readonly __inputs: inputApi.rbac.v1alpha1.RoleBindingList;

      /**
      * Create a rbac.v1alpha1.RoleBindingList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.rbac.v1alpha1.RoleBindingList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "rbac.authorization.k8s.io/v1alpha1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "RoleBindingList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:rbac.authorization.k8s.io/v1alpha1:RoleBindingList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * RoleList is a collection of Roles
     */
    export class RoleList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"rbac.authorization.k8s.io/v1alpha1">;

      /**
       * Items is a list of Roles
       */
      public readonly items: pulumi.Output<outputApi.rbac.v1alpha1.Role[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"RoleList">;

      /**
       * Standard object's metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `RoleList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RoleList {
          return new RoleList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.rbac.v1alpha1.RoleList { return this.__inputs; }
      private readonly __inputs: inputApi.rbac.v1alpha1.RoleList;

      /**
      * Create a rbac.v1alpha1.RoleList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.rbac.v1alpha1.RoleList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "rbac.authorization.k8s.io/v1alpha1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "RoleList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:rbac.authorization.k8s.io/v1alpha1:RoleList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * Subject contains a reference to the object or user identities a role binding applies to.
     * This can either hold a direct API object reference, or a value for non-objects such as user
     * and group names.
     */
    export class Subject extends pulumi.CustomResource {
      /**
       * APIVersion holds the API group and version of the referenced subject. Defaults to "v1" for
       * ServiceAccount subjects. Defaults to "rbac.authorization.k8s.io/v1alpha1" for User and
       * Group subjects.
       */
      public readonly apiVersion: pulumi.Output<"rbac/v1alpha1">;

      /**
       * Kind of object being referenced. Values defined by this API group are "User", "Group", and
       * "ServiceAccount". If the Authorizer does not recognized the kind value, the Authorizer
       * should report an error.
       */
      public readonly kind: pulumi.Output<"Subject">;

      /**
       * Name of the object being referenced.
       */
      public readonly name: pulumi.Output<string>;

      /**
       * Namespace of the referenced object.  If the object kind is non-namespace, such as "User" or
       * "Group", and this value is not empty the Authorizer should report an error.
       */
      public readonly namespace: pulumi.Output<string>;


      /**
       * Get the state of an existing `Subject` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Subject {
          return new Subject(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.rbac.v1alpha1.Subject { return this.__inputs; }
      private readonly __inputs: inputApi.rbac.v1alpha1.Subject;

      /**
      * Create a rbac.v1alpha1.Subject resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.rbac.v1alpha1.Subject, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "rbac/v1alpha1";
          inputs["kind"] = "Subject";
          inputs["name"] = args && args.name || undefined;
          inputs["namespace"] = args && args.namespace || undefined;
          super("kubernetes:rbac/v1alpha1:Subject", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

  export namespace v1beta1 {
    /**
     * ClusterRole is a cluster level, logical grouping of PolicyRules that can be referenced as a
     * unit by a RoleBinding or ClusterRoleBinding.
     */
    export class ClusterRole extends pulumi.CustomResource {
      /**
       * AggregationRule is an optional field that describes how to build the Rules for this
       * ClusterRole. If AggregationRule is set, then the Rules are controller managed and direct
       * changes to Rules will be stomped by the controller.
       */
      public readonly aggregationRule: pulumi.Output<outputApi.rbac.v1beta1.AggregationRule>;

      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"rbac.authorization.k8s.io/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ClusterRole">;

      /**
       * Standard object's metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Rules holds all the PolicyRules for this ClusterRole
       */
      public readonly rules: pulumi.Output<outputApi.rbac.v1beta1.PolicyRule[]>;


      /**
       * Get the state of an existing `ClusterRole` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ClusterRole {
          return new ClusterRole(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.rbac.v1beta1.ClusterRole { return this.__inputs; }
      private readonly __inputs: inputApi.rbac.v1beta1.ClusterRole;

      /**
      * Create a rbac.v1beta1.ClusterRole resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.rbac.v1beta1.ClusterRole, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["aggregationRule"] = args && args.aggregationRule || undefined;
          inputs["apiVersion"] = "rbac.authorization.k8s.io/v1beta1";
          inputs["kind"] = "ClusterRole";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["rules"] = args && args.rules || undefined;
          super("kubernetes:rbac.authorization.k8s.io/v1beta1:ClusterRole", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * ClusterRoleBinding references a ClusterRole, but not contain it.  It can reference a
     * ClusterRole in the global namespace, and adds who information via Subject.
     */
    export class ClusterRoleBinding extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"rbac.authorization.k8s.io/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ClusterRoleBinding">;

      /**
       * Standard object's metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * RoleRef can only reference a ClusterRole in the global namespace. If the RoleRef cannot be
       * resolved, the Authorizer must return an error.
       */
      public readonly roleRef: pulumi.Output<outputApi.rbac.v1beta1.RoleRef>;

      /**
       * Subjects holds references to the objects the role applies to.
       */
      public readonly subjects: pulumi.Output<outputApi.rbac.v1beta1.Subject[]>;


      /**
       * Get the state of an existing `ClusterRoleBinding` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ClusterRoleBinding {
          return new ClusterRoleBinding(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.rbac.v1beta1.ClusterRoleBinding { return this.__inputs; }
      private readonly __inputs: inputApi.rbac.v1beta1.ClusterRoleBinding;

      /**
      * Create a rbac.v1beta1.ClusterRoleBinding resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.rbac.v1beta1.ClusterRoleBinding, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "rbac.authorization.k8s.io/v1beta1";
          inputs["kind"] = "ClusterRoleBinding";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["roleRef"] = args && args.roleRef || undefined;
          inputs["subjects"] = args && args.subjects || undefined;
          super("kubernetes:rbac.authorization.k8s.io/v1beta1:ClusterRoleBinding", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * ClusterRoleBindingList is a collection of ClusterRoleBindings
     */
    export class ClusterRoleBindingList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"rbac.authorization.k8s.io/v1beta1">;

      /**
       * Items is a list of ClusterRoleBindings
       */
      public readonly items: pulumi.Output<outputApi.rbac.v1beta1.ClusterRoleBinding[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ClusterRoleBindingList">;

      /**
       * Standard object's metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `ClusterRoleBindingList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ClusterRoleBindingList {
          return new ClusterRoleBindingList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.rbac.v1beta1.ClusterRoleBindingList { return this.__inputs; }
      private readonly __inputs: inputApi.rbac.v1beta1.ClusterRoleBindingList;

      /**
      * Create a rbac.v1beta1.ClusterRoleBindingList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.rbac.v1beta1.ClusterRoleBindingList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "rbac.authorization.k8s.io/v1beta1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "ClusterRoleBindingList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:rbac.authorization.k8s.io/v1beta1:ClusterRoleBindingList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * ClusterRoleList is a collection of ClusterRoles
     */
    export class ClusterRoleList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"rbac.authorization.k8s.io/v1beta1">;

      /**
       * Items is a list of ClusterRoles
       */
      public readonly items: pulumi.Output<outputApi.rbac.v1beta1.ClusterRole[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"ClusterRoleList">;

      /**
       * Standard object's metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `ClusterRoleList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): ClusterRoleList {
          return new ClusterRoleList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.rbac.v1beta1.ClusterRoleList { return this.__inputs; }
      private readonly __inputs: inputApi.rbac.v1beta1.ClusterRoleList;

      /**
      * Create a rbac.v1beta1.ClusterRoleList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.rbac.v1beta1.ClusterRoleList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "rbac.authorization.k8s.io/v1beta1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "ClusterRoleList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:rbac.authorization.k8s.io/v1beta1:ClusterRoleList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * Role is a namespaced, logical grouping of PolicyRules that can be referenced as a unit by a
     * RoleBinding.
     */
    export class Role extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"rbac.authorization.k8s.io/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"Role">;

      /**
       * Standard object's metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Rules holds all the PolicyRules for this Role
       */
      public readonly rules: pulumi.Output<outputApi.rbac.v1beta1.PolicyRule[]>;


      /**
       * Get the state of an existing `Role` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): Role {
          return new Role(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.rbac.v1beta1.Role { return this.__inputs; }
      private readonly __inputs: inputApi.rbac.v1beta1.Role;

      /**
      * Create a rbac.v1beta1.Role resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.rbac.v1beta1.Role, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "rbac.authorization.k8s.io/v1beta1";
          inputs["kind"] = "Role";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["rules"] = args && args.rules || undefined;
          super("kubernetes:rbac.authorization.k8s.io/v1beta1:Role", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * RoleBinding references a role, but does not contain it.  It can reference a Role in the same
     * namespace or a ClusterRole in the global namespace. It adds who information via Subjects and
     * namespace information by which namespace it exists in.  RoleBindings in a given namespace
     * only have effect in that namespace.
     */
    export class RoleBinding extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"rbac.authorization.k8s.io/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"RoleBinding">;

      /**
       * Standard object's metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * RoleRef can reference a Role in the current namespace or a ClusterRole in the global
       * namespace. If the RoleRef cannot be resolved, the Authorizer must return an error.
       */
      public readonly roleRef: pulumi.Output<outputApi.rbac.v1beta1.RoleRef>;

      /**
       * Subjects holds references to the objects the role applies to.
       */
      public readonly subjects: pulumi.Output<outputApi.rbac.v1beta1.Subject[]>;


      /**
       * Get the state of an existing `RoleBinding` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RoleBinding {
          return new RoleBinding(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.rbac.v1beta1.RoleBinding { return this.__inputs; }
      private readonly __inputs: inputApi.rbac.v1beta1.RoleBinding;

      /**
      * Create a rbac.v1beta1.RoleBinding resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.rbac.v1beta1.RoleBinding, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "rbac.authorization.k8s.io/v1beta1";
          inputs["kind"] = "RoleBinding";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["roleRef"] = args && args.roleRef || undefined;
          inputs["subjects"] = args && args.subjects || undefined;
          super("kubernetes:rbac.authorization.k8s.io/v1beta1:RoleBinding", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * RoleBindingList is a collection of RoleBindings
     */
    export class RoleBindingList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"rbac.authorization.k8s.io/v1beta1">;

      /**
       * Items is a list of RoleBindings
       */
      public readonly items: pulumi.Output<outputApi.rbac.v1beta1.RoleBinding[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"RoleBindingList">;

      /**
       * Standard object's metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `RoleBindingList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RoleBindingList {
          return new RoleBindingList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.rbac.v1beta1.RoleBindingList { return this.__inputs; }
      private readonly __inputs: inputApi.rbac.v1beta1.RoleBindingList;

      /**
      * Create a rbac.v1beta1.RoleBindingList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.rbac.v1beta1.RoleBindingList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "rbac.authorization.k8s.io/v1beta1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "RoleBindingList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:rbac.authorization.k8s.io/v1beta1:RoleBindingList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * RoleList is a collection of Roles
     */
    export class RoleList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"rbac.authorization.k8s.io/v1beta1">;

      /**
       * Items is a list of Roles
       */
      public readonly items: pulumi.Output<outputApi.rbac.v1beta1.Role[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"RoleList">;

      /**
       * Standard object's metadata.
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `RoleList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): RoleList {
          return new RoleList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.rbac.v1beta1.RoleList { return this.__inputs; }
      private readonly __inputs: inputApi.rbac.v1beta1.RoleList;

      /**
      * Create a rbac.v1beta1.RoleList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.rbac.v1beta1.RoleList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "rbac.authorization.k8s.io/v1beta1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "RoleList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:rbac.authorization.k8s.io/v1beta1:RoleList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

}

export namespace scheduling {
  export namespace v1alpha1 {
    /**
     * PriorityClass defines mapping from a priority class name to the priority integer value. The
     * value can be any valid integer.
     */
    export class PriorityClass extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"scheduling.k8s.io/v1alpha1">;

      /**
       * description is an arbitrary string that usually provides guidelines on when this priority
       * class should be used.
       */
      public readonly description: pulumi.Output<string>;

      /**
       * globalDefault specifies whether this PriorityClass should be considered as the default
       * priority for pods that do not have any priority class. Only one PriorityClass can be marked
       * as `globalDefault`. However, if more than one PriorityClasses exists with their
       * `globalDefault` field set to true, the smallest value of such global default
       * PriorityClasses will be used as the default priority.
       */
      public readonly globalDefault: pulumi.Output<boolean>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"PriorityClass">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * The value of this priority class. This is the actual priority that pods receive when they
       * have the name of this class in their pod spec.
       */
      public readonly value: pulumi.Output<number>;


      /**
       * Get the state of an existing `PriorityClass` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PriorityClass {
          return new PriorityClass(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.scheduling.v1alpha1.PriorityClass { return this.__inputs; }
      private readonly __inputs: inputApi.scheduling.v1alpha1.PriorityClass;

      /**
      * Create a scheduling.v1alpha1.PriorityClass resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.scheduling.v1alpha1.PriorityClass, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "scheduling.k8s.io/v1alpha1";
          inputs["description"] = args && args.description || undefined;
          inputs["globalDefault"] = args && args.globalDefault || undefined;
          inputs["kind"] = "PriorityClass";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["value"] = args && args.value || undefined;
          super("kubernetes:scheduling.k8s.io/v1alpha1:PriorityClass", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * PriorityClassList is a collection of priority classes.
     */
    export class PriorityClassList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"scheduling.k8s.io/v1alpha1">;

      /**
       * items is the list of PriorityClasses
       */
      public readonly items: pulumi.Output<outputApi.scheduling.v1alpha1.PriorityClass[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"PriorityClassList">;

      /**
       * Standard list metadata More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `PriorityClassList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PriorityClassList {
          return new PriorityClassList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.scheduling.v1alpha1.PriorityClassList { return this.__inputs; }
      private readonly __inputs: inputApi.scheduling.v1alpha1.PriorityClassList;

      /**
      * Create a scheduling.v1alpha1.PriorityClassList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.scheduling.v1alpha1.PriorityClassList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "scheduling.k8s.io/v1alpha1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "PriorityClassList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:scheduling.k8s.io/v1alpha1:PriorityClassList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

  export namespace v1beta1 {
    /**
     * PriorityClass defines mapping from a priority class name to the priority integer value. The
     * value can be any valid integer.
     */
    export class PriorityClass extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"scheduling.k8s.io/v1beta1">;

      /**
       * description is an arbitrary string that usually provides guidelines on when this priority
       * class should be used.
       */
      public readonly description: pulumi.Output<string>;

      /**
       * globalDefault specifies whether this PriorityClass should be considered as the default
       * priority for pods that do not have any priority class. Only one PriorityClass can be marked
       * as `globalDefault`. However, if more than one PriorityClasses exists with their
       * `globalDefault` field set to true, the smallest value of such global default
       * PriorityClasses will be used as the default priority.
       */
      public readonly globalDefault: pulumi.Output<boolean>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"PriorityClass">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * The value of this priority class. This is the actual priority that pods receive when they
       * have the name of this class in their pod spec.
       */
      public readonly value: pulumi.Output<number>;


      /**
       * Get the state of an existing `PriorityClass` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PriorityClass {
          return new PriorityClass(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.scheduling.v1beta1.PriorityClass { return this.__inputs; }
      private readonly __inputs: inputApi.scheduling.v1beta1.PriorityClass;

      /**
      * Create a scheduling.v1beta1.PriorityClass resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.scheduling.v1beta1.PriorityClass, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "scheduling.k8s.io/v1beta1";
          inputs["description"] = args && args.description || undefined;
          inputs["globalDefault"] = args && args.globalDefault || undefined;
          inputs["kind"] = "PriorityClass";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["value"] = args && args.value || undefined;
          super("kubernetes:scheduling.k8s.io/v1beta1:PriorityClass", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * PriorityClassList is a collection of priority classes.
     */
    export class PriorityClassList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"scheduling.k8s.io/v1beta1">;

      /**
       * items is the list of PriorityClasses
       */
      public readonly items: pulumi.Output<outputApi.scheduling.v1beta1.PriorityClass[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"PriorityClassList">;

      /**
       * Standard list metadata More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `PriorityClassList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PriorityClassList {
          return new PriorityClassList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.scheduling.v1beta1.PriorityClassList { return this.__inputs; }
      private readonly __inputs: inputApi.scheduling.v1beta1.PriorityClassList;

      /**
      * Create a scheduling.v1beta1.PriorityClassList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.scheduling.v1beta1.PriorityClassList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "scheduling.k8s.io/v1beta1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "PriorityClassList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:scheduling.k8s.io/v1beta1:PriorityClassList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

}

export namespace settings {
  export namespace v1alpha1 {
    /**
     * PodPreset is a policy resource that defines additional runtime requirements for a Pod.
     */
    export class PodPreset extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"settings.k8s.io/v1alpha1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"PodPreset">;

      
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      
      public readonly spec: pulumi.Output<outputApi.settings.v1alpha1.PodPresetSpec>;


      /**
       * Get the state of an existing `PodPreset` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PodPreset {
          return new PodPreset(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.settings.v1alpha1.PodPreset { return this.__inputs; }
      private readonly __inputs: inputApi.settings.v1alpha1.PodPreset;

      /**
      * Create a settings.v1alpha1.PodPreset resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.settings.v1alpha1.PodPreset, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "settings.k8s.io/v1alpha1";
          inputs["kind"] = "PodPreset";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          super("kubernetes:settings.k8s.io/v1alpha1:PodPreset", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * PodPresetList is a list of PodPreset objects.
     */
    export class PodPresetList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"settings.k8s.io/v1alpha1">;

      /**
       * Items is a list of schema objects.
       */
      public readonly items: pulumi.Output<outputApi.settings.v1alpha1.PodPreset[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"PodPresetList">;

      /**
       * Standard list metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `PodPresetList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): PodPresetList {
          return new PodPresetList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.settings.v1alpha1.PodPresetList { return this.__inputs; }
      private readonly __inputs: inputApi.settings.v1alpha1.PodPresetList;

      /**
      * Create a settings.v1alpha1.PodPresetList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.settings.v1alpha1.PodPresetList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "settings.k8s.io/v1alpha1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "PodPresetList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:settings.k8s.io/v1alpha1:PodPresetList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

}

export namespace storage {
  export namespace v1 {
    /**
     * StorageClass describes the parameters for a class of storage for which PersistentVolumes can
     * be dynamically provisioned.
     * 
     * StorageClasses are non-namespaced; the name of the storage class according to etcd is in
     * ObjectMeta.Name.
     */
    export class StorageClass extends pulumi.CustomResource {
      /**
       * AllowVolumeExpansion shows whether the storage class allow volume expand
       */
      public readonly allowVolumeExpansion: pulumi.Output<boolean>;

      /**
       * Restrict the node topologies where volumes can be dynamically provisioned. Each volume
       * plugin defines its own supported topology specifications. An empty TopologySelectorTerm
       * list means there is no topology restriction. This field is only honored by servers that
       * enable the VolumeScheduling feature.
       */
      public readonly allowedTopologies: pulumi.Output<outputApi.core.v1.TopologySelectorTerm[]>;

      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"storage.k8s.io/v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"StorageClass">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Dynamically provisioned PersistentVolumes of this storage class are created with these
       * mountOptions, e.g. ["ro", "soft"]. Not validated - mount of the PVs will simply fail if one
       * is invalid.
       */
      public readonly mountOptions: pulumi.Output<string[]>;

      /**
       * Parameters holds the parameters for the provisioner that should create volumes of this
       * storage class.
       */
      public readonly parameters: pulumi.Output<{[key: string]: pulumi.Output<string>}>;

      /**
       * Provisioner indicates the type of the provisioner.
       */
      public readonly provisioner: pulumi.Output<string>;

      /**
       * Dynamically provisioned PersistentVolumes of this storage class are created with this
       * reclaimPolicy. Defaults to Delete.
       */
      public readonly reclaimPolicy: pulumi.Output<string>;

      /**
       * VolumeBindingMode indicates how PersistentVolumeClaims should be provisioned and bound.
       * When unset, VolumeBindingImmediate is used. This field is only honored by servers that
       * enable the VolumeScheduling feature.
       */
      public readonly volumeBindingMode: pulumi.Output<string>;


      /**
       * Get the state of an existing `StorageClass` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): StorageClass {
          return new StorageClass(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.storage.v1.StorageClass { return this.__inputs; }
      private readonly __inputs: inputApi.storage.v1.StorageClass;

      /**
      * Create a storage.v1.StorageClass resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.storage.v1.StorageClass, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["allowVolumeExpansion"] = args && args.allowVolumeExpansion || undefined;
          inputs["allowedTopologies"] = args && args.allowedTopologies || undefined;
          inputs["apiVersion"] = "storage.k8s.io/v1";
          inputs["kind"] = "StorageClass";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["mountOptions"] = args && args.mountOptions || undefined;
          inputs["parameters"] = args && args.parameters || undefined;
          inputs["provisioner"] = args && args.provisioner || undefined;
          inputs["reclaimPolicy"] = args && args.reclaimPolicy || undefined;
          inputs["volumeBindingMode"] = args && args.volumeBindingMode || undefined;
          super("kubernetes:storage.k8s.io/v1:StorageClass", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * StorageClassList is a collection of storage classes.
     */
    export class StorageClassList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"storage.k8s.io/v1">;

      /**
       * Items is the list of StorageClasses
       */
      public readonly items: pulumi.Output<outputApi.storage.v1.StorageClass[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"StorageClassList">;

      /**
       * Standard list metadata More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `StorageClassList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): StorageClassList {
          return new StorageClassList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.storage.v1.StorageClassList { return this.__inputs; }
      private readonly __inputs: inputApi.storage.v1.StorageClassList;

      /**
      * Create a storage.v1.StorageClassList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.storage.v1.StorageClassList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "storage.k8s.io/v1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "StorageClassList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:storage.k8s.io/v1:StorageClassList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * VolumeAttachment captures the intent to attach or detach the specified volume to/from the
     * specified node.
     * 
     * VolumeAttachment objects are non-namespaced.
     */
    export class VolumeAttachment extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"storage.k8s.io/v1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"VolumeAttachment">;

      /**
       * Standard object metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Specification of the desired attach/detach volume behavior. Populated by the Kubernetes
       * system.
       */
      public readonly spec: pulumi.Output<outputApi.storage.v1.VolumeAttachmentSpec>;

      /**
       * Status of the VolumeAttachment request. Populated by the entity completing the attach or
       * detach operation, i.e. the external-attacher.
       */
      public readonly status: pulumi.Output<outputApi.storage.v1.VolumeAttachmentStatus>;


      /**
       * Get the state of an existing `VolumeAttachment` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VolumeAttachment {
          return new VolumeAttachment(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.storage.v1.VolumeAttachment { return this.__inputs; }
      private readonly __inputs: inputApi.storage.v1.VolumeAttachment;

      /**
      * Create a storage.v1.VolumeAttachment resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.storage.v1.VolumeAttachment, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "storage.k8s.io/v1";
          inputs["kind"] = "VolumeAttachment";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:storage.k8s.io/v1:VolumeAttachment", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * VolumeAttachmentList is a collection of VolumeAttachment objects.
     */
    export class VolumeAttachmentList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"storage.k8s.io/v1">;

      /**
       * Items is the list of VolumeAttachments
       */
      public readonly items: pulumi.Output<outputApi.storage.v1.VolumeAttachment[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"VolumeAttachmentList">;

      /**
       * Standard list metadata More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `VolumeAttachmentList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VolumeAttachmentList {
          return new VolumeAttachmentList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.storage.v1.VolumeAttachmentList { return this.__inputs; }
      private readonly __inputs: inputApi.storage.v1.VolumeAttachmentList;

      /**
      * Create a storage.v1.VolumeAttachmentList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.storage.v1.VolumeAttachmentList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "storage.k8s.io/v1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "VolumeAttachmentList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:storage.k8s.io/v1:VolumeAttachmentList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

  export namespace v1alpha1 {
    /**
     * VolumeAttachment captures the intent to attach or detach the specified volume to/from the
     * specified node.
     * 
     * VolumeAttachment objects are non-namespaced.
     */
    export class VolumeAttachment extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"storage.k8s.io/v1alpha1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"VolumeAttachment">;

      /**
       * Standard object metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Specification of the desired attach/detach volume behavior. Populated by the Kubernetes
       * system.
       */
      public readonly spec: pulumi.Output<outputApi.storage.v1alpha1.VolumeAttachmentSpec>;

      /**
       * Status of the VolumeAttachment request. Populated by the entity completing the attach or
       * detach operation, i.e. the external-attacher.
       */
      public readonly status: pulumi.Output<outputApi.storage.v1alpha1.VolumeAttachmentStatus>;


      /**
       * Get the state of an existing `VolumeAttachment` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VolumeAttachment {
          return new VolumeAttachment(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.storage.v1alpha1.VolumeAttachment { return this.__inputs; }
      private readonly __inputs: inputApi.storage.v1alpha1.VolumeAttachment;

      /**
      * Create a storage.v1alpha1.VolumeAttachment resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.storage.v1alpha1.VolumeAttachment, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "storage.k8s.io/v1alpha1";
          inputs["kind"] = "VolumeAttachment";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:storage.k8s.io/v1alpha1:VolumeAttachment", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * VolumeAttachmentList is a collection of VolumeAttachment objects.
     */
    export class VolumeAttachmentList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"storage.k8s.io/v1alpha1">;

      /**
       * Items is the list of VolumeAttachments
       */
      public readonly items: pulumi.Output<outputApi.storage.v1alpha1.VolumeAttachment[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"VolumeAttachmentList">;

      /**
       * Standard list metadata More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `VolumeAttachmentList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VolumeAttachmentList {
          return new VolumeAttachmentList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.storage.v1alpha1.VolumeAttachmentList { return this.__inputs; }
      private readonly __inputs: inputApi.storage.v1alpha1.VolumeAttachmentList;

      /**
      * Create a storage.v1alpha1.VolumeAttachmentList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.storage.v1alpha1.VolumeAttachmentList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "storage.k8s.io/v1alpha1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "VolumeAttachmentList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:storage.k8s.io/v1alpha1:VolumeAttachmentList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

  export namespace v1beta1 {
    /**
     * StorageClass describes the parameters for a class of storage for which PersistentVolumes can
     * be dynamically provisioned.
     * 
     * StorageClasses are non-namespaced; the name of the storage class according to etcd is in
     * ObjectMeta.Name.
     */
    export class StorageClass extends pulumi.CustomResource {
      /**
       * AllowVolumeExpansion shows whether the storage class allow volume expand
       */
      public readonly allowVolumeExpansion: pulumi.Output<boolean>;

      /**
       * Restrict the node topologies where volumes can be dynamically provisioned. Each volume
       * plugin defines its own supported topology specifications. An empty TopologySelectorTerm
       * list means there is no topology restriction. This field is only honored by servers that
       * enable the VolumeScheduling feature.
       */
      public readonly allowedTopologies: pulumi.Output<outputApi.core.v1.TopologySelectorTerm[]>;

      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"storage.k8s.io/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"StorageClass">;

      /**
       * Standard object's metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Dynamically provisioned PersistentVolumes of this storage class are created with these
       * mountOptions, e.g. ["ro", "soft"]. Not validated - mount of the PVs will simply fail if one
       * is invalid.
       */
      public readonly mountOptions: pulumi.Output<string[]>;

      /**
       * Parameters holds the parameters for the provisioner that should create volumes of this
       * storage class.
       */
      public readonly parameters: pulumi.Output<{[key: string]: pulumi.Output<string>}>;

      /**
       * Provisioner indicates the type of the provisioner.
       */
      public readonly provisioner: pulumi.Output<string>;

      /**
       * Dynamically provisioned PersistentVolumes of this storage class are created with this
       * reclaimPolicy. Defaults to Delete.
       */
      public readonly reclaimPolicy: pulumi.Output<string>;

      /**
       * VolumeBindingMode indicates how PersistentVolumeClaims should be provisioned and bound.
       * When unset, VolumeBindingImmediate is used. This field is only honored by servers that
       * enable the VolumeScheduling feature.
       */
      public readonly volumeBindingMode: pulumi.Output<string>;


      /**
       * Get the state of an existing `StorageClass` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): StorageClass {
          return new StorageClass(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.storage.v1beta1.StorageClass { return this.__inputs; }
      private readonly __inputs: inputApi.storage.v1beta1.StorageClass;

      /**
      * Create a storage.v1beta1.StorageClass resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.storage.v1beta1.StorageClass, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["allowVolumeExpansion"] = args && args.allowVolumeExpansion || undefined;
          inputs["allowedTopologies"] = args && args.allowedTopologies || undefined;
          inputs["apiVersion"] = "storage.k8s.io/v1beta1";
          inputs["kind"] = "StorageClass";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["mountOptions"] = args && args.mountOptions || undefined;
          inputs["parameters"] = args && args.parameters || undefined;
          inputs["provisioner"] = args && args.provisioner || undefined;
          inputs["reclaimPolicy"] = args && args.reclaimPolicy || undefined;
          inputs["volumeBindingMode"] = args && args.volumeBindingMode || undefined;
          super("kubernetes:storage.k8s.io/v1beta1:StorageClass", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * StorageClassList is a collection of storage classes.
     */
    export class StorageClassList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"storage.k8s.io/v1beta1">;

      /**
       * Items is the list of StorageClasses
       */
      public readonly items: pulumi.Output<outputApi.storage.v1beta1.StorageClass[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"StorageClassList">;

      /**
       * Standard list metadata More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `StorageClassList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): StorageClassList {
          return new StorageClassList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.storage.v1beta1.StorageClassList { return this.__inputs; }
      private readonly __inputs: inputApi.storage.v1beta1.StorageClassList;

      /**
      * Create a storage.v1beta1.StorageClassList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.storage.v1beta1.StorageClassList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "storage.k8s.io/v1beta1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "StorageClassList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:storage.k8s.io/v1beta1:StorageClassList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * VolumeAttachment captures the intent to attach or detach the specified volume to/from the
     * specified node.
     * 
     * VolumeAttachment objects are non-namespaced.
     */
    export class VolumeAttachment extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"storage.k8s.io/v1beta1">;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"VolumeAttachment">;

      /**
       * Standard object metadata. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ObjectMeta>;

      /**
       * Specification of the desired attach/detach volume behavior. Populated by the Kubernetes
       * system.
       */
      public readonly spec: pulumi.Output<outputApi.storage.v1beta1.VolumeAttachmentSpec>;

      /**
       * Status of the VolumeAttachment request. Populated by the entity completing the attach or
       * detach operation, i.e. the external-attacher.
       */
      public readonly status: pulumi.Output<outputApi.storage.v1beta1.VolumeAttachmentStatus>;


      /**
       * Get the state of an existing `VolumeAttachment` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VolumeAttachment {
          return new VolumeAttachment(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.storage.v1beta1.VolumeAttachment { return this.__inputs; }
      private readonly __inputs: inputApi.storage.v1beta1.VolumeAttachment;

      /**
      * Create a storage.v1beta1.VolumeAttachment resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.storage.v1beta1.VolumeAttachment, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "storage.k8s.io/v1beta1";
          inputs["kind"] = "VolumeAttachment";
          inputs["metadata"] = args && args.metadata || undefined;
          inputs["spec"] = args && args.spec || undefined;
          inputs["status"] = args && args.status || undefined;
          super("kubernetes:storage.k8s.io/v1beta1:VolumeAttachment", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

    /**
     * VolumeAttachmentList is a collection of VolumeAttachment objects.
     */
    export class VolumeAttachmentList extends pulumi.CustomResource {
      /**
       * APIVersion defines the versioned schema of this representation of an object. Servers should
       * convert recognized schemas to the latest internal value, and may reject unrecognized
       * values. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
       */
      public readonly apiVersion: pulumi.Output<"storage.k8s.io/v1beta1">;

      /**
       * Items is the list of VolumeAttachments
       */
      public readonly items: pulumi.Output<outputApi.storage.v1beta1.VolumeAttachment[]>;

      /**
       * Kind is a string value representing the REST resource this object represents. Servers may
       * infer this from the endpoint the client submits requests to. Cannot be updated. In
       * CamelCase. More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
       */
      public readonly kind: pulumi.Output<"VolumeAttachmentList">;

      /**
       * Standard list metadata More info:
       * https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
       */
      public readonly metadata: pulumi.Output<outputApi.meta.v1.ListMeta>;


      /**
       * Get the state of an existing `VolumeAttachmentList` resource, as identified by `id`.
       * Typically this ID  is of the form <namespace>/<name>; if <namespace> is omitted, then (per
       * Kubernetes convention) the ID becomes default/<name>.
       *
       * Pulumi will keep track of this resource using `name` as the Pulumi ID.
       *
       * @param name _Unique_ name used to register this resource with Pulumi.
       * @param id An ID for the Kubernetes resource to retrive. Takes the form
       *  <namespace>/<name> or <name>.
       * @param opts Uniquely specifies a CustomResource to select.
       */
      public static get(name: string, id: pulumi.Input<pulumi.ID>, opts?: pulumi.CustomResourceOptions): VolumeAttachmentList {
          return new VolumeAttachmentList(name, undefined, { ...opts, id: id });
      }

      public getInputs(): inputApi.storage.v1beta1.VolumeAttachmentList { return this.__inputs; }
      private readonly __inputs: inputApi.storage.v1beta1.VolumeAttachmentList;

      /**
      * Create a storage.v1beta1.VolumeAttachmentList resource with the given unique name, arguments, and options.
      *
      * @param name The _unique_ name of the resource.
      * @param args The arguments to use to populate this resource's properties.
      * @param opts A bag of options that control this resource's behavior.
      */
      constructor(name: string, args?: inputApi.storage.v1beta1.VolumeAttachmentList, opts?: pulumi.CustomResourceOptions) {
          let inputs: pulumi.Inputs = {};
          inputs["apiVersion"] = "storage.k8s.io/v1beta1";
          inputs["items"] = args && args.items || undefined;
          inputs["kind"] = "VolumeAttachmentList";
          inputs["metadata"] = args && args.metadata || undefined;
          super("kubernetes:storage.k8s.io/v1beta1:VolumeAttachmentList", name, inputs, opts);
          this.__inputs = <any>args;
      }
    }

  }

}

