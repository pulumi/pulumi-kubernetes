// *** WARNING: this file was generated by pulumigen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../../utilities";

// Export members:
export { TokenRequestArgs } from "./tokenRequest";
export type TokenRequest = import("./tokenRequest").TokenRequest;
export const TokenRequest: typeof import("./tokenRequest").TokenRequest = null as any;
utilities.lazyLoad(exports, ["TokenRequest"], () => require("./tokenRequest"));

export { TokenRequestPatchArgs } from "./tokenRequestPatch";
export type TokenRequestPatch = import("./tokenRequestPatch").TokenRequestPatch;
export const TokenRequestPatch: typeof import("./tokenRequestPatch").TokenRequestPatch = null as any;
utilities.lazyLoad(exports, ["TokenRequestPatch"], () => require("./tokenRequestPatch"));

export { TokenReviewArgs } from "./tokenReview";
export type TokenReview = import("./tokenReview").TokenReview;
export const TokenReview: typeof import("./tokenReview").TokenReview = null as any;
utilities.lazyLoad(exports, ["TokenReview"], () => require("./tokenReview"));

export { TokenReviewPatchArgs } from "./tokenReviewPatch";
export type TokenReviewPatch = import("./tokenReviewPatch").TokenReviewPatch;
export const TokenReviewPatch: typeof import("./tokenReviewPatch").TokenReviewPatch = null as any;
utilities.lazyLoad(exports, ["TokenReviewPatch"], () => require("./tokenReviewPatch"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "kubernetes:authentication.k8s.io/v1:TokenRequest":
                return new TokenRequest(name, <any>undefined, { urn })
            case "kubernetes:authentication.k8s.io/v1:TokenRequestPatch":
                return new TokenRequestPatch(name, <any>undefined, { urn })
            case "kubernetes:authentication.k8s.io/v1:TokenReview":
                return new TokenReview(name, <any>undefined, { urn })
            case "kubernetes:authentication.k8s.io/v1:TokenReviewPatch":
                return new TokenReviewPatch(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("kubernetes", "authentication.k8s.io/v1", _module)
