# *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
from typing import Optional

import pulumi
import pulumi.runtime
from pulumi import Input, ResourceOptions

from ... import tables, version


class {{Kind}}(pulumi.CustomResource):
    """
    {{{Comment}}}{{{AwaitComment}}}
    """

    apiVersion: pulumi.Output[str]
    """
    APIVersion defines the versioned schema of this representation of an object. Servers should
    convert recognized schemas to the latest internal value, and may reject unrecognized values.
    More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
    """

    kind: pulumi.Output[str]
    """
    Kind is a string value representing the REST resource this object represents. Servers may infer
    this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More
    info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
    """

    {{#Properties}}
    {{LanguageName}}: {{{PropType}}}
    {{{Comment}}}

    {{/Properties}}
    def __init__(self, resource_name, opts=None{{#RequiredInputProperties}}, {{LanguageName}}=None{{/RequiredInputProperties}}{{#OptionalInputProperties}}, {{LanguageName}}=None{{/OptionalInputProperties}}, __name__=None, __opts__=None):
        """
        Create a {{Kind}} resource with the given unique name, arguments, and options.

        :param str resource_name: The _unique_ name of the resource.
        :param pulumi.ResourceOptions opts: A bag of options that control this resource's behavior.
        {{#RequiredInputProperties}}
        :param {{{PythonConstructorPropType}}} {{LanguageName}}: {{{PythonConstructorComment}}}
        {{/RequiredInputProperties}}
        {{#OptionalInputProperties}}
        :param {{{PythonConstructorPropType}}} {{LanguageName}}: {{{PythonConstructorComment}}}
        {{/OptionalInputProperties}}
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if not resource_name:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(resource_name, str):
            raise TypeError('Expected resource name to be a string')
        if opts and not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['apiVersion'] = '{{RawAPIVersion}}'
        __props__['kind'] = '{{Kind}}'
        {{#RequiredInputProperties}}
        if {{LanguageName}} is None:
            raise TypeError('Missing required property {{LanguageName}}')
        __props__['{{Name}}'] = {{LanguageName}}
        {{/RequiredInputProperties}}
        {{#OptionalInputProperties}}
        __props__['{{Name}}'] = {{LanguageName}}
        {{/OptionalInputProperties}}

        __props__['status'] = None

        if opts is None:
            opts = pulumi.ResourceOptions()
        if opts.version is None:
            opts.version = version.get_version()

        super({{Kind}}, self).__init__(
            "kubernetes:{{URNAPIVersion}}:{{Kind}}",
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(name: str, id: Input[str], opts: Optional[ResourceOptions] = None):
        opts = ResourceOptions(id=id) if opts is None else opts.merge(ResourceOptions(id=id))
        return {{Kind}}(name, opts)

    def translate_output_property(self, prop: str) -> str:
        return tables._CASING_FORWARD_TABLE.get(prop) or prop

    def translate_input_property(self, prop: str) -> str:
        return tables._CASING_BACKWARD_TABLE.get(prop) or prop
