# *** WARNING: this file was generated by the Pulumi Kubernetes codegen tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import pulumi
import pulumi.runtime

from ... import tables, version


class {{Kind}}(pulumi.CustomResource):
    {{{Comment}}}
    def __init__(self, __name__, __opts__=None{{#Properties}}, {{LanguageName}}=None{{/Properties}}):
        if not __name__:
            raise TypeError('Missing resource name argument (for URN creation)')
        if not isinstance(__name__, str):
            raise TypeError('Expected resource name to be a string')
        if __opts__ and not isinstance(__opts__, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')

        __props__ = dict()

        __props__['apiVersion'] = '{{RawAPIVersion}}'
        __props__['kind'] = '{{Kind}}'
        {{#RequiredProperties}}
        if {{LanguageName}} is None:
            raise TypeError('Missing required property {{LanguageName}}')
        __props__['{{Name}}'] = {{LanguageName}}
        {{/RequiredProperties}}
        {{#OptionalProperties}}
        __props__['{{Name}}'] = {{LanguageName}}
        {{/OptionalProperties}}

        if __opts__ is None:
            __opts__ = pulumi.ResourceOptions()
        if __opts__.version is None:
            __opts__.version = version.get_version()

        super({{Kind}}, self).__init__(
            "kubernetes:{{URNAPIVersion}}:{{Kind}}",
            __name__,
            __props__,
            __opts__)

    def translate_output_property(self, prop: str) -> str:
        return tables._CASING_FORWARD_TABLE.get(prop) or prop

    def translate_input_property(self, prop: str) -> str:
        return tables._CASING_BACKWARD_TABLE.get(prop) or prop
